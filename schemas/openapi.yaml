openapi: 3.0.0
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: https://www.datadoghq.com/support/
  description: Collection of all Datadog Public endpoints.
  title: Datadog API V1 Collection
  version: '1.0'
servers:
  - url: https://{subdomain}.{site}
    variables:
      site:
        default: datadoghq.com
        description: The regional site for Datadog customers.
        enum:
          - datadoghq.com
          - us3.datadoghq.com
          - us5.datadoghq.com
          - ap1.datadoghq.com
          - datadoghq.eu
          - ddog-gov.com
      subdomain:
        default: api
        description: The subdomain where the API is deployed.
  - url: '{protocol}://{name}'
    variables:
      name:
        default: api.datadoghq.com
        description: Full site DNS name.
      protocol:
        default: https
        description: The protocol for accessing the API.
tags:
  - name: AWS Integration v1
    description: >-
      Configure your Datadog-AWS integration directly through the Datadog API.

      For more information, see the [AWS integration
      page](https://docs.datadoghq.com/integrations/amazon_web_services).
    x-displayName: AWS Integration v1
  - name: AWS Logs Integration v1
    description: >-
      Configure your Datadog-AWS-Logs integration directly through Datadog API.

      For more information, see the [AWS integration
      page](https://docs.datadoghq.com/integrations/amazon_web_services/#log-collection).
    externalDocs:
      url: >-
        https://docs.datadoghq.com/integrations/amazon_web_services/#log-collection
    x-displayName: AWS Logs Integration v1
  - name: Authentication
    description: >-
      All requests to Datadog’s API must be authenticated.

      Requests that write data require reporting access and require an `API
      key`.

      Requests that read data require full access and also require an
      `application key`.


      **Note:** All Datadog API clients are configured by default to consume
      Datadog US site APIs.

      If you are on the Datadog EU site, set the environment variable
      `DATADOG_HOST` to

      `https://api.datadoghq.eu` or override this value directly when creating
      your client.


      [Manage your account’s API and application
      keys](https://app.datadoghq.com/organization-settings/) in Datadog, and
      see the [API and Application Keys
      page](https://docs.datadoghq.com/account_management/api-app-keys/) in the
      documentation.
    x-displayName: Authentication
  - name: Azure Integration
    description: >-
      Configure your Datadog-Azure integration directly through the Datadog API.

      For more information, see the [Datadog-Azure integration
      page](https://docs.datadoghq.com/integrations/azure).
    externalDocs:
      url: https://docs.datadoghq.com/integrations/azure
    x-displayName: Azure Integration
  - name: Dashboard Lists v1
    description: |-
      Interact with your dashboard lists through the API to
      organize, find, and share all of your dashboards with your team and
      organization.
    x-deprecated: true
    x-displayName: Dashboard Lists v1
  - name: Dashboards
    description: >-
      Manage all your dashboards, as well as access to your shared dashboards,
      through the API. See the [Dashboards
      page](https://docs.datadoghq.com/dashboards/) for more information.
    x-displayName: Dashboards
  - name: Downtimes v1
    description: >-
      [Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes) gives

      you greater control over monitor notifications by allowing you to globally
      exclude

      scopes from alerting. Downtime settings, which can be scheduled with start
      and

      end times, prevent all alerting related to specified Datadog tags.


      **Note:** `curl` commands require [url
      encoding](https://curl.se/docs/url-syntax.html).
    x-displayName: Downtimes v1
  - name: Events v1
    description: >-
      The Event Management API allows you to programmatically post events to the
      Events Explorer and fetch events from the Events Explorer. See the [Event
      Management page](https://docs.datadoghq.com/service_management/events/)
      for more information.


      **Update to Datadog monitor events `aggregation_key` starting March 1,
      2025:** The Datadog monitor events `aggregation_key` is unique to each
      Monitor ID. Starting March 1st, this key will also include Monitor Group,
      making it unique per *Monitor ID and Monitor Group*. If you're using
      monitor events `aggregation_key` in dashboard queries or the Event API,
      you must migrate to use `@monitor.id`. Reach out to
      [support](https://www.datadoghq.com/support/) if you have any question.
    x-displayName: Events v1
  - name: GCP Integration v1
    description: >-
      Configure your Datadog-Google Cloud Platform (GCP) integration directly

      through the Datadog API. Read more about the [Datadog-Google Cloud
      Platform
      integration](https://docs.datadoghq.com/integrations/google_cloud_platform).
    externalDocs:
      url: https://docs.datadoghq.com/integrations/google_cloud_platform
    x-displayName: GCP Integration v1
  - name: Hosts
    description: >-
      Get information about your infrastructure hosts in Datadog, and mute or
      unmute any notifications from your hosts. See the [Infrastructure
      page](https://docs.datadoghq.com/infrastructure/) for more information.
    x-displayName: Hosts
  - name: IP Ranges
    description: Get a list of IP prefixes belonging to Datadog.
    x-displayName: IP Ranges
  - name: Key Management v1
    description: >-
      Manage your Datadog API and application keys. You need an API key and

      an application key for a user with the required permissions to interact

      with these endpoints. The full list of API and application keys can be

      seen on your [Datadog API
      page](https://app.datadoghq.com/account/settings#api).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/account_management/api-app-keys/
    x-displayName: Key Management v1
  - name: Logs v1
    description: >-
      Search your logs and send them to your Datadog platform over HTTP. See the
      [Log Management page](https://docs.datadoghq.com/logs/) for more
      information.
    x-displayName: Logs v1
  - name: Logs Indexes
    description: >-
      Manage configuration of [log
      indexes](https://docs.datadoghq.com/logs/indexes/).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/logs/indexes/
    x-displayName: Logs Indexes
  - name: Logs Pipelines
    description: >-
      Pipelines and processors operate on incoming logs, parsing

      and transforming them into structured attributes for easier querying.


      - See the [pipelines configuration
      page](https://app.datadoghq.com/logs/pipelines)
        for a list of the pipelines and processors currently configured in web UI.

      - Additional API-related information about processors can be found in the
        [processors documentation](https://docs.datadoghq.com/logs/log_configuration/processors/?tab=api#lookup-processor).

      - For more information about Pipelines, see the
        [pipeline documentation](https://docs.datadoghq.com/logs/log_configuration/pipelines).

      **Notes:**


      **Grok parsing rules may effect JSON output and require

      returned data to be configured before using in a request.**

      For example, if you are using the data returned from a

      request for another request body, and have a parsing rule

      that uses a regex pattern like `\s` for spaces, you will

      need to configure all escaped spaces as `%{space}` to use

      in the body data.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/logs/log_configuration
    x-displayName: Logs Pipelines
  - name: Metrics v1
    description: >-
      The metrics endpoint allows you to:


      - Post metrics data so it can be graphed on Datadog’s dashboards

      - Query metrics from any time period

      - Modify tag configurations for metrics

      - View tags and volumes for metrics


      **Note**: A graph can only contain a set number of points

      and as the timeframe over which a metric is viewed increases,

      aggregation between points occurs to stay below that set number.


      The Post, Patch, and Delete `manage_tags` API methods can only be
      performed by

      a user who has the `Manage Tags for Metrics` permission.


      See the [Metrics page](https://docs.datadoghq.com/metrics/) for more
      information.
    x-displayName: Metrics v1
  - name: Monitors v1
    description: >-
      [Monitors](https://docs.datadoghq.com/monitors) allow you to watch a
      metric or check that you care about and

      notifies your team when a defined threshold has exceeded.


      For more information, see [Creating
      Monitors](https://docs.datadoghq.com/monitors/create/types/).


      **Note:** `curl` commands require [url
      encoding](https://curl.se/docs/url-syntax.html).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/monitors/create/types/
    x-displayName: Monitors v1
  - name: Notebooks
    description: >-
      Interact with your notebooks through the API to make it easier to
      organize, find, and

      share all of your notebooks with your team and organization. For more
      information, see the

      [Notebooks documentation](https://docs.datadoghq.com/notebooks/).
    externalDocs:
      description: For more information, see the Notebooks documentation.
      url: https://docs.datadoghq.com/notebooks/
    x-displayName: Notebooks
  - name: Organizations v1
    description: >-
      Create, edit, and manage your organizations. Read more about [multi-org
      accounts](https://docs.datadoghq.com/account_management/multi_organization).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/account_management/multi_organization
    x-displayName: Organizations v1
  - name: PagerDuty Integration
    description: >-
      Configure your [Datadog-PagerDuty
      integration](https://docs.datadoghq.com/integrations/pagerduty/)

      directly through the Datadog API.
    externalDocs:
      url: https://docs.datadoghq.com/integrations/pagerduty/
    x-displayName: PagerDuty Integration
  - name: Security Monitoring v1
    description: >-
      Create and manage your security rules, signals, filters, and more. See the
      [Datadog Security page](https://docs.datadoghq.com/security/) for more
      information.
    x-displayName: Security Monitoring v1
  - name: Service Checks
    description: >-
      The service check endpoint allows you to post check statuses for use with
      monitors.

      Service check messages are limited to 500 characters. If a check is posted
      with a message

      containing more than 500 characters, only the first 500 characters are
      displayed. Messages

      are limited for checks with a Critical or Warning status, they are dropped
      for checks with

      an OK status.


      - [Read more about Service Check monitors][1].

      - [Read more about Process Check monitors][2].

      - [Read more about Network monitors][3].

      - [Read more about Custom Check monitors][4].

      - [Read more about Service Checks and status codes][5].


      [1]: https://docs.datadoghq.com/monitors/types/service_check/

      [2]:
      https://docs.datadoghq.com/monitors/create/types/process_check/?tab=checkalert

      [3]:
      https://docs.datadoghq.com/monitors/create/types/network/?tab=checkalert

      [4]:
      https://docs.datadoghq.com/monitors/create/types/custom_check/?tab=checkalert

      [5]: https://docs.datadoghq.com/developers/service_checks/
    x-displayName: Service Checks
  - name: Service Level Objective Corrections
    description: >-
      SLO Status Corrections allow you to prevent specific time periods from
      negatively impacting

      your SLO’s status and error budget. You can use Status Corrections for
      various purposes, such

      as removing planned maintenance windows, non-business hours, or other time
      periods that do

      not correspond to genuine issues. See [SLO status
      corrections](https://docs.datadoghq.com/service_management/service_level_objectives/#slo-status-corrections)
      for more information.
    x-displayName: Service Level Objective Corrections
  - name: Service Level Objectives v1
    description: >-
      [Service Level
      Objectives](https://docs.datadoghq.com/monitors/service_level_objectives/#configuration)

      (or SLOs) are a key part of the site reliability engineering toolkit.

      SLOs provide a framework for defining clear targets around application
      performance,

      which ultimately help teams provide a consistent customer experience,

      balance feature development with platform stability,

      and improve communication with internal and external users.
    x-displayName: Service Level Objectives v1
  - name: Slack Integration
    description: >-
      Configure your [Datadog-Slack
      integration](https://docs.datadoghq.com/integrations/slack)

      directly through the Datadog API.
    externalDocs:
      description: >-
        For more information about the Datadog-Slack integration, see the
        integration page.
      url: https://docs.datadoghq.com/integrations/slack
    x-displayName: Slack Integration
  - name: Snapshots
    description: Take graph snapshots using the API.
    x-displayName: Snapshots
  - name: Synthetics v1
    description: >-
      Datadog Synthetic Monitoring uses simulated user requests and browser
      rendering to help you ensure uptime,

      identify regional issues, and track your application performance.
      Synthetic tests come in

      two different flavors, [API
      tests](https://docs.datadoghq.com/synthetics/api_tests/?tab=httptest)

      and [browser tests](https://docs.datadoghq.com/synthetics/browser_tests).
      You can use Datadog’s API to

      manage both test types programmatically.


      For more information, see the [Synthetic Monitoring
      documentation](https://docs.datadoghq.com/synthetics/).
    x-displayName: Synthetics v1
  - name: Tags
    description: >-
      The tag endpoint allows you to assign tags to hosts,

      for example: `role:database`. Those tags are applied to

      all metrics sent by the host. Refer to hosts by name

      (`yourhost.example.com`) when fetching and applying

      tags to a particular host.


      The component of your infrastructure responsible for a tag is identified

      by a source. For example, some valid sources include nagios, hudson,
      jenkins,

      users, feed, chef, puppet, git, bitbucket, fabric, capistrano, etc.


      Read more about tags on [Getting Started with
      Tags](https://docs.datadoghq.com/getting_started/tagging/).
    x-displayName: Tags
  - name: Usage Metering v1
    description: >-
      The usage metering API allows you to get hourly, daily, and

      monthly usage across multiple facets of Datadog.

      This API is available to all Pro and Enterprise customers.


      **Note**: Usage data is delayed by up to 72 hours from when it was
      incurred.

      It is retained for 15 months.


      You can retrieve up to 24 hours of hourly usage data for multiple
      organizations,

      and up to two months of hourly usage data for a single organization in one
      request.

      Learn more on the [usage details
      documentation](https://docs.datadoghq.com/account_management/billing/usage_details/).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/account_management/billing/usage_details/
    x-displayName: Usage Metering v1
  - name: Users v1
    description: Create, edit, and disable users.
    externalDocs:
      url: https://docs.datadoghq.com/account_management/users
    x-displayName: Users v1
  - name: Webhooks Integration
    description: >-
      Configure your Datadog-Webhooks integration directly through the Datadog
      API.

      See the [Webhooks integration
      page](https://docs.datadoghq.com/integrations/webhooks) for more
      information.
    externalDocs:
      url: https://docs.datadoghq.com/integrations/webhooks
    x-displayName: Webhooks Integration
  - name: API Management
    description: Configure your API endpoints through the Datadog API.
    x-displayName: API Management
  - name: APM Retention Filters
    description: >-
      Manage configuration of [APM retention
      filters](https://app.datadoghq.com/apm/traces/retention-filters) for your
      organization. You need an API and application key with Admin rights to
      interact with this endpoint. See [retention
      filters](https://docs.datadoghq.com/tracing/trace_pipeline/trace_retention/#retention-filters)
      on the Trace Retention page for more information.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/tracing/trace_pipeline/trace_retention/
    x-displayName: APM Retention Filters
  - name: AWS Integration
    description: >-
      Configure your Datadog-AWS integration directly through the Datadog API.

      For more information, see the [AWS integration
      page](https://docs.datadoghq.com/integrations/amazon_web_services).
    x-displayName: AWS Integration
  - name: AWS Logs Integration
    description: >-
      Configure your Datadog-AWS-Logs integration directly through Datadog API.

      For more information, see the [AWS integration
      page](https://docs.datadoghq.com/integrations/amazon_web_services/#log-collection).
    externalDocs:
      url: >-
        https://docs.datadoghq.com/integrations/amazon_web_services/#log-collection
    x-displayName: AWS Logs Integration
  - name: Action Connection
    description: >-
      Action connections extend your installed integrations and allow you to
      take action in your third-party systems

      (e.g. AWS, GitLab, and Statuspage) with Datadog’s Workflow Automation and
      App Builder products.


      Datadog’s Integrations automatically provide authentication for Slack,
      Microsoft Teams, PagerDuty, Opsgenie,

      JIRA, GitHub, and Statuspage. You do not need additional connections in
      order to access these tools within

      Workflow Automation and App Builder.


      We offer granular access control for editing and resolving connections.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/service_management/workflows/connections/
    x-displayName: Action Connection
  - name: Agentless Scanning
    description: >-
      Datadog Agentless Scanning provides visibility into risks and
      vulnerabilities

      within your hosts, running containers, and serverless functions—all
      without

      requiring teams to install Agents on every host or where Agents cannot be
      installed.

      Agentless offers also Sensitive Data Scanning capabilities on your
      storage.

      Go to https://www.datadoghq.com/blog/agentless-scanning/ to learn more.
    x-displayName: Agentless Scanning
  - name: App Builder
    description: >-
      Datadog App Builder provides a low-code solution to rapidly develop and
      integrate secure, customized applications into your monitoring stack that
      are built to accelerate remediation at scale. These API endpoints allow
      you to create, read, update, delete, and publish apps.
    x-displayName: App Builder
  - name: Application Security
    description: >-
      [Datadog Application
      Security](https://docs.datadoghq.com/security/application_security/)
      provides protection against

      application-level attacks that aim to exploit code-level vulnerabilities,

      such as Server-Side-Request-Forgery (SSRF), SQL injection, Log4Shell, and

      Reflected Cross-Site-Scripting (XSS). You can monitor and protect apps

      hosted directly on a server, Docker, Kubernetes, Amazon ECS, and (for

      supported languages) AWS Fargate.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/security/application_security/
    x-displayName: Application Security
  - name: Audit
    description: Search your Audit Logs events over HTTP.
    x-displayName: Audit
  - name: AuthN Mappings
    description: >-
      [The AuthN Mappings
      API](https://docs.datadoghq.com/account_management/authn_mapping/?tab=example)

      is used to automatically map groups of users to roles in Datadog using
      attributes

      sent from Identity Providers. Use these endpoints to manage your AuthN
      Mappings.
    x-displayName: AuthN Mappings
  - name: CI Visibility Pipelines
    description: >-
      Search or aggregate your CI Visibility pipeline events and send them to
      your Datadog site over HTTP. See the [CI Pipeline Visibility in Datadog
      page](https://docs.datadoghq.com/continuous_integration/pipelines/) for
      more information.
    x-displayName: CI Visibility Pipelines
  - name: CI Visibility Tests
    description: >-
      Search or aggregate your CI Visibility test events over HTTP. See the
      [Test Visibility in Datadog page](https://docs.datadoghq.com/tests/) for
      more information.
    x-displayName: CI Visibility Tests
  - name: CSM Agents
    description: >-
      Datadog Cloud Security Management (CSM) delivers real-time threat
      detection

      and continuous configuration audits across your entire cloud
      infrastructure,

      all in a unified view for seamless collaboration and faster remediation.

      Go to https://docs.datadoghq.com/security/cloud_security_management to
      learn more
    x-displayName: CSM Agents
  - name: CSM Coverage Analysis
    description: >-
      Datadog Cloud Security Management (CSM) delivers real-time threat
      detection

      and continuous configuration audits across your entire cloud
      infrastructure,

      all in a unified view for seamless collaboration and faster remediation.

      Go to https://docs.datadoghq.com/security/cloud_security_management to
      learn more.
    x-displayName: CSM Coverage Analysis
  - name: CSM Threats
    description: >-
      Cloud Security Management Threats (CSM Threats) monitors file, network,
      and process activity across your environment to detect real-time threats
      to your infrastructure. See [Cloud Security Management
      Threats](https://docs.datadoghq.com/security/threats/) for more
      information on setting up CSM Threats.
    x-displayName: CSM Threats
  - name: Case Management
    description: >-
      View and manage cases and projects within Case Management. See the [Case
      Management
      page](https://docs.datadoghq.com/service_management/case_management/) for
      more information.
    x-displayName: Case Management
  - name: Cloud Cost Management
    description: >-
      The Cloud Cost Management API allows you to set up, edit, and delete Cloud
      Cost Management accounts for AWS and Azure. You can query your cost data
      by using the [Metrics
      endpoint](https://docs.datadoghq.com/api/latest/metrics/#query-timeseries-data-across-multiple-products)
      and the `cloud_cost` data source. For more information, see the [Cloud
      Cost Management
      documentation](https://docs.datadoghq.com/cloud_cost_management/).
    x-displayName: Cloud Cost Management
  - name: Cloud Network Monitoring
    description: >-
      The Cloud Network Monitoring API allows you to fetch aggregated
      connections and their attributes. See the [Cloud Network Monitoring
      page](https://docs.datadoghq.com/network_monitoring/cloud_network_monitoring/)
      for more information.
    x-displayName: Cloud Network Monitoring
  - name: Cloudflare Integration
    description: >-
      Manage your Datadog Cloudflare integration directly through the Datadog
      API. See the [Cloudflare integration
      page](https://docs.datadoghq.com/integrations/cloudflare/) for more
      information.
    x-displayName: Cloudflare Integration
  - name: Confluent Cloud
    description: >-
      Manage your Datadog Confluent Cloud integration accounts and account
      resources directly through the Datadog API. See the [Confluent Cloud
      page](https://docs.datadoghq.com/integrations/confluent_cloud/) for more
      information.
    x-displayName: Confluent Cloud
  - name: Container Images
    description: >-
      The Container Images API allows you to query Container Image data for your
      organization. See the [Container Images View
      page](https://docs.datadoghq.com/infrastructure/containers/container_images/)
      for more information.
    x-displayName: Container Images
  - name: Containers
    description: >-
      The Containers API allows you to query container data for your
      organization. See the [Container Monitoring
      page](https://docs.datadoghq.com/containers/) for more information.
    x-displayName: Containers
  - name: DORA Metrics
    description: >-
      Send events for DORA Metrics to measure and improve software delivery. See
      the [DORA Metrics page](https://docs.datadoghq.com/dora_metrics/) for more
      information.
    x-displayName: DORA Metrics
  - name: Dashboard Lists
    description: |-
      Interact with your dashboard lists through the API to
      organize, find, and share all of your dashboards with your team and
      organization.
    x-displayName: Dashboard Lists
  - name: Data Deletion
    description: >-
      The Data Deletion API allows the user to target and delete data from the
      allowed products. It's currently enabled for Logs and RUM and depends on
      `logs_delete_data` and `rum_delete_data` permissions respectively.
    x-displayName: Data Deletion
  - name: Domain Allowlist
    description: >-
      Configure your Datadog Email Domain Allowlist directly through the Datadog
      API.

      The Email Domain Allowlist controls the domains that certain datadog
      emails can be sent to.

      For more information, see the [Domain Allowlist docs
      page](https://docs.datadoghq.com/account_management/org_settings/domain_allowlist)
    x-displayName: Domain Allowlist
  - name: Downtimes
    description: >-
      **Note**: Downtime V2 is currently in private beta. To request access,
      contact [Datadog support](https://docs.datadoghq.com/help/).


      [Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes) gives

      you greater control over monitor notifications by allowing you to globally
      exclude

      scopes from alerting. Downtime settings, which can be scheduled with start
      and

      end times, prevent all alerting related to specified Datadog tags.
    x-displayName: Downtimes
  - name: Events
    description: >-
      The Event Management API allows you to programmatically post events to the
      Events Explorer and fetch events from the Events Explorer. See the [Event
      Management page](https://docs.datadoghq.com/service_management/events/)
      for more information.


      **Update to Datadog monitor events `aggregation_key` starting March 1,
      2025:** The Datadog monitor events `aggregation_key` is unique to each
      Monitor ID. Starting March 1st, this key will also include Monitor Group,
      making it unique per *Monitor ID and Monitor Group*. If you're using
      monitor events `aggregation_key` in dashboard queries or the Event API,
      you must migrate to use `@monitor.id`. Reach out to
      [support](https://www.datadoghq.com/support/) if you have any question.
    x-displayName: Events
  - name: Fastly Integration
    description: >-
      Manage your Datadog Fastly integration accounts and services directly
      through the Datadog API. See the [Fastly integration
      page](https://docs.datadoghq.com/integrations/fastly/) for more
      information.
    x-displayName: Fastly Integration
  - name: GCP Integration
    description: >-
      Configure your Datadog-Google Cloud Platform (GCP) integration directly

      through the Datadog API. Read more about the [Datadog-Google Cloud
      Platform
      integration](https://docs.datadoghq.com/integrations/google_cloud_platform).
    externalDocs:
      url: https://docs.datadoghq.com/integrations/google_cloud_platform
    x-displayName: GCP Integration
  - name: IP Allowlist
    description: >-
      The IP allowlist API is used to manage the IP addresses that

      can access the Datadog API and web UI. It does not block

      access to intake APIs or public dashboards.


      This is an enterprise-only feature. Request access by

      contacting Datadog support, or see the [IP Allowlist
      page](https://docs.datadoghq.com/account_management/org_settings/ip_allowlist/)
      for more information.
    x-displayName: IP Allowlist
  - name: Incident Services
    description: >-
      Create, update, delete, and retrieve services which can be associated with
      incidents. See the [Incident Management
      page](https://docs.datadoghq.com/service_management/incident_management/)
      for more information.
    x-displayName: Incident Services
  - name: Incident Teams
    description: >-
      The Incident Teams endpoints are deprecated. See the [Teams API
      endpoints](https://docs.datadoghq.com/api/latest/teams/) to create,
      update, delete, and retrieve teams which can be associated with incidents.
    x-displayName: Incident Teams
  - name: Incidents
    description: >-
      Manage incident response, as well as associated attachments, metadata, and
      todos. See the [Incident Management
      page](https://docs.datadoghq.com/service_management/incident_management/)
      for more information.
    x-displayName: Incidents
  - name: Key Management
    description: >-
      Manage your Datadog API and application keys. You need an API key and

      an application key for a user with the required permissions to interact

      with these endpoints. The full list of API and application keys can be

      seen on your [Datadog API
      page](https://app.datadoghq.com/account/settings#api).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/account_management/api-app-keys/
    x-displayName: Key Management
  - name: Logs
    description: >-
      Search your logs and send them to your Datadog platform over HTTP. See the
      [Log Management page](https://docs.datadoghq.com/logs/) for more
      information.
    x-displayName: Logs
  - name: Logs Archives
    description: |-
      Archives forward all the logs ingested to a cloud storage system.

      See the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)
      for a list of the archives currently configured in Datadog.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/logs/archives/
    x-displayName: Logs Archives
  - name: Logs Custom Destinations
    description: >-
      Custom Destinations forward all the logs ingested to an external
      destination.


      **Note**: Log forwarding is not available for the Government (US1-FED)
      site. Contact your account representative for more information.


      See the [Custom Destinations
      Page](https://app.datadoghq.com/logs/pipelines/log-forwarding/custom-destinations)

      for a list of the custom destinations currently configured in web UI.
    externalDocs:
      description: Find out more at
      url: >-
        https://docs.datadoghq.com/logs/log_configuration/forwarding_custom_destinations/
    x-displayName: Logs Custom Destinations
  - name: Logs Metrics
    description: >-
      Manage configuration of [log-based
      metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics) for
      your organization.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/logs/logs_to_metrics/
    x-displayName: Logs Metrics
  - name: Metrics
    description: >-
      The metrics endpoint allows you to:


      - Post metrics data so it can be graphed on Datadog’s dashboards

      - Query metrics from any time period (timeseries and scalar)

      - Modify tag configurations for metrics

      - View tags and volumes for metrics


      **Note**: A graph can only contain a set number of points

      and as the timeframe over which a metric is viewed increases,

      aggregation between points occurs to stay below that set number.


      The Post, Patch, and Delete `manage_tags` API methods can only be
      performed by

      a user who has the `Manage Tags for Metrics` permission.


      See the [Metrics page](https://docs.datadoghq.com/metrics/) for more
      information.
    x-displayName: Metrics
  - name: Microsoft Teams Integration
    description: >-
      Configure your [Datadog Microsoft Teams
      integration](https://docs.datadoghq.com/integrations/microsoft_teams/)

      directly through the Datadog API. Note: These endpoints do not support
      legacy connector handles.
    externalDocs:
      description: >-
        For more information about the Datadog Microsoft Teams integration, see
        the integration page.
      url: https://docs.datadoghq.com/integrations/microsoft_teams/
    x-displayName: Microsoft Teams Integration
  - name: Monitors
    description: >-
      [Monitors](https://docs.datadoghq.com/monitors) allow you to watch a
      metric or check that you care about and

      notifies your team when a defined threshold has exceeded.


      For more information, see [Creating
      Monitors](https://docs.datadoghq.com/monitors/create/types/) and

      [Tag Policies](https://docs.datadoghq.com/monitors/settings/).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/monitors/create/types/
    x-displayName: Monitors
  - name: Network Device Monitoring
    description: >-
      The Network Device Monitoring API allows you to fetch devices and
      interfaces and their attributes. See the [Network Device Monitoring
      page](https://docs.datadoghq.com/network_monitoring/) for more
      information.
    x-displayName: Network Device Monitoring
  - name: Observability Pipelines
    description: >-
      Observability Pipelines allows you to collect and process logs within your
      own infrastructure, and then route them to downstream integrations.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/observability_pipelines/
    x-displayName: Observability Pipelines
  - name: Okta Integration
    description: >-
      Configure your [Datadog Okta
      integration](https://docs.datadoghq.com/integrations/okta/) directly
      through the Datadog API.
    x-displayName: Okta Integration
  - name: On-Call
    description: >-
      Configure your [Datadog
      On-Call](https://docs.datadoghq.com/service_management/on-call/)

      directly through the Datadog API.
    externalDocs:
      url: https://docs.datadoghq.com/service_management/on-call/
    x-displayName: On-Call
  - name: Opsgenie Integration
    description: >-
      Configure your [Datadog Opsgenie
      integration](https://docs.datadoghq.com/integrations/opsgenie/)

      directly through the Datadog API.
    externalDocs:
      url: https://docs.datadoghq.com/api/latest/opsgenie-integration
    x-displayName: Opsgenie Integration
  - name: Organizations
    description: >-
      Create, edit, and manage your organizations. Read more about [multi-org
      accounts](https://docs.datadoghq.com/account_management/multi_organization).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/account_management/multi_organization
    x-displayName: Organizations
  - name: Powerpack
    description: >-
      The Powerpack endpoints allow you to:


      - Get a Powerpack

      - Create a Powerpack

      - Delete a Powerpack

      - Get a list of all Powerpacks


      The Patch and Delete API methods can only be performed on a Powerpack by

      a user who has the powerpack create permission for that specific
      Powerpack.


      Read [Scale Graphing Expertise with
      Powerpacks](https://docs.datadoghq.com/dashboards/guide/powerpacks-best-practices/)
      for more information.
    x-displayName: Powerpack
  - name: Processes
    description: >-
      The processes API allows you to query processes data for your
      organization. See the [Live Processes
      page](https://docs.datadoghq.com/infrastructure/process/) for more
      information.
    x-displayName: Processes
  - name: RUM
    description: >-
      Manage your Real User Monitoring (RUM) applications, and search or
      aggregate your RUM events over HTTP. See the [RUM & Session Replay
      page](https://docs.datadoghq.com/real_user_monitoring/) for more
      information
    x-displayName: RUM
  - name: Restriction Policies
    description: >-
      A restriction policy defines the access control rules for a resource,
      mapping a set of relations

      (such as editor and viewer) to a set of allowed principals (such as roles,
      teams, or users).

      The restriction policy determines who is authorized to perform what
      actions on the resource.
    x-displayName: Restriction Policies
  - name: Roles
    description: >-
      The Roles API is used to create and manage Datadog roles, what

      [global permissions](https://docs.datadoghq.com/account_management/rbac/)

      they grant, and which users belong to them.


      Permissions related to specific account assets can be granted to roles

      in the Datadog application without using this API. For example, granting

      read access on a specific log index to a role can be done in Datadog from
      the

      [Pipelines page](https://app.datadoghq.com/logs/pipelines).
    x-displayName: Roles
  - name: Rum Metrics
    description: >-
      Manage configuration of [rum-based
      metrics](https://app.datadoghq.com/rum/generate-metrics) for your
      organization.
    externalDocs:
      description: Find out more at
      url: >-
        https://docs.datadoghq.com/real_user_monitoring/platform/generate_metrics/
    x-displayName: Rum Metrics
  - name: Rum Retention Filters
    description: >-
      Manage retention filters through [Manage
      Applications](https://app.datadoghq.com/rum/list) of RUM for your
      organization.
    x-displayName: Rum Retention Filters
  - name: Security Monitoring
    description: >-
      Create and manage your security rules, signals, filters, and more. See the
      [Datadog Security page](https://docs.datadoghq.com/security/) for more
      information.
    x-displayName: Security Monitoring
  - name: Sensitive Data Scanner
    description: >-
      Create, update, delete, and retrieve sensitive data scanner groups and
      rules. See the [Sensitive Data Scanner
      page](https://docs.datadoghq.com/sensitive_data_scanner/) for more
      information.
    x-displayName: Sensitive Data Scanner
  - name: Service Accounts
    description: >-
      Create, edit, and disable service accounts. See the [Service Accounts
      page](https://docs.datadoghq.com/account_management/org_settings/service_accounts/)
      for more information.
    x-displayName: Service Accounts
  - name: Service Definition
    description: >-
      API to create, update, retrieve and delete service definitions.

      Note: Service Catalog [v3.0
      schema](https://docs.datadoghq.com/service_catalog/service_definitions/v3-0/)
      has new API endpoints documented under [Software
      Catalog](https://docs.datadoghq.com/api/latest/software-catalog/). Use the
      following Service Definition endpoints for v2.2 and earlier.
    externalDocs:
      url: https://docs.datadoghq.com/tracing/service_catalog/
    x-displayName: Service Definition
  - name: Service Level Objectives
    description: >-
      [Service Level
      Objectives](https://docs.datadoghq.com/monitors/service_level_objectives/#configuration)

      (SLOs) are a key part of the site reliability engineering toolkit.

      SLOs provide a framework for defining clear targets around application
      performance,

      which ultimately help teams provide a consistent customer experience,

      balance feature development with platform stability,

      and improve communication with internal and external users.
    x-displayName: Service Level Objectives
  - name: Service Scorecards
    description: >-
      API to create and update scorecard rules and outcomes. See [Service
      Scorecards](https://docs.datadoghq.com/service_catalog/scorecards) for
      more information.


      This feature is currently in BETA. If you have any feedback, contact
      [Datadog support](https://docs.datadoghq.com/help/).
    x-displayName: Service Scorecards
  - name: Software Catalog
    description: API to create, update, retrieve, and delete Software Catalog entities.
    externalDocs:
      url: >-
        https://docs.datadoghq.com/service_catalog/service_definitions#metadata-schema-v30-beta
    x-displayName: Software Catalog
  - name: Spans
    description: Search and aggregate your spans from your Datadog platform over HTTP.
    x-displayName: Spans
  - name: Spans Metrics
    description: >-
      Manage configuration of [span-based
      metrics](https://app.datadoghq.com/apm/traces/generate-metrics) for your
      organization. See [Generate Metrics from
      Spans](https://docs.datadoghq.com/tracing/trace_pipeline/generate_metrics/)
      for more information.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/tracing/metrics/metrics_namespace/
    x-displayName: Spans Metrics
  - name: Synthetics
    description: >-
      Datadog Synthetics uses simulated user requests and browser rendering to
      help you ensure uptime,

      identify regional issues, and track your application performance. Datadog
      Synthetics tests come in

      two different flavors, [API
      tests](https://docs.datadoghq.com/synthetics/api_tests/)

      and [browser tests](https://docs.datadoghq.com/synthetics/browser_tests).
      You can use Datadog’s API to

      manage both test types programmatically.


      For more information about Synthetics, see the [Synthetics
      overview](https://docs.datadoghq.com/synthetics/).
    x-displayName: Synthetics
  - name: Teams
    description: >-
      View and manage teams within Datadog. See the [Teams
      page](https://docs.datadoghq.com/account_management/teams/) for more
      information.
    x-displayName: Teams
  - name: Usage Metering
    description: >-
      The usage metering API allows you to get hourly, daily, and

      monthly usage across multiple facets of Datadog.

      This API is available to all Pro and Enterprise customers.


      **Note**: Usage data is delayed by up to 72 hours from when it was
      incurred.

      It is retained for 15 months.


      You can retrieve up to 24 hours of hourly usage data for multiple
      organizations,

      and up to two months of hourly usage data for a single organization in one
      request.

      Learn more on the [usage details
      documentation](https://docs.datadoghq.com/account_management/billing/usage_details/).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/account_management/billing/usage_details/
    x-displayName: Usage Metering
  - name: Users
    description: Create, edit, and disable users.
    externalDocs:
      url: https://docs.datadoghq.com/account_management/users
    x-displayName: Users
  - name: Workflow Automation
    description: >-
      Datadog Workflow Automation allows you to automate your end-to-end
      processes by connecting Datadog with the rest of your tech stack. Build
      workflows to auto-remediate your alerts, streamline your incident and
      security processes, and reduce manual toil. Workflow Automation supports
      over 1,000+ OOTB actions, including AWS, JIRA, ServiceNow, GitHub, and
      OpenAI. Learn more in our Workflow Automation docs
      [here](https://docs.datadoghq.com/service_management/workflows/).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/service_management/workflows/
    x-displayName: Workflow Automation
paths:
  /:
    get:
      description: Get information about Datadog IP ranges.
      operationId: GetIPRanges
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRanges'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security: []
      servers:
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: The regional site for Datadog customers.
              enum:
                - datadoghq.com
                - us3.datadoghq.com
                - us5.datadoghq.com
                - ap1.datadoghq.com
                - datadoghq.eu
                - ddog-gov.com
            subdomain:
              default: ip-ranges
              description: The subdomain where the API is deployed.
        - url: '{protocol}://{name}'
          variables:
            name:
              default: ip-ranges.datadoghq.com
              description: Full site DNS name.
            protocol:
              default: https
              description: The protocol for accessing the API.
        - url: https://{subdomain}.datadoghq.com
          variables:
            subdomain:
              default: ip-ranges
              description: The subdomain where the API is deployed.
      summary: List IP Ranges
      tags:
        - IP Ranges
  /api/v1/api_key:
    get:
      description: Get all API keys available for your account.
      operationId: ListAPIKeys_v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get all API keys
      tags:
        - Key Management v1
      x-permission:
        operator: OR
        permissions:
          - api_keys_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Creates an API key with a given name.
      operationId: CreateAPIKey_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create an API key
      tags:
        - Key Management v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - api_keys_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/api_key/{key}:
    delete:
      description: Delete a given API key.
      operationId: DeleteAPIKey_v1
      parameters:
        - description: The specific API key you are working with.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete an API key
      tags:
        - Key Management v1
      x-permission:
        operator: OR
        permissions:
          - api_keys_delete
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a given API key.
      operationId: GetAPIKey_v1
      parameters:
        - description: The specific API key you are working with.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get API key
      tags:
        - Key Management v1
      x-permission:
        operator: OR
        permissions:
          - api_keys_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Edit an API key name.
      operationId: UpdateAPIKey_v1
      parameters:
        - description: The specific API key you are working with.
          in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Edit an API key
      tags:
        - Key Management v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - api_keys_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/application_key:
    get:
      description: Get all application keys available for your Datadog account.
      operationId: ListApplicationKeys_v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get all application keys
      tags:
        - Key Management v1
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_read
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create an application key with a given name.
      operationId: CreateApplicationKey_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponsev1'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create an application key
      tags:
        - Key Management v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/application_key/{key}:
    delete:
      description: Delete a given application key.
      operationId: DeleteApplicationKey_v1
      parameters:
        - description: The specific APP key you are working with.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponsev1'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete an application key
      tags:
        - Key Management v1
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_write
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a given application key.
      operationId: GetApplicationKey_v1
      parameters:
        - description: The specific APP key you are working with.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponsev1'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get an application key
      tags:
        - Key Management v1
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_read
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Edit an application key name.
      operationId: UpdateApplicationKey_v1
      parameters:
        - description: The specific APP key you are working with.
          in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponsev1'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Edit an application key
      tags:
        - Key Management v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_write
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/check_run:
    post:
      description: |-
        Submit a list of Service Checks.

        **Notes**:
        - A valid API key is required.
        - Service checks can be submitted up to 10 minutes in the past.
      operationId: SubmitServiceCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChecks'
        description: Service Check request body.
        required: true
      responses:
        '202':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAcceptedv1'
          description: Payload accepted
        '400':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '408':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Request timeout
        '413':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Payload too large
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
      summary: Submit a Service Check
      tags:
        - Service Checks
      x-codegen-request-body-name: body
  /api/v1/daily_custom_reports:
    get:
      deprecated: true
      description: >-
        Get daily custom reports.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution
        API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.
      operationId: GetDailyCustomReports
      parameters:
        - description: The number of files to return in the response. `[default=60]`.
          in: query
          name: page[size]
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            The identifier of the first page to return. This parameter is used
            for the pagination feature `[default=0]`.
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            type: integer
        - description: 'The direction to sort by: `[desc, asc]`.'
          in: query
          name: sort_dir
          required: false
          schema:
            $ref: '#/components/schemas/UsageSortDirection'
        - description: 'The field to sort by: `[computed_on, size, start_date, end_date]`.'
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/UsageSort'
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCustomReportsResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      summary: Get the list of available daily custom reports
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/daily_custom_reports/{report_id}:
    get:
      deprecated: true
      description: >-
        Get specified daily custom reports.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution
        API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.
      operationId: GetSpecifiedDailyCustomReports
      parameters:
        - description: Date of the report in the format `YYYY-MM-DD`.
          in: path
          name: report_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSpecifiedCustomReportsResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '404':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      summary: Get specified daily custom reports
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/dashboard:
    delete:
      description: >-
        Delete dashboards using the specified IDs. If there are any failures, no
        dashboards will be deleted (partial success is not allowed).
      operationId: DeleteDashboards
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    - id: 123-abc-456
                      type: dashboard
                    - id: 789-def-101
                      type: dashboard
            schema:
              $ref: '#/components/schemas/DashboardBulkDeleteRequest'
        description: Delete dashboards request body.
        required: true
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Dashboards Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_write
      summary: Delete dashboards
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
    get:
      description: >-
        Get all dashboards.


        **Note**: This query will only return custom created or cloned
        dashboards.

        This query will not return preset dashboards.
      operationId: ListDashboards
      parameters:
        - description: |-
            When `true`, this query only returns shared custom created
            or cloned dashboards.
          in: query
          name: filter[shared]
          required: false
          schema:
            type: boolean
        - description: >-
            When `true`, this query returns only deleted custom-created

            or cloned dashboards. This parameter is incompatible with
            `filter[shared]`.
          in: query
          name: filter[deleted]
          required: false
          schema:
            type: boolean
        - description: The maximum number of dashboards returned in the list.
          in: query
          name: count
          required: false
          schema:
            default: 100
            format: int64
            type: integer
        - description: >-
            The specific offset to use as the beginning of the returned
            response.
          in: query
          name: start
          required: false
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardSummary'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_read
      summary: Get all dashboards
      tags:
        - Dashboards
      x-pagination:
        limitParam: count
        pageOffsetParam: start
        resultsPath: dashboards
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    patch:
      description: >-
        Restore dashboards using the specified IDs. If there are any failures,
        no dashboards will be restored (partial success is not allowed).
      operationId: RestoreDashboards
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    - id: 123-abc-456
                      type: dashboard
                    - id: 789-def-101
                      type: dashboard
            schema:
              $ref: '#/components/schemas/DashboardRestoreRequest'
        description: Restore dashboards request body.
        required: true
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Dashboards Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_write
      summary: Restore deleted dashboards
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
    post:
      description: >-
        Create a dashboard using the specified options. When defining queries in
        your widgets, take note of which queries should have the `as_count()` or
        `as_rate()` modifiers appended.

        Refer to the following
        [documentation](https://docs.datadoghq.com/developers/metrics/type_modifiers/?tab=count#in-application-modifiers)
        for more information on these modifiers.
      operationId: CreateDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Create a dashboard request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_write
      summary: Create a new dashboard
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
  /api/v1/dashboard/lists/manual:
    get:
      description: Fetch all of your existing dashboard list definitions.
      operationId: ListDashboardLists
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_read
      summary: Get all dashboard lists
      tags:
        - Dashboard Lists v1
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    post:
      description: Create an empty dashboard list.
      operationId: CreateDashboardList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardList'
        description: Create a dashboard list request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_write
      summary: Create a dashboard list
      tags:
        - Dashboard Lists v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
  /api/v1/dashboard/lists/manual/{list_id}:
    delete:
      description: Delete a dashboard list.
      operationId: DeleteDashboardList
      parameters:
        - description: ID of the dashboard list to delete.
          in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListDeleteResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_write
      summary: Delete a dashboard list
      tags:
        - Dashboard Lists v1
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
    get:
      description: Fetch an existing dashboard list's definition.
      operationId: GetDashboardList
      parameters:
        - description: ID of the dashboard list to fetch.
          in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_read
      summary: Get a dashboard list
      tags:
        - Dashboard Lists v1
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    put:
      description: Update the name of a dashboard list.
      operationId: UpdateDashboardList
      parameters:
        - description: ID of the dashboard list to update.
          in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardList'
        description: Update a dashboard list request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_write
      summary: Update a dashboard list
      tags:
        - Dashboard Lists v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
  /api/v1/dashboard/public:
    post:
      description: >-
        Share a specified private dashboard, generating a URL at which it can be
        publicly viewed.
      operationId: CreatePublicDashboard
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  dashboard_id: 123-abc-456
                  dashboard_type: custom_timeboard
                  share_type: open
            schema:
              $ref: '#/components/schemas/SharedDashboard'
        description: Create a shared dashboard request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDashboard'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Dashboard Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_public_share
      summary: Create a shared dashboard
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_public_share
  /api/v1/dashboard/public/{token}:
    delete:
      description: >-
        Revoke the public URL for a dashboard (rendering it private) associated
        with the specified token.
      operationId: DeletePublicDashboard
      parameters:
        - description: The token of the shared dashboard.
          in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSharedDashboardResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Shared Dashboard Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_public_share
      summary: Revoke a shared dashboard URL
      tags:
        - Dashboards
      x-permission:
        operator: OR
        permissions:
          - dashboards_public_share
    get:
      description: >-
        Fetch an existing shared dashboard's sharing metadata associated with
        the specified token.
      operationId: GetPublicDashboard
      parameters:
        - description: >-
            The token of the shared dashboard. Generated when a dashboard is
            shared.
          in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDashboard'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Shared Dashboard Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_read
      summary: Get a shared dashboard
      tags:
        - Dashboards
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    put:
      description: Update a shared dashboard associated with the specified token.
      operationId: UpdatePublicDashboard
      parameters:
        - description: The token of the shared dashboard.
          in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  global_time:
                    live_span: 1h
                  selectable_template_vars:
                    - default_value: '*'
                      name: exampleVar
                      prefix: test
                      visible_tags:
                        - selectableValue1
                        - selectableValue2
                  share_list:
                    - test@datadoghq.com
                    - test2@datadoghq.com
                  share_type: invite
            schema:
              $ref: '#/components/schemas/SharedDashboardUpdateRequest'
        description: Update Dashboard request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDashboard'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_public_share
      summary: Update a shared dashboard
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_public_share
  /api/v1/dashboard/public/{token}/invitation:
    delete:
      description: >-
        Revoke previously sent invitation emails and active sessions used to
        access a given shared dashboard for specific email addresses.
      operationId: DeletePublicDashboardInvitation
      parameters:
        - description: The token of the shared dashboard.
          in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    attributes:
                      email: test@datadoghq.com
                    type: public_dashboard_invitation
            schema:
              $ref: '#/components/schemas/SharedDashboardInvites'
        description: Shared Dashboard Invitation deletion request body.
        required: true
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_public_share
      summary: Revoke shared dashboard invitations
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_public_share
    get:
      description: >-
        Describe the invitations that exist for the given shared dashboard
        (paginated).
      operationId: GetPublicDashboardInvitations
      parameters:
        - description: Token of the shared dashboard for which to fetch invitations.
          in: path
          name: token
          required: true
          schema:
            type: string
        - description: The number of records to return in a single request.
          in: query
          name: page_size
          required: false
          schema:
            format: int64
            type: integer
        - description: The page to access (base 0).
          in: query
          name: page_number
          required: false
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDashboardInvites'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_public_share
      summary: Get all invitations for a shared dashboard
      tags:
        - Dashboards
      x-permission:
        operator: OR
        permissions:
          - dashboards_public_share
    post:
      description: >-
        Send emails to specified email addresses containing links to access a
        given authenticated shared dashboard. Email addresses must already
        belong to the authenticated shared dashboard's share_list.
      operationId: SendPublicDashboardInvitation
      parameters:
        - description: The token of the shared dashboard.
          in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    - attributes:
                        email: test@datadoghq.com
                      type: public_dashboard_invitation
            schema:
              $ref: '#/components/schemas/SharedDashboardInvites'
        description: Shared Dashboard Invitation request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDashboardInvites'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_public_share
      summary: Send shared dashboard invitation email
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_public_share
  /api/v1/dashboard/{dashboard_id}:
    delete:
      description: Delete a dashboard using the specified ID.
      operationId: DeleteDashboard
      parameters:
        - description: The ID of the dashboard.
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardDeleteResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Dashboards Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_write
      summary: Delete a dashboard
      tags:
        - Dashboards
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
    get:
      description: Get a dashboard using the specified ID.
      operationId: GetDashboard
      parameters:
        - description: The ID of the dashboard.
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_read
      summary: Get a dashboard
      tags:
        - Dashboards
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    put:
      description: Update a dashboard using the specified ID.
      operationId: UpdateDashboard
      parameters:
        - description: The ID of the dashboard.
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Update Dashboard request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - dashboards_write
      summary: Update a dashboard
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
  /api/v1/distribution_points:
    post:
      description: >-
        The distribution points end-point allows you to post distribution data
        that can be graphed on Datadog’s dashboards.
      operationId: SubmitDistributionPoints
      parameters:
        - description: HTTP header used to compress the media-type.
          in: header
          name: Content-Encoding
          required: false
          schema:
            $ref: '#/components/schemas/DistributionPointsContentEncoding'
      requestBody:
        content:
          text/json:
            examples:
              dynamic-points:
                description: >-
                  Post time-series data that can be graphed on Datadog’s
                  dashboards.
                summary: Dynamic Points
                x-variables:
                  NOW: $(date +%s)
            schema:
              $ref: '#/components/schemas/DistributionPointsPayload'
        required: true
      responses:
        '202':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAcceptedv1'
          description: Payload accepted
        '400':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '408':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Request timeout
        '413':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Payload too large
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
      summary: Submit distribution points
      tags:
        - Metrics v1
      x-codegen-request-body-name: body
  /api/v1/downtime:
    get:
      deprecated: true
      description: >-
        Get all scheduled downtimes. **Note:** This endpoint has been
        deprecated. Please use v2 endpoints.
      operationId: ListDowntimes_v1
      parameters:
        - description: Only return downtimes that are active when the request is made.
          in: query
          name: current_only
          required: false
          schema:
            type: boolean
        - description: Return creator information.
          in: query
          name: with_creator
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Downtime'
                type: array
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_read
      summary: Get all downtimes
      tags:
        - Downtimes v1
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    post:
      deprecated: true
      description: >-
        Schedule a downtime. **Note:** This endpoint has been deprecated. Please
        use v2 endpoints.
      operationId: CreateDowntime_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Downtime'
        description: Schedule a downtime request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_downtime
      summary: Schedule a downtime
      tags:
        - Downtimes v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
  /api/v1/downtime/cancel/by_scope:
    post:
      deprecated: true
      description: >-
        Delete all downtimes that match the scope of `X`. **Note:** This only
        interacts with Downtimes created using v1 endpoints. This endpoint has
        been deprecated and will not be replaced. Please use v2 endpoints to
        find and cancel downtimes.
      operationId: CancelDowntimesByScope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelDowntimesByScopeRequest'
        description: Scope to cancel downtimes for.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CanceledDowntimesIds'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Downtimes not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_downtime
      summary: Cancel downtimes by scope
      tags:
        - Downtimes v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
  /api/v1/downtime/{downtime_id}:
    delete:
      deprecated: true
      description: >-
        Cancel a downtime. **Note:** This endpoint has been deprecated. Please
        use v2 endpoints.
      operationId: CancelDowntime_v1
      parameters:
        - description: ID of the downtime to cancel.
          in: path
          name: downtime_id
          required: true
          schema:
            example: 123456
            format: int64
            type: integer
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Downtime not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_downtime
      summary: Cancel a downtime
      tags:
        - Downtimes v1
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
    get:
      deprecated: true
      description: >-
        Get downtime detail by `downtime_id`. **Note:** This endpoint has been
        deprecated. Please use v2 endpoints.
      operationId: GetDowntime_v1
      parameters:
        - description: ID of the downtime to fetch.
          in: path
          name: downtime_id
          required: true
          schema:
            example: 123456
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Downtime not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_read
      summary: Get a downtime
      tags:
        - Downtimes v1
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    put:
      deprecated: true
      description: >-
        Update a single downtime by `downtime_id`. **Note:** This endpoint has
        been deprecated. Please use v2 endpoints.
      operationId: UpdateDowntime_v1
      parameters:
        - description: ID of the downtime to update.
          in: path
          name: downtime_id
          required: true
          schema:
            example: 123456
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Downtime'
        description: Update a downtime request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Downtime not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_downtime
      summary: Update a downtime
      tags:
        - Downtimes v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
  /api/v1/events:
    get:
      description: >-
        The event stream can be queried and filtered by time, priority, sources
        and tags.


        **Notes**:

        - If the event you’re querying contains markdown formatting of any kind,

        you may see characters such as `%`,`\`,`n` in your output.


        - This endpoint returns a maximum of `1000` most recent results. To
        return additional results,

        identify the last timestamp of the last result and set that as the `end`
        query time to

        paginate the results. You can also use the page parameter to specify
        which set of `1000` results to return.
      operationId: ListEvents_v1
      parameters:
        - description: POSIX timestamp.
          in: query
          name: start
          required: true
          schema:
            format: int64
            type: integer
        - description: POSIX timestamp.
          in: query
          name: end
          required: true
          schema:
            format: int64
            type: integer
        - description: Priority of your events, either `low` or `normal`.
          in: query
          name: priority
          required: false
          schema:
            $ref: '#/components/schemas/EventPriorityv1'
        - description: A comma separated string of sources.
          in: query
          name: sources
          schema:
            type: string
        - description: >-
            A comma separated list indicating what tags, if any, should be used
            to filter the list of events.
          example: host:host0
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: >-
            Set unaggregated to `true` to return all events within the specified
            [`start`,`end`] timeframe.

            Otherwise if an event is aggregated to a parent event with a
            timestamp outside of the timeframe,

            it won't be available in the output. Aggregated events with
            `is_aggregate=true` in the response will still be returned unless
            exclude_aggregate is set to `true.`
          in: query
          name: unaggregated
          required: false
          schema:
            type: boolean
        - description: >-
            Set `exclude_aggregate` to `true` to only return unaggregated events
            where `is_aggregate=false` in the response. If the
            `exclude_aggregate` parameter is set to `true`,

            then the unaggregated parameter is ignored and will be `true` by
            default.
          in: query
          name: exclude_aggregate
          required: false
          schema:
            type: boolean
        - description: >-
            By default 1000 results are returned per request. Set page to the
            number of the page to return with `0` being the first page. The page
            parameter can only be used

            when either unaggregated or exclude_aggregate is set to `true.`
          in: query
          name: page
          required: false
          schema:
            format: int32
            maximum: 2147483647
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - events_read
      summary: Get a list of events
      tags:
        - Events v1
      x-permission:
        operator: OR
        permissions:
          - events_read
    post:
      description: |-
        This endpoint allows you to post events to the stream.
        Tag them, set priority and event aggregate them with other events.
      operationId: CreateEvent_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateRequestv1'
        description: Event request object
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateResponsev1'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
      summary: Post an event
      tags:
        - Events v1
      x-codegen-request-body-name: body
  /api/v1/events/{event_id}:
    get:
      description: >-
        This endpoint allows you to query for event details.


        **Note**: If the event you’re querying contains markdown formatting of
        any kind,

        you may see characters such as `%`,`\`,`n` in your output.
      operationId: GetEvent
      parameters:
        - description: The ID of the event.
          in: path
          name: event_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponsev1'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - events_read
      summary: Get an event
      tags:
        - Events v1
      x-permission:
        operator: OR
        permissions:
          - events_read
  /api/v1/graph/snapshot:
    get:
      description: >-
        Take graph snapshots.

        **Note**: When a snapshot is created, there is some delay before it is
        available.
      operationId: GetGraphSnapshot
      parameters:
        - description: The metric query.
          in: query
          name: metric_query
          schema:
            type: string
          x-docs-curl-required: true
        - description: The POSIX timestamp of the start of the query in seconds.
          in: query
          name: start
          required: true
          schema:
            format: int64
            type: integer
        - description: The POSIX timestamp of the end of the query in seconds.
          in: query
          name: end
          required: true
          schema:
            format: int64
            type: integer
        - description: A query that adds event bands to the graph.
          in: query
          name: event_query
          required: false
          schema:
            type: string
        - description: >-
            A JSON document defining the graph. `graph_def` can be used instead
            of `metric_query`.

            The JSON document uses the [grammar defined
            here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)

            and should be formatted to a single line then URL encoded.
          in: query
          name: graph_def
          required: false
          schema:
            type: string
        - description: >-
            A title for the graph. If no title is specified, the graph does not
            have a title.
          in: query
          name: title
          required: false
          schema:
            type: string
        - description: >-
            The height of the graph. If no height is specified, the graph's
            original height is used.
          in: query
          name: height
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            The width of the graph. If no width is specified, the graph's
            original width is used.
          in: query
          name: width
          required: false
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphSnapshot'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth: []
      summary: Take graph snapshots
      tags:
        - Snapshots
      x-permission:
        operator: OPEN
        permissions: []
  /api/v1/host/{host_name}/mute:
    post:
      description: >-
        Mute a host. **Note:** This creates a [Downtime
        V2](https://docs.datadoghq.com/api/latest/downtimes/#schedule-a-downtime)
        for the host.
      operationId: MuteHost
      parameters:
        - description: Name of the host to mute.
          in: path
          name: host_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostMuteSettings'
        description: Mute a host request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostMuteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Mute a host
      tags:
        - Hosts
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/host/{host_name}/unmute:
    post:
      description: Unmutes a host. This endpoint takes no JSON arguments.
      operationId: UnmuteHost
      parameters:
        - description: Name of the host to unmute.
          in: path
          name: host_name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostMuteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Unmute a host
      tags:
        - Hosts
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/hosts:
    get:
      description: |-
        This endpoint allows searching for hosts by name, alias, or tag.
        Hosts live within the past 3 hours are included by default.
        Retention is 7 days.
        Results are paginated with a max of 1000 results at a time.
      operationId: ListHosts
      parameters:
        - description: String to filter search results.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Sort hosts by this field.
          in: query
          name: sort_field
          required: false
          schema:
            type: string
        - description: Direction of sort. Options include `asc` and `desc`.
          in: query
          name: sort_dir
          required: false
          schema:
            type: string
        - description: >-
            Specify the starting point for the host search results. For example,
            if you set `count` to 100 and the first 100 results have already
            been returned, you can set `start` to `101` to get the next 100
            results.
          in: query
          name: start
          required: false
          schema:
            format: int64
            type: integer
        - description: Number of hosts to return. Max 1000.
          in: query
          name: count
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            Number of seconds since UNIX epoch from which you want to search
            your hosts.
          in: query
          name: from
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            Include information on the muted status of hosts and when the mute
            expires.
          in: query
          name: include_muted_hosts_data
          required: false
          schema:
            type: boolean
        - description: >-
            Include additional metadata about the hosts (agent_version, machine,
            platform, processor, etc.).
          in: query
          name: include_hosts_metadata
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - hosts_read
      summary: Get all hosts for your organization
      tags:
        - Hosts
      x-permission:
        operator: OR
        permissions:
          - hosts_read
  /api/v1/hosts/totals:
    get:
      description: >-
        This endpoint returns the total number of active and up hosts in your
        Datadog account.

        Active means the host has reported in the past hour, and up means it has
        reported in the past two hours.
      operationId: GetHostTotals
      parameters:
        - description: >-
            Number of seconds from which you want to get total number of active
            hosts.
          in: query
          name: from
          required: false
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTotals'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - hosts_read
      summary: Get the total number of active hosts
      tags:
        - Hosts
      x-permission:
        operator: OR
        permissions:
          - hosts_read
  /api/v1/integration/aws:
    delete:
      description: >-
        Delete a Datadog-AWS integration matching the specified `account_id` and
        `role_name parameters`.
      operationId: DeleteAWSAccount_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountDeleteRequest'
        description: AWS request object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Conflict Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete an AWS integration
      tags:
        - AWS Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configurations_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        List all Datadog-AWS integrations available in your Datadog
        organization.
      operationId: ListAWSAccounts_v1
      parameters:
        - description: Only return AWS accounts that matches this `account_id`.
          in: query
          name: account_id
          required: false
          schema:
            type: string
        - description: Only return AWS accounts that matches this role_name.
          in: query
          name: role_name
          required: false
          schema:
            type: string
        - description: Only return AWS accounts that matches this `access_key_id`.
          in: query
          name: access_key_id
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: List all AWS integrations
      tags:
        - AWS Integration v1
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a Datadog-Amazon Web Services integration.

        Using the `POST` method updates your integration configuration

        by adding your new configuration to the existing one in your Datadog
        organization.

        A unique AWS Account ID for role based authentication.
      operationId: CreateAWSAccount_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: AWS Request Object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Conflict Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create an AWS integration
      tags:
        - AWS Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configurations_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Update a Datadog-Amazon Web Services integration.
      operationId: UpdateAWSAccount_v1
      parameters:
        - description: Only return AWS accounts that matches this `account_id`.
          in: query
          name: account_id
          required: false
          schema:
            type: string
        - description: |-
            Only return AWS accounts that match this `role_name`.
            Required if `account_id` is specified.
          in: query
          name: role_name
          required: false
          schema:
            type: string
        - description: |-
            Only return AWS accounts that matches this `access_key_id`.
            Required if none of the other two options are specified.
          in: query
          name: access_key_id
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: AWS request object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Conflict Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update an AWS integration
      tags:
        - AWS Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/aws/available_namespace_rules:
    get:
      description: >-
        List all namespace rules for a given Datadog-AWS integration. This
        endpoint takes no arguments.
      operationId: ListAvailableAWSNamespaces
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  - namespace1
                  - namespace2
                  - namespace3
                items:
                  type: string
                type: array
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: List namespace rules
      tags:
        - AWS Integration v1
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/aws/event_bridge:
    delete:
      description: Delete an Amazon EventBridge source.
      operationId: DeleteAWSEventBridgeSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSEventBridgeDeleteRequest'
        description: >-
          Delete the Amazon EventBridge source with the given name, region, and
          associated AWS account.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSEventBridgeDeleteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete an Amazon EventBridge source
      tags:
        - AWS Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get all Amazon EventBridge sources.
      operationId: ListAWSEventBridgeSources
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSEventBridgeListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get all Amazon EventBridge sources
      tags:
        - AWS Integration v1
      x-permission:
        operator: OPEN
        permissions: []
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create an Amazon EventBridge source.
      operationId: CreateAWSEventBridgeSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSEventBridgeCreateRequest'
        description: >-
          Create an Amazon EventBridge source for an AWS account with a given
          name and region.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSEventBridgeCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create an Amazon EventBridge source
      tags:
        - AWS Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/aws/filtering:
    delete:
      description: Delete a tag filtering entry.
      operationId: DeleteAWSTagFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSTagFilterDeleteRequest'
        description: >-
          Delete a tag filtering entry for a given AWS account and `dd-aws`
          namespace.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete a tag filtering entry
      tags:
        - AWS Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get all AWS tag filters.
      operationId: ListAWSTagFilters
      parameters:
        - description: Only return AWS filters that matches this `account_id`.
          in: query
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSTagFilterListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get all AWS tag filters
      tags:
        - AWS Integration v1
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Set an AWS tag filter.
      operationId: CreateAWSTagFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSTagFilterCreateRequest'
        description: >-
          Set an AWS tag filter using an `aws_account_identifier`, `namespace`,
          and filtering string.

          Namespace options are `application_elb`, `elb`, `lambda`,
          `network_elb`, `rds`, `sqs`, and `custom`.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Set an AWS tag filter
      tags:
        - AWS Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/aws/generate_new_external_id:
    put:
      description: >-
        Generate a new AWS external ID for a given AWS account ID and role name
        pair.
      operationId: CreateNewAWSExternalID_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: >-
          Your Datadog role delegation name.

          For more information about your AWS account Role name,

          see the [Datadog AWS integration configuration
          info](https://docs.datadoghq.com/integrations/amazon_web_services/#setup).
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Generate a new external ID
      tags:
        - AWS Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/aws/logs:
    delete:
      description: >-
        Delete a Datadog-AWS logs configuration by removing the specific Lambda
        ARN associated with a given AWS account.
      operationId: DeleteAWSLambdaARN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: Delete AWS Lambda ARN request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete an AWS Logs integration
      tags:
        - AWS Logs Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        List all Datadog-AWS Logs integrations configured in your Datadog
        account.
      operationId: ListAWSLogsIntegrations
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  - account_id: '123456789101'
                    lambdas: []
                    services:
                      - s3
                      - elb
                      - elbv2
                      - cloudfront
                      - redshift
                      - lambda
                items:
                  $ref: '#/components/schemas/AWSLogsListResponse'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: List all AWS Logs integrations
      tags:
        - AWS Logs Integration v1
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Attach the Lambda ARN of the Lambda created for the Datadog-AWS log
        collection to your AWS account ID to enable log collection.
      operationId: CreateAWSLambdaARN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: AWS Log Lambda Async request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Add AWS Log Lambda ARN
      tags:
        - AWS Logs Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/aws/logs/check_async:
    post:
      description: >-
        Test if permissions are present to add a log-forwarding triggers for the
        given services and AWS account. The input

        is the same as for Enable an AWS service log collection. Subsequent
        requests will always repeat the above, so this

        endpoint can be polled intermittently instead of blocking.


        - Returns a status of 'created' when it's checking if the Lambda exists
        in the account.

        - Returns a status of 'waiting' while checking.

        - Returns a status of 'checked and ok' if the Lambda exists.

        - Returns a status of 'error' if the Lambda does not exist.
      operationId: CheckAWSLogsLambdaAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: Check AWS Log Lambda Async request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLogsAsyncResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Check that an AWS Lambda Function exists
      tags:
        - AWS Logs Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/aws/logs/services:
    get:
      description: >-
        Get the list of current AWS services that Datadog offers automatic log
        collection. Use returned service IDs with the services parameter for the
        Enable an AWS service log collection API endpoint.
      operationId: ListAWSLogsServices_v1
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  - id: s3
                    label: S3 Access Logs
                  - id: elb
                    label: Classic ELB Access Logs
                  - id: elbv2
                    label: Application ELB Access Logs
                  - id: cloudfront
                    label: CloudFront Access Logs
                  - id: redshift
                    label: Redshift Logs
                  - id: lambda
                    label: Lambda Cloudwatch Logs
                items:
                  $ref: '#/components/schemas/AWSLogsListServicesResponse'
                type: array
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get list of AWS log ready services
      tags:
        - AWS Logs Integration v1
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Enable automatic log collection for a list of services. This should be
        run after running `CreateAWSLambdaARN` to save the configuration.
      operationId: EnableAWSLogServices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSLogsServicesRequest'
        description: Enable AWS Log Services request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Enable an AWS Logs integration
      tags:
        - AWS Logs Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/aws/logs/services_async:
    post:
      description: >-
        Test if permissions are present to add log-forwarding triggers for the

        given services and AWS account. Input is the same as for
        `EnableAWSLogServices`.

        Done async, so can be repeatedly polled in a non-blocking fashion until

        the async request completes.


        - Returns a status of `created` when it's checking if the permissions
        exists
          in the AWS account.
        - Returns a status of `waiting` while checking.

        - Returns a status of `checked and ok` if the Lambda exists.

        - Returns a status of `error` if the Lambda does not exist.
      operationId: CheckAWSLogsServicesAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSLogsServicesRequest'
        description: Check AWS Logs Async Services request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLogsAsyncResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Check permissions for log services
      tags:
        - AWS Logs Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/azure:
    delete:
      description: Delete a given Datadog-Azure integration from your Datadog account.
      operationId: DeleteAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Delete a given Datadog-Azure integration request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete an Azure integration
      tags:
        - Azure Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - azure_configurations_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: List all Datadog-Azure integrations configured in your Datadog account.
      operationId: ListAzureIntegration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureAccountListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: List all Azure integrations
      tags:
        - Azure Integration
      x-permission:
        operator: OR
        permissions:
          - azure_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a Datadog-Azure integration.


        Using the `POST` method updates your integration configuration by adding
        your new

        configuration to the existing one in your Datadog organization.


        Using the `PUT` method updates your integration configuration by
        replacing your

        current configuration with the new one sent to your Datadog
        organization.
      operationId: CreateAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: >-
          Create a Datadog-Azure integration for your Datadog account request
          body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create an Azure integration
      tags:
        - Azure Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - azure_configurations_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        Update a Datadog-Azure integration. Requires an existing `tenant_name`
        and `client_id`.

        Any other fields supplied will overwrite existing values. To overwrite
        `tenant_name` or `client_id`,

        use `new_tenant_name` and `new_client_id`. To leave a field unchanged,
        do not supply that field in the payload.
      operationId: UpdateAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Update a Datadog-Azure integration request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update an Azure integration
      tags:
        - Azure Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - azure_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/azure/host_filters:
    post:
      description: >-
        Update the defined list of host filters for a given Datadog-Azure
        integration.
      operationId: UpdateAzureHostFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Update a Datadog-Azure integration's host filters request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update Azure integration host filters
      tags:
        - Azure Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - azure_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/gcp:
    delete:
      deprecated: true
      description: >-
        This endpoint is deprecated – use the V2 endpoints instead. Delete a
        given Datadog-GCP integration.
      operationId: DeleteGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Delete a given Datadog-GCP integration.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete a GCP integration
      tags:
        - GCP Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - gcp_configurations_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      deprecated: true
      description: >-
        This endpoint is deprecated – use the V2 endpoints instead. List all
        Datadog-GCP integrations configured in your Datadog account.
      operationId: ListGCPIntegration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPAccountListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: List all GCP integrations
      tags:
        - GCP Integration v1
      x-permission:
        operator: OR
        permissions:
          - gcp_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      deprecated: true
      description: >-
        This endpoint is deprecated – use the V2 endpoints instead. Create a
        Datadog-GCP integration.
      operationId: CreateGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Create a Datadog-GCP integration.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create a GCP integration
      tags:
        - GCP Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - gcp_configurations_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      deprecated: true
      description: >-
        This endpoint is deprecated – use the V2 endpoints instead. Update a
        Datadog-GCP integrations host_filters and/or auto-mute.

        Requires a `project_id` and `client_email`, however these fields cannot
        be updated.

        If you need to update these fields, delete and use the create (`POST`)
        endpoint.

        The unspecified fields will keep their original values.
      operationId: UpdateGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Update a Datadog-GCP integration.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update a GCP integration
      tags:
        - GCP Integration v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - gcp_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/pagerduty/configuration/services:
    post:
      description: Create a new service object in the PagerDuty integration.
      operationId: CreatePagerDutyIntegrationService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagerDutyService'
        description: Create a new service object request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagerDutyServiceName'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create a new service object
      tags:
        - PagerDuty Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/pagerduty/configuration/services/{service_name}:
    delete:
      description: Delete a single service object in the Datadog-PagerDuty integration.
      operationId: DeletePagerDutyIntegrationService
      parameters:
        - description: The service name
          in: path
          name: service_name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete a single service object
      tags:
        - PagerDuty Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get service name in the Datadog-PagerDuty integration.
      operationId: GetPagerDutyIntegrationService
      parameters:
        - description: The service name.
          in: path
          name: service_name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagerDutyServiceName'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get a single service object
      tags:
        - PagerDuty Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Update a single service object in the Datadog-PagerDuty integration.
      operationId: UpdatePagerDutyIntegrationService
      parameters:
        - description: The service name
          in: path
          name: service_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagerDutyServiceKey'
        description: Update an existing service object request body.
        required: true
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update a single service object
      tags:
        - PagerDuty Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/slack/configuration/accounts/{account_name}/channels:
    get:
      description: >-
        Get a list of all channels configured for your Datadog-Slack
        integration.
      operationId: GetSlackIntegrationChannels
      parameters:
        - $ref: '#/components/parameters/SlackAccountNamePathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannels'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get all channels in a Slack integration
      tags:
        - Slack Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Add a channel to your Datadog-Slack integration.
      operationId: CreateSlackIntegrationChannel
      parameters:
        - $ref: '#/components/parameters/SlackAccountNamePathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlackIntegrationChannel'
        description: Payload describing Slack channel to be created
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create a Slack integration channel
      tags:
        - Slack Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/slack/configuration/accounts/{account_name}/channels/{channel_name}:
    delete:
      description: Remove a channel from your Datadog-Slack integration.
      operationId: RemoveSlackIntegrationChannel
      parameters:
        - $ref: '#/components/parameters/SlackAccountNamePathParameter'
        - $ref: '#/components/parameters/SlackChannelNamePathParameter'
      responses:
        '204':
          description: The channel was removed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Remove a Slack integration channel
      tags:
        - Slack Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a channel configured for your Datadog-Slack integration.
      operationId: GetSlackIntegrationChannel
      parameters:
        - $ref: '#/components/parameters/SlackAccountNamePathParameter'
        - $ref: '#/components/parameters/SlackChannelNamePathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get a Slack integration channel
      tags:
        - Slack Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update a channel used in your Datadog-Slack integration.
      operationId: UpdateSlackIntegrationChannel
      parameters:
        - $ref: '#/components/parameters/SlackAccountNamePathParameter'
        - $ref: '#/components/parameters/SlackChannelNamePathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlackIntegrationChannel'
        description: Payload describing fields and values to be updated.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update a Slack integration channel
      tags:
        - Slack Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/webhooks/configuration/custom-variables:
    post:
      description: Creates an endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      operationId: CreateWebhooksIntegrationCustomVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksIntegrationCustomVariable'
        description: Define a custom variable request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegrationCustomVariableResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create a custom variable
      tags:
        - Webhooks Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/webhooks/configuration/custom-variables/{custom_variable_name}:
    delete:
      description: Deletes the endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      operationId: DeleteWebhooksIntegrationCustomVariable
      parameters:
        - description: The name of the custom variable.
          in: path
          name: custom_variable_name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete a custom variable
      tags:
        - Webhooks Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        Shows the content of the custom variable with the name
        `<CUSTOM_VARIABLE_NAME>`.


        If the custom variable is secret, the value does not return in the

        response payload.
      operationId: GetWebhooksIntegrationCustomVariable
      parameters:
        - description: The name of the custom variable.
          in: path
          name: custom_variable_name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegrationCustomVariableResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get a custom variable
      tags:
        - Webhooks Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Updates the endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      operationId: UpdateWebhooksIntegrationCustomVariable
      parameters:
        - description: The name of the custom variable.
          in: path
          name: custom_variable_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/WebhooksIntegrationCustomVariableUpdateRequest
        description: Update an existing custom variable request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegrationCustomVariableResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update a custom variable
      tags:
        - Webhooks Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/integration/webhooks/configuration/webhooks:
    post:
      description: Creates an endpoint with the name `<WEBHOOK_NAME>`.
      operationId: CreateWebhooksIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksIntegration'
        description: Create a webhooks integration request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegration'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - create_webhooks
      summary: Create a webhooks integration
      tags:
        - Webhooks Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - create_webhooks
  /api/v1/integration/webhooks/configuration/webhooks/{webhook_name}:
    delete:
      description: Deletes the endpoint with the name `<WEBHOOK NAME>`.
      operationId: DeleteWebhooksIntegration
      parameters:
        - description: The name of the webhook.
          in: path
          name: webhook_name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete a webhook
      tags:
        - Webhooks Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Gets the content of the webhook with the name `<WEBHOOK_NAME>`.
      operationId: GetWebhooksIntegration
      parameters:
        - description: The name of the webhook.
          in: path
          name: webhook_name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegration'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get a webhook integration
      tags:
        - Webhooks Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Updates the endpoint with the name `<WEBHOOK_NAME>`.
      operationId: UpdateWebhooksIntegration
      parameters:
        - description: The name of the webhook.
          in: path
          name: webhook_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksIntegrationUpdateRequest'
        description: Update an existing Datadog-Webhooks integration.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegration'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update a webhook
      tags:
        - Webhooks Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/logs-queries/list:
    post:
      description: >-
        List endpoint returns logs that match a log search query.

        [Results are paginated][1].


        **If you are considering archiving logs for your organization,

        consider use of the Datadog archive capabilities instead of the log list
        API.

        See [Datadog Logs Archive documentation][2].**


        [1]: /logs/guide/collect-multiple-logs-with-pagination

        [2]: https://docs.datadoghq.com/logs/archives
      operationId: ListLogs_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsListRequestv1'
        description: Logs filter
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponsev1'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Search logs
      tags:
        - Logs v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/logs/config/index-order:
    get:
      description: >-
        Get the current order of your log indexes. This endpoint takes no JSON
        arguments.
      operationId: GetLogsIndexOrder
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexesOrder'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get indexes order
      tags:
        - Logs Indexes
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        This endpoint updates the index order of your organization.

        It returns the index order object passed in the request body when the
        request is successful.
      operationId: UpdateLogsIndexOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndexesOrder'
        description: Object containing the new ordered list of index names
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexesOrder'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update indexes order
      tags:
        - Logs Indexes
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_modify_indexes
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/logs/config/indexes:
    get:
      description: >-
        The Index object describes the configuration of a log index.

        This endpoint returns an array of the `LogIndex` objects of your
        organization.
      operationId: ListLogIndexes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth: []
      summary: Get all indexes
      tags:
        - Logs Indexes
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
    post:
      description: >-
        Creates a new index. Returns the Index object passed in the request body
        when the request is successful.
      operationId: CreateLogsIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndex'
        description: Object containing the new index.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create an index
      tags:
        - Logs Indexes
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_modify_indexes
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/logs/config/indexes/{name}:
    delete:
      description: >-
        Delete an existing index from your organization. Index deletions are
        permanent and cannot be reverted.

        You cannot recreate an index with the same name as deleted ones.
      operationId: DeleteLogsIndex
      parameters:
        - description: Name of the log index.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete an index
      tags:
        - Logs Indexes
      x-permission:
        operator: OR
        permissions:
          - logs_modify_indexes
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        Get one log index from your organization. This endpoint takes no JSON
        arguments.
      operationId: GetLogsIndex
      parameters:
        - description: Name of the log index.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get an index
      tags:
        - Logs Indexes
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        Update an index as identified by its name.

        Returns the Index object passed in the request body when the request is
        successful.


        Using the `PUT` method updates your index’s configuration by
        **replacing**

        your current configuration with the new one sent to your Datadog
        organization.
      operationId: UpdateLogsIndex
      parameters:
        - description: Name of the log index.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndexUpdateRequest'
        description: Object containing the new `LogsIndexUpdateRequest`.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Too Many Requests
      summary: Update an index
      tags:
        - Logs Indexes
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/logs/config/pipeline-order:
    get:
      description: |-
        Get the current order of your pipelines.
        This endpoint takes no JSON arguments.
      operationId: GetLogsPipelineOrder
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipelinesOrder'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get pipeline order
      tags:
        - Logs Pipelines
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        Update the order of your pipelines. Since logs are processed
        sequentially, reordering a pipeline may change

        the structure and content of the data processed by other pipelines and
        their processors.


        **Note**: Using the `PUT` method updates your pipeline order by
        replacing your current order

        with the new one sent to your Datadog organization.
      operationId: UpdateLogsPipelineOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsPipelinesOrder'
        description: Object containing the new ordered list of pipeline IDs.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipelinesOrder'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update pipeline order
      tags:
        - Logs Pipelines
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_pipelines
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/logs/config/pipelines:
    get:
      description: |-
        Get all pipelines from your organization.
        This endpoint takes no JSON arguments.
      operationId: ListLogsPipelines
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipelineList'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get all pipelines
      tags:
        - Logs Pipelines
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a pipeline in your organization.
      operationId: CreateLogsPipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsPipeline'
        description: Definition of the new pipeline.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipeline'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create a pipeline
      tags:
        - Logs Pipelines
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_pipelines
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/logs/config/pipelines/{pipeline_id}:
    delete:
      description: |-
        Delete a given pipeline from your organization.
        This endpoint takes no JSON arguments.
      operationId: DeleteLogsPipeline
      parameters:
        - description: ID of the pipeline to delete.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete a pipeline
      tags:
        - Logs Pipelines
      x-permission:
        operator: OR
        permissions:
          - logs_write_pipelines
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: |-
        Get a specific pipeline from your organization.
        This endpoint takes no JSON arguments.
      operationId: GetLogsPipeline
      parameters:
        - description: ID of the pipeline to get.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipeline'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get a pipeline
      tags:
        - Logs Pipelines
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        Update a given pipeline configuration to change it’s processors or their
        order.


        **Note**: Using this method updates your pipeline configuration by
        **replacing**

        your current configuration with the new one sent to your Datadog
        organization.
      operationId: UpdateLogsPipeline
      parameters:
        - description: ID of the pipeline to delete.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsPipeline'
        description: New definition of the pipeline.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipeline'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update a pipeline
      tags:
        - Logs Pipelines
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_pipelines
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/metrics:
    get:
      description: Get the list of actively reporting metrics from a given time until now.
      operationId: ListActiveMetrics
      parameters:
        - description: Seconds since the Unix epoch.
          in: query
          name: from
          required: true
          schema:
            format: int64
            type: integer
        - description: >-
            Hostname for filtering the list of metrics returned.

            If set, metrics retrieved are those with the corresponding hostname
            tag.
          in: query
          name: host
          required: false
          schema:
            type: string
        - description: >-
            Filter metrics that have been submitted with the given tags.
            Supports boolean and wildcard expressions.

            Cannot be combined with other filters.
          example: env IN (staging,test) AND service:web
          in: query
          name: tag_filter
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - metrics_read
      summary: Get active metrics list
      tags:
        - Metrics v1
      x-permission:
        operator: OR
        permissions:
          - metrics_read
  /api/v1/metrics/{metric_name}:
    get:
      description: Get metadata about a specific metric.
      operationId: GetMetricMetadata
      parameters:
        - description: Name of the metric for which to get metadata.
          in: path
          name: metric_name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMetadatav1'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - metrics_read
      summary: Get metric metadata
      tags:
        - Metrics v1
      x-permission:
        operator: OR
        permissions:
          - metrics_read
    put:
      description: >-
        Edit metadata of a specific metric. Find out more about [supported
        types](https://docs.datadoghq.com/developers/metrics).
      operationId: UpdateMetricMetadata
      parameters:
        - description: Name of the metric for which to edit metadata.
          in: path
          name: metric_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricMetadatav1'
        description: New metadata.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMetadatav1'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Edit metric metadata
      tags:
        - Metrics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - metrics_metadata_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/monitor:
    get:
      description: Get all monitors from your organization.
      operationId: ListMonitors
      parameters:
        - description: |-
            When specified, shows additional information about the group states.
            Choose one or more from `all`, `alert`, `warn`, and `no data`.
          in: query
          name: group_states
          required: false
          schema:
            example: alert
            type: string
        - description: A string to filter monitors by name.
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: >-
            A comma separated list indicating what tags, if any, should be used
            to filter the list of monitors by scope.

            For example, `host:host0`.
          in: query
          name: tags
          required: false
          schema:
            example: host:host0
            type: string
        - description: >-
            A comma separated list indicating what service and/or custom tags,
            if any, should be used to filter the list of monitors.

            Tags created in the Datadog UI automatically have the service key
            prepended. For example, `service:my-app`.
          in: query
          name: monitor_tags
          required: false
          schema:
            example: service:my-app
            type: string
        - description: >-
            If this argument is set to true, then the returned data includes all
            current active downtimes for each monitor.
          in: query
          name: with_downtimes
          required: false
          schema:
            type: boolean
        - description: >-
            Use this parameter for paginating through large sets of monitors.
            Start with a value of zero, make a request, set the value to the
            last ID of result set, and then repeat until the response is empty.
          in: query
          name: id_offset
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            The page to start paginating from. If this argument is not
            specified, the request returns all monitors without pagination.
          in: query
          name: page
          required: false
          schema:
            example: 0
            format: int64
            type: integer
        - description: >-
            The number of monitors to return per page. If the page argument is
            not specified, the default behavior returns all monitors without a
            `page_size` limit. However, if page is specified and `page_size` is
            not, the argument defaults to 100.
          in: query
          name: page_size
          required: false
          schema:
            default: 100
            example: 20
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: An array of monitor objects.
                items:
                  $ref: '#/components/schemas/Monitor'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_read
      summary: Get all monitors
      tags:
        - Monitors v1
      x-pagination:
        limitParam: page_size
        pageParam: page
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    post:
      description: >-
        Create a monitor using the specified options.


        #### Monitor Types


        The type of monitor chosen from:


        - anomaly: `query alert`

        - APM: `query alert` or `trace-analytics alert`

        - composite: `composite`

        - custom: `service check`

        - forecast: `query alert`

        - host: `service check`

        - integration: `query alert` or `service check`

        - live process: `process alert`

        - logs: `log alert`

        - metric: `query alert`

        - network: `service check`

        - outlier: `query alert`

        - process: `service check`

        - rum: `rum alert`

        - SLO: `slo alert`

        - watchdog: `event-v2 alert`

        - event-v2: `event-v2 alert`

        - audit: `audit alert`

        - error-tracking: `error-tracking alert`

        - database-monitoring: `database-monitoring alert`

        - network-performance: `network-performance alert`

        - cloud cost: `cost alert`


        **Notes**:

        - Synthetic monitors are created through the Synthetics API. See the
        [Synthetics API](https://docs.datadoghq.com/api/latest/synthetics/)
        documentation for more information.

        - Log monitors require an unscoped App Key.


        #### Query Types


        ##### Metric Alert Query


        Example: `time_aggr(time_window):space_aggr:metric{tags} [by {key}]
        operator #`


        - `time_aggr`: avg, sum, max, min, change, or pct_change

        - `time_window`: `last_#m` (with `#` between 1 and 10080 depending on
        the monitor type) or `last_#h`(with `#` between 1 and 168 depending on
        the monitor type) or `last_1d`, or `last_1w`

        - `space_aggr`: avg, sum, min, or max

        - `tags`: one or more tags (comma-separated), or *

        - `key`: a 'key' in key:value tag syntax; defines a separate alert for
        each tag in the group (multi-alert)

        - `operator`: <, <=, >, >=, ==, or !=

        - `#`: an integer or decimal number used to set the threshold


        If you are using the `_change_` or `_pct_change_` time aggregator,
        instead use `change_aggr(time_aggr(time_window),

        timeshift):space_aggr:metric{tags} [by {key}] operator #` with:


        - `change_aggr` change, pct_change

        - `time_aggr` avg, sum, max, min [Learn
        more](https://docs.datadoghq.com/monitors/create/types/#define-the-conditions)

        - `time_window` last\_#m (between 1 and 2880 depending on the monitor
        type), last\_#h (between 1 and 48 depending on the monitor type), or
        last_#d (1 or 2)

        - `timeshift` #m_ago (5, 10, 15, or 30), #h_ago (1, 2, or 4), or 1d_ago


        Use this to create an outlier monitor using the following query:

        `avg(last_30m):outliers(avg:system.cpu.user{role:es-events-data} by
        {host}, 'dbscan', 7) > 0`


        ##### Service Check Query


        Example: `"check".over(tags).last(count).by(group).count_by_status()`


        - `check` name of the check, for example `datadog.agent.up`

        - `tags` one or more quoted tags (comma-separated), or "*". for example:
        `.over("env:prod", "role:db")`; `over` cannot be blank.

        - `count` must be at greater than or equal to your max threshold
        (defined in the `options`). It is limited to 100.

        For example, if you've specified to notify on 1 critical, 3 ok, and 2
        warn statuses, `count` should be at least 3.

        - `group` must be specified for check monitors. Per-check grouping is
        already explicitly known for some service checks.

        For example, Postgres integration monitors are tagged by `db`, `host`,
        and `port`, and Network monitors by `host`, `instance`, and `url`. See
        [Service Checks](https://docs.datadoghq.com/api/latest/service-checks/)
        documentation for more information.


        ##### Event Alert Query


        **Note:** The Event Alert Query has been replaced by the Event V2 Alert
        Query. For more information, see the [Event Migration
        guide](https://docs.datadoghq.com/service_management/events/guides/migrating_to_new_events_features/).


        ##### Event V2 Alert Query


        Example: `events(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg` and
        `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### Process Alert Query


        Example: `processes(search).over(tags).rollup('count').last(timeframe)
        operator #`


        - `search` free text search string for querying processes.

        Matching processes match results on the [Live
        Processes](https://docs.datadoghq.com/infrastructure/process/?tab=linuxwindows)
        page.

        - `tags` one or more tags (comma-separated)

        - `timeframe` the timeframe to roll up the counts. Examples: 10m, 4h.
        Supported timeframes: s, m, h and d

        - `operator` <, <=, >, >=, ==, or !=

        - `#` an integer or decimal number used to set the threshold


        ##### Logs Alert Query


        Example: `logs(query).index(index_name).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `index_name` For multi-index organizations, the log index in which the
        request is performed.

        - `rollup_method` The stats roll-up method - supports `count`, `avg` and
        `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### Composite Query


        Example: `12345 && 67890`, where `12345` and `67890` are the IDs of
        non-composite monitors


        * `name` [*required*, *default* = **dynamic, based on query**]: The name
        of the alert.

        * `message` [*required*, *default* = **dynamic, based on query**]: A
        message to include with notifications for this monitor.

        Email notifications can be sent to specific users by using the same
        '@username' notation as events.

        * `tags` [*optional*, *default* = **empty list**]: A list of tags to
        associate with your monitor.

        When getting all monitor details via the API, use the `monitor_tags`
        argument to filter results by these tags.

        It is only available via the API and isn't visible or editable in the
        Datadog UI.


        ##### SLO Alert Query


        Example: `error_budget("slo_id").over("time_window") operator #`


        - `slo_id`: The alphanumeric SLO ID of the SLO you are configuring the
        alert for.

        - `time_window`: The time window of the SLO target you wish to alert on.
        Valid options: `7d`, `30d`, `90d`.

        - `operator`: `>=` or `>`


        ##### Audit Alert Query


        Example: `audits(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg` and
        `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### CI Pipelines Alert Query


        Example: `ci-pipelines(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### CI Tests Alert Query


        Example: `ci-tests(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### Error Tracking Alert Query


        "New issue" example:
        `error-tracking(query).source(issue_source).new().rollup(rollup_method[,
        measure]).by(group_by).last(time_window) operator #`

        "High impact issue" example:
        `error-tracking(query).source(issue_source).impact().rollup(rollup_method[,
        measure]).by(group_by).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `issue_source` The issue source - supports `all`, `browser`, `mobile`
        and `backend` and defaults to `all` if omitted.

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality` and defaults to `count` if omitted.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `group by` Comma-separated list of attributes to group by - should
        contain at least `issue.id`.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        **Database Monitoring Alert Query**


        Example: `database-monitoring(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        **Network Performance Alert Query**


        Example: `network-performance(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        **Cost Alert Query**


        Example: `formula(query).timeframe_type(time_window).function(parameter)
        operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `timeframe_type` The timeframe type to evaluate the cost
                - for `forecast` supports `current`
                - for `change`, `anomaly`, `threshold` supports `last`
        - `time_window` - supports daily roll-up e.g. `7d`

        - `function` - [optional, defaults to `threshold` monitor if omitted]
        supports `change`, `anomaly`, `forecast`

        - `parameter` Specify the parameter of the type
            - for `change`:
                - supports `relative`, `absolute`
                - [optional] supports `#`, where `#` is an integer or decimal number used to set the threshold
            - for `anomaly`:
                - supports `direction=both`, `direction=above`, `direction=below`
                - [optional] supports `threshold=#`, where `#` is an integer or decimal number used to set the threshold
        - `operator`
            - for `threshold` supports `<`, `<=`, `>`, `>=`, `==`, or `!=`
            - for `change` supports `>`, `<`
            - for `anomaly` supports `>=`
            - for `forecast` supports `>`
        - `#` an integer or decimal number used to set the threshold.
      operationId: CreateMonitor
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  message: You may need to add web hosts if this is consistently high.
                  name: Bytes received on host0
                  options:
                    no_data_timeframe: 20
                    notify_no_data: true
                  query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                  tags:
                    - app:webserver
                    - frontend
                  type: query alert
            schema:
              $ref: '#/components/schemas/Monitor'
        description: Create a monitor request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_write
      summary: Create a monitor
      tags:
        - Monitors v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_write
  /api/v1/monitor/can_delete:
    get:
      description: Check if the given monitors can be deleted.
      operationId: CheckCanDeleteMonitor
      parameters:
        - description: The IDs of the monitor to check.
          explode: false
          in: query
          name: monitor_ids
          required: true
          schema:
            items:
              example: 666486743
              format: int64
              type: integer
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteMonitorResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteMonitorResponse'
          description: Deletion conflict error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_read
      summary: Check if a monitor can be deleted
      tags:
        - Monitors v1
      x-permission:
        operator: OR
        permissions:
          - monitors_read
  /api/v1/monitor/groups/search:
    get:
      description: Search and filter your monitor groups details.
      operationId: SearchMonitorGroups
      parameters:
        - description: >-
            After entering a search query on the [Triggered Monitors page][1],
            use the query parameter value in the

            URL of the page as a value for this parameter. For more information,
            see the [Manage Monitors documentation][2].


            The query can contain any number of space-separated monitor
            attributes, for instance: `query="type:metric group_status:alert"`.


            [1]: https://app.datadoghq.com/monitors/triggered

            [2]: /monitors/manage/#triggered-monitors
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Page to start paginating from.
          in: query
          name: page
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: Number of monitors to return per page.
          in: query
          name: per_page
          required: false
          schema:
            default: 30
            format: int64
            type: integer
        - description: >-
            String for sort order, composed of field and sort order separate by
            a comma, for example `name,asc`. Supported sort directions: `asc`,
            `desc`. Supported fields:


            * `name`

            * `status`

            * `tags`
          in: query
          name: sort
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorGroupSearchResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_read
      summary: Monitors group search
      tags:
        - Monitors v1
      x-permission:
        operator: OR
        permissions:
          - monitors_read
  /api/v1/monitor/search:
    get:
      description: Search and filter your monitors details.
      operationId: SearchMonitors
      parameters:
        - description: >-
            After entering a search query in your [Manage Monitor page][1] use
            the query parameter value in the

            URL of the page as value for this parameter. Consult the dedicated
            [manage monitor documentation][2]

            page to learn more.


            The query can contain any number of space-separated monitor
            attributes, for instance `query="type:metric status:alert"`.


            [1]: https://app.datadoghq.com/monitors/manage

            [2]: /monitors/manage/#find-the-monitors
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Page to start paginating from.
          in: query
          name: page
          required: false
          schema:
            default: 0
            format: int64
            type: integer
        - description: Number of monitors to return per page.
          in: query
          name: per_page
          required: false
          schema:
            default: 30
            format: int64
            type: integer
        - description: >-
            String for sort order, composed of field and sort order separate by
            a comma, for example `name,asc`. Supported sort directions: `asc`,
            `desc`. Supported fields:


            * `name`

            * `status`

            * `tags`
          in: query
          name: sort
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorSearchResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_read
      summary: Monitors search
      tags:
        - Monitors v1
      x-permission:
        operator: OR
        permissions:
          - monitors_read
  /api/v1/monitor/validate:
    post:
      description: |-
        Validate the monitor provided in the request.

        **Note**: Log monitors require an unscoped App Key.
      operationId: ValidateMonitor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
        description: Monitor request object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Invalid JSON
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_write
      summary: Validate a monitor
      tags:
        - Monitors v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_write
  /api/v1/monitor/{monitor_id}:
    delete:
      description: Delete the specified monitor
      operationId: DeleteMonitor
      parameters:
        - description: The ID of the monitor.
          in: path
          name: monitor_id
          required: true
          schema:
            example: 666486743
            format: int64
            type: integer
        - description: >-
            Delete the monitor even if it's referenced by other resources (for
            example SLO, composite monitor).
          in: query
          name: force
          required: false
          schema:
            example: 'false'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedMonitor'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Item not found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_write
      summary: Delete a monitor
      tags:
        - Monitors v1
      x-permission:
        operator: OR
        permissions:
          - monitors_write
    get:
      description: Get details about the specified monitor from your organization.
      operationId: GetMonitor
      parameters:
        - description: The ID of the monitor
          in: path
          name: monitor_id
          required: true
          schema:
            example: 666486743
            format: int64
            type: integer
        - description: >-
            When specified, shows additional information about the group states.
            Choose one or more from `all`, `alert`, `warn`, and `no data`.
          in: query
          name: group_states
          required: false
          schema:
            type: string
        - description: >-
            If this argument is set to true, then the returned data includes all
            current active downtimes for the monitor.
          in: query
          name: with_downtimes
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Monitor Not Found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_read
      summary: Get a monitor's details
      tags:
        - Monitors v1
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    put:
      description: Edit the specified monitor.
      operationId: UpdateMonitor
      parameters:
        - description: The ID of the monitor.
          in: path
          name: monitor_id
          required: true
          schema:
            example: 666486743
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorUpdateRequest'
        description: Edit a monitor request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Monitor Not Found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_write
      summary: Edit a monitor
      tags:
        - Monitors v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_write
  /api/v1/monitor/{monitor_id}/downtimes:
    get:
      deprecated: true
      description: >-
        Get all active v1 downtimes for the specified monitor. **Note:** This
        endpoint has been deprecated. Please use v2 endpoints.
      operationId: ListMonitorDowntimes_v1
      parameters:
        - description: The id of the monitor
          in: path
          name: monitor_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Downtime'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Monitor Not Found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_read
      summary: Get active downtimes for a monitor
      tags:
        - Downtimes v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_read
  /api/v1/monitor/{monitor_id}/validate:
    post:
      description: Validate the monitor provided in the request.
      operationId: ValidateExistingMonitor
      parameters:
        - description: The ID of the monitor
          in: path
          name: monitor_id
          required: true
          schema:
            example: 666486743
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
        description: Monitor request object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Invalid JSON
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - monitors_write
      summary: Validate an existing monitor
      tags:
        - Monitors v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_write
  /api/v1/monthly_custom_reports:
    get:
      deprecated: true
      description: >-
        Get monthly custom reports.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution
        API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.
      operationId: GetMonthlyCustomReports
      parameters:
        - description: The number of files to return in the response `[default=60].`
          in: query
          name: page[size]
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            The identifier of the first page to return. This parameter is used
            for the pagination feature `[default=0]`.
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            type: integer
        - description: 'The direction to sort by: `[desc, asc]`.'
          in: query
          name: sort_dir
          required: false
          schema:
            $ref: '#/components/schemas/UsageSortDirection'
        - description: 'The field to sort by: `[computed_on, size, start_date, end_date]`.'
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/UsageSort'
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCustomReportsResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      summary: Get the list of available monthly custom reports
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/monthly_custom_reports/{report_id}:
    get:
      deprecated: true
      description: >-
        Get specified monthly custom reports.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution
        API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.
      operationId: GetSpecifiedMonthlyCustomReports
      parameters:
        - description: Date of the report in the format `YYYY-MM-DD`.
          in: path
          name: report_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSpecifiedCustomReportsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '404':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      summary: Get specified monthly custom reports
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/notebooks:
    get:
      description: >-
        Get all notebooks. This can also be used to search for notebooks with a
        particular `query` in the notebook

        `name` or author `handle`.
      operationId: ListNotebooks
      parameters:
        - description: Return notebooks created by the given `author_handle`.
          in: query
          name: author_handle
          required: false
          schema:
            example: test@datadoghq.com
            type: string
          style: form
        - description: Return notebooks not created by the given `author_handle`.
          in: query
          name: exclude_author_handle
          required: false
          schema:
            example: test@datadoghq.com
            type: string
          style: form
        - description: The index of the first notebook you want returned.
          in: query
          name: start
          required: false
          schema:
            example: 0
            format: int64
            type: integer
          style: form
        - description: The number of notebooks to be returned.
          in: query
          name: count
          required: false
          schema:
            default: 100
            example: 5
            format: int64
            type: integer
          style: form
        - description: Sort by field `modified`, `name`, or `created`.
          in: query
          name: sort_field
          required: false
          schema:
            default: modified
            example: modified
            type: string
          style: form
        - description: Sort by direction `asc` or `desc`.
          in: query
          name: sort_dir
          required: false
          schema:
            default: desc
            example: desc
            type: string
          style: form
        - description: >-
            Return only notebooks with `query` string in notebook name or author
            handle.
          in: query
          name: query
          required: false
          schema:
            example: postmortem
            type: string
          style: form
        - description: >-
            Value of `false` excludes the `cells` and global `time` for each
            notebook.
          in: query
          name: include_cells
          required: false
          schema:
            default: true
            example: false
            type: boolean
          style: form
        - description: >-
            True value returns only template notebooks. Default is false
            (returns only non-template notebooks).
          in: query
          name: is_template
          required: false
          schema:
            default: false
            example: false
            type: boolean
          style: form
        - description: >-
            If type is provided, returns only notebooks with that metadata type.
            Default does not have type filtering.
          in: query
          name: type
          required: false
          schema:
            example: investigation
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebooksResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get all notebooks
      tags:
        - Notebooks
      x-pagination:
        limitParam: count
        pageOffsetParam: start
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - notebooks_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a notebook using the specified options.
      operationId: CreateNotebook
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    attributes:
                      cells:
                        - attributes:
                            definition:
                              text: |-
                                ## Some test markdown

                                With some example content.
                              type: markdown
                          type: notebook_cells
                        - attributes:
                            definition:
                              requests:
                                - display_type: line
                                  q: avg:system.load.1{*}
                                  style:
                                    line_type: solid
                                    line_width: normal
                                    palette: dog_classic
                              show_legend: true
                              type: timeseries
                              yaxis:
                                scale: linear
                            graph_size: m
                            split_by:
                              keys: []
                              tags: []
                            time: null
                          type: notebook_cells
                      name: Example Notebook
                      time:
                        live_span: 1h
                    type: notebooks
            schema:
              $ref: '#/components/schemas/NotebookCreateRequest'
        description: The JSON description of the notebook you want to create.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create a notebook
      tags:
        - Notebooks
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - notebooks_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/notebooks/{notebook_id}:
    delete:
      description: Delete a notebook using the specified ID.
      operationId: DeleteNotebook
      parameters:
        - description: Unique ID, assigned when you create the notebook.
          in: path
          name: notebook_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete a notebook
      tags:
        - Notebooks
      x-permission:
        operator: OR
        permissions:
          - notebooks_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a notebook using the specified notebook ID.
      operationId: GetNotebook
      parameters:
        - description: Unique ID, assigned when you create the notebook.
          in: path
          name: notebook_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get a notebook
      tags:
        - Notebooks
      x-permission:
        operator: OR
        permissions:
          - notebooks_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Update a notebook using the specified ID.
      operationId: UpdateNotebook
      parameters:
        - description: Unique ID, assigned when you create the notebook.
          in: path
          name: notebook_id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    attributes:
                      cells:
                        - attributes:
                            definition:
                              text: |-
                                ## Some updated test markdown

                                With some example content.
                              type: markdown
                          type: notebook_cells
                        - attributes:
                            definition:
                              requests:
                                - display_type: bars
                                  q: avg:system.load.1{*}
                                  style:
                                    line_type: solid
                                    line_width: normal
                                    palette: warm
                              show_legend: true
                              type: timeseries
                              yaxis:
                                scale: linear
                            graph_size: m
                            split_by:
                              keys: []
                              tags: []
                            time: null
                          id: abcd1234
                          type: notebook_cells
                      name: Example Notebook
                      time:
                        live_span: 1h
                    type: notebooks
            schema:
              $ref: '#/components/schemas/NotebookUpdateRequest'
        description: Update notebook request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update a notebook
      tags:
        - Notebooks
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - notebooks_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/org:
    get:
      description: This endpoint returns data on your top-level organization.
      operationId: ListOrgs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: List your managed organizations
      tags:
        - Organizations v1
      x-permission:
        operator: OR
        permissions:
          - org_management
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a child organization.


        This endpoint requires the

        [multi-organization
        account](https://docs.datadoghq.com/account_management/multi_organization/)

        feature and must be enabled by

        [contacting support](https://docs.datadoghq.com/help/).


        Once a new child organization is created, you can interact with it

        by using the `org.public_id`, `api_key.key`, and

        `application_key.hash` provided in the response.
      operationId: CreateChildOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateBody'
        description: Organization object that needs to be created
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create a child organization
      tags:
        - Organizations v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_management
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/org/{public_id}:
    get:
      description: Get organization information.
      operationId: GetOrg
      parameters:
        - description: The `public_id` of the organization you are operating within.
          in: path
          name: public_id
          required: true
          schema:
            example: abc123
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get organization information
      tags:
        - Organizations v1
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Update your organization.
      operationId: UpdateOrg
      parameters:
        - description: The `public_id` of the organization you are operating within.
          in: path
          name: public_id
          required: true
          schema:
            example: abc123
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organizationv1'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update your organization
      tags:
        - Organizations v1
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/org/{public_id}/downgrade:
    post:
      description: >-
        Only available for MSP customers. Removes a child organization from the
        hierarchy of the master organization and places the child organization
        on a 30-day trial.
      operationId: DowngradeOrg
      parameters:
        - description: The `public_id` of the organization you are operating within.
          in: path
          name: public_id
          required: true
          schema:
            example: abc123
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgDowngradedResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Spin-off Child Organization
      tags:
        - Organizations v1
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/org/{public_id}/idp_metadata:
    post:
      description: |-
        There are a couple of options for updating the Identity Provider (IdP)
        metadata from your SAML IdP.

        * **Multipart Form-Data**: Post the IdP metadata file using a form post.

        * **XML Body:** Post the IdP metadata file as the body of the request.
      operationId: UploadIdPForOrg
      parameters:
        - description: The `public_id` of the organization you are operating with
          in: path
          name: public_id
          required: true
          schema:
            example: abc123
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IdpFormData'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Unsupported Media Type
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Upload IdP metadata
      tags:
        - Organizations v1
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/query:
    get:
      description: Query timeseries points.
      operationId: QueryMetrics
      parameters:
        - description: Start of the queried time period, seconds since the Unix epoch.
          in: query
          name: from
          required: true
          schema:
            format: int64
            type: integer
        - description: End of the queried time period, seconds since the Unix epoch.
          in: query
          name: to
          required: true
          schema:
            format: int64
            type: integer
        - description: Query string.
          in: query
          name: query
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQueryResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - timeseries_query
      summary: Query timeseries points
      tags:
        - Metrics v1
      x-permission:
        operator: OR
        permissions:
          - timeseries_query
  /api/v1/search:
    get:
      description: Search for metrics from the last 24 hours in Datadog.
      operationId: ListMetrics
      parameters:
        - description: >-
            Query string to search metrics upon. Can optionally be prefixed with
            `metrics:`.
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSearchResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth: []
      summary: Search metrics
      tags:
        - Metrics v1
      x-permission:
        operator: OPEN
        permissions: []
  /api/v1/security_analytics/signals/{signal_id}/add_to_incident:
    patch:
      description: >-
        Add a security signal to an incident. This makes it possible to search
        for signals by incident within the signal explorer and to view the
        signals on the incident timeline.
      operationId: AddSecurityMonitoringSignalToIncident
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSignalToIncidentRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulSignalUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Add a security signal to an incident
      tags:
        - Security Monitoring v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/security_analytics/signals/{signal_id}/assignee:
    patch:
      description: Modify the triage assignee of a security signal.
      operationId: EditSecurityMonitoringSignalAssignee_v1
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalAssigneeUpdateRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulSignalUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Modify the triage assignee of a security signal
      tags:
        - Security Monitoring v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/security_analytics/signals/{signal_id}/state:
    patch:
      description: Change the triage state of a security signal.
      operationId: EditSecurityMonitoringSignalState_v1
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalStateUpdateRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulSignalUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Change the triage state of a security signal
      tags:
        - Security Monitoring v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/series:
    post:
      description: >-
        The metrics end-point allows you to post time-series data that can be
        graphed on Datadog’s dashboards.

        The maximum payload size is 3.2 megabytes (3200000 bytes). Compressed
        payloads must have a decompressed size of less than 62 megabytes
        (62914560 bytes).


        If you’re submitting metrics directly to the Datadog API without using
        DogStatsD, expect:


        - 64 bits for the timestamp

        - 64 bits for the value

        - 40 bytes for the metric names

        - 50 bytes for the timeseries

        - The full payload is approximately 100 bytes. However, with the
        DogStatsD API,

        compression is applied, which reduces the payload size.
      operationId: SubmitMetrics_v1
      parameters:
        - description: HTTP header used to compress the media-type.
          in: header
          name: Content-Encoding
          required: false
          schema:
            $ref: '#/components/schemas/MetricContentEncodingv1'
      requestBody:
        content:
          text/json:
            examples:
              dynamic-points:
                description: >-
                  Post time-series data that can be graphed on Datadog’s
                  dashboards.
                summary: Dynamic Points
                x-variables:
                  NOW: $(date +%s)
            schema:
              $ref: '#/components/schemas/MetricsPayload'
        required: true
      responses:
        '202':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAcceptedv1'
          description: Payload accepted
        '400':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '408':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Request timeout
        '413':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Payload too large
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
      summary: Submit metrics
      tags:
        - Metrics v1
      x-codegen-request-body-name: body
  /api/v1/slo:
    get:
      description: Get a list of service level objective objects for your organization.
      operationId: ListSLOs
      parameters:
        - description: >-
            A comma separated list of the IDs of the service level objectives
            objects.
          example: id1, id2, id3
          in: query
          name: ids
          required: false
          schema:
            type: string
        - description: The query string to filter results based on SLO names.
          example: monitor
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: The query string to filter results based on a single SLO tag.
          example: env:prod
          in: query
          name: tags_query
          required: false
          schema:
            type: string
        - description: >-
            The query string to filter results based on SLO numerator and
            denominator.
          example: aws.elb.request_count
          in: query
          name: metrics_query
          required: false
          schema:
            type: string
        - description: The number of SLOs to return in the response.
          in: query
          name: limit
          required: false
          schema:
            default: 1000
            format: int64
            type: integer
        - description: >-
            The specific offset to use as the beginning of the returned
            response.
          in: query
          name: offset
          required: false
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_read
      summary: Get all SLOs
      tags:
        - Service Level Objectives v1
      x-pagination:
        limitParam: limit
        pageOffsetParam: offset
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - slos_read
    post:
      description: Create a service level objective object.
      operationId: CreateSLO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelObjectiveRequest'
        description: Service level objective request object.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_write
      summary: Create an SLO object
      tags:
        - Service Level Objectives v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - slos_write
  /api/v1/slo/bulk_delete:
    post:
      description: >-
        Delete (or partially delete) multiple service level objective objects.


        This endpoint facilitates deletion of one or more thresholds for one or
        more

        service level objective objects. If all thresholds are deleted, the
        service level

        objective object is deleted as well.
      operationId: DeleteSLOTimeframeInBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOBulkDelete'
        description: Delete multiple service level objective objects request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOBulkDeleteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_write
      summary: Bulk Delete SLO Timeframes
      tags:
        - Service Level Objectives v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - slos_write
  /api/v1/slo/can_delete:
    get:
      description: |-
        Check if an SLO can be safely deleted. For example,
        assure an SLO can be deleted without disrupting a dashboard.
      operationId: CheckCanDeleteSLO
      parameters:
        - description: >-
            A comma separated list of the IDs of the service level objectives
            objects.
          example: id1, id2, id3
          in: query
          name: ids
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteSLOResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteSLOResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_read
      summary: Check if SLOs can be safely deleted
      tags:
        - Service Level Objectives v1
      x-permission:
        operator: OR
        permissions:
          - slos_read
  /api/v1/slo/correction:
    get:
      description: Get all Service Level Objective corrections.
      operationId: ListSLOCorrection
      parameters:
        - description: >-
            The specific offset to use as the beginning of the returned
            response.
          in: query
          name: offset
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            The number of SLO corrections to return in the response. Default is
            25.
          in: query
          name: limit
          required: false
          schema:
            default: 25
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_read
      summary: Get all SLO corrections
      tags:
        - Service Level Objective Corrections
      x-pagination:
        limitParam: limit
        pageOffsetParam: offset
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - slos_read
    post:
      description: Create an SLO Correction.
      operationId: CreateSLOCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOCorrectionCreateRequest'
        description: Create an SLO Correction
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: SLO Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_corrections
      summary: Create an SLO correction
      tags:
        - Service Level Objective Corrections
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - slos_corrections
  /api/v1/slo/correction/{slo_correction_id}:
    delete:
      description: Permanently delete the specified SLO correction object.
      operationId: DeleteSLOCorrection
      parameters:
        - description: The ID of the SLO correction object.
          in: path
          name: slo_correction_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Delete an SLO correction
      tags:
        - Service Level Objective Corrections
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an SLO correction.
      operationId: GetSLOCorrection
      parameters:
        - description: The ID of the SLO correction object.
          in: path
          name: slo_correction_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get an SLO correction for an SLO
      tags:
        - Service Level Objective Corrections
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update the specified SLO correction object.
      operationId: UpdateSLOCorrection
      parameters:
        - description: The ID of the SLO correction object.
          in: path
          name: slo_correction_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOCorrectionUpdateRequest'
        description: The edited SLO correction object.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update an SLO correction
      tags:
        - Service Level Objective Corrections
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/slo/search:
    get:
      description: Get a list of service level objective objects for your organization.
      operationId: SearchSLO
      parameters:
        - description: |-
            The query string to filter results based on SLO names.
            Some examples of queries include `service:<service-name>`
            and `<slo-name>`.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: The number of files to return in the response `[default=10]`.
          in: query
          name: page[size]
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            The identifier of the first page to return. This parameter is used
            for the pagination feature `[default=0]`.
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            Whether or not to return facet information in the response
            `[default=false]`.
          in: query
          name: include_facets
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSLOResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_read
      summary: Search for SLOs
      tags:
        - Service Level Objectives v1
      x-permission:
        operator: OR
        permissions:
          - slos_read
  /api/v1/slo/{slo_id}:
    delete:
      description: |-
        Permanently delete the specified service level objective object.

        If an SLO is used in a dashboard, the `DELETE /v1/slo/` endpoint returns
        a 409 conflict error because the SLO is referenced in a dashboard.
      operationId: DeleteSLO
      parameters:
        - description: The ID of the service level objective.
          in: path
          name: slo_id
          required: true
          schema:
            type: string
        - description: >-
            Delete the monitor even if it's referenced by other resources (for
            example SLO, composite monitor).
          in: query
          name: force
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLODeleteResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLODeleteResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_write
      summary: Delete an SLO
      tags:
        - Service Level Objectives v1
      x-permission:
        operator: OR
        permissions:
          - slos_write
    get:
      description: Get a service level objective object.
      operationId: GetSLO
      parameters:
        - description: The ID of the service level objective object.
          in: path
          name: slo_id
          required: true
          schema:
            type: string
        - description: Get the IDs of SLO monitors that reference this SLO.
          example: true
          in: query
          name: with_configured_alert_ids
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_read
      summary: Get an SLO's details
      tags:
        - Service Level Objectives v1
      x-permission:
        operator: OR
        permissions:
          - slos_read
    put:
      description: Update the specified service level objective object.
      operationId: UpdateSLO
      parameters:
        - description: The ID of the service level objective object.
          in: path
          name: slo_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelObjective'
        description: The edited service level objective request object.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_write
      summary: Update an SLO
      tags:
        - Service Level Objectives v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - slos_write
  /api/v1/slo/{slo_id}/corrections:
    get:
      description: Get corrections applied to an SLO
      operationId: GetSLOCorrections
      parameters:
        - description: The ID of the service level objective object.
          in: path
          name: slo_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_read
      summary: Get Corrections For an SLO
      tags:
        - Service Level Objectives v1
      x-permission:
        operator: OR
        permissions:
          - slos_read
  /api/v1/slo/{slo_id}/history:
    get:
      description: >-
        Get a specific SLO’s history, regardless of its SLO type.


        The detailed history data is structured according to the source data
        type.

        For example, metric data is included for event SLOs that use

        the metric source, and monitor SLO types include the monitor transition
        history.


        **Note:** There are different response formats for event based and time
        based SLOs.

        Examples of both are shown.
      operationId: GetSLOHistory
      parameters:
        - description: The ID of the service level objective object.
          in: path
          name: slo_id
          required: true
          schema:
            type: string
        - description: The `from` timestamp for the query window in epoch seconds.
          in: query
          name: from_ts
          required: true
          schema:
            format: int64
            type: integer
        - description: The `to` timestamp for the query window in epoch seconds.
          in: query
          name: to_ts
          required: true
          schema:
            format: int64
            type: integer
        - description: >-
            The SLO target. If `target` is passed in, the response will include
            the remaining error budget and a timeframe value of `custom`.
          in: query
          name: target
          schema:
            exclusiveMaximum: true
            exclusiveMinimum: true
            format: double
            maximum: 100
            minimum: 0
            type: number
        - description: >-
            Defaults to `true`. If any SLO corrections are applied and this
            parameter is set to `false`,

            then the corrections will not be applied and the SLI values will not
            be affected.
          in: query
          name: apply_correction
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOHistoryResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - slos_read
      summary: Get an SLO's history
      tags:
        - Service Level Objectives v1
      x-permission:
        operator: OR
        permissions:
          - slos_read
  /api/v1/synthetics/ci/batch/{batch_id}:
    get:
      description: Get a batch's updated details.
      operationId: GetSyntheticsCIBatch
      parameters:
        - description: The ID of the batch.
          in: path
          name: batch_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBatchDetails'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Batch does not exist.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get details of batch
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
  /api/v1/synthetics/locations:
    get:
      description: |-
        Get the list of public and private locations available for Synthetic
        tests. No arguments required.
      operationId: ListLocations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsLocations'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_private_location_read
      summary: Get all locations (public and private)
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_private_location_read
  /api/v1/synthetics/private-locations:
    post:
      description: Create a new Synthetic private location.
      operationId: CreatePrivateLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsPrivateLocation'
        description: Details of the private location to create.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsPrivateLocationCreationResponse'
          description: OK
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Quota reached for private locations
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Private locations are not activated for the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_private_location_write
      summary: Create a private location
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_private_location_write
  /api/v1/synthetics/private-locations/{location_id}:
    delete:
      description: Delete a Synthetic private location.
      operationId: DeletePrivateLocation
      parameters:
        - description: The ID of the private location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Private locations are not activated for the user
            - Private location does not exist
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_private_location_write
      summary: Delete a private location
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_private_location_write
    get:
      description: Get a Synthetic private location.
      operationId: GetPrivateLocation
      parameters:
        - description: The ID of the private location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsPrivateLocation'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic private locations are not activated for the user
            - Private location does not exist
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_private_location_read
      summary: Get a private location
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_private_location_read
    put:
      description: Edit a Synthetic private location.
      operationId: UpdatePrivateLocation
      parameters:
        - description: The ID of the private location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsPrivateLocation'
        description: Details of the private location to be updated.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsPrivateLocation'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Private locations are not activated for the user
            - Private location does not exist
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_private_location_write
      summary: Edit a private location
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_private_location_write
  /api/v1/synthetics/settings/default_locations:
    get:
      description: Get the default locations settings.
      operationId: GetSyntheticsDefaultLocations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsDefaultLocations'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get the default locations
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_default_settings_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/synthetics/tests:
    get:
      description: Get the list of all Synthetic tests.
      operationId: ListTests
      parameters:
        - description: Used for pagination. The number of tests returned in the page.
          in: query
          name: page_size
          required: false
          schema:
            default: 100
            format: int64
            type: integer
        - description: >-
            Used for pagination. Which page you want to retrieve. Starts at
            zero.
          in: query
          name: page_number
          required: false
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsListTestsResponse'
          description: OK - Returns the list of all Synthetic tests.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Synthetic Monitoring is not activated for the user.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get the list of all Synthetic tests
      tags:
        - Synthetics v1
      x-pagination:
        limitParam: page_size
        pageParam: page_number
        resultsPath: tests
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
  /api/v1/synthetics/tests/api:
    post:
      description: Create a Synthetic API test.
      operationId: CreateSyntheticsAPITest
      requestBody:
        content:
          application/json:
            examples:
              1-simple-api-test:
                description: Example of an API test.
                summary: Create an API test.
                value:
                  config:
                    assertions:
                      - operator: lessThan
                        target: 1000
                        type: responseTime
                      - operator: is
                        target: 200
                        type: statusCode
                      - operator: is
                        property: content-type
                        target: text/html; charset=UTF-8
                        type: header
                    request:
                      method: GET
                      url: https://example.com
                  locations:
                    - azure:eastus
                    - aws:eu-west-3
                  message: MY_NOTIFICATION_MESSAGE
                  name: MY_TEST_NAME
                  options:
                    min_failure_duration: 0
                    min_location_failed: 1
                    monitor_options:
                      include_tags: true
                      locked: false
                      new_host_delay: 300
                      notify_audit: false
                      notify_no_data: false
                      renotify_interval: 0
                    tick_every: 60
                  status: live
                  subtype: http
                  tags:
                    - env:production
                  type: api
              2-multistep-api-test:
                description: >-
                  Example of a multistep API test running on a fake furniture
                  store.

                  It creates a card, select a product and then add the product
                  to the card.
                summary: Create a Multistep API test
                value:
                  config:
                    steps:
                      - assertions:
                          - operator: lessThan
                            target: 30000
                            type: responseTime
                        extractedValues:
                          - field: location
                            name: CART_ID
                            parser:
                              type: regex
                              value: (?:[^\\/](?!(\\|/)))+$
                            type: http_header
                        name: Get a cart
                        request:
                          method: POST
                          timeout: 30
                          url: https://api.shopist.io/carts
                        subtype: http
                      - assertions:
                          - operator: is
                            target: 200
                            type: statusCode
                        extractedValues:
                          - name: PRODUCT_ID
                            parser:
                              type: json_path
                              value: $[0].id['$oid']
                            type: http_body
                        name: Get a product
                        request:
                          method: GET
                          timeout: 30
                          url: https://api.shopist.io/products.json
                        subtype: http
                      - assertions:
                          - operator: is
                            target: 201
                            type: statusCode
                        name: Add product to cart
                        request:
                          body: |-
                            {
                              "cart_item": {
                                "product_id": "{{ PRODUCT_ID }}",
                                "amount_paid": 500,
                                "quantity": 1
                              },
                              "cart_id": "{{ CART_ID }}"
                            }
                          headers:
                            content-type: application/json
                          method: POST
                          timeout: 30
                          url: https://api.shopist.io/add_item.json
                        subtype: http
                  locations:
                    - aws:us-west-2
                  message: MY_NOTIFICATION_MESSAGE
                  name: MY_TEST_NAME
                  options:
                    ci:
                      executionRule: blocking
                    min_failure_duration: 5400
                    min_location_failed: 1
                    monitor_options:
                      renotify_interval: 0
                    retry:
                      count: 3
                      interval: 300
                    tick_every: 900
                  status: live
                  subtype: multi
                  tags:
                    - env:prod
                  type: api
            schema:
              $ref: '#/components/schemas/SyntheticsAPITest'
        description: Details of the test to create.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsAPITest'
          description: OK - Returns the created test details.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - JSON format is wrong
            - Creation failed
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Test quota is reached
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Create an API test
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/api/{public_id}:
    get:
      description: |-
        Get the detailed configuration associated with
        a Synthetic API test.
      operationId: GetAPITest
      parameters:
        - description: The public ID of the test to get details from.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsAPITest'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get an API test
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
    put:
      description: Edit the configuration of a Synthetic API test.
      operationId: UpdateAPITest
      parameters:
        - description: The public ID of the test to get details from.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsAPITest'
        description: New test details to be saved.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsAPITest'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - JSON format is wrong
            - Updating sub-type is forbidden
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
            - Test can't be found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Edit an API test
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/browser:
    post:
      description: Create a Synthetic browser test.
      operationId: CreateSyntheticsBrowserTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsBrowserTest'
        description: Details of the test to create.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBrowserTest'
          description: OK - Returns the created test details.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - JSON format is wrong
            - Creation failed
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Test quota is reached
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Create a browser test
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/browser/{public_id}:
    get:
      description: |-
        Get the detailed configuration (including steps) associated with
        a Synthetic browser test.
      operationId: GetBrowserTest
      parameters:
        - description: The public ID of the test to get details from.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBrowserTest'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get a browser test
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
    put:
      description: Edit the configuration of a Synthetic browser test.
      operationId: UpdateBrowserTest
      parameters:
        - description: The public ID of the test to edit.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsBrowserTest'
        description: New test details to be saved.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBrowserTest'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - JSON format is wrong
            - Updating sub-type is forbidden
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
            - Test can't be found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Edit a browser test
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/browser/{public_id}/results:
    get:
      description: >-
        Get the last 150 test results summaries for a given Synthetic browser
        test.
      operationId: GetBrowserTestLatestResults
      parameters:
        - description: |-
            The public ID of the browser test for which to search results
            for.
          in: path
          name: public_id
          required: true
          schema:
            type: string
        - description: Timestamp in milliseconds from which to start querying results.
          in: query
          name: from_ts
          required: false
          schema:
            format: int64
            type: integer
        - description: Timestamp in milliseconds up to which to query results.
          in: query
          name: to_ts
          required: false
          schema:
            format: int64
            type: integer
        - description: Locations for which to query results.
          in: query
          name: probe_dc
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SyntheticsGetBrowserTestLatestResultsResponse
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get a browser test's latest results summaries
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
  /api/v1/synthetics/tests/browser/{public_id}/results/{result_id}:
    get:
      description: Get a specific full result from a given Synthetic browser test.
      operationId: GetBrowserTestResult
      parameters:
        - description: |-
            The public ID of the browser test to which the target result
            belongs.
          in: path
          name: public_id
          required: true
          schema:
            type: string
        - description: The ID of the result to get.
          in: path
          name: result_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBrowserTestResultFull'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test or result is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get a browser test result
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
  /api/v1/synthetics/tests/delete:
    post:
      description: Delete multiple Synthetic tests by ID.
      operationId: DeleteTests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsDeleteTestsPayload'
        description: Public ID list of the Synthetic tests to be deleted.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsDeleteTestsResponse'
          description: OK.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: >-
            - JSON format is wrong

            - Test cannot be deleted as it's used elsewhere (as a sub-test or in
            an uptime widget)

            - Some IDs are not owned by the user
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Tests to be deleted can't be found
            - Synthetic is not activated for the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Delete tests
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/mobile:
    post:
      description: Create a Synthetic mobile test.
      operationId: CreateSyntheticsMobileTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsMobileTest'
        description: Details of the test to create.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsMobileTest'
          description: OK - Returns the created test details.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - JSON format is wrong
            - Creation failed
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Test quota is reached
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Create a mobile test
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/mobile/{public_id}:
    get:
      description: |-
        Get the detailed configuration associated with
        a Synthetic Mobile test.
      operationId: GetMobileTest
      parameters:
        - description: The public ID of the test to get details from.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsMobileTest'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get a Mobile test
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
    put:
      description: Edit the configuration of a Synthetic Mobile test.
      operationId: UpdateMobileTest
      parameters:
        - description: The public ID of the test to get details from.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsMobileTest'
        description: New test details to be saved.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsMobileTest'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - JSON format is wrong
            - Updating sub-type is forbidden
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
            - Test can't be found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Edit a Mobile test
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/trigger:
    post:
      description: Trigger a set of Synthetic tests.
      operationId: TriggerTests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsTriggerBody'
        description: The identifiers of the tests to trigger.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsTriggerCITestsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Trigger Synthetic tests
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/trigger/ci:
    post:
      description: Trigger a set of Synthetic tests for continuous integration.
      operationId: TriggerCITests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsCITestBody'
        description: Details of the test to trigger.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsTriggerCITestsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: JSON format is wrong
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Trigger tests from CI/CD pipelines
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/uptimes:
    post:
      description: Fetch uptime for multiple Synthetic tests by ID.
      operationId: FetchUptimes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsFetchUptimesPayload'
        description: Public ID list of the Synthetic tests and timeframe.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SyntheticsTestUptime'
                type: array
          description: OK.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: '- JSON format is wrong'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Fetch uptime for multiple tests
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
  /api/v1/synthetics/tests/{public_id}:
    get:
      description: Get the detailed configuration associated with a Synthetic test.
      operationId: GetTest
      parameters:
        - description: The public ID of the test to get details from.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsTestDetails'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic is not activated for the user
            - Test is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get a test configuration
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
    patch:
      description: Patch the configuration of a Synthetic test with partial data.
      operationId: PatchTest
      parameters:
        - description: The public ID of the test to patch.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsPatchTestBody'
        description: '[JSON Patch](https://jsonpatch.com/) compliant list of operations'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsTestDetails'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - JSON format is wrong
            - Updating sub-type is forbidden
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
            - Test can't be found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Patch a Synthetic test
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/tests/{public_id}/results:
    get:
      description: Get the last 150 test results summaries for a given Synthetic API test.
      operationId: GetAPITestLatestResults
      parameters:
        - description: The public ID of the test for which to search results for.
          in: path
          name: public_id
          required: true
          schema:
            type: string
        - description: Timestamp in milliseconds from which to start querying results.
          in: query
          name: from_ts
          required: false
          schema:
            format: int64
            type: integer
        - description: Timestamp in milliseconds up to which to query results.
          in: query
          name: to_ts
          required: false
          schema:
            format: int64
            type: integer
        - description: Locations for which to query results.
          in: query
          name: probe_dc
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGetAPITestLatestResultsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic is not activated for the user
            - Test is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get an API test's latest results summaries
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
  /api/v1/synthetics/tests/{public_id}/results/{result_id}:
    get:
      description: Get a specific full result from a given Synthetic API test.
      operationId: GetAPITestResult
      parameters:
        - description: The public ID of the API test to which the target result belongs.
          in: path
          name: public_id
          required: true
          schema:
            type: string
        - description: The ID of the result to get.
          in: path
          name: result_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsAPITestResultFull'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test or result is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_read
      summary: Get an API test result
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_read
  /api/v1/synthetics/tests/{public_id}/status:
    put:
      description: Pause or start a Synthetic test by changing the status.
      operationId: UpdateTestPauseStatus
      parameters:
        - description: The public ID of the Synthetic test to update.
          in: path
          name: public_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsUpdateTestPauseStatusPayload'
        description: Status to set the given Synthetic test to.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
          description: OK - Returns a boolean indicating if the update was successful.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: JSON format is wrong.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_write
      summary: Pause or start a test
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_write
  /api/v1/synthetics/variables:
    get:
      description: Get the list of all Synthetic global variables.
      operationId: ListGlobalVariables
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsListGlobalVariablesResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_global_variable_read
      summary: Get all global variables
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_global_variable_read
    post:
      description: Create a Synthetic global variable.
      operationId: CreateGlobalVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsGlobalVariableRequest'
        description: Details of the global variable to create.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGlobalVariable'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Invalid request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_global_variable_write
      summary: Create a global variable
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_global_variable_write
  /api/v1/synthetics/variables/{variable_id}:
    delete:
      description: Delete a Synthetic global variable.
      operationId: DeleteGlobalVariable
      parameters:
        - description: The ID of the global variable.
          in: path
          name: variable_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: JSON format is wrong
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_global_variable_write
      summary: Delete a global variable
      tags:
        - Synthetics v1
      x-permission:
        operator: OR
        permissions:
          - synthetics_global_variable_write
    get:
      description: Get the detailed configuration of a global variable.
      operationId: GetGlobalVariable
      parameters:
        - description: The ID of the global variable.
          in: path
          name: variable_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGlobalVariable'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_global_variable_read
      summary: Get a global variable
      tags:
        - Synthetics v1
    put:
      description: Edit a Synthetic global variable.
      operationId: EditGlobalVariable
      parameters:
        - description: The ID of the global variable.
          in: path
          name: variable_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsGlobalVariableRequest'
        description: Details of the global variable to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGlobalVariable'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Invalid request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - synthetics_global_variable_write
      summary: Edit a global variable
      tags:
        - Synthetics v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - synthetics_global_variable_write
  /api/v1/tags/hosts:
    get:
      description: Return a mapping of tags to hosts for your whole infrastructure.
      operationId: ListHostTags
      parameters:
        - description: >-
            When specified, filters host list to those tags with the specified
            source.
          in: query
          name: source
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagToHosts'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth: []
      summary: Get Tags
      tags:
        - Tags
      x-permission:
        operator: OPEN
        permissions: []
  /api/v1/tags/hosts/{host_name}:
    delete:
      description: |-
        This endpoint allows you to remove all user-assigned tags
        for a single host.
      operationId: DeleteHostTags
      parameters:
        - description: >-
            This endpoint allows you to remove all user-assigned tags for a
            single host.
          in: path
          name: host_name
          required: true
          schema:
            type: string
        - description: >-
            The source of the tags (for example chef, puppet).

            [Complete list of source attribute
            values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          in: query
          name: source
          required: false
          schema:
            type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Remove host tags
      tags:
        - Tags
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Return the list of tags that apply to a given host.
      operationId: GetHostTags
      parameters:
        - description: >-
            When specified, filters list of tags to those tags with the
            specified source.
          in: path
          name: host_name
          required: true
          schema:
            type: string
        - description: Source to filter.
          in: query
          name: source
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get host tags
      tags:
        - Tags
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: |-
        This endpoint allows you to add new tags to a host,
        optionally specifying where these tags come from.
      operationId: CreateHostTags
      parameters:
        - description: >-
            This endpoint allows you to add new tags to a host, optionally
            specifying where the tags came from.
          in: path
          name: host_name
          required: true
          schema:
            type: string
        - description: >-
            The source of the tags.

            [Complete list of source attribute
            values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          example: chef
          in: query
          name: source
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostTags'
        description: Update host tags request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: Created
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Add tags to a host
      tags:
        - Tags
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: |-
        This endpoint allows you to update/replace all tags in
        an integration source with those supplied in the request.
      operationId: UpdateHostTags
      parameters:
        - description: >-
            This endpoint allows you to update/replace all in an integration
            source with those supplied in the request.
          in: path
          name: host_name
          required: true
          schema:
            type: string
        - description: >-
            The source of the tags (for example chef, puppet).

            [Complete list of source attribute
            values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)
          in: query
          name: source
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostTags'
        description: Add tags to host
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update host tags
      tags:
        - Tags
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/usage/analyzed_logs:
    get:
      deprecated: true
      description: >-
        Get hourly usage for analyzed logs (Security Monitoring).

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageAnalyzedLogs
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageAnalyzedLogsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for analyzed logs
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/audit_logs:
    get:
      deprecated: true
      description: |-
        Get hourly usage for audit logs.
        **Note:** This endpoint has been deprecated.
      operationId: GetUsageAuditLogs
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageAuditLogsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for audit logs
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/aws_lambda:
    get:
      deprecated: true
      description: >-
        Get hourly usage for Lambda.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageLambda
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLambdaResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for Lambda
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/billable-summary:
    get:
      description: >-
        Get billable usage across your account.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetUsageBillableSummary
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            usage starting this month.
          in: query
          name: month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to `false`. 
          in: query
          name: include_connected_accounts
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageBillableSummaryResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get billable usage across your account
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/ci-app:
    get:
      deprecated: true
      description: >-
        Get hourly usage for CI visibility (tests, pipeline, and spans).

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageCIApp
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCIVisibilityResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for CI visibility
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/cspm:
    get:
      deprecated: true
      description: >-
        Get hourly usage for cloud security management (CSM) pro.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageCloudSecurityPostureManagement
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: >-
                  #/components/schemas/UsageCloudSecurityPostureManagementResponse
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for CSM Pro
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/cws:
    get:
      deprecated: true
      description: >-
        Get hourly usage for cloud workload security.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageCWS
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCWSResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for cloud workload security
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/dbm:
    get:
      deprecated: true
      description: >-
        Get hourly usage for database monitoring

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageDBM
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageDBMResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for database monitoring
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/fargate:
    get:
      deprecated: true
      description: >-
        Get hourly usage for
        [Fargate](https://docs.datadoghq.com/integrations/ecs_fargate/).

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageFargate
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageFargateResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for Fargate
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/hosts:
    get:
      deprecated: true
      description: >-
        Get hourly usage for hosts and containers.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageHosts
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageHostsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for hosts and containers
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/hourly-attribution:
    get:
      description: >-
        Get hourly usage attribution. Multi-region data is available starting
        March 1, 2023.


        This API endpoint is paginated. To make sure you receive all records,
        check if the value of `next_record_id` is

        set in the response. If it is, make another request and pass
        `next_record_id` as a parameter.

        Pseudo code example:


        ```

        response := GetHourlyUsageAttribution(start_month)

        cursor := response.metadata.pagination.next_record_id

        WHILE cursor != null BEGIN
          sleep(5 seconds)  # Avoid running into rate limit
          response := GetHourlyUsageAttribution(start_month, next_record_id=cursor)
          cursor := response.metadata.pagination.next_record_id
        END

        ```
      operationId: GetHourlyUsageAttribution
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
        - description: Usage type to retrieve.
          in: query
          name: usage_type
          required: true
          schema:
            $ref: '#/components/schemas/HourlyUsageAttributionUsageType'
        - description: >-
            List following results with a next_record_id provided in the
            previous query.
          in: query
          name: next_record_id
          required: false
          schema:
            type: string
        - description: >-
            Comma separated list of tags used to group usage. If no value is
            provided the usage will not be broken down by tags.


            To see which tags are available, look for the value of
            `tag_config_source` in the API response.
          in: query
          name: tag_breakdown_keys
          required: false
          schema:
            type: string
        - description: Include child org usage in the response. Defaults to `true`.
          in: query
          name: include_descendants
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/HourlyUsageAttributionResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage attribution
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/incident-management:
    get:
      deprecated: true
      description: >-
        Get hourly usage for incident management.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetIncidentManagement
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIncidentManagementResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for incident management
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/indexed-spans:
    get:
      deprecated: true
      description: >-
        Get hourly usage for indexed spans.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageIndexedSpans
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIndexedSpansResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for indexed spans
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/ingested-spans:
    get:
      deprecated: true
      description: >-
        Get hourly usage for ingested spans.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetIngestedSpans
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIngestedSpansResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for ingested spans
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/iot:
    get:
      deprecated: true
      description: >-
        Get hourly usage for IoT.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageInternetOfThings
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIoTResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for IoT
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/logs:
    get:
      deprecated: true
      description: >-
        Get hourly usage for logs.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageLogs
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for logs
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/logs-by-retention:
    get:
      deprecated: true
      description: >-
        Get hourly usage for indexed logs by retention period.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageLogsByRetention
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsByRetentionResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly logs usage by retention
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/logs_by_index:
    get:
      description: Get hourly usage for logs by index.
      operationId: GetUsageLogsByIndex
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
        - description: Comma-separated list of log index names.
          in: query
          name: index_name
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsByIndexResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for logs by index
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/monthly-attribution:
    get:
      description: >-
        Get monthly usage attribution. Multi-region data is available starting
        March 1, 2023.


        This API endpoint is paginated. To make sure you receive all records,
        check if the value of `next_record_id` is

        set in the response. If it is, make another request and pass
        `next_record_id` as a parameter.

        Pseudo code example:


        ```

        response := GetMonthlyUsageAttribution(start_month)

        cursor := response.metadata.pagination.next_record_id

        WHILE cursor != null BEGIN
          sleep(5 seconds)  # Avoid running into rate limit
          response := GetMonthlyUsageAttribution(start_month, next_record_id=cursor)
          cursor := response.metadata.pagination.next_record_id
        END

        ```
      operationId: GetMonthlyUsageAttribution
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            usage beginning in this month.

            Maximum of 15 months ago.
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            usage ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Comma-separated list of usage types to return, or `*` for all usage
            types.
          in: query
          name: fields
          required: true
          schema:
            $ref: '#/components/schemas/MonthlyUsageAttributionSupportedMetrics'
        - description: 'The direction to sort by: `[desc, asc]`.'
          in: query
          name: sort_direction
          required: false
          schema:
            $ref: '#/components/schemas/UsageSortDirection'
        - description: The field to sort by.
          in: query
          name: sort_name
          required: false
          schema:
            $ref: '#/components/schemas/MonthlyUsageAttributionSupportedMetrics'
        - description: >-
            Comma separated list of tag keys used to group usage. If no value is
            provided the usage will not be broken down by tags.


            To see which tags are available, look for the value of
            `tag_config_source` in the API response.
          in: query
          name: tag_breakdown_keys
          required: false
          schema:
            type: string
        - description: >-
            List following results with a next_record_id provided in the
            previous query.
          in: query
          name: next_record_id
          required: false
          schema:
            type: string
        - description: Include child org usage in the response. Defaults to `true`.
          in: query
          name: include_descendants
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/MonthlyUsageAttributionResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get monthly usage attribution
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/network_flows:
    get:
      deprecated: true
      description: >-
        Get hourly usage for network flows.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageNetworkFlows
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageNetworkFlowsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: get hourly usage for network flows
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/network_hosts:
    get:
      deprecated: true
      description: >-
        Get hourly usage for network hosts.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageNetworkHosts
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageNetworkHostsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for network hosts
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/online-archive:
    get:
      deprecated: true
      description: >-
        Get hourly usage for online archive.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageOnlineArchive
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageOnlineArchiveResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for online archive
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/profiling:
    get:
      deprecated: true
      description: >-
        Get hourly usage for profiled hosts.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageProfiling
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageProfilingResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for profiled hosts
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/rum:
    get:
      deprecated: true
      description: >-
        Get hourly usage for
        [RUM](https://docs.datadoghq.com/real_user_monitoring/) Units.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageRumUnits
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageRumUnitsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for RUM units
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/rum_sessions:
    get:
      deprecated: true
      description: >-
        Get hourly usage for
        [RUM](https://docs.datadoghq.com/real_user_monitoring/) Sessions.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageRumSessions
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
        - description: 'RUM type: `[browser, mobile]`. Defaults to `browser`.'
          in: query
          name: type
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageRumSessionsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for RUM sessions
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/sds:
    get:
      deprecated: true
      description: >-
        Get hourly usage for sensitive data scanner.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageSDS
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSDSResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for sensitive data scanner
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/snmp:
    get:
      deprecated: true
      description: >-
        Get hourly usage for SNMP devices.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageSNMP
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSNMPResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for SNMP devices
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/summary:
    get:
      description: >-
        Get all usage across your account.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetUsageSummary
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            usage beginning in this month.

            Maximum of 15 months ago.
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            usage ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
        - description: Include usage summaries for each sub-org.
          in: query
          name: include_org_details
          required: false
          schema:
            type: boolean
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to `false`. 
          in: query
          name: include_connected_accounts
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSummaryResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get usage across your account
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/synthetics:
    get:
      deprecated: true
      description: >-
        Get hourly usage for [synthetics
        checks](https://docs.datadoghq.com/synthetics/).

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageSynthetics
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for synthetics checks
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/synthetics_api:
    get:
      deprecated: true
      description: >-
        Get hourly usage for [synthetics API
        checks](https://docs.datadoghq.com/synthetics/).

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageSyntheticsAPI
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsAPIResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for synthetics API checks
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/synthetics_browser:
    get:
      deprecated: true
      description: >-
        Get hourly usage for synthetics browser checks.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageSyntheticsBrowser
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsBrowserResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for synthetics browser checks
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/timeseries:
    get:
      deprecated: true
      description: >-
        Get hourly usage for [custom
        metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/).

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to
        V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.
      operationId: GetUsageTimeseries
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageTimeseriesResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get hourly usage for custom metrics
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/usage/top_avg_metrics:
    get:
      description: >-
        Get all [custom
        metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/)
        by hourly average. Use the month parameter to get a month-to-date data
        resolution or use the day parameter to get a daily resolution. One of
        the two is required, and only one of the two is allowed.
      operationId: GetUsageTopAvgMetrics
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for
            usage beginning at this hour. (Either month or day should be
            specified, but not both)
          in: query
          name: month
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD] for
            usage beginning at this hour. (Either month or day should be
            specified, but not both)
          in: query
          name: day
          schema:
            format: date-time
            type: string
        - description: Comma-separated list of metric names.
          in: query
          name: names
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Maximum number of results to return (between 1 and 5000) - defaults
            to 500 results if limit not specified.
          in: query
          name: limit
          required: false
          schema:
            default: 500
            format: int32
            maximum: 5000
            minimum: 1
            type: integer
        - description: >-
            List following results with a next_record_id provided in the
            previous query.
          in: query
          name: next_record_id
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageTopAvgMetricsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - usage_read
      summary: Get all custom metrics by hourly average
      tags:
        - Usage Metering v1
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v1/user:
    get:
      description: List all users for your organization.
      operationId: ListUsers_v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - Auth:
            - user_access_read
      summary: List all users
      tags:
        - Users v1
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    post:
      description: |-
        Create a user for your organization.

        **Note**: Users can only be created with the admin access role
        if application keys belong to administrators.
      operationId: CreateUser_v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Userv1'
        description: User object that needs to be created.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponsev1'
          description: User created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Create a user
      tags:
        - Users v1
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_invite
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/user/{user_handle}:
    delete:
      description: >-
        Delete a user from an organization.


        **Note**: This endpoint can only be used with application keys belonging
        to

        administrators.
      operationId: DisableUser_v1
      parameters:
        - description: The handle of the user.
          in: path
          name: user_handle
          required: true
          schema:
            example: test@datadoghq.com
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDisableResponse'
          description: User disabled
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Disable a user
      tags:
        - Users v1
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a user's details.
      operationId: GetUser_v1
      parameters:
        - description: The ID of the user.
          in: path
          name: user_handle
          required: true
          schema:
            example: test@datadoghq.com
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponsev1'
          description: OK for get user
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Get user details
      tags:
        - Users v1
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        Update a user information.


        **Note**: It can only be used with application keys belonging to
        administrators.
      operationId: UpdateUser_v1
      parameters:
        - description: The ID of the user.
          in: path
          name: user_handle
          required: true
          schema:
            example: test@datadoghq.com
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Userv1'
        description: Description of the update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponsev1'
          description: User updated
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      summary: Update a user
      tags:
        - Users v1
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v1/validate:
    get:
      description: >-
        Check if the API key (not the APP key) is valid. If invalid, a 403 is
        returned.
      operationId: Validate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationValidationResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponsev1'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
      summary: Validate API key
      tags:
        - Authentication
      x-permission:
        operator: OPEN
        permissions: []
  /v1/input:
    post:
      deprecated: true
      description: >-
        Send your logs to your Datadog platform over HTTP. Limits per HTTP
        request are:


        - Maximum content size per payload (uncompressed): 5MB

        - Maximum size for a single log: 1MB

        - Maximum array size if sending multiple logs in an array: 1000 entries


        Any log exceeding 1MB is accepted and truncated by Datadog:

        - For a single log request, the API truncates the log at 1MB and returns
        a 2xx.

        - For a multi-logs request, the API processes all logs, truncates only
        logs larger than 1MB, and returns a 2xx.


        Datadog recommends sending your logs compressed.

        Add the `Content-Encoding: gzip` header to the request when sending
        compressed logs.


        The status codes answered by the HTTP API are:

        - 200: OK

        - 400: Bad request (likely an issue in the payload formatting)

        - 403: Permission issue (likely using an invalid API Key)

        - 413: Payload too large (batch is above 5MB uncompressed)

        - 5xx: Internal error, request should be retried after some time
      operationId: SubmitLog_v1
      parameters:
        - description: HTTP header used to compress the media-type.
          in: header
          name: Content-Encoding
          required: false
          schema:
            $ref: '#/components/schemas/ContentEncodingv1'
        - description: >-
            Log tags can be passed as query parameters with `text/plain` content
            type.
          example: env:prod,user:my-user
          in: query
          name: ddtags
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              multi-json-messages:
                description: Pass multiple log objects at once.
                summary: Multi JSON Messages
                value:
                  - message: hello
                  - message: world
            schema:
              $ref: '#/components/schemas/HTTPLogv1'
          application/json;simple:
            examples:
              simple-json-message:
                description: >-
                  Log attributes can be passed as `key:value` pairs in valid
                  JSON messages.
                summary: Simple JSON Message
                value:
                  ddsource: agent
                  ddtags: env:prod,user:joe.doe
                  hostname: fa1e1e739d95
                  message: hello world
            schema:
              $ref: '#/components/schemas/HTTPLogItemv1'
          application/logplex-1:
            examples:
              multi-raw-message:
                description: Submit log messages.
                summary: Multi Logplex Messages
                value: |-
                  hello
                  world
              simple-logplex-message:
                description: Submit log string.
                summary: Simple Logplex Message
                value: hello world
            schema:
              type: string
          text/plain:
            examples:
              multi-raw-message:
                description: Submit log string.
                summary: Multi Raw Messages
                value: |
                  hello
                  world
              simple-raw-message:
                description: >-
                  Submit log string. Log attributes can be passed as query
                  parameters in the URL. This enables the addition of tags or
                  the source by using the `ddtags` and `ddsource` parameters:
                  `?host=my-hostname&service=my-service&ddsource=my-source&ddtags=env:prod,user:my-user`.
                summary: Simple Raw Message
                value: hello world
            schema:
              type: string
        description: Log to send (JSON format).
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Response from server (always 200 empty JSON).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrorv1'
          description: unexpected error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponsev1'
      security:
        - apiKeyAuth: []
      servers:
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: The regional site for Datadog customers.
              enum:
                - datadoghq.com
                - us3.datadoghq.com
                - us5.datadoghq.com
                - ap1.datadoghq.com
                - datadoghq.eu
                - ddog-gov.com
            subdomain:
              default: http-intake.logs
              description: The subdomain where the API is deployed.
        - url: '{protocol}://{name}'
          variables:
            name:
              default: http-intake.logs.datadoghq.com
              description: Full site DNS name.
            protocol:
              default: https
              description: The protocol for accessing the API.
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: Any Datadog deployment.
            subdomain:
              default: http-intake.logs
              description: The subdomain where the API is deployed.
      summary: Send logs
      tags:
        - Logs v1
      x-codegen-request-body-name: body
  /api/v2/actions/connections:
    post:
      description: Create a new Action Connection
      operationId: CreateActionConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionConnectionRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActionConnectionResponse'
          description: Successfully created Action Connection
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too Many Request
      summary: Create a new Action Connection
      tags:
        - Action Connection
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/actions/connections/{connection_id}:
    delete:
      description: Delete an existing Action Connection
      operationId: DeleteActionConnection
      parameters:
        - $ref: '#/components/parameters/ConnectionId'
      responses:
        '204':
          description: The resource was deleted successfully.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too Many Request
      summary: Delete an existing Action Connection
      tags:
        - Action Connection
      x-permission:
        operator: OR
        permissions:
          - connection_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an existing Action Connection
      operationId: GetActionConnection
      parameters:
        - $ref: '#/components/parameters/ConnectionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActionConnectionResponse'
          description: Successfully get Action Connection
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too Many Request
      summary: Get an existing Action Connection
      tags:
        - Action Connection
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update an existing Action Connection
      operationId: UpdateActionConnection
      parameters:
        - $ref: '#/components/parameters/ConnectionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionConnectionRequest'
        description: Update an existing Action Connection request body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActionConnectionResponse'
          description: Successfully updated Action Connection
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too Many Request
      summary: Update an existing Action Connection
      tags:
        - Action Connection
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/agentless_scanning/accounts/aws:
    get:
      description: Fetches the scan options configured for AWS accounts.
      operationId: ListAwsScanOptions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsScanOptionsListResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get AWS Scan Options
      tags:
        - Agentless Scanning
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Activate Agentless scan options for an AWS account.
      operationId: CreateAwsScanOptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsScanOptionsCreateRequest'
        description: The definition of the new scan options.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsScanOptionsResponse'
          description: Agentless scan options enabled successfully.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Post AWS Scan Options
      tags:
        - Agentless Scanning
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/agentless_scanning/accounts/aws/{account_id}:
    delete:
      description: Delete Agentless scan options for an AWS account.
      operationId: DeleteAwsScanOptions
      parameters:
        - $ref: '#/components/parameters/AwsAccountId'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete AWS Scan Options
      tags:
        - Agentless Scanning
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update the Agentless scan options for an activated account.
      operationId: UpdateAwsScanOptions
      parameters:
        - $ref: '#/components/parameters/AwsAccountId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsScanOptionsUpdateRequest'
        description: New definition of the scan options.
        required: true
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Patch AWS Scan Options
      tags:
        - Agentless Scanning
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/agentless_scanning/ondemand/aws:
    get:
      description: Fetches the most recent 1000 AWS on demand tasks.
      operationId: ListAwsOnDemandTasks
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsOnDemandListResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get AWS On Demand tasks
      tags:
        - Agentless Scanning
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_findings_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Trigger the scan of an AWS resource with a high priority. Agentless
        scanning must be activated for the AWS account containing the resource
        to scan.
      operationId: CreateAwsOnDemandTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsOnDemandCreateRequest'
        description: The definition of the on demand task.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsOnDemandResponse'
          description: AWS on demand task created successfully.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Post an AWS on demand task
      tags:
        - Agentless Scanning
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_findings_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/agentless_scanning/ondemand/aws/{task_id}:
    get:
      description: Fetch the data of a specific on demand task.
      operationId: GetAwsOnDemandTask
      parameters:
        - $ref: '#/components/parameters/OnDemandTaskId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsOnDemandResponse'
          description: OK.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get AWS On Demand task by id
      tags:
        - Agentless Scanning
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_findings_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/api_keys:
    get:
      description: List all API keys available for your account.
      operationId: ListAPIKeys
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/APIKeysSortParameter'
        - $ref: '#/components/parameters/APIKeyFilterParameter'
        - $ref: '#/components/parameters/APIKeyFilterCreatedAtStartParameter'
        - $ref: '#/components/parameters/APIKeyFilterCreatedAtEndParameter'
        - $ref: '#/components/parameters/APIKeyFilterModifiedAtStartParameter'
        - $ref: '#/components/parameters/APIKeyFilterModifiedAtEndParameter'
        - $ref: '#/components/parameters/APIKeyIncludeParameter'
        - $ref: '#/components/parameters/APIKeyReadConfigReadEnabledParameter'
        - $ref: '#/components/parameters/APIKeyCategoryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeysResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all API keys
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - api_keys_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create an API key.
      operationId: CreateAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an API key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - api_keys_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/api_keys/{api_key_id}:
    delete:
      description: Delete an API key.
      operationId: DeleteAPIKey
      parameters:
        - $ref: '#/components/parameters/APIKeyId'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an API key
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - api_keys_delete
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an API key.
      operationId: GetAPIKey
      parameters:
        - $ref: '#/components/parameters/APIKeyId'
        - $ref: '#/components/parameters/APIKeyIncludeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get API key
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - api_keys_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update an API key.
      operationId: UpdateAPIKey
      parameters:
        - $ref: '#/components/parameters/APIKeyId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an API key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - api_keys_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/apicatalog/api:
    get:
      deprecated: true
      description: List APIs and their IDs.
      operationId: ListAPIs
      parameters:
        - description: Filter APIs by name
          in: query
          name: query
          required: false
          schema:
            example: payments
            type: string
        - description: Number of items per page.
          in: query
          name: page[limit]
          required: false
          schema:
            default: 20
            format: int64
            minimum: 1
            type: integer
        - description: Offset for pagination.
          in: query
          name: page[offset]
          required: false
          schema:
            default: 0
            format: int64
            minimum: 0
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAPIsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_api_catalog_read
      summary: List APIs
      tags:
        - API Management
      x-permission:
        operator: OR
        permissions:
          - apm_api_catalog_read
      x-unstable: '**Note**: This endpoint is deprecated.'
  /api/v2/apicatalog/api/{id}:
    delete:
      deprecated: true
      description: Delete a specific API by ID.
      operationId: DeleteOpenAPI
      parameters:
        - description: ID of the API to delete
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApiID'
      responses:
        '204':
          description: API deleted successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: API not found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_api_catalog_write
      summary: Delete an API
      tags:
        - API Management
      x-permission:
        operator: OR
        permissions:
          - apm_api_catalog_write
      x-unstable: '**Note**: This endpoint is deprecated.'
  /api/v2/apicatalog/api/{id}/openapi:
    get:
      deprecated: true
      description: >-
        Retrieve information about a specific API in
        [OpenAPI](https://spec.openapis.org/oas/latest.html) format file.
      operationId: GetOpenAPI
      parameters:
        - description: ID of the API to retrieve
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApiID'
      responses:
        '200':
          content:
            multipart/form-data:
              schema:
                format: binary
                type: string
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: API not found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_api_catalog_read
      summary: Get an API
      tags:
        - API Management
      x-permission:
        operator: OR
        permissions:
          - apm_api_catalog_read
      x-unstable: '**Note**: This endpoint is deprecated.'
    put:
      deprecated: true
      description: >
        Update information about a specific API. The given content will replace
        all API content of the given ID.

        The ID is returned by the create API, or can be found in the URL in the
        API catalog UI.
      operationId: UpdateOpenAPI
      parameters:
        - description: ID of the API to modify
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ApiID'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpenAPIFile'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOpenAPIResponse'
          description: API updated successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: API not found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_api_catalog_write
      summary: Update an API
      tags:
        - API Management
      x-permission:
        operator: OR
        permissions:
          - apm_api_catalog_write
      x-unstable: '**Note**: This endpoint is deprecated.'
  /api/v2/apicatalog/openapi:
    post:
      deprecated: true
      description: >
        Create a new API from the
        [OpenAPI](https://spec.openapis.org/oas/latest.html) specification
        given.

        See the [API Catalog
        documentation](https://docs.datadoghq.com/api_catalog/add_metadata/) for
        additional

        information about the possible metadata.

        It returns the created API ID.
      operationId: CreateOpenAPI
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OpenAPIFile'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOpenAPIResponse'
          description: API created successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_api_catalog_write
      summary: Create a new API
      tags:
        - API Management
      x-permission:
        operator: OR
        permissions:
          - apm_api_catalog_write
      x-unstable: '**Note**: This endpoint is deprecated.'
  /api/v2/apm/config/metrics:
    get:
      description: Get the list of configured span-based metrics with their definitions.
      operationId: ListSpansMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all span-based metrics
      tags:
        - Spans Metrics
      x-permission:
        operator: OR
        permissions:
          - apm_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a metric based on your ingested spans in your organization.

        Returns the span-based metric object from the request body when the
        request is successful.
      operationId: CreateSpansMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpansMetricCreateRequest'
        description: The definition of the new span-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a span-based metric
      tags:
        - Spans Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_generate_metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/apm/config/metrics/{metric_id}:
    delete:
      description: Delete a specific span-based metric from your organization.
      operationId: DeleteSpansMetric
      parameters:
        - $ref: '#/components/parameters/SpansMetricIDParameter'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a span-based metric
      tags:
        - Spans Metrics
      x-permission:
        operator: OR
        permissions:
          - apm_generate_metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a specific span-based metric from your organization.
      operationId: GetSpansMetric
      parameters:
        - $ref: '#/components/parameters/SpansMetricIDParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a span-based metric
      tags:
        - Spans Metrics
      x-permission:
        operator: OR
        permissions:
          - apm_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a specific span-based metric from your organization.

        Returns the span-based metric object from the request body when the
        request is successful.
      operationId: UpdateSpansMetric
      parameters:
        - $ref: '#/components/parameters/SpansMetricIDParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpansMetricUpdateRequest'
        description: New definition of the span-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a span-based metric
      tags:
        - Spans Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_generate_metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/apm/config/retention-filters:
    get:
      description: Get the list of APM retention filters.
      operationId: ListApmRetentionFilters
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFiltersResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all APM retention filters
      tags:
        - APM Retention Filters
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_read
          - apm_pipelines_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a retention filter to index spans in your organization.

        Returns the retention filter definition when the request is successful.


        Default filters with types spans-errors-sampling-processor and
        spans-appsec-sampling-processor cannot be created.
      operationId: CreateApmRetentionFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionFilterCreateRequest'
        description: The definition of the new retention filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterCreateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a retention filter
      tags:
        - APM Retention Filters
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_write
          - apm_pipelines_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/apm/config/retention-filters-execution-order:
    put:
      description: Re-order the execution order of retention filters.
      operationId: ReorderApmRetentionFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderRetentionFiltersRequest'
        description: The list of retention filters in the new order.
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Re-order retention filters
      tags:
        - APM Retention Filters
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_write
          - apm_pipelines_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/apm/config/retention-filters/{filter_id}:
    delete:
      description: >-
        Delete a specific retention filter from your organization.


        Default filters with types spans-errors-sampling-processor and
        spans-appsec-sampling-processor cannot be deleted.
      operationId: DeleteApmRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RetentionFilterIdParam'
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a retention filter
      tags:
        - APM Retention Filters
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_write
          - apm_pipelines_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an APM retention filter.
      operationId: GetApmRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RetentionFilterIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a given APM retention filter
      tags:
        - APM Retention Filters
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_read
          - apm_pipelines_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        Update a retention filter from your organization.


        Default filters (filters with types spans-errors-sampling-processor and
        spans-appsec-sampling-processor) cannot be renamed or removed.
      operationId: UpdateApmRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RetentionFilterIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionFilterUpdateRequest'
        description: The updated definition of the retention filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a retention filter
      tags:
        - APM Retention Filters
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_retention_filter_write
          - apm_pipelines_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/app-builder/apps:
    delete:
      description: Delete multiple apps in a single request from a list of app IDs.
      operationId: DeleteApps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Multiple Apps
      tags:
        - App Builder
      x-permission:
        operator: OR
        permissions:
          - apps_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        List all apps, with optional filters and sorting. This endpoint is
        paginated. Only basic app information such as the app ID, name, and
        description is returned by this endpoint.
      operationId: ListApps
      parameters:
        - description: The number of apps to return per page.
          in: query
          name: limit
          required: false
          schema:
            format: int64
            type: integer
        - description: The page number to return.
          in: query
          name: page
          required: false
          schema:
            format: int64
            type: integer
        - description: Filter apps by the app creator. Usually the user's email.
          in: query
          name: filter[user_name]
          required: false
          schema:
            type: string
        - description: Filter apps by the app creator's UUID.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          in: query
          name: filter[user_uuid]
          required: false
          schema:
            format: uuid
            type: string
        - description: Filter by app name.
          in: query
          name: filter[name]
          required: false
          schema:
            type: string
        - description: Filter apps by the app name or the app creator.
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: Filter apps by whether they are published.
          in: query
          name: filter[deployed]
          required: false
          schema:
            type: boolean
        - description: Filter apps by tags.
          in: query
          name: filter[tags]
          required: false
          schema:
            type: string
        - description: Filter apps by whether you have added them to your favorites.
          in: query
          name: filter[favorite]
          required: false
          schema:
            type: boolean
        - description: Filter apps by whether they are enabled for self-service.
          in: query
          name: filter[self_service]
          required: false
          schema:
            type: boolean
        - description: The fields and direction to sort apps by.
          explode: false
          in: query
          name: sort
          required: false
          schema:
            items:
              $ref: '#/components/schemas/AppsSortField'
            type: array
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Apps
      tags:
        - App Builder
      x-permission:
        operator: OR
        permissions:
          - apps_run
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a new app, returning the app ID.
      operationId: CreateApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create App
      tags:
        - App Builder
      x-permission:
        operator: AND
        permissions:
          - apps_write
          - connections_resolve
          - workflows_run
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/app-builder/apps/{app_id}:
    delete:
      description: Delete a single app.
      operationId: DeleteApp
      parameters:
        - description: The ID of the app to delete.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          in: path
          name: app_id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Gone
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete App
      tags:
        - App Builder
      x-permission:
        operator: OR
        permissions:
          - apps_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get the full definition of an app.
      operationId: GetApp
      parameters:
        - description: The ID of the app to retrieve.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          in: path
          name: app_id
          required: true
          schema:
            format: uuid
            type: string
        - description: >-
            The version number of the app to retrieve. If not specified, the
            latest version is returned. Version numbers start at 1 and increment
            with each update. The special values `latest` and `deployed` can be
            used to retrieve the latest version or the published version,
            respectively.
          in: query
          name: version
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Gone
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get App
      tags:
        - App Builder
      x-permission:
        operator: AND
        permissions:
          - apps_run
          - connections_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update an existing app. This creates a new version of the app.
      operationId: UpdateApp
      parameters:
        - description: The ID of the app to update.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          in: path
          name: app_id
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update App
      tags:
        - App Builder
      x-permission:
        operator: AND
        permissions:
          - apps_write
          - connections_resolve
          - workflows_run
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/app-builder/apps/{app_id}/deployment:
    delete:
      description: >-
        Unpublish an app, removing the live version of the app. Unpublishing
        creates a new instance of a `deployment` object on the app, with a nil
        `app_version_id` (`00000000-0000-0000-0000-000000000000`). The app can
        still be updated and published again in the future.
      operationId: UnpublishApp
      parameters:
        - description: The ID of the app to unpublish.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          in: path
          name: app_id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnpublishAppResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Unpublish App
      tags:
        - App Builder
      x-permission:
        operator: OR
        permissions:
          - apps_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Publish an app for use by other users. To ensure the app is accessible
        to the correct users, you also need to set a [Restriction
        Policy](https://docs.datadoghq.com/api/latest/restriction-policies/) on
        the app if a policy does not yet exist.
      operationId: PublishApp
      parameters:
        - description: The ID of the app to publish.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          in: path
          name: app_id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishAppResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Publish App
      tags:
        - App Builder
      x-permission:
        operator: OR
        permissions:
          - apps_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/application_keys:
    get:
      description: List all application keys available for your org
      operationId: ListApplicationKeys
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/ApplicationKeysSortParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'
        - $ref: '#/components/parameters/ApplicationKeyIncludeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationKeysResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all application keys
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/application_keys/{app_key_id}:
    delete:
      description: Delete an application key
      operationId: DeleteApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an application key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an application key for your org.
      operationId: GetApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
        - $ref: '#/components/parameters/ApplicationKeyIncludeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an application key
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Edit an application key
      operationId: UpdateApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an application key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/audit/events:
    get:
      description: >-
        List endpoint returns events that match a Audit Logs search query.

        [Results are paginated][1].


        Use this endpoint to see your latest Audit Logs events.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      operationId: ListAuditLogs
      parameters:
        - description: Search query following Audit Logs syntax.
          example: '@type:session @application_id:xxxx'
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: Minimum timestamp for requested events.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
        - description: Maximum timestamp for requested events.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
        - description: Order of events in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/AuditLogsSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of events in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a list of Audit Logs events
      tags:
        - Audit
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - audit_logs_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/audit/events/search:
    post:
      description: >-
        List endpoint returns Audit Logs events that match an Audit search
        query.

        [Results are paginated][1].


        Use this endpoint to build complex Audit Logs events filtering and
        search.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      operationId: SearchAuditLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogsSearchEventsRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search Audit Logs events
      tags:
        - Audit
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - audit_logs_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/authn_mappings:
    get:
      description: List all AuthN Mappings in the org.
      operationId: ListAuthNMappings
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: Sort AuthN Mappings depending on the given field.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/AuthNMappingsSort'
        - description: Filter all mappings by the given string.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: >-
            Filter by mapping resource type. Defaults to "role" if not
            specified.
          in: query
          name: resource_type
          schema:
            $ref: '#/components/schemas/AuthNMappingResourceType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthNMappingsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all AuthN Mappings
      tags:
        - AuthN Mappings
      x-permission:
        operator: OPEN
        permissions: []
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create an AuthN Mapping.
      operationId: CreateAuthNMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthNMappingCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthNMappingResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an AuthN Mapping
      tags:
        - AuthN Mappings
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/authn_mappings/{authn_mapping_id}:
    delete:
      description: Delete an AuthN Mapping specified by AuthN Mapping UUID.
      operationId: DeleteAuthNMapping
      parameters:
        - $ref: '#/components/parameters/AuthNMappingID'
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an AuthN Mapping
      tags:
        - AuthN Mappings
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an AuthN Mapping specified by the AuthN Mapping UUID.
      operationId: GetAuthNMapping
      parameters:
        - $ref: '#/components/parameters/AuthNMappingID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthNMappingResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an AuthN Mapping by UUID
      tags:
        - AuthN Mappings
      x-permission:
        operator: OPEN
        permissions: []
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Edit an AuthN Mapping.
      operationId: UpdateAuthNMapping
      parameters:
        - $ref: '#/components/parameters/AuthNMappingID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthNMappingUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthNMappingResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an AuthN Mapping
      tags:
        - AuthN Mappings
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/cases:
    get:
      description: Search cases.
      operationId: SearchCases
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/CaseSortableFieldParameter'
        - description: Search query
          in: query
          name: filter
          required: false
          schema:
            example: status:open (team:case-management OR team:event-management)
            type: string
        - description: Specify if order is ascending or not
          in: query
          name: sort[asc]
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CasesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_read
      summary: Search cases
      tags:
        - Case Management
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
    post:
      description: Create a Case
      operationId: CreateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseCreateRequest'
        description: Case payload
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Create a case
      tags:
        - Case Management
  /api/v2/cases/projects:
    get:
      description: Get all projects.
      operationId: GetProjects
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_read
      summary: Get all projects
      tags:
        - Case Management
    post:
      description: Create a project.
      operationId: CreateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
        description: Project payload
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Create a project
      tags:
        - Case Management
  /api/v2/cases/projects/{project_id}:
    delete:
      description: Remove a project using the project's `id`.
      operationId: DeleteProject
      parameters:
        - $ref: '#/components/parameters/ProjectIDPathParameter'
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Remove a project
      tags:
        - Case Management
    get:
      description: Get the details of a project by `project_id`.
      operationId: GetProject
      parameters:
        - $ref: '#/components/parameters/ProjectIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_read
      summary: Get the details of a project
      tags:
        - Case Management
  /api/v2/cases/{case_id}:
    get:
      description: Get the details of case by `case_id`
      operationId: GetCase
      parameters:
        - $ref: '#/components/parameters/CaseIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_read
      summary: Get the details of a case
      tags:
        - Case Management
  /api/v2/cases/{case_id}/archive:
    post:
      description: Archive case
      operationId: ArchiveCase
      parameters:
        - $ref: '#/components/parameters/CaseIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseEmptyRequest'
        description: Archive case payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Archive case
      tags:
        - Case Management
  /api/v2/cases/{case_id}/assign:
    post:
      description: Assign case to a user
      operationId: AssignCase
      parameters:
        - $ref: '#/components/parameters/CaseIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseAssignRequest'
        description: Assign case payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Assign case
      tags:
        - Case Management
  /api/v2/cases/{case_id}/priority:
    post:
      description: Update case priority
      operationId: UpdatePriority
      parameters:
        - $ref: '#/components/parameters/CaseIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseUpdatePriorityRequest'
        description: Case priority update payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Update case priority
      tags:
        - Case Management
  /api/v2/cases/{case_id}/status:
    post:
      description: Update case status
      operationId: UpdateStatus
      parameters:
        - $ref: '#/components/parameters/CaseIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseUpdateStatusRequest'
        description: Case status update payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Update case status
      tags:
        - Case Management
  /api/v2/cases/{case_id}/unarchive:
    post:
      description: Unarchive case
      operationId: UnarchiveCase
      parameters:
        - $ref: '#/components/parameters/CaseIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseEmptyRequest'
        description: Unarchive case payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Unarchive case
      tags:
        - Case Management
  /api/v2/cases/{case_id}/unassign:
    post:
      description: Unassign case
      operationId: UnassignCase
      parameters:
        - $ref: '#/components/parameters/CaseIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaseEmptyRequest'
        description: Unassign case payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cases_write
      summary: Unassign case
      tags:
        - Case Management
  /api/v2/catalog/entity:
    get:
      description: Get a list of entities from Software Catalog.
      operationId: ListCatalogEntity
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - description: Maximum number of entities in the response.
          example: 100
          in: query
          name: page[limit]
          required: false
          schema:
            default: 100
            format: int64
            type: integer
        - $ref: '#/components/parameters/FilterByID'
        - $ref: '#/components/parameters/FilterByRef'
        - $ref: '#/components/parameters/FilterByName'
        - $ref: '#/components/parameters/FilterByKind'
        - $ref: '#/components/parameters/FilterByOwner'
        - $ref: '#/components/parameters/FilterByRelationType'
        - $ref: '#/components/parameters/FilterByExcludeSnapshot'
        - $ref: '#/components/parameters/Include'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntityCatalogResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_read
      summary: Get a list of entities
      tags:
        - Software Catalog
      x-pagination:
        limitParam: page[limit]
        pageOffsetParam: page[offset]
        resultsPath: data
    post:
      description: Create or update entities in Software Catalog.
      operationId: UpsertCatalogEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertCatalogEntityRequest'
        description: Entity YAML or JSON.
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertCatalogEntityResponse'
          description: ACCEPTED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Create or update entities
      tags:
        - Software Catalog
      x-codegen-request-body-name: body
  /api/v2/catalog/entity/{entity_id}:
    delete:
      description: Delete a single entity in Software Catalog.
      operationId: DeleteCatalogEntity
      parameters:
        - $ref: '#/components/parameters/EntityID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Delete a single entity
      tags:
        - Software Catalog
  /api/v2/ci/pipeline:
    post:
      description: >-
        Send your pipeline event to your Datadog platform over HTTP. For details
        about how pipeline executions are modeled and what execution types we
        support, see [Pipeline Data Model And Execution
        Types](https://docs.datadoghq.com/continuous_integration/guides/pipeline_data_model/).


        Pipeline events can be submitted with a timestamp that is up to 18 hours
        in the past.
      operationId: CreateCIAppPipelineEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CIAppCreatePipelineEventRequest'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                type: object
          description: Request accepted for processing
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPCIAppErrors'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPCIAppErrors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPCIAppErrors'
          description: Forbidden
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPCIAppErrors'
          description: Request Timeout
        '413':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPCIAppErrors'
          description: Payload Too Large
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPCIAppErrors'
          description: Too Many Requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPCIAppErrors'
          description: Internal Server Error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPCIAppErrors'
          description: Service Unavailable
      security:
        - apiKeyAuth: []
      summary: Send pipeline event
      tags:
        - CI Visibility Pipelines
      x-codegen-request-body-name: body
  /api/v2/ci/pipelines/analytics/aggregate:
    post:
      description: >-
        Use this API endpoint to aggregate CI Visibility pipeline events into
        buckets of computed metrics and timeseries.
      operationId: AggregateCIAppPipelineEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CIAppPipelinesAggregateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CIAppPipelinesAnalyticsAggregateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - ci_visibility_read
      summary: Aggregate pipelines events
      tags:
        - CI Visibility Pipelines
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - ci_visibility_read
  /api/v2/ci/pipelines/events:
    get:
      description: >-
        List endpoint returns CI Visibility pipeline events that match a [search
        query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to see your latest pipeline events.
      operationId: ListCIAppPipelineEvents
      parameters:
        - description: Search query following log syntax.
          example: '@ci.provider.name:github @ci.pipeline.name:Pull Request Labeler'
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: Minimum timestamp for requested events.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
        - description: Maximum timestamp for requested events.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
        - description: Order of events in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/CIAppSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of events in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CIAppPipelineEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - ci_visibility_read
      summary: Get a list of pipelines events
      tags:
        - CI Visibility Pipelines
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - ci_visibility_read
  /api/v2/ci/pipelines/events/search:
    post:
      description: >-
        List endpoint returns CI Visibility pipeline events that match a [search
        query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to build complex events filtering and search.
      operationId: SearchCIAppPipelineEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CIAppPipelineEventsRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CIAppPipelineEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - ci_visibility_read
      summary: Search pipelines events
      tags:
        - CI Visibility Pipelines
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - ci_visibility_read
  /api/v2/ci/tests/analytics/aggregate:
    post:
      description: >-
        The API endpoint to aggregate CI Visibility test events into buckets of
        computed metrics and timeseries.
      operationId: AggregateCIAppTestEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CIAppTestsAggregateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CIAppTestsAnalyticsAggregateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - ci_visibility_read
      summary: Aggregate tests events
      tags:
        - CI Visibility Tests
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - ci_visibility_read
  /api/v2/ci/tests/events:
    get:
      description: >-
        List endpoint returns CI Visibility test events that match a [search
        query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to see your latest test events.
      operationId: ListCIAppTestEvents
      parameters:
        - description: Search query following log syntax.
          example: '@test.name:test_foo @test.suite:github.com/DataDog/dd-go/model'
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: Minimum timestamp for requested events.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
        - description: Maximum timestamp for requested events.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
        - description: Order of events in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/CIAppSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of events in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CIAppTestEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - ci_visibility_read
      summary: Get a list of tests events
      tags:
        - CI Visibility Tests
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - ci_visibility_read
  /api/v2/ci/tests/events/search:
    post:
      description: >-
        List endpoint returns CI Visibility test events that match a [search
        query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to build complex events filtering and search.
      operationId: SearchCIAppTestEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CIAppTestEventsRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CIAppTestEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - ci_visibility_read
      summary: Search tests events
      tags:
        - CI Visibility Tests
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - ci_visibility_read
  /api/v2/container_images:
    get:
      description: Get all Container Images for your organization.
      operationId: ListContainerImages
      parameters:
        - description: Comma-separated list of tags to filter Container Images by.
          example: short_image:redis,status:running
          in: query
          name: filter[tags]
          required: false
          schema:
            type: string
        - description: Comma-separated list of tags to group Container Images by.
          example: registry,image_tags
          in: query
          name: group_by
          required: false
          schema:
            type: string
        - description: Attribute to sort Container Images by.
          example: container_count
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Maximum number of results returned.
          in: query
          name: page[size]
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 10000
            minimum: 1
            type: integer
        - description: >-
            String to query the next page of results.

            This key is provided with each valid response from the API in
            `meta.pagination.next_cursor`.
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerImagesResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get all Container Images
      tags:
        - Container Images
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.pagination.next_cursor
        limitParam: page[size]
        resultsPath: data
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/containers:
    get:
      description: Get all containers for your organization.
      operationId: ListContainers
      parameters:
        - description: Comma-separated list of tags to filter containers by.
          example: env:prod,short_image:cassandra
          in: query
          name: filter[tags]
          required: false
          schema:
            type: string
        - description: Comma-separated list of tags to group containers by.
          example: datacenter,cluster
          in: query
          name: group_by
          required: false
          schema:
            type: string
        - description: Attribute to sort containers by.
          example: started_at
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Maximum number of results returned.
          in: query
          name: page[size]
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 10000
            minimum: 1
            type: integer
        - description: >-
            String to query the next page of results.

            This key is provided with each valid response from the API in
            `meta.pagination.next_cursor`.
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainersResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get All Containers
      tags:
        - Containers
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.pagination.next_cursor
        limitParam: page[size]
        resultsPath: data
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/cost/aws_cur_config:
    get:
      description: List the AWS CUR configs.
      operationId: ListCostAWSCURConfigs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsCURConfigsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_read
      summary: List Cloud Cost Management AWS CUR configs
      tags:
        - Cloud Cost Management
      x-permission:
        operator: OR
        permissions:
          - cloud_cost_management_read
    post:
      description: Create a Cloud Cost Management account for an AWS CUR config.
      operationId: CreateCostAWSCURConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsCURConfigPostRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsCURConfigResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_write
      summary: Create Cloud Cost Management AWS CUR config
      tags:
        - Cloud Cost Management
      x-permission:
        operator: OR
        permissions:
          - cloud_cost_management_write
  /api/v2/cost/aws_cur_config/{cloud_account_id}:
    delete:
      description: Archive a Cloud Cost Management Account.
      operationId: DeleteCostAWSCURConfig
      parameters:
        - $ref: '#/components/parameters/CloudAccountID'
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_write
      summary: Delete Cloud Cost Management AWS CUR config
      tags:
        - Cloud Cost Management
      x-permission:
        operator: OR
        permissions:
          - cloud_cost_management_write
    patch:
      description: >-
        Update the status (active/archived) and/or account filtering
        configuration of an AWS CUR config.
      operationId: UpdateCostAWSCURConfig
      parameters:
        - $ref: '#/components/parameters/CloudAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwsCURConfigPatchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwsCURConfigsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_write
      summary: Update Cloud Cost Management AWS CUR config
      tags:
        - Cloud Cost Management
      x-permission:
        operator: OR
        permissions:
          - cloud_cost_management_write
  /api/v2/cost/azure_uc_config:
    get:
      description: List the Azure configs.
      operationId: ListCostAzureUCConfigs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureUCConfigsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_read
      summary: List Cloud Cost Management Azure configs
      tags:
        - Cloud Cost Management
      x-permission:
        operator: OR
        permissions:
          - cloud_cost_management_read
    post:
      description: Create a Cloud Cost Management account for an Azure config.
      operationId: CreateCostAzureUCConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureUCConfigPostRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureUCConfigPairsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_write
      summary: Create Cloud Cost Management Azure configs
      tags:
        - Cloud Cost Management
      x-permission:
        operator: OR
        permissions:
          - cloud_cost_management_write
  /api/v2/cost/azure_uc_config/{cloud_account_id}:
    delete:
      description: Archive a Cloud Cost Management Account.
      operationId: DeleteCostAzureUCConfig
      parameters:
        - $ref: '#/components/parameters/CloudAccountID'
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_write
      summary: Delete Cloud Cost Management Azure config
      tags:
        - Cloud Cost Management
      x-permission:
        operator: OR
        permissions:
          - cloud_cost_management_write
    patch:
      description: Update the status of an  Azure config (active/archived).
      operationId: UpdateCostAzureUCConfigs
      parameters:
        - $ref: '#/components/parameters/CloudAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureUCConfigPatchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureUCConfigPairsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_write
      summary: Update Cloud Cost Management Azure config
      tags:
        - Cloud Cost Management
      x-permission:
        operator: OR
        permissions:
          - cloud_cost_management_write
  /api/v2/cost/custom_costs:
    get:
      description: List the Custom Costs files.
      operationId: ListCustomCostsFiles
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomCostsFileListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_read
      summary: List Custom Costs files
      tags:
        - Cloud Cost Management
    put:
      description: Upload a Custom Costs file.
      operationId: UploadCustomCostsFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomCostsFileUploadRequest'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomCostsFileUploadResponse'
          description: Accepted
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_write
      summary: Upload Custom Costs file
      tags:
        - Cloud Cost Management
  /api/v2/cost/custom_costs/{file_id}:
    delete:
      description: Delete the specified Custom Costs file.
      operationId: DeleteCustomCostsFile
      parameters:
        - $ref: '#/components/parameters/FileID'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_write
      summary: Delete Custom Costs file
      tags:
        - Cloud Cost Management
    get:
      description: Fetch the specified Custom Costs file.
      operationId: GetCustomCostsFile
      parameters:
        - $ref: '#/components/parameters/FileID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomCostsFileGetResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - cloud_cost_management_read
      summary: Get Custom Costs file
      tags:
        - Cloud Cost Management
  /api/v2/cost_by_tag/active_billing_dimensions:
    get:
      description: >-
        Get active billing dimensions for cost attribution. Cost data for a
        given month becomes available no later than the 19th of the following
        month.
      operationId: GetActiveBillingDimensions
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/ActiveBillingDimensionsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get active billing dimensions for cost attribution
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/cost_by_tag/monthly_cost_attribution:
    get:
      description: >-
        Get monthly cost attribution by tag across multi-org and single root-org
        accounts.

        Cost Attribution data for a given month becomes available no later than
        the 19th of the following month.

        This API endpoint is paginated. To make sure you receive all records,
        check if the value of `next_record_id` is

        set in the response. If it is, make another request and pass
        `next_record_id` as a parameter.

        Pseudo code example:

        ```

        response := GetMonthlyCostAttribution(start_month, end_month)

        cursor := response.metadata.pagination.next_record_id

        WHILE cursor != null BEGIN
          sleep(5 seconds)  # Avoid running into rate limit
          response := GetMonthlyCostAttribution(start_month, end_month, next_record_id=cursor)
          cursor := response.metadata.pagination.next_record_id
        END

        ```


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
        This endpoint is not available in the Government (US1-FED) site.
      operationId: GetMonthlyCostAttribution
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost beginning in this month.
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Comma-separated list specifying cost types (e.g.,
            `<billing_dimension>_on_demand_cost`,
            `<billing_dimension>_committed_cost`,
            `<billing_dimension>_total_cost`) and the

            proportions (`<billing_dimension>_percentage_in_org`,
            `<billing_dimension>_percentage_in_account`). Use `*` to retrieve
            all fields.

            Example:
            `infra_host_on_demand_cost,infra_host_percentage_in_account`

            To obtain the complete list of active billing dimensions that can be
            used to replace

            `<billing_dimension>` in the field names, make a request to the [Get
            active billing dimensions
            API](https://docs.datadoghq.com/api/latest/usage-metering/#get-active-billing-dimensions-for-cost-attribution).
          in: query
          name: fields
          required: true
          schema:
            type: string
        - description: 'The direction to sort by: `[desc, asc]`.'
          in: query
          name: sort_direction
          required: false
          schema:
            $ref: '#/components/schemas/SortDirection'
        - description: >-
            The billing dimension to sort by. Always sorted by total cost.
            Example: `infra_host`.
          in: query
          name: sort_name
          required: false
          schema:
            type: string
        - description: >-
            Comma separated list of tag keys used to group cost. If no value is
            provided the cost will not be broken down by tags.

            To see which tags are available, look for the value of
            `tag_config_source` in the API response.
          in: query
          name: tag_breakdown_keys
          required: false
          schema:
            type: string
        - description: >-
            List following results with a next_record_id provided in the
            previous query.
          in: query
          name: next_record_id
          required: false
          schema:
            type: string
        - description: Include child org cost in the response. Defaults to `true`.
          in: query
          name: include_descendants
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/MonthlyCostAttributionResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get Monthly Cost Attribution
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/csm/onboarding/agents:
    get:
      description: Get the list of all CSM Agents running on your hosts and containers.
      operationId: ListAllCSMAgents
      parameters:
        - description: The page index for pagination (zero-based).
          in: query
          name: page
          required: false
          schema:
            example: 2
            format: int32
            maximum: 1000000
            minimum: 0
            type: integer
        - description: The number of items to include in a single page.
          in: query
          name: size
          required: false
          schema:
            example: 12
            format: int32
            maximum: 100
            minimum: 0
            type: integer
        - description: >-
            A search query string to filter results (for example,
            `hostname:COMP-T2H4J27423`).
          in: query
          name: query
          required: false
          schema:
            example: hostname:COMP-T2H4J27423
            type: string
        - description: >-
            The sort direction for results. Use `asc` for ascending or `desc`
            for descending.
          in: query
          name: order_direction
          required: false
          schema:
            $ref: '#/components/schemas/OrderDirection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsmAgentsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all CSM Agents
      tags:
        - CSM Agents
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/csm/onboarding/coverage_analysis/cloud_accounts:
    get:
      description: |-
        Get the CSM Coverage Analysis of your Cloud Accounts.
        This is calculated based on the number of your Cloud Accounts that are
        scanned for security issues.
      operationId: GetCSMCloudAccountsCoverageAnalysis
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsmCloudAccountsCoverageAnalysisResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the CSM Cloud Accounts Coverage Analysis
      tags:
        - CSM Coverage Analysis
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/csm/onboarding/coverage_analysis/hosts_and_containers:
    get:
      description: |-
        Get the CSM Coverage Analysis of your Hosts and Containers.
        This is calculated based on the number of agents running on your Hosts
        and Containers with CSM feature(s) enabled.
      operationId: GetCSMHostsAndContainersCoverageAnalysis
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CsmHostsAndContainersCoverageAnalysisResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the CSM Hosts and Containers Coverage Analysis
      tags:
        - CSM Coverage Analysis
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/csm/onboarding/coverage_analysis/serverless:
    get:
      description: >-
        Get the CSM Coverage Analysis of your Serverless Resources.

        This is calculated based on the number of agents running on your
        Serverless

        Resources with CSM feature(s) enabled.
      operationId: GetCSMServerlessCoverageAnalysis
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsmServerlessCoverageAnalysisResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the CSM Serverless Coverage Analysis
      tags:
        - CSM Coverage Analysis
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/csm/onboarding/serverless/agents:
    get:
      description: >-
        Get the list of all CSM Serverless Agents running on your hosts and
        containers.
      operationId: ListAllCSMServerlessAgents
      parameters:
        - description: The page index for pagination (zero-based).
          in: query
          name: page
          required: false
          schema:
            example: 2
            format: int32
            maximum: 1000000
            minimum: 0
            type: integer
        - description: The number of items to include in a single page.
          in: query
          name: size
          required: false
          schema:
            example: 12
            format: int32
            maximum: 100
            minimum: 0
            type: integer
        - description: >-
            A search query string to filter results (for example,
            `hostname:COMP-T2H4J27423`).
          in: query
          name: query
          required: false
          schema:
            example: hostname:COMP-T2H4J27423
            type: string
        - description: >-
            The sort direction for results. Use `asc` for ascending or `desc`
            for descending.
          in: query
          name: order_direction
          required: false
          schema:
            $ref: '#/components/schemas/OrderDirection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsmAgentsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all CSM Serverless Agents
      tags:
        - CSM Agents
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/current_user/application_keys:
    get:
      description: List all application keys available for current user
      operationId: ListCurrentUserApplicationKeys
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/ApplicationKeysSortParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'
        - $ref: '#/components/parameters/ApplicationKeyIncludeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationKeysResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all application keys owned by current user
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create an application key for current user
      operationId: CreateCurrentUserApplicationKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an application key for current user
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/current_user/application_keys/{app_key_id}:
    delete:
      description: Delete an application key owned by current user
      operationId: DeleteCurrentUserApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an application key owned by current user
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an application key owned by current user
      operationId: GetCurrentUserApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get one application key owned by current user
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Edit an application key owned by current user
      operationId: UpdateCurrentUserApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an application key owned by current user
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/dashboard/lists/manual/{dashboard_list_id}/dashboards:
    delete:
      description: Delete dashboards from an existing dashboard list.
      operationId: DeleteDashboardListItems
      parameters:
        - description: ID of the dashboard list to delete items from.
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListDeleteItemsRequest'
        description: Dashboards to delete from the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListDeleteItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete items from a dashboard list
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Fetch the dashboard list’s dashboard definitions.
      operationId: GetDashboardListItems
      parameters:
        - description: ID of the dashboard list to get items from.
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListItems'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_read
      summary: Get items of a Dashboard List
      tags:
        - Dashboard Lists
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    post:
      description: Add dashboards to an existing dashboard list.
      operationId: CreateDashboardListItems
      parameters:
        - description: ID of the dashboard list to add items to.
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListAddItemsRequest'
        description: Dashboards to add to the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListAddItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Items to a Dashboard List
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Update dashboards of an existing dashboard list.
      operationId: UpdateDashboardListItems
      parameters:
        - description: ID of the dashboard list to update items from.
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListUpdateItemsRequest'
        description: New dashboards of the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListUpdateItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update items of a dashboard list
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/deletion/data/{product}:
    post:
      description: >-
        Creates a data deletion request by providing a query and a timeframe
        targeting the proper data.
      operationId: CreateDataDeletionRequest
      parameters:
        - $ref: '#/components/parameters/ProductName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataDeletionRequestBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataDeletionResponseBody'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '412':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Precondition failed error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Internal server error
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Creates a data deletion request
      tags:
        - Data Deletion
      x-permission:
        operator: OR
        permissions:
          - rum_delete_data
          - logs_delete_data
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/deletion/requests:
    get:
      description: >-
        Gets a list of data deletion requests based on several filter
        parameters.
      operationId: GetDataDeletionRequests
      parameters:
        - description: >-
            The next page of the previous search. If the next_page parameter is
            included, the rest of the query elements are ignored.
          example: cGFnZTI=
          in: query
          name: next_page
          required: false
          schema:
            type: string
        - description: Retrieve only the requests related to the given product.
          example: logs
          in: query
          name: product
          required: false
          schema:
            type: string
        - description: Retrieve only the requests that matches the given query.
          example: service:xyz host:abc
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Retrieve only the requests with the given status.
          example: pending
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Sets the page size of the search.
          example: '50'
          in: query
          name: page_size
          required: false
          schema:
            default: 50
            format: int64
            maximum: 50
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataDeletionsResponseBody'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Internal server error
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Gets a list of data deletion requests
      tags:
        - Data Deletion
      x-permission:
        operator: OR
        permissions:
          - rum_delete_data
          - logs_delete_data
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/deletion/requests/{id}/cancel:
    put:
      description: Cancels a data deletion request by providing its ID.
      operationId: CancelDataDeletionRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDataDeletionResponseBody'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '412':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Precondition failed error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Internal server error
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Cancels a data deletion request
      tags:
        - Data Deletion
      x-permission:
        operator: OR
        permissions:
          - rum_delete_data
          - logs_delete_data
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/domain_allowlist:
    get:
      description: Get the domain allowlist for an organization.
      operationId: GetDomainAllowlist
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAllowlistResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_management
      summary: Get Domain Allowlist
      tags:
        - Domain Allowlist
      x-permission:
        operator: OR
        permissions:
          - org_management
    patch:
      description: Update the domain allowlist for an organization.
      operationId: PatchDomainAllowlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainAllowlistRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAllowlistResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_management
      summary: Sets Domain Allowlist
      tags:
        - Domain Allowlist
      x-permission:
        operator: OR
        permissions:
          - org_management
  /api/v2/dora/deployment:
    post:
      description: >-
        Use this API endpoint to provide data about deployments for DORA
        metrics.


        This is necessary for:

        - Deployment Frequency

        - Change Lead Time

        - Change Failure Rate
      operationId: CreateDORADeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DORADeploymentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DORADeploymentResponse'
          description: OK
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DORADeploymentResponse'
          description: OK - but delayed due to incident
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
      summary: Send a deployment event for DORA Metrics
      tags:
        - DORA Metrics
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/dora/incident:
    post:
      description: |-
        Use this API endpoint to provide data about incidents for DORA metrics.

        This is necessary for:
        - Change Failure Rate
        - Time to Restore
      operationId: CreateDORAIncident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DORAIncidentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DORAIncidentResponse'
          description: OK
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DORAIncidentResponse'
          description: OK - but delayed due to incident
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
      summary: Send an incident event for DORA Metrics
      tags:
        - DORA Metrics
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/downtime:
    get:
      description: Get all scheduled downtimes.
      operationId: ListDowntimes
      parameters:
        - description: Only return downtimes that are active when the request is made.
          in: query
          name: current_only
          required: false
          schema:
            type: boolean
        - description: >-
            Comma-separated list of resource paths for related resources to
            include in the response. Supported resource

            paths are `created_by` and `monitor`.
          in: query
          name: include
          required: false
          schema:
            example: created_by,monitor
            type: string
        - $ref: '#/components/parameters/PageOffset'
        - description: Maximum number of downtimes in the response.
          example: 100
          in: query
          name: page[limit]
          required: false
          schema:
            default: 30
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDowntimesResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_downtime
      summary: Get all downtimes
      tags:
        - Downtimes
      x-pagination:
        limitParam: page[limit]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
    post:
      description: Schedule a downtime.
      operationId: CreateDowntime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DowntimeCreateRequest'
        description: Schedule a downtime request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DowntimeResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_downtime
      summary: Schedule a downtime
      tags:
        - Downtimes
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
  /api/v2/downtime/{downtime_id}:
    delete:
      description: >-
        Cancel a downtime.


        **Note**: Downtimes canceled through the API are no longer active, but
        are retained for approximately two days before being permanently
        removed. The downtime may still appear in search results until it is
        permanently removed.
      operationId: CancelDowntime
      parameters:
        - description: ID of the downtime to cancel.
          in: path
          name: downtime_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtime not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_downtime
      summary: Cancel a downtime
      tags:
        - Downtimes
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
    get:
      description: Get downtime detail by `downtime_id`.
      operationId: GetDowntime
      parameters:
        - description: ID of the downtime to fetch.
          in: path
          name: downtime_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
        - description: >-
            Comma-separated list of resource paths for related resources to
            include in the response. Supported resource

            paths are `created_by` and `monitor`.
          in: query
          name: include
          required: false
          schema:
            example: created_by,monitor
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DowntimeResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_downtime
      summary: Get a downtime
      tags:
        - Downtimes
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
    patch:
      description: Update a downtime by `downtime_id`.
      operationId: UpdateDowntime
      parameters:
        - description: ID of the downtime to update.
          in: path
          name: downtime_id
          required: true
          schema:
            example: 00e000000-0000-1234-0000-000000000000
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DowntimeUpdateRequest'
        description: Update a downtime request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DowntimeResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtime not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_downtime
      summary: Update a downtime
      tags:
        - Downtimes
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
  /api/v2/events:
    get:
      description: >-
        List endpoint returns events that match an events search query.

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to see your latest events.
      operationId: ListEvents
      parameters:
        - description: Search query following events syntax.
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: Minimum timestamp for requested events, in milliseconds.
          in: query
          name: filter[from]
          required: false
          schema:
            type: string
        - description: Maximum timestamp for requested events, in milliseconds.
          in: query
          name: filter[to]
          required: false
          schema:
            type: string
        - description: Order of events in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/EventsSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of events in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - events_read
      summary: Get a list of events
      tags:
        - Events
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - events_read
    post:
      description: >-
        This endpoint allows you to post events.


        ✅ **Only events with the `change` category** are in General
        Availability. See [Change
        Tracking](https://docs.datadoghq.com/change_tracking) for more details.


        ❌ For use cases involving other event categories, please use the V1
        endpoint.
      operationId: CreateEvent
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    attributes:
                      attributes:
                        author:
                          name: datadog@datadog.com
                          type: user
                        change_metadata:
                          dd:
                            team: datadog_team
                            user_email: datadog@datadog.com
                            user_id: datadog_user_id
                            user_name: datadog_username
                          resource_link: datadog.com/feature/fallback_payments_test
                        changed_resource:
                          name: fallback_payments_test
                          type: feature_flag
                        impacted_resources:
                          - name: payments_api
                            type: service
                        new_value:
                          enabled: true
                          percentage: 50%
                          rule:
                            datacenter: devcycle.us1.prod
                        prev_value:
                          enabled: true
                          percentage: 10%
                          rule:
                            datacenter: devcycle.us1.prod
                      category: change
                      message: payment_processed feature flag has been enabled
                      tags:
                        - env:test
                      title: payment_processed feature flag updated
                    type: event
            schema:
              $ref: '#/components/schemas/EventCreateRequestPayload'
        description: Event request object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateResponsePayload'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Post an event
      tags:
        - Events
      x-codegen-request-body-name: body
  /api/v2/events/search:
    post:
      description: >-
        List endpoint returns events that match an events search query.

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to build complex events filtering and search.
      operationId: SearchEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventsListRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search events
      tags:
        - Events
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - events_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/incidents:
    get:
      description: Get all incidents for the user's organization.
      operationId: ListIncidents
      parameters:
        - $ref: '#/components/parameters/IncidentIncludeQueryParameter'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of incidents
      tags:
        - Incidents
      x-pagination:
        limitParam: page[size]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    post:
      description: Create an incident.
      operationId: CreateIncident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentCreateRequest'
        description: Incident payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Create an incident
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/config/types:
    get:
      description: Get all incident types.
      operationId: ListIncidentTypes
      parameters:
        - $ref: '#/components/parameters/IncidentTypeIncludeDeletedParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTypeListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of incident types
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    post:
      description: Create an incident type.
      operationId: CreateIncidentType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTypeCreateRequest'
        description: Incident type payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTypeResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Create an incident type
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/config/types/{incident_type_id}:
    delete:
      description: Delete an incident type.
      operationId: DeleteIncidentType
      parameters:
        - $ref: '#/components/parameters/IncidentTypeIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Delete an incident type
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    get:
      description: Get incident type details.
      operationId: GetIncidentType
      parameters:
        - $ref: '#/components/parameters/IncidentTypeIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTypeResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get incident type details
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    patch:
      description: Update an incident type.
      operationId: UpdateIncidentType
      parameters:
        - $ref: '#/components/parameters/IncidentTypeIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTypePatchRequest'
        description: Incident type payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTypeResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Update an incident type
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/search:
    get:
      description: Search for incidents matching a certain query.
      operationId: SearchIncidents
      parameters:
        - $ref: '#/components/parameters/IncidentSearchIncludeQueryParameter'
        - $ref: '#/components/parameters/IncidentSearchQueryQueryParameter'
        - $ref: '#/components/parameters/IncidentSearchSortQueryParameter'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSearchResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Search for incidents
      tags:
        - Incidents
      x-pagination:
        limitParam: page[size]
        pageOffsetParam: page[offset]
        resultsPath: data.attributes.incidents
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/{incident_id}:
    delete:
      description: Deletes an existing incident from the users organization.
      operationId: DeleteIncident
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Delete an existing incident
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    get:
      description: Get the details of an incident by `incident_id`.
      operationId: GetIncident
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIncludeQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get the details of an incident
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    patch:
      description: >-
        Updates an incident. Provide only the attributes that should be updated
        as this request is a partial update.
      operationId: UpdateIncident
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIncludeQueryParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentUpdateRequest'
        description: Incident Payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Update an existing incident
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/{incident_id}/attachments:
    get:
      description: Get all attachments for a given incident.
      operationId: ListIncidentAttachments
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentAttachmentIncludeQueryParameter'
        - $ref: '#/components/parameters/IncidentAttachmentFilterQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentAttachmentsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a list of attachments
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        The bulk update endpoint for creating, updating, and deleting
        attachments for a given incident.
      operationId: UpdateIncidentAttachments
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentAttachmentIncludeQueryParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentAttachmentUpdateRequest'
        description: Incident Attachment Payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentAttachmentUpdateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create, update, and delete incident attachments
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/incidents/{incident_id}/relationships/integrations:
    get:
      description: Get all integration metadata for an incident.
      operationId: ListIncidentIntegrations
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentIntegrationMetadataListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of an incident's integration metadata
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    post:
      description: Create an incident integration metadata.
      operationId: CreateIncidentIntegration
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentIntegrationMetadataCreateRequest'
        description: Incident integration metadata payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentIntegrationMetadataResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Create an incident integration metadata
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/{incident_id}/relationships/integrations/{integration_metadata_id}:
    delete:
      description: Delete an incident integration metadata.
      operationId: DeleteIncidentIntegration
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIntegrationMetadataIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Delete an incident integration metadata
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    get:
      description: Get incident integration metadata details.
      operationId: GetIncidentIntegration
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIntegrationMetadataIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentIntegrationMetadataResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get incident integration metadata details
      tags:
        - Incidents
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    patch:
      description: Update an existing incident integration metadata.
      operationId: UpdateIncidentIntegration
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIntegrationMetadataIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentIntegrationMetadataPatchRequest'
        description: Incident integration metadata payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentIntegrationMetadataResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Update an existing incident integration metadata
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/{incident_id}/relationships/todos:
    get:
      description: Get all todos for an incident.
      operationId: ListIncidentTodos
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTodoListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of an incident's todos
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    post:
      description: Create an incident todo.
      operationId: CreateIncidentTodo
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTodoCreateRequest'
        description: Incident todo payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTodoResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Create an incident todo
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/{incident_id}/relationships/todos/{todo_id}:
    delete:
      description: Delete an incident todo.
      operationId: DeleteIncidentTodo
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentTodoIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Delete an incident todo
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    get:
      description: Get incident todo details.
      operationId: GetIncidentTodo
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentTodoIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTodoResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get incident todo details
      tags:
        - Incidents
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    patch:
      description: Update an incident todo.
      operationId: UpdateIncidentTodo
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentTodoIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTodoPatchRequest'
        description: Incident todo payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTodoResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Update an incident todo
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_write
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/integration/aws/accounts:
    get:
      description: Get a list of AWS Account Integration Configs.
      operationId: ListAWSAccounts
      parameters:
        - description: >-
            Optional query parameter to filter accounts by AWS Account ID. If
            not provided, all accounts are returned.
          example: '123456789012'
          in: query
          name: aws_account_id
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountsResponse'
          description: AWS Accounts List object
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all AWS integrations
      tags:
        - AWS Integration
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      x-unstable: |-
        **Note: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).**
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a new AWS Account Integration Config.
      operationId: CreateAWSAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountResponse'
          description: AWS Account object
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an AWS integration
      tags:
        - AWS Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configurations_manage
      x-unstable: |-
        **Note: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).**
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/aws/accounts/{aws_account_config_id}:
    delete:
      description: Delete an AWS Account Integration Config by config ID.
      operationId: DeleteAWSAccount
      parameters:
        - $ref: '#/components/parameters/AWSAccountConfigIDPathParameter'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an AWS integration
      tags:
        - AWS Integration
      x-permission:
        operator: OR
        permissions:
          - aws_configurations_manage
      x-unstable: |-
        **Note: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).**
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an AWS Account Integration Config by config ID.
      operationId: GetAWSAccount
      parameters:
        - $ref: '#/components/parameters/AWSAccountConfigIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountResponse'
          description: AWS Account object
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an AWS integration by config ID
      tags:
        - AWS Integration
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      x-unstable: |-
        **Note: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).**
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update an AWS Account Integration Config by config ID.
      operationId: UpdateAWSAccount
      parameters:
        - $ref: '#/components/parameters/AWSAccountConfigIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountResponse'
          description: AWS Account object
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update an AWS integration
      tags:
        - AWS Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      x-unstable: |-
        **Note: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).**
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/aws/available_namespaces:
    get:
      description: >-
        Get a list of available AWS CloudWatch namespaces that can send metrics
        to Datadog.
      operationId: ListAWSNamespaces
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSNamespacesResponse'
          description: AWS Namespaces List object
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List available namespaces
      tags:
        - AWS Integration
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      x-unstable: |-
        **Note: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).**
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/aws/generate_new_external_id:
    post:
      description: Generate a new external ID for AWS role-based authentication.
      operationId: CreateNewAWSExternalID
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSNewExternalIDResponse'
          description: AWS External ID object
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Generate a new external ID
      tags:
        - AWS Integration
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_edit
      x-unstable: |-
        **Note: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).**
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/aws/logs/services:
    get:
      description: Get a list of AWS services that can send logs to Datadog.
      operationId: ListAWSLogsServices
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLogsServicesResponse'
          description: AWS Logs Services List object
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get list of AWS log ready services
      tags:
        - AWS Logs Integration
      x-permission:
        operator: OR
        permissions:
          - aws_configuration_read
      x-unstable: |-
        **Note: This endpoint is in public beta. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).**
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/gcp/accounts:
    get:
      description: >-
        List all GCP STS-enabled service accounts configured in your Datadog
        account.
      operationId: ListGCPSTSAccounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSServiceAccountsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all GCP STS-enabled service accounts
      tags:
        - GCP Integration
      x-permission:
        operator: OR
        permissions:
          - gcp_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a new entry within Datadog for your STS enabled service account.
      operationId: CreateGCPSTSAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPSTSServiceAccountCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSServiceAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a new entry for your service account
      tags:
        - GCP Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - gcp_configurations_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/gcp/accounts/{account_id}:
    delete:
      description: Delete an STS enabled GCP account from within Datadog.
      operationId: DeleteGCPSTSAccount
      parameters:
        - $ref: '#/components/parameters/GCPSTSServiceAccountID'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an STS enabled GCP Account
      tags:
        - GCP Integration
      x-permission:
        operator: OR
        permissions:
          - gcp_configurations_manage
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update an STS enabled service account.
      operationId: UpdateGCPSTSAccount
      parameters:
        - $ref: '#/components/parameters/GCPSTSServiceAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPSTSServiceAccountUpdateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSServiceAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update STS Service Account
      tags:
        - GCP Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - gcp_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/gcp/sts_delegate:
    get:
      description: >-
        List your Datadog-GCP STS delegate account configured in your Datadog
        account.
      operationId: GetGCPSTSDelegate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSDelegateAccountResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List delegate account
      tags:
        - GCP Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - gcp_configuration_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a Datadog GCP principal.
      operationId: MakeGCPSTSDelegate
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              type: object
        description: Create a delegate service account within Datadog.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSDelegateAccountResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a Datadog GCP principal
      tags:
        - GCP Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - gcp_configuration_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/ms-teams/configuration/channel/{tenant_name}/{team_name}/{channel_name}:
    get:
      description: >-
        Get the tenant, team, and channel ID of a channel in the Datadog
        Microsoft Teams integration.
      operationId: GetChannelByName
      parameters:
        - $ref: '#/components/parameters/MicrosoftTeamsTenantNamePathParameter'
        - $ref: '#/components/parameters/MicrosoftTeamsTeamNamePathParameter'
        - $ref: '#/components/parameters/MicrosoftTeamsChannelNamePathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftTeamsGetChannelByNameResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get channel information by name
      tags:
        - Microsoft Teams Integration
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/ms-teams/configuration/tenant-based-handles:
    get:
      description: >-
        Get a list of all tenant-based handles from the Datadog Microsoft Teams
        integration.
      operationId: ListTenantBasedHandles
      parameters:
        - $ref: '#/components/parameters/MicrosoftTeamsTenantIDQueryParameter'
        - $ref: '#/components/parameters/MicrosoftTeamsHandleNameQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandlesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all tenant-based handles
      tags:
        - Microsoft Teams Integration
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a tenant-based handle in the Datadog Microsoft Teams integration.
      operationId: CreateTenantBasedHandle
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/MicrosoftTeamsCreateTenantBasedHandleRequest
        description: Tenant-based handle payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create tenant-based handle
      tags:
        - Microsoft Teams Integration
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/ms-teams/configuration/tenant-based-handles/{handle_id}:
    delete:
      description: >-
        Delete a tenant-based handle from the Datadog Microsoft Teams
        integration.
      operationId: DeleteTenantBasedHandle
      parameters:
        - $ref: >-
            #/components/parameters/MicrosoftTeamsTenantBasedHandleIDPathParameter
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete tenant-based handle
      tags:
        - Microsoft Teams Integration
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        Get the tenant, team, and channel information of a tenant-based handle
        from the Datadog Microsoft Teams integration.
      operationId: GetTenantBasedHandle
      parameters:
        - $ref: >-
            #/components/parameters/MicrosoftTeamsTenantBasedHandleIDPathParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get tenant-based handle information
      tags:
        - Microsoft Teams Integration
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a tenant-based handle from the Datadog Microsoft Teams
        integration.
      operationId: UpdateTenantBasedHandle
      parameters:
        - $ref: >-
            #/components/parameters/MicrosoftTeamsTenantBasedHandleIDPathParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/MicrosoftTeamsUpdateTenantBasedHandleRequest
        description: Tenant-based handle payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update tenant-based handle
      tags:
        - Microsoft Teams Integration
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/ms-teams/configuration/workflows-webhook-handles:
    get:
      description: >-
        Get a list of all Workflows webhook handles from the Datadog Microsoft
        Teams integration.
      operationId: ListWorkflowsWebhookHandles
      parameters:
        - $ref: >-
            #/components/parameters/MicrosoftTeamsWorkflowsWebhookHandleNameQueryParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MicrosoftTeamsWorkflowsWebhookHandlesResponse
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all Workflows webhook handles
      tags:
        - Microsoft Teams Integration
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a Workflows webhook handle in the Datadog Microsoft Teams
        integration.
      operationId: CreateWorkflowsWebhookHandle
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/MicrosoftTeamsCreateWorkflowsWebhookHandleRequest
        description: Workflows Webhook handle payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleResponse
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create Workflows webhook handle
      tags:
        - Microsoft Teams Integration
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/ms-teams/configuration/workflows-webhook-handles/{handle_id}:
    delete:
      description: >-
        Delete a Workflows webhook handle from the Datadog Microsoft Teams
        integration.
      operationId: DeleteWorkflowsWebhookHandle
      parameters:
        - $ref: >-
            #/components/parameters/MicrosoftTeamsWorkflowsWebhookHandleIDPathParameter
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Workflows webhook handle
      tags:
        - Microsoft Teams Integration
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        Get the name of a Workflows webhook handle from the Datadog Microsoft
        Teams integration.
      operationId: GetWorkflowsWebhookHandle
      parameters:
        - $ref: >-
            #/components/parameters/MicrosoftTeamsWorkflowsWebhookHandleIDPathParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleResponse
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Workflows webhook handle information
      tags:
        - Microsoft Teams Integration
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a Workflows webhook handle from the Datadog Microsoft Teams
        integration.
      operationId: UpdateWorkflowsWebhookHandle
      parameters:
        - $ref: >-
            #/components/parameters/MicrosoftTeamsWorkflowsWebhookHandleIDPathParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/MicrosoftTeamsUpdateWorkflowsWebhookHandleRequest
        description: Workflows Webhook handle payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleResponse
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '412':
          $ref: '#/components/responses/PreconditionFailedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Workflows webhook handle
      tags:
        - Microsoft Teams Integration
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/opsgenie/services:
    get:
      description: Get a list of all services from the Datadog Opsgenie integration.
      operationId: ListOpsgenieServices
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsgenieServicesResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all service objects
      tags:
        - Opsgenie Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a new service object in the Opsgenie integration.
      operationId: CreateOpsgenieService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpsgenieServiceCreateRequest'
        description: Opsgenie service payload
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsgenieServiceResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a new service object
      tags:
        - Opsgenie Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integration/opsgenie/services/{integration_service_id}:
    delete:
      description: Delete a single service object in the Datadog Opsgenie integration.
      operationId: DeleteOpsgenieService
      parameters:
        - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a single service object
      tags:
        - Opsgenie Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a single service from the Datadog Opsgenie integration.
      operationId: GetOpsgenieService
      parameters:
        - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsgenieServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a single service object
      tags:
        - Opsgenie Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update a single service object in the Datadog Opsgenie integration.
      operationId: UpdateOpsgenieService
      parameters:
        - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpsgenieServiceUpdateRequest'
        description: Opsgenie service payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsgenieServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a single service object
      tags:
        - Opsgenie Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/cloudflare/accounts:
    get:
      description: List Cloudflare accounts.
      operationId: ListCloudflareAccounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudflareAccountsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Cloudflare accounts
      tags:
        - Cloudflare Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a Cloudflare account.
      operationId: CreateCloudflareAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudflareAccountCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudflareAccountResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Cloudflare account
      tags:
        - Cloudflare Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/cloudflare/accounts/{account_id}:
    delete:
      description: Delete a Cloudflare account.
      operationId: DeleteCloudflareAccount
      parameters:
        - description: None
          in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Cloudflare account
      tags:
        - Cloudflare Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a Cloudflare account.
      operationId: GetCloudflareAccount
      parameters:
        - description: None
          in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudflareAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Cloudflare account
      tags:
        - Cloudflare Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update a Cloudflare account.
      operationId: UpdateCloudflareAccount
      parameters:
        - description: None
          in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudflareAccountUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudflareAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Cloudflare account
      tags:
        - Cloudflare Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/confluent-cloud/accounts:
    get:
      description: List Confluent accounts.
      operationId: ListConfluentAccount
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAccountsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Confluent accounts
      tags:
        - Confluent Cloud
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a Confluent account.
      operationId: CreateConfluentAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentAccountCreateRequest'
        description: Confluent payload
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Confluent account
      tags:
        - Confluent Cloud
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/confluent-cloud/accounts/{account_id}:
    delete:
      description: Delete a Confluent account with the provided account ID.
      operationId: DeleteConfluentAccount
      parameters:
        - $ref: '#/components/parameters/ConfluentAccountID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Confluent account
      tags:
        - Confluent Cloud
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get the Confluent account with the provided account ID.
      operationId: GetConfluentAccount
      parameters:
        - $ref: '#/components/parameters/ConfluentAccountID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Confluent account
      tags:
        - Confluent Cloud
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update the Confluent account with the provided account ID.
      operationId: UpdateConfluentAccount
      parameters:
        - $ref: '#/components/parameters/ConfluentAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentAccountUpdateRequest'
        description: Confluent payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Confluent account
      tags:
        - Confluent Cloud
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/confluent-cloud/accounts/{account_id}/resources:
    get:
      description: >-
        Get a Confluent resource for the account associated with the provided
        ID.
      operationId: ListConfluentResource
      parameters:
        - $ref: '#/components/parameters/ConfluentAccountID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentResourcesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Confluent Account resources
      tags:
        - Confluent Cloud
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a Confluent resource for the account associated with the provided
        ID.
      operationId: CreateConfluentResource
      parameters:
        - $ref: '#/components/parameters/ConfluentAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentResourceRequest'
        description: Confluent payload
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentResourceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add resource to Confluent account
      tags:
        - Confluent Cloud
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/confluent-cloud/accounts/{account_id}/resources/{resource_id}:
    delete:
      description: >-
        Delete a Confluent resource with the provided resource id for the
        account associated with the provided account ID.
      operationId: DeleteConfluentResource
      parameters:
        - $ref: '#/components/parameters/ConfluentAccountID'
        - $ref: '#/components/parameters/ConfluentResourceID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete resource from Confluent account
      tags:
        - Confluent Cloud
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        Get a Confluent resource with the provided resource id for the account
        associated with the provided account ID.
      operationId: GetConfluentResource
      parameters:
        - $ref: '#/components/parameters/ConfluentAccountID'
        - $ref: '#/components/parameters/ConfluentResourceID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentResourceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get resource from Confluent account
      tags:
        - Confluent Cloud
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a Confluent resource with the provided resource id for the
        account associated with the provided account ID.
      operationId: UpdateConfluentResource
      parameters:
        - $ref: '#/components/parameters/ConfluentAccountID'
        - $ref: '#/components/parameters/ConfluentResourceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentResourceRequest'
        description: Confluent payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentResourceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update resource in Confluent account
      tags:
        - Confluent Cloud
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/fastly/accounts:
    get:
      description: List Fastly accounts.
      operationId: ListFastlyAccounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyAccountsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Fastly accounts
      tags:
        - Fastly Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a Fastly account.
      operationId: CreateFastlyAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlyAccountCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyAccountResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Fastly account
      tags:
        - Fastly Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/fastly/accounts/{account_id}:
    delete:
      description: Delete a Fastly account.
      operationId: DeleteFastlyAccount
      parameters:
        - $ref: '#/components/parameters/FastlyAccountID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Fastly account
      tags:
        - Fastly Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a Fastly account.
      operationId: GetFastlyAccount
      parameters:
        - $ref: '#/components/parameters/FastlyAccountID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Fastly account
      tags:
        - Fastly Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update a Fastly account.
      operationId: UpdateFastlyAccount
      parameters:
        - $ref: '#/components/parameters/FastlyAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlyAccountUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Fastly account
      tags:
        - Fastly Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/fastly/accounts/{account_id}/services:
    get:
      description: List Fastly services for an account.
      operationId: ListFastlyServices
      parameters:
        - $ref: '#/components/parameters/FastlyAccountID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyServicesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Fastly services
      tags:
        - Fastly Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a Fastly service for an account.
      operationId: CreateFastlyService
      parameters:
        - $ref: '#/components/parameters/FastlyAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlyServiceRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyServiceResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Fastly service
      tags:
        - Fastly Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/fastly/accounts/{account_id}/services/{service_id}:
    delete:
      description: Delete a Fastly service for an account.
      operationId: DeleteFastlyService
      parameters:
        - $ref: '#/components/parameters/FastlyAccountID'
        - $ref: '#/components/parameters/FastlyServiceID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Fastly service
      tags:
        - Fastly Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a Fastly service for an account.
      operationId: GetFastlyService
      parameters:
        - $ref: '#/components/parameters/FastlyAccountID'
        - $ref: '#/components/parameters/FastlyServiceID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Fastly service
      tags:
        - Fastly Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update a Fastly service for an account.
      operationId: UpdateFastlyService
      parameters:
        - $ref: '#/components/parameters/FastlyAccountID'
        - $ref: '#/components/parameters/FastlyServiceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlyServiceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Fastly service
      tags:
        - Fastly Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/okta/accounts:
    get:
      description: List Okta accounts.
      operationId: ListOktaAccounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OktaAccountsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Okta accounts
      tags:
        - Okta Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create an Okta account.
      operationId: CreateOktaAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OktaAccountRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OktaAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Okta account
      tags:
        - Okta Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/integrations/okta/accounts/{account_id}:
    delete:
      description: Delete an Okta account.
      operationId: DeleteOktaAccount
      parameters:
        - description: None
          in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Okta account
      tags:
        - Okta Integration
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an Okta account.
      operationId: GetOktaAccount
      parameters:
        - description: None
          in: path
          name: account_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OktaAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Okta account
      tags:
        - Okta Integration
      x-permission:
        operator: OR
        permissions:
          - integrations_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update an Okta account.
      operationId: UpdateOktaAccount
      parameters:
        - description: None
          in: path
          name: account_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OktaAccountUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OktaAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Okta account
      tags:
        - Okta Integration
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - manage_integrations
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/ip_allowlist:
    get:
      description: Returns the IP allowlist and its enabled or disabled state.
      operationId: GetIPAllowlist
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_management
      summary: Get IP Allowlist
      tags:
        - IP Allowlist
      x-permission:
        operator: OR
        permissions:
          - org_management
    patch:
      description: Edit the entries in the IP allowlist, and enable or disable it.
      operationId: UpdateIPAllowlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAllowlistUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_management
      summary: Update IP Allowlist
      tags:
        - IP Allowlist
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_management
  /api/v2/logs:
    post:
      description: >-
        Send your logs to your Datadog platform over HTTP. Limits per HTTP
        request are:


        - Maximum content size per payload (uncompressed): 5MB

        - Maximum size for a single log: 1MB

        - Maximum array size if sending multiple logs in an array: 1000 entries


        Any log exceeding 1MB is accepted and truncated by Datadog:

        - For a single log request, the API truncates the log at 1MB and returns
        a 2xx.

        - For a multi-logs request, the API processes all logs, truncates only
        logs larger than 1MB, and returns a 2xx.


        Datadog recommends sending your logs compressed.

        Add the `Content-Encoding: gzip` header to the request when sending
        compressed logs.

        Log events can be submitted with a timestamp that is up to 18 hours in
        the past.


        The status codes answered by the HTTP API are:

        - 202: Accepted: the request has been accepted for processing

        - 400: Bad request (likely an issue in the payload formatting)

        - 401: Unauthorized (likely a missing API Key)

        - 403: Permission issue (likely using an invalid API Key)

        - 408: Request Timeout, request should be retried after some time

        - 413: Payload too large (batch is above 5MB uncompressed)

        - 429: Too Many Requests, request should be retried after some time

        - 500: Internal Server Error, the server encountered an unexpected
        condition that prevented it from fulfilling the request, request should
        be retried after some time

        - 503: Service Unavailable, the server is not ready to handle the
        request probably because it is overloaded, request should be retried
        after some time
      operationId: SubmitLog
      parameters:
        - description: HTTP header used to compress the media-type.
          in: header
          name: Content-Encoding
          required: false
          schema:
            $ref: '#/components/schemas/ContentEncoding'
        - description: >-
            Log tags can be passed as query parameters with `text/plain` content
            type.
          example: env:prod,user:my-user
          in: query
          name: ddtags
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              multi-json-messages:
                description: Pass multiple log objects at once.
                summary: Multi JSON Messages
                value:
                  - ddsource: nginx
                    ddtags: env:staging,version:5.1
                    hostname: i-012345678
                    message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                    service: payment
                  - ddsource: nginx
                    ddtags: env:staging,version:5.1
                    hostname: i-012345679
                    message: 2019-11-19T14:37:58,995 INFO [process.name][20081] World
                    service: payment
              simple-json-message:
                description: >-
                  Log attributes can be passed as `key:value` pairs in valid
                  JSON messages.
                summary: Simple JSON Message
                value:
                  ddsource: nginx
                  ddtags: env:staging,version:5.1
                  hostname: i-012345678
                  message: >-
                    2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                    World
                  service: payment
            schema:
              $ref: '#/components/schemas/HTTPLog'
          application/logplex-1:
            examples:
              multi-raw-message:
                description: Submit log messages.
                summary: Multi Logplex Messages
                value: |-
                  2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                  2019-11-19T14:37:58,995 INFO [process.name][20081] World
              simple-logplex-message:
                description: Submit log string.
                summary: Simple Logplex Message
                value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
            schema:
              type: string
          text/plain:
            examples:
              multi-raw-message:
                description: Submit log string.
                summary: Multi Raw Messages
                value: |
                  2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                  2019-11-19T14:37:58,995 INFO [process.name][20081] World
              simple-raw-message:
                description: >-
                  Submit log string. Log attributes can be passed as query
                  parameters in the URL. This enables the addition of tags or
                  the source by using the `ddtags` and `ddsource` parameters:
                  `?host=my-hostname&service=my-service&ddsource=my-source&ddtags=env:prod,user:my-user`.
                summary: Simple Raw Message
                value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
            schema:
              type: string
        description: Log to send (JSON format).
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                type: object
          description: Request accepted for processing (always 202 empty JSON).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Forbidden
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Request Timeout
        '413':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Payload Too Large
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Too Many Requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Internal Server Error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Service Unavailable
      security:
        - apiKeyAuth: []
      servers:
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: The regional site for customers.
              enum:
                - datadoghq.com
                - us3.datadoghq.com
                - us5.datadoghq.com
                - ap1.datadoghq.com
                - datadoghq.eu
                - ddog-gov.com
            subdomain:
              default: http-intake.logs
              description: The subdomain where the API is deployed.
        - url: '{protocol}://{name}'
          variables:
            name:
              default: http-intake.logs.datadoghq.com
              description: Full site DNS name.
            protocol:
              default: https
              description: The protocol for accessing the API.
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: Any Datadog deployment.
            subdomain:
              default: http-intake.logs
              description: The subdomain where the API is deployed.
      summary: Send logs
      tags:
        - Logs
      x-codegen-request-body-name: body
  /api/v2/logs/analytics/aggregate:
    post:
      description: >-
        The API endpoint to aggregate events into buckets and compute metrics
        and timeseries.
      operationId: AggregateLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsAggregateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAggregateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Aggregate events
      tags:
        - Logs
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/config/archive-order:
    get:
      description: |-
        Get the current order of your archives.
        This endpoint takes no JSON arguments.
      operationId: GetLogsArchiveOrder
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchiveOrder'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get archive order
      tags:
        - Logs Archives
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        Update the order of your archives. Since logs are processed
        sequentially, reordering an archive may change

        the structure and content of the data processed by other archives.


        **Note**: Using the `PUT` method updates your archive's order by
        replacing the current order

        with the new one.
      operationId: UpdateLogsArchiveOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveOrder'
        description: An object containing the new ordered list of archive IDs.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchiveOrder'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update archive order
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/config/archives:
    get:
      description: Get the list of configured logs archives with their definitions.
      operationId: ListLogsArchives
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchives'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all archives
      tags:
        - Logs Archives
      x-permission:
        operator: OR
        permissions:
          - logs_read_archives
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create an archive in your organization.
      operationId: CreateLogsArchive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveCreateRequest'
        description: The definition of the new archive.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/config/archives/{archive_id}:
    delete:
      description: Delete a given archive from your organization.
      operationId: DeleteLogsArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an archive
      tags:
        - Logs Archives
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a specific archive from your organization.
      operationId: GetLogsArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an archive
      tags:
        - Logs Archives
      x-permission:
        operator: OR
        permissions:
          - logs_read_archives
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: >-
        Update a given archive configuration.


        **Note**: Using this method updates your archive configuration by
        **replacing**

        your current configuration with the new one sent to your Datadog
        organization.
      operationId: UpdateLogsArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveCreateRequest'
        description: New definition of the archive.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/config/archives/{archive_id}/readers:
    delete:
      description: >-
        Removes a role from an archive. ([Roles
        API](https://docs.datadoghq.com/api/v2/roles/))
      operationId: RemoveRoleFromArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToRole'
        required: true
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Revoke role from an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Returns all read roles a given archive is restricted to.
      operationId: ListArchiveReadRoles
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List read roles for an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Adds a read role to an archive. ([Roles
        API](https://docs.datadoghq.com/api/v2/roles/))
      operationId: AddReadRoleToArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToRole'
        required: true
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Grant role to an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/config/custom-destinations:
    get:
      description: >-
        Get the list of configured custom destinations in your organization with
        their definitions.
      operationId: ListLogsCustomDestinations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDestinationsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all custom destinations
      tags:
        - Logs Custom Destinations
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a custom destination in your organization.
      operationId: CreateLogsCustomDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDestinationCreateRequest'
        description: The definition of the new custom destination.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDestinationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a custom destination
      tags:
        - Logs Custom Destinations
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_forwarding_rules
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/config/custom-destinations/{custom_destination_id}:
    delete:
      description: Delete a specific custom destination in your organization.
      operationId: DeleteLogsCustomDestination
      parameters:
        - $ref: '#/components/parameters/CustomDestinationId'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a custom destination
      tags:
        - Logs Custom Destinations
      x-permission:
        operator: OR
        permissions:
          - logs_write_forwarding_rules
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a specific custom destination in your organization.
      operationId: GetLogsCustomDestination
      parameters:
        - $ref: '#/components/parameters/CustomDestinationId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDestinationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a custom destination
      tags:
        - Logs Custom Destinations
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update the given fields of a specific custom destination in your
        organization.
      operationId: UpdateLogsCustomDestination
      parameters:
        - $ref: '#/components/parameters/CustomDestinationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDestinationUpdateRequest'
        description: New definition of the custom destination's fields.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDestinationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a custom destination
      tags:
        - Logs Custom Destinations
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_forwarding_rules
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/config/metrics:
    get:
      description: Get the list of configured log-based metrics with their definitions.
      operationId: ListLogsMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all log-based metrics
      tags:
        - Logs Metrics
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a metric based on your ingested logs in your organization.

        Returns the log-based metric object from the request body when the
        request is successful.
      operationId: CreateLogsMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsMetricCreateRequest'
        description: The definition of the new log-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a log-based metric
      tags:
        - Logs Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_generate_metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/config/metrics/{metric_id}:
    delete:
      description: Delete a specific log-based metric from your organization.
      operationId: DeleteLogsMetric
      parameters:
        - $ref: '#/components/parameters/MetricID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a log-based metric
      tags:
        - Logs Metrics
      x-permission:
        operator: OR
        permissions:
          - logs_generate_metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a specific log-based metric from your organization.
      operationId: GetLogsMetric
      parameters:
        - $ref: '#/components/parameters/MetricID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a log-based metric
      tags:
        - Logs Metrics
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a specific log-based metric from your organization.

        Returns the log-based metric object from the request body when the
        request is successful.
      operationId: UpdateLogsMetric
      parameters:
        - $ref: '#/components/parameters/MetricID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsMetricUpdateRequest'
        description: New definition of the log-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a log-based metric
      tags:
        - Logs Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_generate_metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/events:
    get:
      description: >-
        List endpoint returns logs that match a log search query.

        [Results are paginated][1].


        Use this endpoint to search and filter your logs.


        **If you are considering archiving logs for your organization,

        consider use of the Datadog archive capabilities instead of the log list
        API.

        See [Datadog Logs Archive documentation][2].**


        [1]: /logs/guide/collect-multiple-logs-with-pagination

        [2]: https://docs.datadoghq.com/logs/archives
      operationId: ListLogsGet
      parameters:
        - description: Search query following logs syntax.
          example: '@datacenter:us @role:db'
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: |-
            For customers with multiple indexes, the indexes to search.
            Defaults to '*' which means all indexes
          example:
            - main
            - web
          explode: false
          in: query
          name: filter[indexes]
          required: false
          schema:
            items:
              description: The name of a log index.
              type: string
            type: array
        - description: Minimum timestamp for requested logs.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
        - description: Maximum timestamp for requested logs.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
        - description: Specifies the storage type to be used
          example: indexes
          in: query
          name: filter[storage_tier]
          required: false
          schema:
            $ref: '#/components/schemas/LogsStorageTier'
        - description: Order of logs in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/LogsSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of logs in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search logs (GET)
      tags:
        - Logs
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/logs/events/search:
    post:
      description: >-
        List endpoint returns logs that match a log search query.

        [Results are paginated][1].


        Use this endpoint to search and filter your logs.


        **If you are considering archiving logs for your organization,

        consider use of the Datadog archive capabilities instead of the log list
        API.

        See [Datadog Logs Archive documentation][2].**


        [1]: /logs/guide/collect-multiple-logs-with-pagination

        [2]: https://docs.datadoghq.com/logs/archives
      operationId: ListLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsListRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search logs (POST)
      tags:
        - Logs
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/metrics:
    get:
      description: >-
        Returns all metrics that can be configured in the Metrics Summary page
        or with Metrics without Limits™ (matching additional filters if
        specified).

        Optionally, paginate by using the `page[cursor]` and/or `page[size]`
        query parameters.

        To fetch the first page, pass in a query parameter with either a valid
        `page[size]` or an empty cursor like `page[cursor]=`. To fetch the next
        page, pass in the `next_cursor` value from the response as the new
        `page[cursor]` value.

        Once the `meta.pagination.next_cursor` value is null, all pages have
        been retrieved.
      operationId: ListTagConfigurations
      parameters:
        - description: Filter custom metrics that have configured tags.
          example: true
          in: query
          name: filter[configured]
          required: false
          schema:
            type: boolean
        - description: Filter tag configurations by configured tags.
          example: app
          in: query
          name: filter[tags_configured]
          required: false
          schema:
            description: Tag keys to filter by.
            type: string
        - description: Filter metrics by metric type.
          in: query
          name: filter[metric_type]
          required: false
          schema:
            $ref: '#/components/schemas/MetricTagConfigurationMetricTypeCategory'
        - description: |-
            Filter distributions with additional percentile
            aggregations enabled or disabled.
          example: true
          in: query
          name: filter[include_percentiles]
          required: false
          schema:
            type: boolean
        - description: >-
            (Preview) Filter custom metrics that have or have not been queried
            in the specified window[seconds].

            If no window is provided or the window is less than 2 hours, a
            default of 2 hours will be applied.
          example: true
          in: query
          name: filter[queried]
          required: false
          schema:
            type: boolean
        - description: >-
            Filter metrics that have been submitted with the given tags.
            Supports boolean and wildcard expressions.

            Can only be combined with the filter[queried] filter.
          example: env IN (staging,test) AND service:web
          in: query
          name: filter[tags]
          required: false
          schema:
            type: string
        - description: >-
            (Preview) Filter metrics that are used in dashboards, monitors,
            notebooks, SLOs.
          example: true
          in: query
          name: filter[related_assets]
          required: false
          schema:
            type: boolean
        - description: >-
            The number of seconds of look back (from now) to apply to a
            filter[tag] or filter[queried] query.

            Default value is 3600 (1 hour), maximum value is 2,592,000 (30
            days).
          example: 3600
          in: query
          name: window[seconds]
          required: false
          schema:
            format: int64
            type: integer
        - description: Maximum number of results returned.
          in: query
          name: page[size]
          required: false
          schema:
            default: 10000
            format: int32
            maximum: 10000
            minimum: 1
            type: integer
        - description: >-
            String to query the next page of results.

            This key is provided with each valid response from the API in
            `meta.pagination.next_cursor`.

            Once the `meta.pagination.next_cursor` key is null, all pages have
            been retrieved.
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsAndMetricTagConfigurationsResponse'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - metrics_read
      summary: Get a list of metrics
      tags:
        - Metrics
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.pagination.next_cursor
        limitParam: page[size]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - metrics_read
  /api/v2/metrics/config/bulk-tags:
    delete:
      description: >-
        Delete all custom lists of queryable tag keys for a set of existing
        count, gauge, rate, and distribution metrics.

        Metrics are selected by passing a metric name prefix.

        Results can be sent to a set of account email addresses, just like the
        same operation in the Datadog web app.

        Can only be used with application keys of users with the `Manage Tags
        for Metrics` permission.
      operationId: DeleteBulkTagsMetricsConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricBulkTagConfigDeleteRequest'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricBulkTagConfigResponse'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Delete tags for multiple metrics
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - metric_tags_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create and define a list of queryable tag keys for a set of existing
        count, gauge, rate, and distribution metrics.

        Metrics are selected by passing a metric name prefix. Use the Delete
        method of this API path to remove tag configurations.

        Results can be sent to a set of account email addresses, just like the
        same operation in the Datadog web app.

        If multiple calls include the same metric, the last configuration
        applied (not by submit order) is used, do not

        expect deterministic ordering of concurrent calls. The
        `exclude_tags_mode` value will set all metrics that match the prefix to

        the same exclusion state, metric tag configurations do not support mixed
        inclusion and exclusion for tags on the same metric.

        Can only be used with application keys of users with the `Manage Tags
        for Metrics` permission.
      operationId: CreateBulkTagsMetricsConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricBulkTagConfigCreateRequest'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricBulkTagConfigResponse'
          description: Accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Configure tags for multiple metrics
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - metric_tags_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/metrics/{metric_name}/active-configurations:
    get:
      description: >-
        List tags and aggregations that are actively queried on dashboards,
        notebooks, monitors, the Metrics Explorer, and using the API for a given
        metric name.
      operationId: ListActiveMetricConfigurations
      parameters:
        - $ref: '#/components/parameters/MetricName'
        - description: >-
            The number of seconds of look back (from now).

            Default value is 604,800 (1 week), minimum value is 7200 (2 hours),
            maximum value is 2,630,000 (1 month).
          example: 7200
          in: query
          name: window[seconds]
          required: false
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MetricSuggestedTagsAndAggregationsResponse
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: List active tags and aggregations
      tags:
        - Metrics
      x-permission:
        operator: OR
        permissions:
          - metrics_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/metrics/{metric_name}/all-tags:
    get:
      description: >-
        View indexed tag key-value pairs for a given metric name over the
        previous hour.
      operationId: ListTagsByMetricName
      parameters:
        - $ref: '#/components/parameters/MetricName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAllTagsResponse'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - metrics_read
      summary: List tags by metric name
      tags:
        - Metrics
      x-permission:
        operator: OR
        permissions:
          - metrics_read
  /api/v2/metrics/{metric_name}/assets:
    get:
      description: >-
        Returns dashboards, monitors, notebooks, and SLOs that a metric is
        stored in, if any.  Updated every 24 hours.
      operationId: ListMetricAssets
      parameters:
        - $ref: '#/components/parameters/MetricName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAssetsResponse'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Related Assets to a Metric
      tags:
        - Metrics
  /api/v2/metrics/{metric_name}/estimate:
    get:
      description: >-
        Returns the estimated cardinality for a metric with a given tag,
        percentile and number of aggregations configuration using Metrics
        without Limits&trade;.
      operationId: EstimateMetricsOutputSeries
      parameters:
        - $ref: '#/components/parameters/MetricName'
        - description: Filtered tag keys that the metric is configured to query with.
          example: app,host
          in: query
          name: filter[groups]
          required: false
          schema:
            type: string
        - description: >-
            The number of hours of look back (from now) to estimate cardinality
            with. If unspecified, it defaults to 0 hours.
          example: 49
          in: query
          name: filter[hours_ago]
          required: false
          schema:
            format: int32
            maximum: 2147483647
            minimum: 49
            type: integer
        - description: >-
            The number of aggregations that a `count`, `rate`, or `gauge` metric
            is configured to use. Max number of aggregation combos is 9.
          example: 1
          in: query
          name: filter[num_aggregations]
          required: false
          schema:
            format: int32
            maximum: 9
            type: integer
        - description: >-
            A boolean, for distribution metrics only, to estimate cardinality if
            the metric includes additional percentile aggregators.
          example: true
          in: query
          name: filter[pct]
          required: false
          schema:
            type: boolean
        - description: >-
            A window, in hours, from the look back to estimate cardinality with.
            The minimum and default is 1 hour.
          example: 6
          in: query
          name: filter[timespan_h]
          required: false
          schema:
            format: int32
            maximum: 2147483647
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricEstimateResponse'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Tag Configuration Cardinality Estimator
      tags:
        - Metrics
      x-permission:
        operator: OPEN
        permissions: []
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/metrics/{metric_name}/tags:
    delete:
      description: |-
        Deletes a metric's tag configuration. Can only be used with application
        keys from users with the `Manage Tags for Metrics` permission.
      operationId: DeleteTagConfiguration
      parameters:
        - $ref: '#/components/parameters/MetricName'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Delete a tag configuration
      tags:
        - Metrics
      x-permission:
        operator: OR
        permissions:
          - metric_tags_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Returns the tag configuration for the given metric name.
      operationId: ListTagConfigurationByName
      parameters:
        - $ref: '#/components/parameters/MetricName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricTagConfigurationResponse'
          description: Success
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - metrics_read
      summary: List tag configuration by name
      tags:
        - Metrics
      x-permission:
        operator: OR
        permissions:
          - metrics_read
    patch:
      description: >-
        Update the tag configuration of a metric or percentile aggregations of a
        distribution metric or custom aggregations

        of a count, rate, or gauge metric. By setting `exclude_tags_mode` to
        true the behavior is changed

        from an allow-list to a deny-list, and tags in the defined list will not
        be queryable.

        Can only be used with application keys from users with the `Manage Tags
        for Metrics` permission. This endpoint requires

        a tag configuration to be created first.
      operationId: UpdateTagConfiguration
      parameters:
        - $ref: '#/components/parameters/MetricName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricTagConfigurationUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricTagConfigurationResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Update a tag configuration
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - metric_tags_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create and define a list of queryable tag keys for an existing
        count/gauge/rate/distribution metric.

        Optionally, include percentile aggregations on any distribution metric
        or configure custom aggregations

        on any count, rate, or gauge metric. By setting `exclude_tags_mode` to
        true the behavior is changed

        from an allow-list to a deny-list, and tags in the defined list will not
        be queryable.

        Can only be used with application keys of users with the `Manage Tags
        for Metrics` permission.
      operationId: CreateTagConfiguration
      parameters:
        - $ref: '#/components/parameters/MetricName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricTagConfigurationCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricTagConfigurationResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Create a tag configuration
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - metric_tags_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/metrics/{metric_name}/volumes:
    get:
      description: >-
        View distinct metrics volumes for the given metric name.


        Custom metrics generated in-app from other products will return `null`
        for ingested volumes.
      operationId: ListVolumesByMetricName
      parameters:
        - $ref: '#/components/parameters/MetricName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricVolumesResponse'
          description: Success
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: List distinct metric volumes by metric name
      tags:
        - Metrics
      x-permission:
        operator: OPEN
        permissions: []
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/monitor/notification_rule:
    get:
      description: Returns a list of all monitor notification rules.
      operationId: GetMonitorNotificationRules
      parameters:
        - description: >-
            Comma-separated list of resource paths for related resources to
            include in the response. Supported resource

            path is `created_by`.
          in: query
          name: include
          required: false
          schema:
            example: created_by
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorNotificationRuleListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get all monitor notification rules
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Creates a monitor notification rule.
      operationId: CreateMonitorNotificationRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorNotificationRuleCreateRequest'
        description: Request body to create a monitor notification rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorNotificationRuleResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitor_config_policy_write
      summary: Create a monitor notification rule
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/monitor/notification_rule/{rule_id}:
    delete:
      description: Deletes a monitor notification rule by `rule_id`.
      operationId: DeleteMonitorNotificationRule
      parameters:
        - description: ID of the monitor notification rule to delete.
          in: path
          name: rule_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitor_config_policy_write
      summary: Delete a monitor notification rule
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: Returns a monitor notification rule by `rule_id`.
      operationId: GetMonitorNotificationRule
      parameters:
        - description: ID of the monitor notification rule to fetch.
          in: path
          name: rule_id
          required: true
          schema:
            type: string
        - description: >-
            Comma-separated list of resource paths for related resources to
            include in the response. Supported resource

            path is `created_by`.
          in: query
          name: include
          required: false
          schema:
            example: created_by
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorNotificationRuleResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get a monitor notification rule
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Updates a monitor notification rule by `rule_id`.
      operationId: UpdateMonitorNotificationRule
      parameters:
        - description: ID of the monitor notification rule to update.
          in: path
          name: rule_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorNotificationRuleUpdateRequest'
        description: Request body to update the monitor notification rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorNotificationRuleResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitor_config_policy_write
      summary: Update a monitor notification rule
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/monitor/policy:
    get:
      description: Get all monitor configuration policies.
      operationId: ListMonitorConfigPolicies
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorConfigPolicyListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get all monitor configuration policies
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    post:
      description: Create a monitor configuration policy.
      operationId: CreateMonitorConfigPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorConfigPolicyCreateRequest'
        description: Create a monitor configuration policy request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorConfigPolicyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a monitor configuration policy
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/monitor/policy/{policy_id}:
    delete:
      description: Delete a monitor configuration policy.
      operationId: DeleteMonitorConfigPolicy
      parameters:
        - description: ID of the monitor configuration policy.
          in: path
          name: policy_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a monitor configuration policy
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a monitor configuration policy by `policy_id`.
      operationId: GetMonitorConfigPolicy
      parameters:
        - description: ID of the monitor configuration policy.
          in: path
          name: policy_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorConfigPolicyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get a monitor configuration policy
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    patch:
      description: Edit a monitor configuration policy.
      operationId: UpdateMonitorConfigPolicy
      parameters:
        - description: ID of the monitor configuration policy.
          in: path
          name: policy_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorConfigPolicyEditRequest'
        description: Description of the update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorConfigPolicyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit a monitor configuration policy
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/monitor/{monitor_id}/downtime_matches:
    get:
      description: Get all active downtimes for the specified monitor.
      operationId: ListMonitorDowntimes
      parameters:
        - description: The id of the monitor.
          in: path
          name: monitor_id
          required: true
          schema:
            format: int64
            type: integer
        - $ref: '#/components/parameters/PageOffset'
        - description: Maximum number of downtimes in the response.
          example: 100
          in: query
          name: page[limit]
          required: false
          schema:
            default: 30
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorDowntimeMatchResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Monitor Not Found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_downtime
      summary: Get active downtimes for a monitor
      tags:
        - Downtimes
      x-codegen-request-body-name: body
      x-pagination:
        limitParam: page[limit]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
  /api/v2/ndm/devices:
    get:
      description: Get the list of devices.
      operationId: ListDevices
      parameters:
        - description: The page number to fetch.
          example: 0
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            type: integer
        - description: The number of devices to return per page.
          example: 10
          in: query
          name: page[size]
          required: false
          schema:
            format: int64
            type: integer
        - description: The field to sort the devices by.
          example: status
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Filter devices by tag.
          example: status:ok
          in: query
          name: filter[tag]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the list of devices
      tags:
        - Network Device Monitoring
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/ndm/devices/{device_id}:
    get:
      description: Get the device details.
      operationId: GetDevice
      parameters:
        - description: The id of the device to fetch.
          example: example:1.2.3.4
          in: path
          name: device_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the device details
      tags:
        - Network Device Monitoring
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/ndm/interfaces:
    get:
      description: Get the list of interfaces of the device.
      operationId: GetInterfaces
      parameters:
        - description: The ID of the device to get interfaces from.
          example: example:1.2.3.4
          in: query
          name: device_id
          required: true
          schema:
            type: string
        - description: Whether to get the IP addresses of the interfaces.
          example: true
          in: query
          name: get_ip_addresses
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInterfacesResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the list of interfaces of the device
      tags:
        - Network Device Monitoring
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/ndm/tags/devices/{device_id}:
    get:
      description: Get the list of tags for a device.
      operationId: ListDeviceUserTags
      parameters:
        - description: The id of the device to fetch tags for.
          example: example:1.2.3.4
          in: path
          name: device_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the list of tags for a device
      tags:
        - Network Device Monitoring
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update the tags for a device.
      operationId: UpdateDeviceUserTags
      parameters:
        - description: The id of the device to update tags for.
          example: example:1.2.3.4
          in: path
          name: device_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsResponse'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update the tags for a device
      tags:
        - Network Device Monitoring
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/network/connections/aggregate:
    get:
      description: Get all aggregated connections.
      operationId: GetAggregatedConnections
      parameters:
        - description: >-
            Unix timestamp (number of seconds since epoch) of the start of the
            query window. If not provided, the start of the query window is 15
            minutes before the `to` timestamp. If neither `from` nor `to` are
            provided, the query window is `[now - 15m, now]`.
          in: query
          name: from
          schema:
            format: int64
            type: integer
        - description: >-
            Unix timestamp (number of seconds since epoch) of the end of the
            query window. If not provided, the end of the query window is the
            current time. If neither `from` nor `to` are provided, the query
            window is `[now - 15m, now]`.
          in: query
          name: to
          schema:
            format: int64
            type: integer
        - description: Comma-separated list of fields to group connections by.
          in: query
          name: group_by
          schema:
            type: string
        - description: Comma-separated list of tags to filter connections by.
          in: query
          name: tags
          schema:
            type: string
        - description: The number of connections to be returned. The maximum value is 5000.
          in: query
          name: limit
          schema:
            default: 100
            format: int32
            maximum: 5000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleAggregatedConnectionResponseArray'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all aggregated connections
      tags:
        - Cloud Network Monitoring
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/on-call/escalation-policies:
    post:
      description: Create a new on-call escalation policy
      operationId: CreateOnCallEscalationPolicy
      parameters:
        - description: >-
            Comma-separated list of included relationships to be returned.
            Allowed values: `teams`, `steps`, `steps.targets`.
          in: query
          name: include
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EscalationPolicyCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EscalationPolicy'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Create on-call escalation policy
      tags:
        - On-Call
  /api/v2/on-call/escalation-policies/{policy_id}:
    delete:
      description: Delete an on-call escalation policy
      operationId: DeleteOnCallEscalationPolicy
      parameters:
        - description: The ID of the escalation policy
          in: path
          name: policy_id
          required: true
          schema:
            example: a3000000-0000-0000-0000-000000000000
            type: string
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Delete on-call escalation policy
      tags:
        - On-Call
    get:
      description: Get an on-call escalation policy
      operationId: GetOnCallEscalationPolicy
      parameters:
        - description: The ID of the escalation policy
          in: path
          name: policy_id
          required: true
          schema:
            example: a3000000-0000-0000-0000-000000000000
            type: string
        - description: >-
            Comma-separated list of included relationships to be returned.
            Allowed values: `teams`, `steps`, `steps.targets`.
          in: query
          name: include
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EscalationPolicy'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get on-call escalation policy
      tags:
        - On-Call
    put:
      description: Update an on-call escalation policy
      operationId: UpdateOnCallEscalationPolicy
      parameters:
        - description: The ID of the escalation policy
          in: path
          name: policy_id
          required: true
          schema:
            example: a3000000-0000-0000-0000-000000000000
            type: string
        - description: >-
            Comma-separated list of included relationships to be returned.
            Allowed values: `teams`, `steps`, `steps.targets`.
          in: query
          name: include
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EscalationPolicyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EscalationPolicy'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Update on-call escalation policy
      tags:
        - On-Call
  /api/v2/on-call/schedules:
    post:
      description: Create a new on-call schedule
      operationId: CreateOnCallSchedule
      parameters:
        - description: >-
            Comma-separated list of included relationships to be returned.
            Allowed values: `teams`, `layers`, `layers.members`,
            `layers.members.user`.
          in: query
          name: include
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Create on-call schedule
      tags:
        - On-Call
  /api/v2/on-call/schedules/{schedule_id}:
    delete:
      description: Delete an on-call schedule
      operationId: DeleteOnCallSchedule
      parameters:
        - description: The ID of the schedule
          in: path
          name: schedule_id
          required: true
          schema:
            example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
            type: string
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Delete on-call schedule
      tags:
        - On-Call
    get:
      description: Get an on-call schedule
      operationId: GetOnCallSchedule
      parameters:
        - description: >-
            Comma-separated list of included relationships to be returned.
            Allowed values: `teams`, `layers`, `layers.members`,
            `layers.members.user`.
          in: query
          name: include
          schema:
            type: string
        - description: The ID of the schedule
          in: path
          name: schedule_id
          required: true
          schema:
            example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get on-call schedule
      tags:
        - On-Call
    put:
      description: Update a new on-call schedule
      operationId: UpdateOnCallSchedule
      parameters:
        - description: >-
            Comma-separated list of included relationships to be returned.
            Allowed values: `teams`, `layers`, `layers.members`,
            `layers.members.user`.
          in: query
          name: include
          schema:
            type: string
        - description: The ID of the schedule
          in: path
          name: schedule_id
          required: true
          schema:
            example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Update on-call schedule
      tags:
        - On-Call
  /api/v2/org_configs:
    get:
      description: Returns all Org Configs (name, description, and value).
      operationId: ListOrgConfigs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfigListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Org Configs
      tags:
        - Organizations
      x-permission:
        operator: OPEN
        permissions: []
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/org_configs/{org_config_name}:
    get:
      description: Return the name, description, and value of a specific Org Config.
      operationId: GetOrgConfig
      parameters:
        - $ref: '#/components/parameters/OrgConfigName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfigGetResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a specific Org Config value
      tags:
        - Organizations
      x-permission:
        operator: OPEN
        permissions: []
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update the value of a specific Org Config.
      operationId: UpdateOrgConfig
      parameters:
        - $ref: '#/components/parameters/OrgConfigName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgConfigWriteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfigGetResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a specific Org Config
      tags:
        - Organizations
      x-permission:
        operator: OR
        permissions:
          - org_management
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/permissions:
    get:
      description: Returns a list of all permissions, including name, description, and ID.
      operationId: ListPermissions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: List permissions
      tags:
        - Roles
      x-permission:
        operator: OR
        permissions:
          - user_access_read
  /api/v2/posture_management/findings:
    get:
      description: >
        Get a list of findings. These include both misconfigurations and
        identity risks.


        **Note**: To filter and return only identity risks, add the following
        query parameter: `?filter[tags]=dd_rule_type:ciem`


        ### Filtering


        Filters can be applied by appending query parameters to the URL.

          - Using a single filter: `?filter[attribute_key]=attribute_value`
          - Chaining filters: `?filter[attribute_key]=attribute_value&filter[attribute_key]=attribute_value...`
          - Filtering on tags: `?filter[tags]=tag_key:tag_value&filter[tags]=tag_key_2:tag_value_2`

        Here, `attribute_key` can be any of the filter keys described further
        below.


        Query parameters of type `integer` support comparison operators (`>`,
        `>=`, `<`, `<=`). This is particularly useful when filtering by
        `evaluation_changed_at` or `resource_discovery_timestamp`. For example:
        `?filter[evaluation_changed_at]=>20123123121`.


        You can also use the negation operator on strings. For example, use
        `filter[resource_type]=-aws*` to filter for any non-AWS resources.


        The operator must come after the equal sign. For example, to filter with
        the `>=` operator, add the operator after the equal sign:
        `filter[evaluation_changed_at]=>=1678809373257`.


        Query parameters must be only among the documented ones and with values
        of correct types. Duplicated query parameters (e.g.
        `filter[status]=low&filter[status]=info`) are not allowed.


        ### Response


        The response includes an array of finding objects, pagination metadata,
        and a count of items that match the query.


        Each finding object contains the following:


        - The finding ID that can be used in a `GetFinding` request to retrieve
        the full finding details.

        - Core attributes, including status, evaluation, high-level resource
        details, muted state, and rule details.

        - `evaluation_changed_at` and `resource_discovery_date` time stamps.

        - An array of associated tags.
      operationId: ListFindings
      parameters:
        - description: Limit the number of findings returned. Must be <= 1000.
          example: 50
          in: query
          name: page[limit]
          required: false
          schema:
            default: 100
            format: int64
            maximum: 1000
            minimum: 1
            type: integer
        - description: Return findings for a given snapshot of time (Unix ms).
          example: 1678721573794
          in: query
          name: snapshot_timestamp
          required: false
          schema:
            format: int64
            minimum: 1
            type: integer
        - description: Return the next page of findings pointed to by the cursor.
          example: >-
            eyJhZnRlciI6IkFRQUFBWWJiaEJXQS1OY1dqUUFBQUFCQldXSmlhRUpYUVVGQlJFSktkbTlDTUdaWFRVbDNRVUUiLCJ2YWx1ZXMiOlsiY3JpdGljYWwiXX0=
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Return findings that have these associated tags (repeatable).
          example: >-
            filter[tags]=cloud_provider:aws&filter[tags]=aws_account:999999999999
          in: query
          name: filter[tags]
          required: false
          schema:
            type: string
        - description: >-
            Return findings that have changed from pass to fail or vice versa on
            a specified date (Unix ms) or date range (using comparison
            operators).
          example: '>=1678721573794'
          in: query
          name: filter[evaluation_changed_at]
          required: false
          schema:
            type: string
        - description: >-
            Set to `true` to return findings that are muted. Set to `false` to
            return unmuted findings.
          in: query
          name: filter[muted]
          required: false
          schema:
            type: boolean
        - description: Return findings for the specified rule ID.
          in: query
          name: filter[rule_id]
          required: false
          schema:
            type: string
        - description: Return findings for the specified rule.
          in: query
          name: filter[rule_name]
          required: false
          schema:
            type: string
        - description: Return only findings for the specified resource type.
          in: query
          name: filter[resource_type]
          required: false
          schema:
            type: string
        - description: >-
            Return findings that were found on a specified date (Unix ms) or
            date range (using comparison operators).
          example: '>=1678721573794'
          in: query
          name: filter[discovery_timestamp]
          required: false
          schema:
            type: string
        - description: Return only `pass` or `fail` findings.
          example: pass
          in: query
          name: filter[evaluation]
          required: false
          schema:
            $ref: '#/components/schemas/FindingEvaluation'
        - description: Return only findings with the specified status.
          example: critical
          in: query
          name: filter[status]
          required: false
          schema:
            $ref: '#/components/schemas/FindingStatus'
        - description: >-
            Return findings that match the selected vulnerability types
            (repeatable).
          example:
            - misconfiguration
          explode: true
          in: query
          name: filter[vulnerability_type]
          required: false
          schema:
            items:
              $ref: '#/components/schemas/FindingVulnerabilityType'
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_findings_read
      summary: List findings
      tags:
        - Security Monitoring
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.cursor
        limitParam: page[limit]
        resultsPath: data
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    patch:
      description: Mute or unmute findings.
      operationId: MuteFindings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkMuteFindingsRequest'
        description: >
          ### Attributes


          All findings are updated with the same attributes. The request body
          must include at least two attributes: `muted` and `reason`.

          The allowed reasons depend on whether the finding is being muted or
          unmuted:
            - To mute a finding: `PENDING_FIX`, `FALSE_POSITIVE`, `ACCEPTED_RISK`, `OTHER`.
            - To unmute a finding : `NO_PENDING_FIX`, `HUMAN_ERROR`, `NO_LONGER_ACCEPTED_RISK`, `OTHER`.

          ### Meta


          The request body must include a list of the finding IDs to be updated.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkMuteFindingsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: >-
            Invalid Request: The server understands the request syntax but
            cannot process it due to invalid data.
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Mute or unmute a batch of findings
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/posture_management/findings/{finding_id}:
    get:
      description: Returns a single finding with message and resource configuration.
      operationId: GetFinding
      parameters:
        - description: The ID of the finding.
          in: path
          name: finding_id
          required: true
          schema:
            type: string
        - description: Return the finding for a given snapshot of time (Unix ms).
          example: 1678721573794
          in: query
          name: snapshot_timestamp
          required: false
          schema:
            format: int64
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindingResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_findings_read
      summary: Get a finding
      tags:
        - Security Monitoring
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/powerpacks:
    get:
      description: Get a list of all powerpacks.
      operationId: ListPowerpacks
      parameters:
        - description: Maximum number of powerpacks in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 25
            format: int64
            maximum: 1000
            type: integer
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPowerpacksResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_read
      summary: Get all powerpacks
      tags:
        - Powerpack
      x-pagination:
        limitParam: page[limit]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    post:
      description: Create a powerpack.
      operationId: CreatePowerpack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Powerpack'
        description: Create a powerpack request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerpackResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_write
      summary: Create a new powerpack
      tags:
        - Powerpack
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
  /api/v2/powerpacks/{powerpack_id}:
    delete:
      description: Delete a powerpack.
      operationId: DeletePowerpack
      parameters:
        - description: Powerpack id
          in: path
          name: powerpack_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Powerpack Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_write
      summary: Delete a powerpack
      tags:
        - Powerpack
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
    get:
      description: Get a powerpack.
      operationId: GetPowerpack
      parameters:
        - description: ID of the powerpack.
          in: path
          name: powerpack_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerpackResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Powerpack Not Found.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_read
      summary: Get a Powerpack
      tags:
        - Powerpack
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    patch:
      description: Update a powerpack.
      operationId: UpdatePowerpack
      parameters:
        - description: ID of the powerpack.
          in: path
          name: powerpack_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Powerpack'
        description: Update a powerpack request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerpackResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Powerpack Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_write
      summary: Update a powerpack
      tags:
        - Powerpack
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
  /api/v2/processes:
    get:
      description: Get all processes for your organization.
      operationId: ListProcesses
      parameters:
        - description: String to search processes by.
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: Comma-separated list of tags to filter processes by.
          example: account:prod,user:admin
          in: query
          name: tags
          required: false
          schema:
            type: string
        - description: >-
            Unix timestamp (number of seconds since epoch) of the start of the
            query window.

            If not provided, the start of the query window will be 15 minutes
            before the `to` timestamp. If neither

            `from` nor `to` are provided, the query window will be `[now - 15m,
            now]`.
          in: query
          name: from
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            Unix timestamp (number of seconds since epoch) of the end of the
            query window.

            If not provided, the end of the query window will be 15 minutes
            after the `from` timestamp. If neither

            `from` nor `to` are provided, the query window will be `[now - 15m,
            now]`.
          in: query
          name: to
          required: false
          schema:
            format: int64
            type: integer
        - description: Maximum number of results returned.
          in: query
          name: page[limit]
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 10000
            minimum: 1
            type: integer
        - description: >-
            String to query the next page of results.

            This key is provided with each valid response from the API in
            `meta.page.after`.
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessSummariesResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get all processes
      tags:
        - Processes
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/query/scalar:
    post:
      description: >-
        Query scalar values (as seen on Query Value, Table, and Toplist
        widgets).

        Multiple data sources are supported with the ability to

        process the data using formulas and functions.
      operationId: QueryScalarData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScalarFormulaQueryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScalarFormulaQueryResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - timeseries_query
      summary: Query scalar data across multiple products
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - timeseries_query
  /api/v2/query/timeseries:
    post:
      description: |-
        Query timeseries data across various data sources and
        process the data by applying formulas and functions.
      operationId: QueryTimeseriesData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeseriesFormulaQueryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeseriesFormulaQueryResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - timeseries_query
      summary: Query timeseries data across multiple products
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - timeseries_query
  /api/v2/remote_config/products/asm/waf/custom_rules:
    get:
      description: Retrieve a list of WAF custom rule.
      operationId: ListApplicationSecurityWAFCustomRules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafCustomRuleListResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all WAF custom rules
      tags:
        - Application Security
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a new WAF custom rule with the given parameters.
      operationId: CreateApplicationSecurityWafCustomRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ApplicationSecurityWafCustomRuleCreateRequest
        description: The definition of the new WAF Custom Rule.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a WAF custom rule
      tags:
        - Application Security
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/remote_config/products/asm/waf/custom_rules/{custom_rule_id}:
    delete:
      description: Delete a specific WAF custom rule.
      operationId: DeleteApplicationSecurityWafCustomRule
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafCustomRuleIDParam'
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a WAF Custom Rule
      tags:
        - Application Security
      x-terraform-resource: appsec_waf_custom_rule
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Retrieve a WAF custom rule by ID.
      operationId: GetApplicationSecurityWafCustomRule
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafCustomRuleIDParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a WAF custom rule
      tags:
        - Application Security
      x-terraform-resource: appsec_waf_custom_rule
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: |-
        Update a specific WAF custom Rule.
        Returns the Custom Rule object when the request is successful.
      operationId: UpdateApplicationSecurityWafCustomRule
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafCustomRuleIDParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ApplicationSecurityWafCustomRuleUpdateRequest
        description: New definition of the WAF Custom Rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a WAF Custom Rule
      tags:
        - Application Security
      x-codegen-request-body-name: body
      x-terraform-resource: appsec_waf_custom_rule
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/remote_config/products/asm/waf/exclusion_filters:
    get:
      description: Retrieve a list of WAF exclusion filters.
      operationId: ListApplicationSecurityWafExclusionFilters
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafExclusionFiltersResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all WAF exclusion filters
      tags:
        - Application Security
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_read
      x-terraform-resource: appsec_waf_exclusion_filter
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a new WAF exclusion filter with the given parameters.


        A request matched by an exclusion filter will be ignored by the
        Application Security WAF product.

        Go to https://app.datadoghq.com/security/appsec/passlist to review
        existing exclusion filters (also called passlist entries).
      operationId: CreateApplicationSecurityWafExclusionFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ApplicationSecurityWafExclusionFilterCreateRequest
        description: The definition of the new WAF exclusion filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafExclusionFilterResponse
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a WAF exclusion filter
      tags:
        - Application Security
      x-codegen-request-body-name: body
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_write
      x-terraform-resource: appsec_waf_exclusion_filter
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/remote_config/products/asm/waf/exclusion_filters/{exclusion_filter_id}:
    delete:
      description: Delete a specific WAF exclusion filter using its identifier.
      operationId: DeleteApplicationSecurityWafExclusionFilter
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafExclusionFilterID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a WAF exclusion filter
      tags:
        - Application Security
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_write
      x-terraform-resource: appsec_waf_exclusion_filter
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Retrieve a specific WAF exclusion filter using its identifier.
      operationId: GetApplicationSecurityWafExclusionFilter
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafExclusionFilterID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafExclusionFilterResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a WAF exclusion filter
      tags:
        - Application Security
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_read
      x-terraform-resource: appsec_waf_exclusion_filter
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: |-
        Update a specific WAF exclusion filter using its identifier.
        Returns the exclusion filter object when the request is successful.
      operationId: UpdateApplicationSecurityWafExclusionFilter
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafExclusionFilterID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ApplicationSecurityWafExclusionFilterUpdateRequest
        description: The exclusion filter to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafExclusionFilterResponse
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a WAF exclusion filter
      tags:
        - Application Security
      x-codegen-request-body-name: body
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_write
      x-terraform-resource: appsec_waf_exclusion_filter
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/remote_config/products/cws/agent_rules:
    get:
      description: Get the list of Cloud Security Management Threats Agent rules.
      operationId: ListCSMThreatsAgentRules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudWorkloadSecurityAgentRulesListResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all CSM Threats Agent rules
      tags:
        - CSM Threats
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a new Cloud Security Management Threats Agent rule with the given
        parameters.
      operationId: CreateCSMThreatsAgentRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateRequest'
        description: The definition of the new Agent rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a CSM Threats Agent rule
      tags:
        - CSM Threats
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/remote_config/products/cws/agent_rules/{agent_rule_id}:
    delete:
      description: Delete a specific Cloud Security Management Threats Agent rule.
      operationId: DeleteCSMThreatsAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a CSM Threats Agent rule
      tags:
        - CSM Threats
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        Get the details of a specific Cloud Security Management Threats Agent
        rule.
      operationId: GetCSMThreatsAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a CSM Threats Agent rule
      tags:
        - CSM Threats
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: |-
        Update a specific Cloud Security Management Threats Agent rule.
        Returns the Agent rule object when the request is successful.
      operationId: UpdateCSMThreatsAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateRequest'
        description: New definition of the Agent rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a CSM Threats Agent rule
      tags:
        - CSM Threats
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/remote_config/products/cws/policy/download:
    get:
      description: >-
        The download endpoint generates a CSM Threats policy file from your
        currently active

        CSM Threats rules, and downloads them as a `.policy` file. This file can
        then be deployed to

        your Agents to update the policy running in your environment.
      operationId: DownloadCSMThreatsPolicy
      responses:
        '200':
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the latest CSM Threats policy
      tags:
        - CSM Threats
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/remote_config/products/obs_pipelines/pipelines:
    post:
      description: Create a new pipeline.
      operationId: CreatePipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservabilityPipelineCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservabilityPipeline'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a new pipeline
      tags:
        - Observability Pipelines
      x-unstable: '**Note**: This endpoint is in Preview.'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/remote_config/products/obs_pipelines/pipelines/{pipeline_id}:
    delete:
      description: Delete a pipeline.
      operationId: DeletePipeline
      parameters:
        - description: The ID of the pipeline to delete.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a pipeline
      tags:
        - Observability Pipelines
      x-unstable: '**Note**: This endpoint is in Preview.'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a specific pipeline by its ID.
      operationId: GetPipeline
      parameters:
        - description: The ID of the pipeline to retrieve.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservabilityPipeline'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a specific pipeline
      tags:
        - Observability Pipelines
      x-unstable: '**Note**: This endpoint is in Preview.'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    put:
      description: Update a pipeline.
      operationId: UpdatePipeline
      parameters:
        - description: The ID of the pipeline to update.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservabilityPipeline'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservabilityPipeline'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a pipeline
      tags:
        - Observability Pipelines
      x-unstable: '**Note**: This endpoint is in Preview.'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/restriction_policy/{resource_id}:
    delete:
      description: Deletes the restriction policy associated with a specified resource.
      operationId: DeleteRestrictionPolicy
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Delete a restriction policy
      tags:
        - Restriction Policies
      x-permission:
        operator: OPEN
        permissions: []
    get:
      description: Retrieves the restriction policy associated with a specified resource.
      operationId: GetRestrictionPolicy
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionPolicyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get a restriction policy
      tags:
        - Restriction Policies
      x-permission:
        operator: OPEN
        permissions: []
    post:
      description: |-
        Updates the restriction policy associated with a resource.

        #### Supported resources
        Restriction policies can be applied to the following resources:
        - Dashboards: `dashboard`
        - Integration Accounts: `integration-account`
        - Integration Services: `integration-service`
        - Integration Webhooks: `integration-webhook`
        - Notebooks: `notebook`
        - Powerpacks: `powerpack`
        - Reference Tables: `reference-table`
        - Security Rules: `security-rule`
        - Service Level Objectives: `slo`
        - Synthetic Global Variables: `synthetics-global-variable`
        - Synthetic Tests: `synthetics-test`
        - Synthetic Private Locations: `synthetics-private-location`
        - Monitors: `monitor`
        - Workflows: `workflow`
        - App Builder Apps: `app-builder-app`
        - Connections: `connection`
        - Connection Groups: `connection-group`

        #### Supported relations for resources
        Resource Type               | Supported Relations
        ----------------------------|--------------------------
        Dashboards                  | `viewer`, `editor`
        Integration Accounts        | `viewer`, `editor`
        Integration Services        | `viewer`, `editor`
        Integration Webhooks        | `viewer`, `editor`
        Notebooks                   | `viewer`, `editor`
        Powerpacks                  | `viewer`, `editor`
        Security Rules              | `viewer`, `editor`
        Service Level Objectives    | `viewer`, `editor`
        Synthetic Global Variables  | `viewer`, `editor`
        Synthetic Tests             | `viewer`, `editor`
        Synthetic Private Locations | `viewer`, `editor`
        Monitors                    | `viewer`, `editor`
        Reference Tables            | `viewer`, `editor`
        Workflows                   | `viewer`, `runner`, `editor`
        App Builder Apps            | `viewer`, `editor`
        Connections                 | `viewer`, `resolver`, `editor`
        Connection Groups           | `viewer`, `editor`
      operationId: UpdateRestrictionPolicy
      parameters:
        - $ref: '#/components/parameters/ResourceID'
        - description: >-
            Allows admins (users with the `user_access_manage` permission) to
            remove their own access from the resource if set to `true`. By
            default, this is set to `false`, preventing admins from locking
            themselves out.
          in: query
          name: allow_self_lockout
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestrictionPolicyUpdateRequest'
        description: Restriction policy payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionPolicyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Update a restriction policy
      tags:
        - Restriction Policies
      x-codegen-request-body-name: body
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/roles:
    get:
      description: Returns all roles, including their names and their unique identifiers.
      operationId: ListRoles
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: >-
            Sort roles depending on the given field. Sort order is **ascending**
            by default.

            Sort order is **descending** if the field is prefixed by a negative
            sign, for example:

            `sort=-name`.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/RolesSort'
        - description: Filter all roles by the given string.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Filter all roles by the given list of role IDs.
          in: query
          name: filter[id]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: List roles
      tags:
        - Roles
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    post:
      description: Create a new role for your organization.
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Create role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/roles/{role_id}:
    delete:
      description: Disables a role.
      operationId: DeleteRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Delete role
      tags:
        - Roles
      x-codegen-request-body-name: body
    get:
      description: Get a role in the organization specified by the role’s `role_id`.
      operationId: GetRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: Get a role
      tags:
        - Roles
      x-codegen-request-body-name: body
    patch:
      description: >-
        Edit a role. Can only be used with application keys belonging to
        administrators.
      operationId: UpdateRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Update a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/roles/{role_id}/clone:
    post:
      description: Clone an existing role
      operationId: CloneRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCloneRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Create a new role by cloning an existing role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/roles/{role_id}/permissions:
    delete:
      description: Removes a permission from a role.
      operationId: RemovePermissionFromRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToPermission'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Revoke permission
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
    get:
      description: Returns a list of all permissions for a single role.
      operationId: ListRolePermissions
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: List permissions for a role
      tags:
        - Roles
      x-codegen-request-body-name: body
    post:
      description: Adds a permission to a role.
      operationId: AddPermissionToRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToPermission'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Grant permission to a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/roles/{role_id}/users:
    delete:
      description: Removes a user from a role.
      operationId: RemoveUserFromRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToUser'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Remove a user from a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
    get:
      description: Gets all users of a role.
      operationId: ListRoleUsers
      parameters:
        - $ref: '#/components/parameters/RoleID'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: >-
            User attribute to order results by. Sort order is **ascending** by
            default.

            Sort order is **descending** if the field is prefixed by a negative
            sign,

            for example `sort=-name`. Options: `name`, `email`, `status`.
          in: query
          name: sort
          required: false
          schema:
            default: name
            type: string
        - description: Filter all users by the given string. Defaults to no filtering.
          in: query
          name: filter
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: Get all users of a role
      tags:
        - Roles
    post:
      description: Adds a user to a role.
      operationId: AddUserToRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToUser'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Add a user to a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/rum/analytics/aggregate:
    post:
      description: >-
        The API endpoint to aggregate RUM events into buckets of computed
        metrics and timeseries.
      operationId: AggregateRUMEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RUMAggregateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUMAnalyticsAggregateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Aggregate RUM events
      tags:
        - RUM
      x-codegen-request-body-name: body
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/rum/applications:
    get:
      description: List all the RUM applications in your organization.
      operationId: GetRUMApplications
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUMApplicationsResponse'
          description: OK
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all the RUM applications
      tags:
        - RUM
      x-permission:
        operator: OR
        permissions:
          - rum_apps_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a new RUM application in your organization.
      operationId: CreateRUMApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RUMApplicationCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUMApplicationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a new RUM application
      tags:
        - RUM
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - rum_apps_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/rum/applications/{app_id}/relationships/retention_filters:
    patch:
      description: >-
        Order RUM retention filters for a RUM application.

        Returns RUM retention filter objects without attributes from the request
        body when the request is successful.
      operationId: OrderRetentionFilters
      parameters:
        - $ref: '#/components/parameters/RumApplicationIDParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RumRetentionFiltersOrderRequest'
        description: New definition of the RUM retention filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumRetentionFiltersOrderResponse'
          description: Ordered
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Order RUM retention filters
      tags:
        - Rum Retention Filters
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/rum/applications/{app_id}/retention_filters:
    get:
      description: Get the list of RUM retention filters for a RUM application.
      operationId: ListRetentionFilters
      parameters:
        - $ref: '#/components/parameters/RumApplicationIDParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumRetentionFiltersResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all RUM retention filters
      tags:
        - Rum Retention Filters
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a RUM retention filter for a RUM application.

        Returns RUM retention filter objects from the request body when the
        request is successful.
      operationId: CreateRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RumApplicationIDParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RumRetentionFilterCreateRequest'
        description: The definition of the new RUM retention filter.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumRetentionFilterResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a RUM retention filter
      tags:
        - Rum Retention Filters
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/rum/applications/{app_id}/retention_filters/{rf_id}:
    delete:
      description: Delete a RUM retention filter for a RUM application.
      operationId: DeleteRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RumApplicationIDParameter'
        - $ref: '#/components/parameters/RumRetentionFilterIDParameter'
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a RUM retention filter
      tags:
        - Rum Retention Filters
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a RUM retention filter for a RUM application.
      operationId: GetRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RumApplicationIDParameter'
        - $ref: '#/components/parameters/RumRetentionFilterIDParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumRetentionFilterResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a RUM retention filter
      tags:
        - Rum Retention Filters
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a RUM retention filter for a RUM application.

        Returns RUM retention filter objects from the request body when the
        request is successful.
      operationId: UpdateRetentionFilter
      parameters:
        - $ref: '#/components/parameters/RumApplicationIDParameter'
        - $ref: '#/components/parameters/RumRetentionFilterIDParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RumRetentionFilterUpdateRequest'
        description: New definition of the RUM retention filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumRetentionFilterResponse'
          description: Updated
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a RUM retention filter
      tags:
        - Rum Retention Filters
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/rum/applications/{id}:
    delete:
      description: Delete an existing RUM application in your organization.
      operationId: DeleteRUMApplication
      parameters:
        - description: RUM application ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a RUM application
      tags:
        - RUM
      x-permission:
        operator: OR
        permissions:
          - rum_apps_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get the RUM application with given ID in your organization.
      operationId: GetRUMApplication
      parameters:
        - description: RUM application ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUMApplicationResponse'
          description: OK
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a RUM application
      tags:
        - RUM
      x-permission:
        operator: OR
        permissions:
          - rum_apps_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Update the RUM application with given ID in your organization.
      operationId: UpdateRUMApplication
      parameters:
        - description: RUM application ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RUMApplicationUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUMApplicationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a RUM application
      tags:
        - RUM
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - rum_apps_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/rum/config/metrics:
    get:
      description: Get the list of configured rum-based metrics with their definitions.
      operationId: ListRumMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumMetricsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all rum-based metrics
      tags:
        - Rum Metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: >-
        Create a metric based on your organization's RUM data.

        Returns the rum-based metric object from the request body when the
        request is successful.
      operationId: CreateRumMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RumMetricCreateRequest'
        description: The definition of the new rum-based metric.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumMetricResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a rum-based metric
      tags:
        - Rum Metrics
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/rum/config/metrics/{metric_id}:
    delete:
      description: Delete a specific rum-based metric from your organization.
      operationId: DeleteRumMetric
      parameters:
        - $ref: '#/components/parameters/RumMetricIDParameter'
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a rum-based metric
      tags:
        - Rum Metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get a specific rum-based metric from your organization.
      operationId: GetRumMetric
      parameters:
        - $ref: '#/components/parameters/RumMetricIDParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumMetricResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a rum-based metric
      tags:
        - Rum Metrics
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a specific rum-based metric from your organization.

        Returns the rum-based metric object from the request body when the
        request is successful.
      operationId: UpdateRumMetric
      parameters:
        - $ref: '#/components/parameters/RumMetricIDParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RumMetricUpdateRequest'
        description: New definition of the rum-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RumMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a rum-based metric
      tags:
        - Rum Metrics
      x-codegen-request-body-name: body
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/rum/events:
    get:
      description: >-
        List endpoint returns events that match a RUM search query.

        [Results are paginated][1].


        Use this endpoint to see your latest RUM events.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      operationId: ListRUMEvents
      parameters:
        - description: Search query following RUM syntax.
          example: '@type:session @application_id:xxxx'
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: Minimum timestamp for requested events.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
        - description: Maximum timestamp for requested events.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
        - description: Order of events in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/RUMSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of events in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUMEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get a list of RUM events
      tags:
        - RUM
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/rum/events/search:
    post:
      description: >-
        List endpoint returns RUM events that match a RUM search query.

        [Results are paginated][1].


        Use this endpoint to build complex RUM events filtering and search.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      operationId: SearchRUMEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RUMSearchEventsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RUMEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Search RUM events
      tags:
        - RUM
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/saml_configurations/idp_metadata:
    post:
      description: >-
        Endpoint for uploading IdP metadata for SAML setup.


        Use this endpoint to upload or replace IdP metadata for SAML login
        configuration.
      operationId: UploadIdPMetadata
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IdPMetadataFormData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Upload IdP metadata
      tags:
        - Organizations
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_management
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/scorecard/outcomes:
    get:
      description: Fetches all rule outcomes.
      operationId: ListScorecardOutcomes
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
        - description: Include related rule details in the response.
          in: query
          name: include
          required: false
          schema:
            example: rule
            type: string
        - description: Return only specified values in the outcome attributes.
          in: query
          name: fields[outcome]
          required: false
          schema:
            example: state, service_name
            type: string
        - description: Return only specified values in the included rule details.
          in: query
          name: fields[rule]
          required: false
          schema:
            example: name
            type: string
        - description: Filter the outcomes on a specific service name.
          in: query
          name: filter[outcome][service_name]
          required: false
          schema:
            example: web-store
            type: string
        - description: Filter the outcomes by a specific state.
          in: query
          name: filter[outcome][state]
          required: false
          schema:
            example: fail
            type: string
        - description: Filter outcomes on whether a rule is enabled/disabled.
          in: query
          name: filter[rule][enabled]
          required: false
          schema:
            example: true
            type: boolean
        - description: Filter outcomes based on rule ID.
          in: query
          name: filter[rule][id]
          required: false
          schema:
            example: f4485c79-0762-449c-96cf-c31e54a659f6
            type: string
        - description: Filter outcomes based on rule name.
          in: query
          name: filter[rule][name]
          required: false
          schema:
            example: SLOs Defined
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutcomesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_read
      summary: List all rule outcomes
      tags:
        - Service Scorecards
      x-pagination:
        limitParam: page[size]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/scorecard/outcomes/batch:
    post:
      description: Sets multiple service-rule outcomes in a single batched request.
      operationId: CreateScorecardOutcomesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutcomesBatchRequest'
        description: Set of scorecard outcomes.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutcomesBatchResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Create outcomes batch
      tags:
        - Service Scorecards
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/scorecard/rules:
    get:
      description: Fetch all rules.
      operationId: ListScorecardRules
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
        - description: Include related scorecard details in the response.
          in: query
          name: include
          required: false
          schema:
            example: scorecard
            type: string
        - description: Filter the rules on a rule ID.
          in: query
          name: filter[rule][id]
          required: false
          schema:
            example: 37d2f990-c885-4972-949b-8b798213a166
            type: string
        - description: Filter for enabled rules only.
          in: query
          name: filter[rule][enabled]
          required: false
          schema:
            example: true
            type: boolean
        - description: Filter for custom rules only.
          in: query
          name: filter[rule][custom]
          required: false
          schema:
            example: true
            type: boolean
        - description: Filter rules on the rule name.
          in: query
          name: filter[rule][name]
          required: false
          schema:
            example: Code Repos Defined
            type: string
        - description: Filter rules on the rule description.
          in: query
          name: filter[rule][description]
          required: false
          schema:
            example: Identifying
            type: string
        - description: Return only specific fields in the response for rule attributes.
          in: query
          name: fields[rule]
          required: false
          schema:
            example: name, description
            type: string
        - description: >-
            Return only specific fields in the included response for scorecard
            attributes.
          in: query
          name: fields[scorecard]
          required: false
          schema:
            example: name
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRulesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_read
      summary: List all rules
      tags:
        - Service Scorecards
      x-pagination:
        limitParam: page[size]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    post:
      description: Creates a new rule.
      operationId: CreateScorecardRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRuleRequest'
        description: Rule attributes.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRuleResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Create a new rule
      tags:
        - Service Scorecards
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/scorecard/rules/{rule_id}:
    delete:
      description: Deletes a single rule.
      operationId: DeleteScorecardRule
      parameters:
        - $ref: '#/components/parameters/RuleId'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Delete a rule
      tags:
        - Service Scorecards
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
    put:
      description: Updates an existing rule.
      operationId: UpdateScorecardRule
      parameters:
        - $ref: '#/components/parameters/RuleId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleRequest'
        description: Rule attributes.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRuleResponse'
          description: Rule updated successfully
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Update an existing rule
      tags:
        - Service Scorecards
      x-codegen-request-body-name: body
      x-unstable: >-
        **Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/security/assets:
    get:
      description: >
        Get a list of vulnerable assets.


        ### Pagination


        Please review the [Pagination section for the "List
        Vulnerabilities"](#pagination) endpoint.


        ### Filtering


        Please review the [Filtering section for the "List
        Vulnerabilities"](#filtering) endpoint.


        ### Metadata


        Please review the [Metadata section for the "List
        Vulnerabilities"](#metadata) endpoint.
      operationId: ListVulnerableAssets
      parameters:
        - description: >-
            Its value must come from the `links` section of the response of the
            first request. Do not manually edit it.
          example: >-
            b82cef018aab81ed1d4bb4xb35xxfc065da7efa685fbcecdbd338f3015e3afabbbfa3a911b4984_721ee28a-zecb-4e45-9960-c42065b574f4
          in: query
          name: page[token]
          required: false
          schema:
            type: string
        - description: >-
            The page number to be retrieved. It should be equal or greater than
            `1`
          example: 1
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            minimum: 1
            type: integer
        - description: Filter by name.
          example: datadog-agent
          in: query
          name: filter[name]
          required: false
          schema:
            type: string
        - description: Filter by type.
          example: Host
          in: query
          name: filter[type]
          required: false
          schema:
            $ref: '#/components/schemas/AssetType'
        - description: >-
            Filter by the first version of the asset since it has been
            vulnerable.
          example: v1.15.1
          in: query
          name: filter[version.first]
          required: false
          schema:
            type: string
        - description: Filter by the last detected version of the asset.
          example: v1.15.1
          in: query
          name: filter[version.last]
          required: false
          schema:
            type: string
        - description: Filter by the repository url associated to the asset.
          example: github.com/DataDog/datadog-agent.git
          in: query
          name: filter[repository_url]
          required: false
          schema:
            type: string
        - description: Filter whether the asset is in production or not.
          example: false
          in: query
          name: filter[risks.in_production]
          required: false
          schema:
            type: boolean
        - description: Filter whether the asset (Service) is under attack or not.
          example: false
          in: query
          name: filter[risks.under_attack]
          required: false
          schema:
            type: boolean
        - description: Filter whether the asset (Host) is publicly accessible or not.
          example: false
          in: query
          name: filter[risks.is_publicly_accessible]
          required: false
          schema:
            type: boolean
        - description: Filter whether the asset (Host) has privileged access or not.
          example: false
          in: query
          name: filter[risks.has_privileged_access]
          required: false
          schema:
            type: boolean
        - description: >-
            Filter whether the asset (Host)  has access to sensitive data or
            not.
          example: false
          in: query
          name: filter[risks.has_access_to_sensitive_data]
          required: false
          schema:
            type: boolean
        - description: Filter by environment.
          example: staging
          in: query
          name: filter[environments]
          required: false
          schema:
            type: string
        - description: Filter by architecture.
          example: arm64
          in: query
          name: filter[arch]
          required: false
          schema:
            type: string
        - description: Filter by operating system name.
          example: ubuntu
          in: query
          name: filter[operating_system.name]
          required: false
          schema:
            type: string
        - description: Filter by operating system version.
          example: '24.04'
          in: query
          name: filter[operating_system.version]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVulnerableAssetsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: >-
            Bad request: The server cannot process the request due to invalid
            syntax in the request.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Forbidden: Access denied'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Not found: There is no request associated with the provided token.'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - appsec_vm_read
      summary: List vulnerable assets
      tags:
        - Security Monitoring
      x-unstable: >-
        **Note**: This endpoint is a private preview.

        If you are interested in accessing this API, [fill out this
        form](https://forms.gle/kMYC1sDr6WDUBDsx9).
  /api/v2/security/cloud_workload/policy/download:
    get:
      description: >-
        The download endpoint generates a Cloud Workload Security policy file
        from your currently active

        Cloud Workload Security rules, and downloads them as a .policy file.
        This file can then be deployed to

        your Agents to update the policy running in your environment.
      operationId: DownloadCloudWorkloadPolicyFile
      responses:
        '200':
          content:
            application/yaml:
              schema:
                format: binary
                type: string
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the latest Cloud Workload Security policy
      tags:
        - CSM Threats
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_cws_agent_rules_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/security/sboms/{asset_type}:
    get:
      description: |
        Get a single SBOM related to an asset by its type and name.
      operationId: GetSBOM
      parameters:
        - description: The type of the asset for the SBOM request.
          example: Repository
          in: path
          name: asset_type
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - description: The name of the asset for the SBOM request.
          example: github.com/datadog/datadog-agent
          in: query
          name: filter[asset_name]
          required: true
          schema:
            type: string
        - description: >-
            The container image `repo_digest` for the SBOM request. When the
            requested asset type is 'Image', this filter is mandatory.
          example: >-
            sha256:0ae7da091191787229d321e3638e39c319a97d6e20f927d465b519d699215bf7
          in: query
          name: filter[repo_digest]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSBOMResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: >-
            Bad request: The server cannot process the request due to invalid
            syntax in the request.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Forbidden: Access denied'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Not found: asset not found'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - appsec_vm_read
      summary: Get SBOM
      tags:
        - Security Monitoring
      x-unstable: >-
        **Note**: This endpoint is a private preview.

        If you are interested in accessing this API, [fill out this
        form](https://forms.gle/kMYC1sDr6WDUBDsx9).
  /api/v2/security/signals/notification_rules:
    get:
      description: Returns the list of notification rules for security signals.
      operationId: GetSignalNotificationRules
      responses:
        '200':
          $ref: '#/components/responses/NotificationRulesList'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_read
      summary: Get the list of signal-based notification rules
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_read
    post:
      description: >-
        Create a new notification rule for security signals and return the
        created rule.
      operationId: CreateSignalNotificationRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRuleParameters'
        description: >
          The body of the create notification rule request is composed of the
          rule type and the rule attributes:

          the rule name, the selectors, the notification targets, and the rule
          enabled status.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          description: Successfully created the notification rule.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_write
      summary: Create a new signal-based notification rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_write
  /api/v2/security/signals/notification_rules/{id}:
    delete:
      description: Delete a notification rule for security signals.
      operationId: DeleteSignalNotificationRule
      parameters:
        - description: ID of the notification rule.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Rule successfully deleted.
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_write
      summary: Delete a signal-based notification rule
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_write
    get:
      description: Get the details of a notification rule for security signals.
      operationId: GetSignalNotificationRule
      parameters:
        - description: ID of the notification rule.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          description: Notification rule details.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_read
      summary: Get details of a signal-based notification rule
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_read
    patch:
      description: >-
        Partially update the notification rule. All fields are optional; if a
        field is not provided, it is not updated.
      operationId: PatchSignalNotificationRule
      parameters:
        - description: ID of the notification rule.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchNotificationRuleParameters'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          description: Notification rule successfully patched.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableEntityResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_write
      summary: Patch a signal-based notification rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_write
  /api/v2/security/vulnerabilities:
    get:
      description: >
        Get a list of vulnerabilities.


        ### Pagination


        Pagination is enabled by default in both `vulnerabilities` and `assets`.
        The size of the page varies depending on the endpoint and cannot be
        modified. To automate the request of the next page, you can use the
        links section in the response.


        This endpoint will return paginated responses. The pages are stored in
        the links section of the response:


        ```JSON

        {
          "data": [...],
          "meta": {...},
          "links": {
            "self": "https://.../api/v2/security/vulnerabilities",
            "first": "https://.../api/v2/security/vulnerabilities?page[number]=1&page[token]=abc",
            "last": "https://.../api/v2/security/vulnerabilities?page[number]=43&page[token]=abc",
            "next": "https://.../api/v2/security/vulnerabilities?page[number]=2&page[token]=abc"
          }
        }

        ```



        - `links.previous` is empty if the first page is requested.

        - `links.next` is empty if the last page is requested.


        #### Token


        Vulnerabilities can be created, updated or deleted at any point in time.


        Upon the first request, a token is created to ensure consistency across
        subsequent paginated requests.


        A token is valid only for 24 hours.


        #### First request


        We consider a request to be the first request when there is no
        `page[token]` parameter.


        The response of this first request contains the newly created token in
        the `links` section.


        This token can then be used in the subsequent paginated requests.


        #### Subsequent requests


        Any request containing valid `page[token]` and `page[number]` parameters
        will be considered a subsequent request.


        If the `token` is invalid, a `404` response will be returned.


        If the page `number` is invalid, a `400` response will be returned.


        ### Filtering


        The request can include some filter parameters to filter the data to be
        retrieved. The format of the filter parameters follows the [JSON:API
        format](https://jsonapi.org/format/#fetching-filtering):
        `filter[$prop_name]`, where `prop_name` is the property name in the
        entity being filtered by.


        All filters can include multiple values, where data will be filtered
        with an OR clause: `filter[title]=Title1,Title2` will filter all
        vulnerabilities where title is equal to `Title1` OR `Title2`.


        String filters are case sensitive.


        Boolean filters accept `true` or `false` as values.


        Number filters must include an operator as a second filter input:
        `filter[$prop_name][$operator]`. For example, for the vulnerabilities
        endpoint: `filter[cvss.base.score][lte]=8`.


        Available operators are: `eq` (==), `lt` (<), `lte` (<=), `gt` (>) and
        `gte` (>=).


        ### Metadata


        Following [JSON:API format](https://jsonapi.org/format/#document-meta),
        object including non-standard meta-information.


        This endpoint includes the meta member in the response. For more details
        on each of the properties included in this section, check the endpoints
        response tables.


        ```JSON

        {
          "data": [...],
          "meta": {
            "total": 1500,
            "count": 18732,
            "token": "some_token"
          },
          "links": {...}
        }

        ```
      operationId: ListVulnerabilities
      parameters:
        - description: >-
            Its value must come from the `links` section of the response of the
            first request. Do not manually edit it.
          example: >-
            b82cef018aab81ed1d4bb4xb35xxfc065da7efa685fbcecdbd338f3015e3afabbbfa3a911b4984_721ee28a-zecb-4e45-9960-c42065b574f4
          in: query
          name: page[token]
          required: false
          schema:
            type: string
        - description: >-
            The page number to be retrieved. It should be equal or greater than
            `1`
          example: 1
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            minimum: 1
            type: integer
        - description: Filter by vulnerability type.
          example: WeakCipher
          in: query
          name: filter[type]
          required: false
          schema:
            $ref: '#/components/schemas/VulnerabilityType'
        - description: >-
            Filter by vulnerability base (i.e. from the original advisory)
            severity score.
          example: 5.5
          in: query
          name: filter[cvss.base.score][`$op`]
          required: false
          schema:
            format: double
            maximum: 10
            minimum: 0
            type: number
        - description: Filter by vulnerability base severity.
          example: Medium
          in: query
          name: filter[cvss.base.severity]
          required: false
          schema:
            $ref: '#/components/schemas/VulnerabilitySeverity'
        - description: Filter by vulnerability base CVSS vector.
          example: CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
          in: query
          name: filter[cvss.base.vector]
          required: false
          schema:
            type: string
        - description: Filter by vulnerability Datadog severity score.
          example: 4.3
          in: query
          name: filter[cvss.datadog.score][`$op`]
          required: false
          schema:
            format: double
            maximum: 10
            minimum: 0
            type: number
        - description: Filter by vulnerability Datadog severity.
          example: Medium
          in: query
          name: filter[cvss.datadog.severity]
          required: false
          schema:
            $ref: '#/components/schemas/VulnerabilitySeverity'
        - description: Filter by vulnerability Datadog CVSS vector.
          example: >-
            CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:U/RL:X/RC:X/CR:X/IR:X/AR:X/MAV:L/MAC:H/MPR:L/MUI:N/MS:U/MC:N/MI:N/MA:H
          in: query
          name: filter[cvss.datadog.vector]
          required: false
          schema:
            type: string
        - description: Filter by the status of the vulnerability.
          example: Open
          in: query
          name: filter[status]
          required: false
          schema:
            $ref: '#/components/schemas/VulnerabilityStatus'
        - description: Filter by the tool of the vulnerability.
          example: SCA
          in: query
          name: filter[tool]
          required: false
          schema:
            $ref: '#/components/schemas/VulnerabilityTool'
        - description: Filter by library name.
          example: linux-aws-5.15
          in: query
          name: filter[library.name]
          required: false
          schema:
            type: string
        - description: Filter by library version.
          example: 5.15.0
          in: query
          name: filter[library.version]
          required: false
          schema:
            type: string
        - description: Filter by advisory ID.
          example: TRIVY-CVE-2023-0615
          in: query
          name: filter[advisory_id]
          required: false
          schema:
            type: string
        - description: Filter by exploitation probability.
          example: false
          in: query
          name: filter[risks.exploitation_probability]
          required: false
          schema:
            type: boolean
        - description: Filter by POC exploit availability.
          example: false
          in: query
          name: filter[risks.poc_exploit_available]
          required: false
          schema:
            type: boolean
        - description: Filter by public exploit availability.
          example: false
          in: query
          name: filter[risks.exploit_available]
          required: false
          schema:
            type: boolean
        - description: >-
            Filter by vulnerability [EPSS](https://www.first.org/epss/) severity
            score.
          example: 0.00042
          in: query
          name: filter[risks.epss.score][`$op`]
          required: false
          schema:
            format: double
            maximum: 1
            minimum: 0
            type: number
        - description: >-
            Filter by vulnerability [EPSS](https://www.first.org/epss/)
            severity.
          example: Low
          in: query
          name: filter[risks.epss.severity]
          required: false
          schema:
            $ref: '#/components/schemas/VulnerabilitySeverity'
        - description: Filter by language.
          example: ubuntu
          in: query
          name: filter[language]
          required: false
          schema:
            type: string
        - description: Filter by ecosystem.
          example: Deb
          in: query
          name: filter[ecosystem]
          required: false
          schema:
            $ref: '#/components/schemas/VulnerabilityEcosystem'
        - description: Filter by vulnerability location.
          example: com.example.Class:100
          in: query
          name: filter[code_location.location]
          required: false
          schema:
            type: string
        - description: Filter by vulnerability file path.
          example: src/Class.java:100
          in: query
          name: filter[code_location.file_path]
          required: false
          schema:
            type: string
        - description: Filter by method.
          example: FooBar
          in: query
          name: filter[code_location.method]
          required: false
          schema:
            type: string
        - description: Filter by fix availability.
          example: false
          in: query
          name: filter[fix_available]
          required: false
          schema:
            type: boolean
        - description: >-
            Filter by vulnerability `repo_digest` (when the vulnerability is
            related to `Image` asset).
          example: >-
            sha256:0ae7da091191787229d321e3638e39c319a97d6e20f927d465b519d699215bf7
          in: query
          name: filter[repo_digests]
          required: false
          schema:
            type: string
        - description: Filter by asset name.
          example: datadog-agent
          in: query
          name: filter[asset.name]
          required: false
          schema:
            type: string
        - description: Filter by asset type.
          example: Host
          in: query
          name: filter[asset.type]
          required: false
          schema:
            $ref: '#/components/schemas/AssetType'
        - description: >-
            Filter by the first version of the asset this vulnerability has been
            detected on.
          example: v1.15.1
          in: query
          name: filter[asset.version.first]
          required: false
          schema:
            type: string
        - description: >-
            Filter by the last version of the asset this vulnerability has been
            detected on.
          example: v1.15.1
          in: query
          name: filter[asset.version.last]
          required: false
          schema:
            type: string
        - description: Filter by the repository url associated to the asset.
          example: github.com/DataDog/datadog-agent.git
          in: query
          name: filter[asset.repository_url]
          required: false
          schema:
            type: string
        - description: Filter whether the asset is in production or not.
          example: false
          in: query
          name: filter[asset.risks.in_production]
          required: false
          schema:
            type: boolean
        - description: Filter whether the asset is under attack or not.
          example: false
          in: query
          name: filter[asset.risks.under_attack]
          required: false
          schema:
            type: boolean
        - description: Filter whether the asset is publicly accessible or not.
          example: false
          in: query
          name: filter[asset.risks.is_publicly_accessible]
          required: false
          schema:
            type: boolean
        - description: Filter whether the asset is publicly accessible or not.
          example: false
          in: query
          name: filter[asset.risks.has_privileged_access]
          required: false
          schema:
            type: boolean
        - description: Filter whether the asset  has access to sensitive data or not.
          example: false
          in: query
          name: filter[asset.risks.has_access_to_sensitive_data]
          required: false
          schema:
            type: boolean
        - description: Filter by asset environments.
          example: staging
          in: query
          name: filter[asset.environments]
          required: false
          schema:
            type: string
        - description: Filter by asset architecture.
          example: arm64
          in: query
          name: filter[asset.arch]
          required: false
          schema:
            type: string
        - description: Filter by asset operating system name.
          example: ubuntu
          in: query
          name: filter[asset.operating_system.name]
          required: false
          schema:
            type: string
        - description: Filter by asset operating system version.
          example: '24.04'
          in: query
          name: filter[asset.operating_system.version]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVulnerabilitiesResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: >-
            Bad request: The server cannot process the request due to invalid
            syntax in the request.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Forbidden: Access denied'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Not found: There is no request associated with the provided token.'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - appsec_vm_read
      summary: List vulnerabilities
      tags:
        - Security Monitoring
      x-unstable: >-
        **Note**: This endpoint is a private preview.

        If you are interested in accessing this API, [fill out this
        form](https://forms.gle/kMYC1sDr6WDUBDsx9).
  /api/v2/security/vulnerabilities/notification_rules:
    get:
      description: Returns the list of notification rules for security vulnerabilities.
      operationId: GetVulnerabilityNotificationRules
      responses:
        '200':
          $ref: '#/components/responses/NotificationRulesList'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_read
      summary: Get the list of vulnerability notification rules
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_read
    post:
      description: >-
        Create a new notification rule for security vulnerabilities and return
        the created rule.
      operationId: CreateVulnerabilityNotificationRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationRuleParameters'
        description: >
          The body of the create notification rule request is composed of the
          rule type and the rule attributes:

          the rule name, the selectors, the notification targets, and the rule
          enabled status.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          description: Successfully created the notification rule.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_write
      summary: Create a new vulnerability-based notification rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_write
  /api/v2/security/vulnerabilities/notification_rules/{id}:
    delete:
      description: Delete a notification rule for security vulnerabilities.
      operationId: DeleteVulnerabilityNotificationRule
      parameters:
        - description: ID of the notification rule.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Rule successfully deleted.
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_write
      summary: Delete a vulnerability-based notification rule
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_write
    get:
      description: Get the details of a notification rule for security vulnerabilities.
      operationId: GetVulnerabilityNotificationRule
      parameters:
        - description: ID of the notification rule.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          description: Notification rule details.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_read
      summary: Get details of a vulnerability notification rule
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_read
    patch:
      description: >-
        Partially update the notification rule. All fields are optional; if a
        field is not provided, it is not updated.
      operationId: PatchVulnerabilityNotificationRule
      parameters:
        - description: ID of the notification rule.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchNotificationRuleParameters'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          description: Notification rule successfully patched.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableEntityResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_notification_profiles_write
      summary: Patch a vulnerability-based notification rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_notification_profiles_write
  /api/v2/security_monitoring/cloud_workload_security/agent_rules:
    get:
      description: Get the list of Agent rules.
      operationId: ListCloudWorkloadSecurityAgentRules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudWorkloadSecurityAgentRulesListResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all Cloud Workload Security Agent rules
      tags:
        - CSM Threats
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_cws_agent_rules_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create a new Agent rule with the given parameters.
      operationId: CreateCloudWorkloadSecurityAgentRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateRequest'
        description: The definition of the new Agent rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a Cloud Workload Security Agent rule
      tags:
        - CSM Threats
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_cws_agent_rules_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/security_monitoring/cloud_workload_security/agent_rules/{agent_rule_id}:
    delete:
      description: Delete a specific Agent rule.
      operationId: DeleteCloudWorkloadSecurityAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a Cloud Workload Security Agent rule
      tags:
        - CSM Threats
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_cws_agent_rules_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get the details of a specific Agent rule.
      operationId: GetCloudWorkloadSecurityAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a Cloud Workload Security Agent rule
      tags:
        - CSM Threats
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_cws_agent_rules_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: |-
        Update a specific Agent rule.
        Returns the Agent rule object when the request is successful.
      operationId: UpdateCloudWorkloadSecurityAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateRequest'
        description: New definition of the Agent rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a Cloud Workload Security Agent rule
      tags:
        - CSM Threats
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_cws_agent_rules_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/security_monitoring/configuration/security_filters:
    get:
      description: Get the list of configured security filters with their definitions.
      operationId: ListSecurityFilters
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFiltersResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_read
      summary: Get all security filters
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_filters_read
    post:
      description: >-
        Create a security filter.


        See the [security filter
        guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)

        for more examples.
      operationId: CreateSecurityFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityFilterCreateRequest'
        description: The definition of the new security filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_write
      summary: Create a security filter
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_filters_write
  /api/v2/security_monitoring/configuration/security_filters/{security_filter_id}:
    delete:
      description: Delete a specific security filter.
      operationId: DeleteSecurityFilter
      parameters:
        - $ref: '#/components/parameters/SecurityFilterID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_write
      summary: Delete a security filter
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_filters_write
    get:
      description: >-
        Get the details of a specific security filter.


        See the [security filter
        guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)

        for more examples.
      operationId: GetSecurityFilter
      parameters:
        - $ref: '#/components/parameters/SecurityFilterID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_read
      summary: Get a security filter
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_filters_read
    patch:
      description: |-
        Update a specific security filter.
        Returns the security filter object when the request is successful.
      operationId: UpdateSecurityFilter
      parameters:
        - $ref: '#/components/parameters/SecurityFilterID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityFilterUpdateRequest'
        description: New definition of the security filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_filters_write
      summary: Update a security filter
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_filters_write
  /api/v2/security_monitoring/configuration/suppressions:
    get:
      description: Get the list of all suppression rules.
      operationId: ListSecurityMonitoringSuppressions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSuppressionsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_suppressions_read
      summary: Get all suppression rules
      tags:
        - Security Monitoring
    post:
      description: Create a new suppression rule.
      operationId: CreateSecurityMonitoringSuppression
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSuppressionCreateRequest'
        description: The definition of the new suppression rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSuppressionResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_suppressions_write
      summary: Create a suppression rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
  /api/v2/security_monitoring/configuration/suppressions/{suppression_id}:
    delete:
      description: Delete a specific suppression rule.
      operationId: DeleteSecurityMonitoringSuppression
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringSuppressionID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_suppressions_write
      summary: Delete a suppression rule
      tags:
        - Security Monitoring
    get:
      description: Get the details of a specific suppression rule.
      operationId: GetSecurityMonitoringSuppression
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringSuppressionID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSuppressionResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_suppressions_read
      summary: Get a suppression rule
      tags:
        - Security Monitoring
    patch:
      description: Update a specific suppression rule.
      operationId: UpdateSecurityMonitoringSuppression
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringSuppressionID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSuppressionUpdateRequest'
        description: New definition of the suppression rule. Supports partial updates.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSuppressionResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_suppressions_write
      summary: Update a suppression rule
      tags:
        - Security Monitoring
  /api/v2/security_monitoring/rules:
    get:
      description: List rules.
      operationId: ListSecurityMonitoringRules
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringListRulesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_read
      summary: List rules
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_read
    post:
      description: Create a detection rule.
      operationId: CreateSecurityMonitoringRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleCreatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Create a detection rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
  /api/v2/security_monitoring/rules/convert:
    post:
      description: >-
        Convert a rule that doesn't (yet) exist from JSON to Terraform for
        datadog provider

        resource datadog_security_monitoring_rule.
      operationId: ConvertSecurityMonitoringRuleFromJSONToTerraform
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleConvertPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleConvertResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Convert a rule from JSON to Terraform
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
  /api/v2/security_monitoring/rules/test:
    post:
      description: Test a rule.
      operationId: TestSecurityMonitoringRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleTestRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleTestResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Test a rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
  /api/v2/security_monitoring/rules/validation:
    post:
      description: Validate a detection rule.
      operationId: ValidateSecurityMonitoringRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleValidatePayload'
        required: true
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Validate a detection rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
  /api/v2/security_monitoring/rules/{rule_id}:
    delete:
      description: Delete an existing rule. Default rules cannot be deleted.
      operationId: DeleteSecurityMonitoringRule
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Delete an existing rule
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
    get:
      description: Get a rule's details.
      operationId: GetSecurityMonitoringRule
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_read
      summary: Get a rule's details
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_read
    put:
      description: >-
        Update an existing rule. When updating `cases`, `queries` or `options`,
        the whole field

        must be included. For example, when modifying a query all queries must
        be included.

        Default rules can only be updated to be enabled, to change
        notifications, or to update

        the tags (default tags cannot be removed).
      operationId: UpdateSecurityMonitoringRule
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleUpdatePayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Update an existing rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
  /api/v2/security_monitoring/rules/{rule_id}/convert:
    get:
      description: |-
        Convert an existing rule from JSON to Terraform for datadog provider
        resource datadog_security_monitoring_rule.
      operationId: ConvertExistingSecurityMonitoringRule
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleConvertResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_read
      summary: Convert an existing rule from JSON to Terraform
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_read
  /api/v2/security_monitoring/rules/{rule_id}/test:
    post:
      description: Test an existing rule.
      operationId: TestExistingSecurityMonitoringRule
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleTestRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleTestResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Test an existing rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
  /api/v2/security_monitoring/rules/{rule_id}/version_history:
    get:
      description: Get a rule's version history.
      operationId: GetRuleVersionHistory
      parameters:
        - $ref: '#/components/parameters/SecurityMonitoringRuleID'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRuleVersionHistoryResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_read
      summary: Get a rule's version history
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_read
      x-unstable: '**Note**: This endpoint is in beta and may be subject to changes.'
  /api/v2/security_monitoring/signals:
    get:
      description: >-
        The list endpoint returns security signals that match a search query.

        Both this endpoint and the POST endpoint can be used interchangeably
        when listing

        security signals.
      operationId: ListSecurityMonitoringSignals
      parameters:
        - description: The search query for security signals.
          example: security:attack status:high
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: The minimum timestamp for requested security signals.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
        - description: The maximum timestamp for requested security signals.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
        - description: The order of the security signals in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/SecurityMonitoringSignalsSort'
        - description: A list of results using the cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: The maximum number of security signals in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_signals_read
      summary: Get a quick list of security signals
      tags:
        - Security Monitoring
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_read
  /api/v2/security_monitoring/signals/search:
    post:
      description: >-
        Returns security signals that match a search query.

        Both this endpoint and the GET endpoint can be used interchangeably for
        listing

        security signals.
      operationId: SearchSecurityMonitoringSignals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSignalListRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_signals_read
      summary: Get a list of security signals
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_read
  /api/v2/security_monitoring/signals/{signal_id}:
    get:
      description: Get a signal's details.
      operationId: GetSecurityMonitoringSignal
      parameters:
        - $ref: '#/components/parameters/SignalID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalResponse'
          description: OK
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_signals_read
      summary: Get a signal's details
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_read
  /api/v2/security_monitoring/signals/{signal_id}/assignee:
    patch:
      description: Modify the triage assignee of a security signal.
      operationId: EditSecurityMonitoringSignalAssignee
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SecurityMonitoringSignalAssigneeUpdateRequest
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecurityMonitoringSignalTriageUpdateResponse
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Modify the triage assignee of a security signal
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/security_monitoring/signals/{signal_id}/incidents:
    patch:
      description: Change the related incidents for a security signal.
      operationId: EditSecurityMonitoringSignalIncidents
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SecurityMonitoringSignalIncidentsUpdateRequest
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecurityMonitoringSignalTriageUpdateResponse
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Change the related incidents of a security signal
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/security_monitoring/signals/{signal_id}/state:
    patch:
      description: Change the triage state of a security signal.
      operationId: EditSecurityMonitoringSignalState
      parameters:
        - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecurityMonitoringSignalTriageUpdateResponse
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Change the triage state of a security signal
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/sensitive-data-scanner/config:
    get:
      description: List all the Scanning groups in your organization.
      operationId: ListScanningGroups
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveDataScannerGetConfigResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Scanning Groups
      tags:
        - Sensitive Data Scanner
      x-permission:
        operator: OR
        permissions:
          - data_scanner_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Reorder the list of groups.
      operationId: ReorderScanningGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensitiveDataScannerConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveDataScannerReorderGroupsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Reorder Groups
      tags:
        - Sensitive Data Scanner
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - data_scanner_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/sensitive-data-scanner/config/groups:
    post:
      description: >-
        Create a scanning group.

        The request MAY include a configuration relationship.

        A rules relationship can be omitted entirely, but if it is included it
        MUST be

        null or an empty array (rules cannot be created at the same time).

        The new group will be ordered last within the configuration.
      operationId: CreateScanningGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensitiveDataScannerGroupCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveDataScannerCreateGroupResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create Scanning Group
      tags:
        - Sensitive Data Scanner
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - data_scanner_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/sensitive-data-scanner/config/groups/{group_id}:
    delete:
      description: Delete a given group.
      operationId: DeleteScanningGroup
      parameters:
        - $ref: '#/components/parameters/SensitiveDataScannerGroupID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensitiveDataScannerGroupDeleteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveDataScannerGroupDeleteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Scanning Group
      tags:
        - Sensitive Data Scanner
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - data_scanner_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a group, including the order of the rules.

        Rules within the group are reordered by including a rules relationship.
        If the rules

        relationship is present, its data section MUST contain linkages for all
        of the rules

        currently in the group, and MUST NOT contain any others.
      operationId: UpdateScanningGroup
      parameters:
        - $ref: '#/components/parameters/SensitiveDataScannerGroupID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensitiveDataScannerGroupUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveDataScannerGroupUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Scanning Group
      tags:
        - Sensitive Data Scanner
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - data_scanner_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/sensitive-data-scanner/config/rules:
    post:
      description: >-
        Create a scanning rule in a sensitive data scanner group, ordered last.

        The posted rule MUST include a group relationship.

        It MUST include either a standard_pattern relationship or a regex
        attribute, but not both.

        If included_attributes is empty or missing, we will scan all attributes
        except

        excluded_attributes. If both are missing, we will scan the whole event.
      operationId: CreateScanningRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensitiveDataScannerRuleCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveDataScannerCreateRuleResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create Scanning Rule
      tags:
        - Sensitive Data Scanner
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - data_scanner_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/sensitive-data-scanner/config/rules/{rule_id}:
    delete:
      description: Delete a given rule.
      operationId: DeleteScanningRule
      parameters:
        - $ref: '#/components/parameters/SensitiveDataScannerRuleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensitiveDataScannerRuleDeleteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveDataScannerRuleDeleteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Scanning Rule
      tags:
        - Sensitive Data Scanner
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - data_scanner_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a scanning rule.

        The request body MUST NOT include a standard_pattern relationship, as
        that relationship

        is non-editable. Trying to edit the regex attribute of a rule with a
        standard_pattern

        relationship will also result in an error.
      operationId: UpdateScanningRule
      parameters:
        - $ref: '#/components/parameters/SensitiveDataScannerRuleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SensitiveDataScannerRuleUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveDataScannerRuleUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Scanning Rule
      tags:
        - Sensitive Data Scanner
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - data_scanner_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/sensitive-data-scanner/config/standard-patterns:
    get:
      description: Returns all standard patterns.
      operationId: ListStandardPatterns
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SensitiveDataScannerStandardPatternsResponseData
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List standard patterns
      tags:
        - Sensitive Data Scanner
      x-permission:
        operator: OR
        permissions:
          - data_scanner_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/series:
    post:
      description: >-
        The metrics end-point allows you to post time-series data that can be
        graphed on Datadog’s dashboards.

        The maximum payload size is 500 kilobytes (512000 bytes). Compressed
        payloads must have a decompressed size of less than 5 megabytes (5242880
        bytes).


        If you’re submitting metrics directly to the Datadog API without using
        DogStatsD, expect:


        - 64 bits for the timestamp

        - 64 bits for the value

        - 20 bytes for the metric names

        - 50 bytes for the timeseries

        - The full payload is approximately 100 bytes.


        Host name is one of the resources in the Resources field.
      operationId: SubmitMetrics
      parameters:
        - description: HTTP header used to compress the media-type.
          in: header
          name: Content-Encoding
          required: false
          schema:
            $ref: '#/components/schemas/MetricContentEncoding'
      requestBody:
        content:
          application/json:
            examples:
              dynamic-points:
                description: >-
                  Post time-series data that can be graphed on Datadog’s
                  dashboards.
                summary: Dynamic Points
                x-variables:
                  NOW: $(date +%s)
            schema:
              $ref: '#/components/schemas/MetricPayload'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAccepted'
          description: Payload accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Request timeout
        '413':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Payload too large
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
      summary: Submit metrics
      tags:
        - Metrics
      x-codegen-request-body-name: body
  /api/v2/service_accounts:
    post:
      description: Create a service account for your organization.
      operationId: CreateServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a service account
      tags:
        - Service Accounts
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - service_account_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/service_accounts/{service_account_id}/application_keys:
    get:
      description: List all application keys available for this service account.
      operationId: ListServiceAccountApplicationKeys
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/ApplicationKeysSortParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationKeysResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List application keys for this service account
      tags:
        - Service Accounts
      x-permission:
        operator: OR
        permissions:
          - service_account_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Create an application key for this service account.
      operationId: CreateServiceAccountApplicationKey
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an application key for this service account
      tags:
        - Service Accounts
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - service_account_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/service_accounts/{service_account_id}/application_keys/{app_key_id}:
    delete:
      description: Delete an application key owned by this service account.
      operationId: DeleteServiceAccountApplicationKey
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an application key for this service account
      tags:
        - Service Accounts
      x-permission:
        operator: OR
        permissions:
          - service_account_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: Get an application key owned by this service account.
      operationId: GetServiceAccountApplicationKey
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialApplicationKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get one application key for this service account
      tags:
        - Service Accounts
      x-permission:
        operator: OR
        permissions:
          - service_account_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: Edit an application key owned by this service account.
      operationId: UpdateServiceAccountApplicationKey
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
        - $ref: '#/components/parameters/ApplicationKeyID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an application key for this service account
      tags:
        - Service Accounts
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - service_account_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/services:
    get:
      deprecated: true
      description: >-
        Get all incident services uploaded for the requesting user's
        organization. If the `include[users]` query parameter is provided, the
        included attribute will contain the users related to these incident
        services.
      operationId: ListIncidentServices
      parameters:
        - $ref: '#/components/parameters/IncidentServiceIncludeQueryParameter'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/IncidentServiceSearchQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServicesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of all incident services
      tags:
        - Incident Services
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: '**Note**: This endpoint is deprecated.'
    post:
      deprecated: true
      description: Creates a new incident service.
      operationId: CreateIncidentService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentServiceCreateRequest'
        description: Incident Service Payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Create a new incident service
      tags:
        - Incident Services
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: '**Note**: This endpoint is deprecated.'
  /api/v2/services/definitions:
    get:
      description: Get a list of all service definitions from the Datadog Service Catalog.
      operationId: ListServiceDefinitions
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/SchemaVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDefinitionsListResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_read
      summary: Get all service definitions
      tags:
        - Service Definition
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - apm_service_catalog_read
    post:
      description: Create or update service definition in the Datadog Service Catalog.
      operationId: CreateOrUpdateServiceDefinitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDefinitionsCreateRequest'
        description: Service Definition YAML/JSON.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDefinitionCreateResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Create or update service definition
      tags:
        - Service Definition
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_service_catalog_write
  /api/v2/services/definitions/{service_name}:
    delete:
      description: Delete a single service definition in the Datadog Service Catalog.
      operationId: DeleteServiceDefinition
      parameters:
        - $ref: '#/components/parameters/ServiceName'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_write
      summary: Delete a single service definition
      tags:
        - Service Definition
      x-permission:
        operator: OR
        permissions:
          - apm_service_catalog_write
    get:
      description: Get a single service definition from the Datadog Service Catalog.
      operationId: GetServiceDefinition
      parameters:
        - $ref: '#/components/parameters/ServiceName'
        - $ref: '#/components/parameters/SchemaVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDefinitionGetResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_service_catalog_read
      summary: Get a single service definition
      tags:
        - Service Definition
      x-permission:
        operator: OR
        permissions:
          - apm_service_catalog_read
  /api/v2/services/{service_id}:
    delete:
      deprecated: true
      description: Deletes an existing incident service.
      operationId: DeleteIncidentService
      parameters:
        - $ref: '#/components/parameters/IncidentServiceIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Delete an existing incident service
      tags:
        - Incident Services
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: '**Note**: This endpoint is deprecated.'
    get:
      deprecated: true
      description: >-
        Get details of an incident service. If the `include[users]` query
        parameter is provided,

        the included attribute will contain the users related to these incident
        services.
      operationId: GetIncidentService
      parameters:
        - $ref: '#/components/parameters/IncidentServiceIDPathParameter'
        - $ref: '#/components/parameters/IncidentServiceIncludeQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get details of an incident service
      tags:
        - Incident Services
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: '**Note**: This endpoint is deprecated.'
    patch:
      deprecated: true
      description: >-
        Updates an existing incident service. Only provide the attributes which
        should be updated as this request is a partial update.
      operationId: UpdateIncidentService
      parameters:
        - $ref: '#/components/parameters/IncidentServiceIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentServiceUpdateRequest'
        description: Incident Service Payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Update an existing incident service
      tags:
        - Incident Services
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: '**Note**: This endpoint is deprecated.'
  /api/v2/siem-historical-detections/jobs:
    get:
      description: List historical jobs.
      operationId: ListHistoricalJobs
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: The order of the jobs in results.
          example: status
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: Query used to filter items from the fetched list.
          example: security:attack status:high
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHistoricalJobsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: List historical jobs
      tags:
        - Security Monitoring
      x-unstable: |-
        **Note**: This endpoint is in beta and may be subject to changes.
        Please check the documentation regularly for updates.
    post:
      description: Run a historical job.
      operationId: RunHistoricalJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunHistoricalJobRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreateResponse'
          description: Status created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Run a historical job
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
      x-unstable: |-
        **Note**: This endpoint is in beta and may be subject to changes.
        Please check the documentation regularly for updates.
  /api/v2/siem-historical-detections/jobs/signal_convert:
    post:
      description: Convert a job result to a signal.
      operationId: ConvertJobResultToSignal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertJobResultsToSignalsRequest'
        required: true
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Convert a job result to a signal
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_signals_write
      x-unstable: |-
        **Note**: This endpoint is in beta and may be subject to changes.
        Please check the documentation regularly for updates.
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/siem-historical-detections/jobs/{job_id}:
    delete:
      description: Delete an existing job.
      operationId: DeleteHistoricalJob
      parameters:
        - $ref: '#/components/parameters/HistoricalJobID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Delete an existing job
      tags:
        - Security Monitoring
      x-unstable: |-
        **Note**: This endpoint is in beta and may be subject to changes.
        Please check the documentation regularly for updates.
    get:
      description: Get a job's details.
      operationId: GetHistoricalJob
      parameters:
        - $ref: '#/components/parameters/HistoricalJobID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalJobResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_read
      summary: Get a job's details
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_read
      x-unstable: |-
        **Note**: This endpoint is in beta and may be subject to changes.
        Please check the documentation regularly for updates.
  /api/v2/siem-historical-detections/jobs/{job_id}/cancel:
    patch:
      description: Cancel a historical job.
      operationId: CancelHistoricalJob
      parameters:
        - $ref: '#/components/parameters/HistoricalJobID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - security_monitoring_rules_write
      summary: Cancel a historical job
      tags:
        - Security Monitoring
      x-permission:
        operator: OR
        permissions:
          - security_monitoring_rules_write
      x-unstable: |-
        **Note**: This endpoint is in beta and may be subject to changes.
        Please check the documentation regularly for updates.
  /api/v2/slo/report:
    post:
      description: >-
        Create a job to generate an SLO report. The report job is processed
        asynchronously and eventually results in a CSV report being available
        for download.


        Check the status of the job and download the CSV report using the
        returned `report_id`.
      operationId: CreateSLOReportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SloReportCreateRequest'
        description: Create SLO report job request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOReportPostResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - slos_read
      summary: Create a new SLO report
      tags:
        - Service Level Objectives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - slos_read
      x-unstable: >-
        **Note**: This feature is in private beta. To request access, use the
        request access form in the [Service Level
        Objectives](https://docs.datadoghq.com/service_management/service_level_objectives/#slo-csv-export)
        docs.
  /api/v2/slo/report/{report_id}/download:
    get:
      description: >-
        Download an SLO report. This can only be performed after the report job
        has completed.


        Reports are not guaranteed to exist indefinitely. Datadog recommends
        that you download the report as soon as it is available.
      operationId: GetSLOReport
      parameters:
        - $ref: '#/components/parameters/ReportID'
      responses:
        '200':
          content:
            text/csv:
              schema:
                type: string
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - slos_read
      summary: Get SLO report
      tags:
        - Service Level Objectives
      x-unstable: >-
        **Note**: This feature is in private beta. To request access, use the
        request access form in the [Service Level
        Objectives](https://docs.datadoghq.com/service_management/service_level_objectives/#slo-csv-export)
        docs.
  /api/v2/slo/report/{report_id}/status:
    get:
      description: Get the status of the SLO report job.
      operationId: GetSLOReportJobStatus
      parameters:
        - $ref: '#/components/parameters/ReportID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOReportStatusGetResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - slos_read
      summary: Get SLO report status
      tags:
        - Service Level Objectives
      x-unstable: >-
        **Note**: This feature is in private beta. To request access, use the
        request access form in the [Service Level
        Objectives](https://docs.datadoghq.com/service_management/service_level_objectives/#slo-csv-export)
        docs.
  /api/v2/spans/analytics/aggregate:
    post:
      description: >-
        The API endpoint to aggregate spans into buckets and compute metrics and
        timeseries.

        This endpoint is rate limited to `300` requests per hour.
      operationId: AggregateSpans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpansAggregateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansAggregateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_read
      summary: Aggregate spans
      tags:
        - Spans
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - apm_read
  /api/v2/spans/events:
    get:
      description: |-
        List endpoint returns spans that match a span search query.
        [Results are paginated][1].

        Use this endpoint to see your latest spans.
        This endpoint is rate limited to `300` requests per hour.

        [1]: /logs/guide/collect-multiple-logs-with-pagination?tab=v2api
      operationId: ListSpansGet
      parameters:
        - description: Search query following spans syntax.
          example: '@datacenter:us @role:db'
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: >-
            Minimum timestamp for requested spans. Supports date-time ISO8601,
            date math, and regular timestamps (milliseconds).
          example: '2023-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            type: string
        - description: >-
            Maximum timestamp for requested spans. Supports date-time ISO8601,
            date math, and regular timestamps (milliseconds).
          example: '2023-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            type: string
        - description: Order of spans in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/SpansSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of spans in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/SpansBadRequestResponse'
        '403':
          $ref: '#/components/responses/SpansForbiddenResponse'
        '422':
          $ref: '#/components/responses/SpansUnprocessableEntityResponse'
        '429':
          $ref: '#/components/responses/SpansTooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_read
      summary: Get a list of spans
      tags:
        - Spans
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
  /api/v2/spans/events/search:
    post:
      description: |-
        List endpoint returns spans that match a span search query.
        [Results are paginated][1].

        Use this endpoint to build complex spans filtering and search.
        This endpoint is rate limited to `300` requests per hour.

        [1]: /logs/guide/collect-multiple-logs-with-pagination?tab=v2api
      operationId: ListSpans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpansListRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/SpansBadRequestResponse'
        '403':
          $ref: '#/components/responses/SpansForbiddenResponse'
        '422':
          $ref: '#/components/responses/SpansUnprocessableEntityResponse'
        '429':
          $ref: '#/components/responses/SpansTooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - apm_read
      summary: Search spans
      tags:
        - Spans
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.data.attributes.page.cursor
        cursorPath: meta.page.after
        limitParam: body.data.attributes.page.limit
        resultsPath: data
  /api/v2/synthetics/settings/on_demand_concurrency_cap:
    get:
      description: Get the on-demand concurrency cap.
      operationId: GetOnDemandConcurrencyCap
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnDemandConcurrencyCapResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the on-demand concurrency cap
      tags:
        - Synthetics
      x-permission:
        operator: OR
        permissions:
          - billing_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    post:
      description: Save new value for on-demand concurrency cap.
      operationId: SetOnDemandConcurrencyCap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnDemandConcurrencyCapAttributes'
        description: .
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnDemandConcurrencyCapResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Save new value for on-demand concurrency cap
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - billing_edit
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/team:
    get:
      description: >-
        Get all teams.

        Can be used to search for teams using the `filter[keyword]` and
        `filter[me]` query parameters.
      operationId: ListTeams
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
        - description: Specifies the order of the returned teams
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/ListTeamsSort'
        - description: >-
            Included related resources optionally requested. Allowed enum
            values: `team_links, user_team_permissions`
          in: query
          name: include
          required: false
          schema:
            items:
              $ref: '#/components/schemas/ListTeamsInclude'
            type: array
        - description: Search query. Can be team name, team handle, or email of team member
          in: query
          name: filter[keyword]
          required: false
          schema:
            type: string
        - description: When true, only returns teams the current user belongs to
          in: query
          name: filter[me]
          required: false
          schema:
            type: boolean
        - description: List of fields that need to be fetched.
          explode: false
          in: query
          name: fields[team]
          required: false
          schema:
            items:
              $ref: '#/components/schemas/TeamsField'
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get all teams
      tags:
        - Teams
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - teams_read
    post:
      description: >-
        Create a new team.

        User IDs passed through the `users` relationship field are added to the
        team.
      operationId: CreateTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: CREATED
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
            - teams_manage
      summary: Create a team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: AND
        permissions:
          - teams_read
          - teams_manage
  /api/v2/team/{team_id}:
    delete:
      description: Remove a team using the team's `id`.
      operationId: DeleteTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
            - teams_manage
      summary: Remove a team
      tags:
        - Teams
      x-permission:
        operator: AND
        permissions:
          - teams_read
          - teams_manage
    get:
      description: Get a single team using the team's `id`.
      operationId: GetTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get a team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    patch:
      description: >-
        Update a team using the team's `id`.

        If the `team_links` relationship is present, the associated links are
        updated to be in the order they appear in the array, and any existing
        team links not present are removed.
      operationId: UpdateTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/links:
    get:
      description: Get all links for a given team.
      operationId: GetTeamLinks
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinksResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get links for a team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    post:
      description: Add a new link to a team.
      operationId: CreateTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamLinkCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Create a team link
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/links/{link_id}:
    delete:
      description: Remove a link from a team.
      operationId: DeleteTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Remove a team link
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    get:
      description: Get a single link for a team.
      operationId: GetTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get a team link
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    patch:
      description: Update a team link.
      operationId: UpdateTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamLinkCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a team link
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/memberships:
    get:
      description: Get a paginated list of members for a team
      operationId: GetTeamMemberships
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: Specifies the order of returned team memberships
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/GetTeamMembershipsSort'
        - description: Search query, can be user email or name
          in: query
          name: filter[keyword]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get team memberships
      tags:
        - Teams
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - teams_read
    post:
      description: Add a user to a team.
      operationId: CreateTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTeamRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Add a user to a team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/memberships/{user_id}:
    delete:
      description: Remove a user from a team.
      operationId: DeleteTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Remove a user from a team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    patch:
      description: Update a user's membership attributes on a team.
      operationId: UpdateTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTeamUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a user's membership attributes on a team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/permission-settings:
    get:
      description: Get all permission settings for a given team.
      operationId: GetTeamPermissionSettings
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamPermissionSettingsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get permission settings for a team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/permission-settings/{action}:
    put:
      description: Update a team permission setting for a given team.
      operationId: UpdateTeamPermissionSetting
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: action
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPermissionSettingUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamPermissionSettingResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update permission setting for team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/teams:
    get:
      deprecated: true
      description: >-
        Get all incident teams for the requesting user's organization. If the
        `include[users]` query parameter is provided, the included attribute
        will contain the users related to these incident teams.
      operationId: ListIncidentTeams
      parameters:
        - $ref: '#/components/parameters/IncidentTeamIncludeQueryParameter'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/IncidentTeamSearchQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of all incident teams
      tags:
        - Incident Teams
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is deprecated. See the [Teams API
        endpoints](https://docs.datadoghq.com/api/latest/teams/).
    post:
      deprecated: true
      description: Creates a new incident team.
      operationId: CreateIncidentTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTeamCreateRequest'
        description: Incident Team Payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Create a new incident team
      tags:
        - Incident Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: >-
        **Note**: This endpoint is deprecated. See the [Teams API
        endpoints](https://docs.datadoghq.com/api/latest/teams/).
  /api/v2/teams/{team_id}:
    delete:
      deprecated: true
      description: Deletes an existing incident team.
      operationId: DeleteIncidentTeam
      parameters:
        - $ref: '#/components/parameters/IncidentTeamIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Delete an existing incident team
      tags:
        - Incident Teams
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: >-
        **Note**: This endpoint is deprecated. See the [Teams API
        endpoints](https://docs.datadoghq.com/api/latest/teams/).
    get:
      deprecated: true
      description: >-
        Get details of an incident team. If the `include[users]` query parameter
        is provided,

        the included attribute will contain the users related to these incident
        teams.
      operationId: GetIncidentTeam
      parameters:
        - $ref: '#/components/parameters/IncidentTeamIDPathParameter'
        - $ref: '#/components/parameters/IncidentTeamIncludeQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get details of an incident team
      tags:
        - Incident Teams
      x-permission:
        operator: OR
        permissions:
          - incident_read
      x-unstable: >-
        **Note**: This endpoint is deprecated. See the [Teams API
        endpoints](https://docs.datadoghq.com/api/latest/teams/).
    patch:
      deprecated: true
      description: >-
        Updates an existing incident team. Only provide the attributes which
        should be updated as this request is a partial update.
      operationId: UpdateIncidentTeam
      parameters:
        - $ref: '#/components/parameters/IncidentTeamIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTeamUpdateRequest'
        description: Incident Team Payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Update an existing incident team
      tags:
        - Incident Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - incident_settings_write
      x-unstable: >-
        **Note**: This endpoint is deprecated. See the [Teams API
        endpoints](https://docs.datadoghq.com/api/latest/teams/).
  /api/v2/usage/application_security:
    get:
      deprecated: true
      description: >-
        Get hourly usage for application security .

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageApplicationSecurityMonitoring
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: >-
                  #/components/schemas/UsageApplicationSecurityMonitoringResponse
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for application security
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/billing_dimension_mapping:
    get:
      description: >-
        Get a mapping of billing dimensions to the corresponding keys for the
        supported usage metering public API endpoints.

        Mapping data is updated on a monthly cadence.


        This endpoint is only accessible to [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetBillingDimensionMapping
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, and for mappings beginning this
            month. Defaults to the current month.
          in: query
          name: filter[month]
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            String to specify whether to retrieve active billing dimension
            mappings for the contract or for all available mappings. Allowed
            views have the string `active` or `all`. Defaults to `active`.
          in: query
          name: filter[view]
          required: false
          schema:
            default: active
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/BillingDimensionsMappingResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get billing dimension mapping for usage endpoints
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/cost_by_org:
    get:
      deprecated: true
      description: >-
        Get cost across multi-org account.

        Cost by org data for a given month becomes available no later than the
        16th of the following month.

        **Note:** This endpoint has been deprecated. Please use the new endpoint

        [`/historical_cost`](https://docs.datadoghq.com/api/latest/usage-metering/#get-historical-cost-across-your-account)

        instead.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetCostByOrg
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost beginning this month.
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get cost across multi-org account
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/estimated_cost:
    get:
      description: >-
        Get estimated cost across multi-org and single root-org accounts.

        Estimated cost data is only available for the current month and previous
        month

        and is delayed by up to 72 hours from when it was incurred.

        To access historical costs prior to this, use the `/historical_cost`
        endpoint.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetEstimatedCostByOrg
      parameters:
        - description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`. Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost beginning this month. **Either start_month or start_date should
            be specified, but not both.** (start_month cannot go beyond two
            months in the past). Provide an `end_month` to view month-over-month
            cost.
          in: query
          name: start_month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for
            cost beginning this day. **Either start_month or start_date should
            be specified, but not both.** (start_date cannot go beyond two
            months in the past). Provide an `end_date` to view day-over-day
            cumulative cost.
          in: query
          name: start_date
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for
            cost ending this day.
          in: query
          name: end_date
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to `false`. 
          in: query
          name: include_connected_accounts
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get estimated cost across your account
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/historical_cost:
    get:
      description: >-
        Get historical cost across multi-org and single root-org accounts.

        Cost data for a given month becomes available no later than the 16th of
        the following month.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetHistoricalCostByOrg
      parameters:
        - description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`.  Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost beginning this month.
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to `false`. 
          in: query
          name: include_connected_accounts
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get historical cost across your account
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/hourly_usage:
    get:
      description: Get hourly usage by product family.
      operationId: GetHourlyUsage
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: filter[timestamp][start]
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: filter[timestamp][end]
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Comma separated list of product families to retrieve. Available
            families are `all`, `analyzed_logs`,

            `application_security`, `audit_trail`, `serverless`, `ci_app`,
            `cloud_cost_management`, `cloud_siem`,

            `csm_container_enterprise`, `csm_host_enterprise`, `cspm`,
            `custom_events`, `cws`, `dbm`, `error_tracking`,

            `fargate`, `infra_hosts`, `incident_management`, `indexed_logs`,
            `indexed_spans`, `ingested_spans`, `iot`,

            `lambda_traced_invocations`, `logs`, `network_flows`,
            `network_hosts`, `network_monitoring`, `observability_pipelines`,

            `online_archive`, `profiling`, `rum`, `rum_browser_sessions`,
            `rum_mobile_sessions`, `sds`, `snmp`, `software_delivery`,

            `synthetics_api`, `synthetics_browser`, `synthetics_mobile`,
            `synthetics_parallel_testing`, `timeseries`, `vuln_management`,

            and `workflow_executions`.

            The following product family has been **deprecated**: `audit_logs`.
          in: query
          name: filter[product_families]
          required: true
          schema:
            type: string
        - description: Include child org usage in the response. Defaults to false.
          in: query
          name: filter[include_descendants]
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to false.
          in: query
          name: filter[include_connected_accounts]
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            Include breakdown of usage by subcategories where applicable (for
            product family logs only). Defaults to false.
          in: query
          name: filter[include_breakdown]
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            Comma separated list of product family versions to use in the format
            `product_family:version`. For example,

            `infra_hosts:1.0.0`. If this parameter is not used, the API will use
            the latest version of each requested

            product family. Currently all families have one version `1.0.0`.
          in: query
          name: filter[versions]
          required: false
          schema:
            type: string
        - description: >-
            Maximum number of results to return (between 1 and 500) - defaults
            to 500 if limit not specified.
          in: query
          name: page[limit]
          required: false
          schema:
            default: 500
            format: int32
            maximum: 500
            minimum: 1
            type: integer
        - description: >-
            List following results with a next_record_id provided in the
            previous query.
          in: query
          name: page[next_record_id]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/HourlyUsageResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage by product family
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/lambda_traced_invocations:
    get:
      deprecated: true
      description: >-
        Get hourly usage for Lambda traced invocations.

        **Note:** This endpoint has been deprecated.. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageLambdaTracedInvocations
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLambdaTracedInvocationsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for Lambda traced invocations
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/observability_pipelines:
    get:
      deprecated: true
      description: >-
        Get hourly usage for observability pipelines.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageObservabilityPipelines
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageObservabilityPipelinesResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for observability pipelines
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/projected_cost:
    get:
      description: >-
        Get projected cost across multi-org and single root-org accounts.

        Projected cost data is only available for the current month and becomes
        available around the 12th of the month.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetProjectedCost
      parameters:
        - description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`. Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to `false`. 
          in: query
          name: include_connected_accounts
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/ProjectedCostResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get projected cost across your account
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/user_invitations:
    post:
      description: >-
        Sends emails to one or more users inviting them to join the
        organization.
      operationId: SendInvitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitationsRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_invite
      summary: Send invitation emails
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_invite
  /api/v2/user_invitations/{user_invitation_uuid}:
    get:
      description: Returns a single user invitation by its UUID.
      operationId: GetInvitation
      parameters:
        - description: The UUID of the user invitation.
          in: path
          name: user_invitation_uuid
          required: true
          schema:
            example: 00000000-0000-0000-3456-000000000000
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_invite
      summary: Get a user invitation
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_invite
  /api/v2/users:
    get:
      description: |-
        Get the list of all users in the organization. This list includes
        all users even if they are deactivated or unverified.
      operationId: ListUsers
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: >-
            User attribute to order results by. Sort order is ascending by
            default.

            Sort order is descending if the field

            is prefixed by a negative sign, for example `sort=-name`. Options:
            `name`,

            `modified_at`, `user_count`.
          in: query
          name: sort
          required: false
          schema:
            default: name
            example: name
            type: string
        - description: 'Direction of sort. Options: `asc`, `desc`.'
          in: query
          name: sort_dir
          required: false
          schema:
            $ref: '#/components/schemas/QuerySortOrder'
        - description: Filter all users by the given string. Defaults to no filtering.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: >-
            Filter on status attribute.

            Comma separated list, with possible values `Active`, `Pending`, and
            `Disabled`.

            Defaults to no filtering.
          in: query
          name: filter[status]
          required: false
          schema:
            example: Active
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: List all users
      tags:
        - Users
      x-codegen-request-body-name: body
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    post:
      description: Create a user for your organization.
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_invite
      summary: Create a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_invite
  /api/v2/users/{user_id}:
    delete:
      description: |-
        Disable a user. Can only be used with an application key belonging
        to an administrator user.
      operationId: DisableUser
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Disable a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
          - service_account_write
    get:
      description: Get a user in the organization specified by the user’s `user_id`.
      operationId: GetUser
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: Get user details
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    patch:
      description: |-
        Edit a user. Can only be used with an application key belonging
        to an administrator user.
      operationId: UpdateUser
      parameters:
        - $ref: '#/components/parameters/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Update a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
          - service_account_write
  /api/v2/users/{user_id}/orgs:
    get:
      description: >-
        Get a user organization. Returns the user information and all
        organizations

        joined by this user.
      operationId: ListUserOrganizations
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get a user organization
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/users/{user_id}/permissions:
    get:
      description: |-
        Get a user permission set. Returns a list of the user’s permissions
        granted by the associated user's roles.
      operationId: ListUserPermissions
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: Get a user permissions
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_read
  /api/v2/users/{user_uuid}/memberships:
    get:
      description: Get a list of memberships for a user
      operationId: GetUserMemberships
      parameters:
        - description: None
          in: path
          name: user_uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsResponse'
          description: Represents a user's association to a team
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get user memberships
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/workflows:
    post:
      description: >-
        Create a new workflow, returning the workflow ID. This API requires an
        application key scoped with the `workflows_write` permission.
      operationId: CreateWorkflow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowResponse'
          description: Successfully created a workflow.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too many requests
      summary: Create a Workflow
      tags:
        - Workflow Automation
      x-permission:
        operator: OR
        permissions:
          - workflows_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/workflows/{workflow_id}:
    delete:
      description: >-
        Delete a workflow by ID. This API requires an application key scoped
        with the `workflows_write` permission.
      operationId: DeleteWorkflow
      parameters:
        - $ref: '#/components/parameters/WorkflowId'
      responses:
        '204':
          description: Successfully deleted a workflow.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too many requests
      summary: Delete an existing Workflow
      tags:
        - Workflow Automation
      x-permission:
        operator: OR
        permissions:
          - workflows_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    get:
      description: >-
        Get a workflow by ID.  This API requires an application key scoped with
        the `workflows_read` permission.
      operationId: GetWorkflow
      parameters:
        - $ref: '#/components/parameters/WorkflowId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowResponse'
          description: Successfully got a workflow.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too many requests
      summary: Get an existing Workflow
      tags:
        - Workflow Automation
      x-permission:
        operator: OR
        permissions:
          - workflows_read
      security:
        - apiKeyAuth: []
          appKeyAuth: []
    patch:
      description: >-
        Update a workflow by ID. This API requires an application key scoped
        with the `workflows_write` permission.
      operationId: UpdateWorkflow
      parameters:
        - $ref: '#/components/parameters/WorkflowId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkflowRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkflowResponse'
          description: Successfully updated a workflow.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too many requests
      summary: Update an existing Workflow
      tags:
        - Workflow Automation
      x-permission:
        operator: OR
        permissions:
          - workflows_write
      security:
        - apiKeyAuth: []
          appKeyAuth: []
  /api/v2/workflows/{workflow_id}/instances:
    get:
      description: >-
        List all instances of a given workflow. This API requires an application
        key scoped with the workflows_read permission.
      operationId: ListWorkflowInstances
      parameters:
        - $ref: '#/components/parameters/WorkflowId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowListInstancesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - workflows_read
      summary: List workflow instances
      tags:
        - Workflow Automation
      x-permission:
        operator: OR
        permissions:
          - workflows_read
    post:
      description: >-
        Execute the given workflow. This API requires an application key scoped
        with the workflows_run permission.
      operationId: CreateWorkflowInstance
      parameters:
        - $ref: '#/components/parameters/WorkflowId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowInstanceCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowInstanceCreateResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - workflows_run
      summary: Execute a workflow
      tags:
        - Workflow Automation
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - workflows_run
  /api/v2/workflows/{workflow_id}/instances/{instance_id}:
    get:
      description: >-
        Get a specific execution of a given workflow. This API requires an
        application key scoped with the workflows_read permission.
      operationId: GetWorkflowInstance
      parameters:
        - $ref: '#/components/parameters/WorkflowId'
        - $ref: '#/components/parameters/InstanceId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorklflowGetInstanceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - workflows_read
      summary: Get a workflow instance
      tags:
        - Workflow Automation
      x-permission:
        operator: OR
        permissions:
          - workflows_read
  /api/v2/workflows/{workflow_id}/instances/{instance_id}/cancel:
    put:
      description: >-
        Cancels a specific execution of a given workflow. This API requires an
        application key scoped with the workflows_run permission.
      operationId: CancelWorkflowInstance
      parameters:
        - $ref: '#/components/parameters/WorkflowId'
        - $ref: '#/components/parameters/InstanceId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorklflowCancelInstanceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Cancel a workflow instance
      tags:
        - Workflow Automation
      x-permission:
        operator: OR
        permissions:
          - workflows_run
      security:
        - apiKeyAuth: []
          appKeyAuth: []
components:
  securitySchemes:
    Auth:
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            apm_api_catalog_read: View API catalog and API definitions.
            apm_api_catalog_write: Add, modify, and delete API catalog definitions.
            apm_read: Read and query APM and Trace Analytics.
            apm_service_catalog_read: View service catalog and service definitions.
            apm_service_catalog_write: >-
              Add, modify, and delete service catalog definitions when those
              definitions are maintained by Datadog.
            cases_read: View Cases.
            cases_write: Create and update cases.
            ci_visibility_pipelines_write: Create CI Visibility pipeline spans using the API.
            ci_visibility_read: View CI Visibility.
            cloud_cost_management_read: >-
              View Cloud Cost pages. This does not restrict access to the cloud
              cost data source in dashboards and notebooks.
            cloud_cost_management_write: Configure cloud cost accounts and global customizations.
            code_analysis_read: View Code Analysis.
            continuous_profiler_pgo_read: >-
              Read and query Continuous Profiler data for Profile-Guided
              Optimization (PGO).
            create_webhooks: Create webhooks integrations.
            dashboards_embed_share: >-
              Create, modify, and delete shared dashboards with share type
              'embed'.
            dashboards_invite_share: >-
              Create, modify, and delete shared dashboards with share type
              'invite'.
            dashboards_public_share: >-
              Generate public and authenticated links to share dashboards or
              embeddable graphs externally.
            dashboards_read: View dashboards.
            dashboards_write: Create and change dashboards.
            data_scanner_read: View Data Scanner configurations.
            data_scanner_write: Edit Data Scanner configurations.
            embeddable_graphs_share: Generate public links to share embeddable graphs externally.
            events_read: Read Events data.
            hosts_read: List hosts and their attributes.
            incident_notification_settings_write: Configure Incidents Notification settings.
            incident_read: View incidents in Datadog.
            incident_settings_write: Configure Incident Settings.
            incident_write: Create, view, and manage incidents in Datadog.
            metrics_read: View custom metrics.
            monitors_downtime: >-
              Set downtimes to suppress alerts from any monitor in an
              organization. Mute and unmute monitors. The ability to write
              monitors is not required to set downtimes.
            monitors_read: View monitors.
            monitors_write: Edit and delete individual monitors.
            org_management: >-
              Edit org configurations, including authentication and certain
              security preferences such as configuring SAML, renaming an org,
              configuring allowed login methods, creating child orgs,
              subscribing & unsubscribing from apps in the marketplace, and
              enabling & disabling Remote Configuration for the entire
              organization.
            security_comments_read: Read comments of vulnerabilities.
            security_monitoring_filters_read: Read Security Filters.
            security_monitoring_filters_write: Create, edit, and delete Security Filters.
            security_monitoring_findings_read: >-
              View a list of findings that include both misconfigurations and
              identity risks.
            security_monitoring_notification_profiles_read: View Rule Security Notification rules.
            security_monitoring_notification_profiles_write: Create, edit, and delete Security Notification rules.
            security_monitoring_rules_read: Read Detection Rules.
            security_monitoring_rules_write: Create and edit Detection Rules.
            security_monitoring_signals_read: View Security Signals.
            security_monitoring_suppressions_read: Read Rule Suppressions.
            security_monitoring_suppressions_write: Write Rule Suppressions.
            security_pipelines_read: View Security Pipelines.
            security_pipelines_write: Create, edit, and delete CSM Security Pipelines.
            slos_corrections: >-
              Apply, edit, and delete SLO status corrections. A user with this
              permission can make status corrections, even if they do not have
              permission to edit those SLOs.
            slos_read: View SLOs and status corrections.
            slos_write: Create, edit, and delete SLOs.
            synthetics_global_variable_read: View, search, and use Synthetics global variables.
            synthetics_global_variable_write: Create, edit, and delete global variables for Synthetics.
            synthetics_private_location_read: View, search, and use Synthetics private locations.
            synthetics_private_location_write: >-
              Create and delete private locations in addition to having access
              to the associated installation guidelines.
            synthetics_read: List and view configured Synthetic tests and test results.
            synthetics_write: Create, edit, and delete Synthetic tests.
            teams_manage: >-
              Manage Teams. Create, delete, rename, and edit metadata of all
              Teams. To control Team membership across all Teams, use the User
              Access Manage permission.
            teams_read: >-
              Read Teams data. A User with this permission can view Team names,
              metadata, and which Users are on each Team.
            test_optimization_read: View Test Optimization.
            timeseries_query: Query Timeseries data.
            usage_read: View your organization's usage and usage attribution.
            user_access_invite: Invite other users to your organization.
            user_access_manage: >-
              Disable users, manage user roles, manage SAML-to-role mappings,
              and configure logs restriction queries.
            user_access_read: View users and their roles and settings.
            workflows_read: View workflows.
            workflows_run: Run workflows.
            workflows_write: Create, edit, and delete workflows.
          tokenUrl: /oauth2/v1/token
      type: oauth2
    apiKeyAuth:
      description: Your Datadog API Key.
      in: header
      name: DD-API-KEY
      type: apiKey
      x-env-name: DD_API_KEY
    apiKeyAuthQuery:
      description: Deprecated API Key as query argument.
      in: query
      name: api_key
      type: apiKey
      x-auth-id-alias: apiKeyAuth
      x-env-name: DD_API_KEY
    appKeyAuth:
      description: Your Datadog APP Key.
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
      x-env-name: DD_APP_KEY
    appKeyAuthQuery:
      description: Deprecated APP Key as query argument.
      in: query
      name: application_key
      type: apiKey
      x-auth-id-alias: appKeyAuth
      x-env-name: DD_APP_KEY
    bearerAuth:
      scheme: bearer
      type: http
      x-env-name: DD_BEARER_TOKEN
    AuthZ:
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            apm_api_catalog_read: View API catalog and API definitions.
            apm_api_catalog_write: Add, modify, and delete API catalog definitions.
            apm_read: Read and query APM and Trace Analytics.
            apm_service_catalog_read: View service catalog and service definitions.
            apm_service_catalog_write: >-
              Add, modify, and delete service catalog definitions when those
              definitions are maintained by Datadog.
            appsec_vm_read: >-
              View infrastructure, application code, and library
              vulnerabilities. This does not restrict API or inventory SQL
              access to the vulnerability data source.
            cases_read: View Cases.
            cases_write: Create and update cases.
            ci_visibility_pipelines_write: Create CI Visibility pipeline spans using the API.
            ci_visibility_read: View CI Visibility.
            cloud_cost_management_read: >-
              View Cloud Cost pages. This does not restrict access to the cloud
              cost data source in dashboards and notebooks.
            cloud_cost_management_write: Configure cloud cost accounts and global customizations.
            code_analysis_read: View Code Analysis.
            continuous_profiler_pgo_read: >-
              Read and query Continuous Profiler data for Profile-Guided
              Optimization (PGO).
            create_webhooks: Create webhooks integrations.
            dashboards_embed_share: >-
              Create, modify, and delete shared dashboards with share type
              'embed'.
            dashboards_invite_share: >-
              Create, modify, and delete shared dashboards with share type
              'invite'.
            dashboards_public_share: >-
              Generate public and authenticated links to share dashboards or
              embeddable graphs externally.
            dashboards_read: View dashboards.
            dashboards_write: Create and change dashboards.
            data_scanner_read: View Data Scanner configurations.
            data_scanner_write: Edit Data Scanner configurations.
            embeddable_graphs_share: Generate public links to share embeddable graphs externally.
            events_read: Read Events data.
            hosts_read: List hosts and their attributes.
            incident_notification_settings_write: Configure Incidents Notification settings.
            incident_read: View incidents in Datadog.
            incident_settings_write: Configure Incident Settings.
            incident_write: Create, view, and manage incidents in Datadog.
            metrics_read: View custom metrics.
            monitor_config_policy_write: Edit and delete monitor configuration.
            monitors_downtime: >-
              Set downtimes to suppress alerts from any monitor in an
              organization. Mute and unmute monitors. The ability to write
              monitors is not required to set downtimes.
            monitors_read: View monitors.
            monitors_write: Edit and delete individual monitors.
            org_management: >-
              Edit org configurations, including authentication and certain
              security preferences such as configuring SAML, renaming an org,
              configuring allowed login methods, creating child orgs,
              subscribing & unsubscribing from apps in the marketplace, and
              enabling & disabling Remote Configuration for the entire
              organization.
            security_comments_read: Read comments of vulnerabilities.
            security_monitoring_filters_read: Read Security Filters.
            security_monitoring_filters_write: Create, edit, and delete Security Filters.
            security_monitoring_findings_read: >-
              View a list of findings that include both misconfigurations and
              identity risks.
            security_monitoring_notification_profiles_read: View Rule Security Notification rules.
            security_monitoring_notification_profiles_write: Create, edit, and delete Security Notification rules.
            security_monitoring_rules_read: Read Detection Rules.
            security_monitoring_rules_write: Create and edit Detection Rules.
            security_monitoring_signals_read: View Security Signals.
            security_monitoring_suppressions_read: Read Rule Suppressions.
            security_monitoring_suppressions_write: Write Rule Suppressions.
            security_pipelines_read: View Security Pipelines.
            security_pipelines_write: Create, edit, and delete CSM Security Pipelines.
            slos_corrections: >-
              Apply, edit, and delete SLO status corrections. A user with this
              permission can make status corrections, even if they do not have
              permission to edit those SLOs.
            slos_read: View SLOs and status corrections.
            slos_write: Create, edit, and delete SLOs.
            synthetics_global_variable_read: View, search, and use Synthetics global variables.
            synthetics_global_variable_write: Create, edit, and delete global variables for Synthetics.
            synthetics_private_location_read: View, search, and use Synthetics private locations.
            synthetics_private_location_write: >-
              Create and delete private locations in addition to having access
              to the associated installation guidelines.
            synthetics_read: List and view configured Synthetic tests and test results.
            synthetics_write: Create, edit, and delete Synthetic tests.
            teams_manage: >-
              Manage Teams. Create, delete, rename, and edit metadata of all
              Teams. To control Team membership across all Teams, use the User
              Access Manage permission.
            teams_read: >-
              Read Teams data. A User with this permission can view Team names,
              metadata, and which Users are on each Team.
            test_optimization_read: View Test Optimization.
            timeseries_query: Query Timeseries data.
            usage_read: View your organization's usage and usage attribution.
            user_access_invite: Invite other users to your organization.
            user_access_manage: >-
              Disable users, manage user roles, manage SAML-to-role mappings,
              and configure logs restriction queries.
            user_access_read: View users and their roles and settings.
            workflows_read: View workflows.
            workflows_run: Run workflows.
            workflows_write: Create, edit, and delete workflows.
          tokenUrl: /oauth2/v1/token
      type: oauth2
  schemas:
    IPPrefixesAgents:
      description: Available prefix information for the Agent endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesAPI:
      description: Available prefix information for the API endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesAPM:
      description: Available prefix information for the APM endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesGlobal:
      description: Available prefix information for all Datadog endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesLogs:
      description: Available prefix information for the Logs endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesOrchestrator:
      description: Available prefix information for the Orchestrator endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesProcess:
      description: Available prefix information for the Process endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesRemoteConfiguration:
      description: Available prefix information for the Remote Configuration endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesSynthetics:
      description: Available prefix information for the Synthetics endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv4_by_location:
          additionalProperties:
            description: List of IPv4 prefixes.
            items:
              description: IPv4 prefix.
              type: string
            type: array
          description: List of IPv4 prefixes by location.
          type: object
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
        prefixes_ipv6_by_location:
          additionalProperties:
            description: List of IPv6 prefixes.
            items:
              description: IPv6 prefix.
              type: string
            type: array
          description: List of IPv6 prefixes by location.
          type: object
      type: object
    IPPrefixesSyntheticsPrivateLocations:
      description: >-
        Available prefix information for the Synthetics Private Locations
        endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesWebhooks:
      description: Available prefix information for the Webhook endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPRanges:
      description: IP ranges.
      properties:
        agents:
          $ref: '#/components/schemas/IPPrefixesAgents'
        api:
          $ref: '#/components/schemas/IPPrefixesAPI'
        apm:
          $ref: '#/components/schemas/IPPrefixesAPM'
        global:
          $ref: '#/components/schemas/IPPrefixesGlobal'
        logs:
          $ref: '#/components/schemas/IPPrefixesLogs'
        modified:
          description: Date when last updated, in the form `YYYY-MM-DD-hh-mm-ss`.
          example: 2019-10-31-20-00-00
          type: string
        orchestrator:
          $ref: '#/components/schemas/IPPrefixesOrchestrator'
        process:
          $ref: '#/components/schemas/IPPrefixesProcess'
        remote-configuration:
          $ref: '#/components/schemas/IPPrefixesRemoteConfiguration'
        synthetics:
          $ref: '#/components/schemas/IPPrefixesSynthetics'
        synthetics-private-locations:
          $ref: '#/components/schemas/IPPrefixesSyntheticsPrivateLocations'
        version:
          description: Version of the IP list.
          example: 11
          format: int64
          type: integer
        webhooks:
          $ref: '#/components/schemas/IPPrefixesWebhooks'
      type: object
    APIErrorResponsev1:
      description: Error response object.
      properties:
        errors:
          description: Array of errors returned by the API.
          example:
            - Bad Request
          items:
            description: Error description.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    ApiKey:
      description: Datadog API key.
      properties:
        created:
          description: Date of creation of the API key.
          example: '2019-08-02 15:31:07'
          readOnly: true
          type: string
        created_by:
          description: Datadog user handle that created the API key.
          example: john@example.com
          readOnly: true
          type: string
        key:
          description: API key.
          example: 1234512345123456abcabc912349abcd
          maxLength: 32
          minLength: 32
          readOnly: true
          type: string
        name:
          description: Name of your API key.
          example: example user
          type: string
      type: object
    ApiKeyListResponse:
      description: List of API and application keys available for a given organization.
      example:
        api_keys:
          - created_by: test_user
            key: 1234512345123456abcabc912349abcd
            name: app_key
      properties:
        api_keys:
          description: Array of API keys.
          items:
            $ref: '#/components/schemas/ApiKey'
          type: array
      type: object
    ApiKeyResponse:
      description: An API key with its associated metadata.
      example:
        api_key:
          created_by: test_user
          key: 1234512345123456abcabc912349abcd
          name: app_key
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKey'
      type: object
    ApplicationKey:
      description: An application key with its associated metadata.
      properties:
        hash:
          description: Hash of an application key.
          example: 1234512345123459cda4eb9ced49a3d84fd0138c
          maxLength: 40
          minLength: 40
          readOnly: true
          type: string
        name:
          description: Name of an application key.
          example: example user
          type: string
        owner:
          description: Owner of an application key.
          example: example.com
          readOnly: true
          type: string
      type: object
    ApplicationKeyListResponse:
      description: An application key response.
      example:
        application_keys:
          - hash: 1234512345123459cda4eb9ced49a3d84fd0138c
            name: app_key
            owner: test_user
      properties:
        application_keys:
          description: Array of application keys.
          items:
            $ref: '#/components/schemas/ApplicationKey'
          type: array
      type: object
    ApplicationKeyResponsev1:
      description: An application key response.
      example:
        application_key:
          hash: 1234512345123459cda4eb9ced49a3d84fd0138c
          name: app_key
          owner: test_user
      properties:
        application_key:
          $ref: '#/components/schemas/ApplicationKey'
      type: object
    ServiceCheckStatus:
      description: >-
        The status of a service check. Set to `0` for OK, `1` for warning, `2`
        for critical, and `3` for unknown.
      enum:
        - 0
        - 1
        - 2
        - 3
      example: 0
      format: int32
      type: integer
      x-enum-varnames:
        - OK
        - WARNING
        - CRITICAL
        - UNKNOWN
    ServiceCheck:
      description: An object containing service check and status.
      properties:
        check:
          description: The check.
          example: app.ok
          type: string
        host_name:
          description: The host name correlated with the check.
          example: app.host1
          type: string
        message:
          description: Message containing check status.
          example: app is running
          type: string
        status:
          $ref: '#/components/schemas/ServiceCheckStatus'
        tags:
          description: Tags related to a check.
          example:
            - environment:test
          items:
            description: Items related to a check.
            type: string
          type: array
        timestamp:
          description: Time of check.
          format: int64
          type: integer
      required:
        - check
        - status
        - tags
        - host_name
      type: object
    ServiceChecks:
      description: The service checks.
      items:
        $ref: '#/components/schemas/ServiceCheck'
      type: array
    IntakePayloadAcceptedv1:
      description: The payload accepted for intake.
      properties:
        status:
          description: The status of the intake payload.
          example: ok
          type: string
      type: object
    UsageSortDirection:
      default: desc
      description: The direction to sort by.
      enum:
        - desc
        - asc
      type: string
      x-enum-varnames:
        - DESC
        - ASC
    UsageSort:
      default: start_date
      description: The field to sort by.
      enum:
        - computed_on
        - size
        - start_date
        - end_date
      type: string
      x-enum-varnames:
        - COMPUTED_ON
        - SIZE
        - START_DATE
        - END_DATE
    UsageCustomReportsAttributes:
      description: The response containing attributes for custom reports.
      properties:
        computed_on:
          description: The date the specified custom report was computed.
          type: string
        end_date:
          description: The ending date of custom report.
          type: string
        size:
          description: size
          format: int64
          type: integer
        start_date:
          description: The starting date of custom report.
          type: string
        tags:
          description: A list of tags to apply to custom reports.
          items:
            description: A given tag in a list.
            example: env
            type: string
          type: array
      type: object
    UsageReportsType:
      default: reports
      description: The type of reports.
      enum:
        - reports
      example: reports
      type: string
      x-enum-varnames:
        - REPORTS
    UsageCustomReportsData:
      description: The response containing the date and type for custom reports.
      properties:
        attributes:
          $ref: '#/components/schemas/UsageCustomReportsAttributes'
        id:
          description: The date for specified custom reports.
          type: string
        type:
          $ref: '#/components/schemas/UsageReportsType'
      type: object
    UsageCustomReportsPage:
      description: The object containing page total count.
      properties:
        total_count:
          description: Total page count.
          format: int64
          type: integer
      type: object
    UsageCustomReportsMeta:
      description: The object containing document metadata.
      properties:
        page:
          $ref: '#/components/schemas/UsageCustomReportsPage'
      type: object
    UsageCustomReportsResponse:
      description: Response containing available custom reports.
      properties:
        data:
          description: An array of available custom reports.
          items:
            $ref: '#/components/schemas/UsageCustomReportsData'
          type: array
        meta:
          $ref: '#/components/schemas/UsageCustomReportsMeta'
      type: object
    UsageSpecifiedCustomReportsAttributes:
      description: The response containing attributes for specified custom reports.
      properties:
        computed_on:
          description: The date the specified custom report was computed.
          type: string
        end_date:
          description: The ending date of specified custom report.
          type: string
        location:
          description: A downloadable file for the specified custom reporting file.
          example: https://an-s3-or-gs-bucket.s3.amazonaws.com
          type: string
        size:
          description: size
          format: int64
          type: integer
        start_date:
          description: The starting date of specified custom report.
          type: string
        tags:
          description: A list of tags to apply to specified custom reports.
          items:
            description: A given tag in a list.
            example: env
            type: string
          type: array
      type: object
    UsageSpecifiedCustomReportsData:
      description: Response containing date and type for specified custom reports.
      properties:
        attributes:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsAttributes'
        id:
          description: The date for specified custom reports.
          type: string
        type:
          $ref: '#/components/schemas/UsageReportsType'
      type: object
    UsageSpecifiedCustomReportsPage:
      description: The object containing page total count for specified ID.
      properties:
        total_count:
          description: Total page count.
          format: int64
          type: integer
      type: object
    UsageSpecifiedCustomReportsMeta:
      description: The object containing document metadata.
      properties:
        page:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsPage'
      type: object
    UsageSpecifiedCustomReportsResponse:
      description: Returns available specified custom reports.
      properties:
        data:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsData'
        meta:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsMeta'
      type: object
    DashboardLayoutType:
      description: Layout type of the dashboard.
      enum:
        - ordered
        - free
      example: ordered
      type: string
      x-enum-varnames:
        - ORDERED
        - FREE
    DashboardSummaryDefinition:
      description: Dashboard definition.
      properties:
        author_handle:
          description: Identifier of the dashboard author.
          type: string
        created_at:
          description: Creation date of the dashboard.
          format: date-time
          type: string
        description:
          description: Description of the dashboard.
          nullable: true
          type: string
        id:
          description: Dashboard identifier.
          type: string
        is_read_only:
          deprecated: true
          description: >-
            Whether this dashboard is read-only. If True, only the author and
            admins can make changes to it.


            This property is deprecated; please use the [Restriction Policies
            API](https://docs.datadoghq.com/api/latest/restriction-policies/)
            instead to manage write authorization for individual dashboards.
          type: boolean
        layout_type:
          $ref: '#/components/schemas/DashboardLayoutType'
        modified_at:
          description: Modification date of the dashboard.
          format: date-time
          type: string
        title:
          description: Title of the dashboard.
          type: string
        url:
          description: URL of the dashboard.
          type: string
      type: object
    DashboardSummary:
      description: Dashboard summary response.
      properties:
        dashboards:
          description: List of dashboard definitions.
          items:
            $ref: '#/components/schemas/DashboardSummaryDefinition'
          type: array
      type: object
    DashboardReflowType:
      description: >-
        Reflow type for a **new dashboard layout** dashboard. Set this only when
        layout type is 'ordered'.

        If set to 'fixed', the dashboard expects all widgets to have a layout,
        and if it's set to 'auto',

        widgets should not have layouts.
      enum:
        - auto
        - fixed
      type: string
      x-enum-varnames:
        - AUTO
        - FIXED
    DashboardTemplateVariablePresetValue:
      description: Template variables saved views.
      properties:
        name:
          description: The name of the variable.
          type: string
        value:
          deprecated: true
          description: >-
            (deprecated) The value of the template variable within the saved
            view. Cannot be used in conjunction with `values`.
          type: string
        values:
          description: >-
            One or many template variable values within the saved view, which
            will be unioned together using `OR` if more than one is specified.
            Cannot be used in conjunction with `value`.
          items:
            description: One or many values of the template variable within the saved view.
            minLength: 1
            type: string
          minItems: 1
          type: array
      type: object
    DashboardTemplateVariablePreset:
      description: Template variables saved views.
      properties:
        name:
          description: The name of the variable.
          type: string
        template_variables:
          description: List of variables.
          items:
            $ref: '#/components/schemas/DashboardTemplateVariablePresetValue'
          type: array
      type: object
    DashboardTemplateVariable:
      description: Template variable.
      properties:
        available_values:
          description: >-
            The list of values that the template variable drop-down is limited
            to.
          example:
            - my-host
            - host1
            - host2
          items:
            description: Template variable value.
            type: string
          nullable: true
          type: array
        default:
          deprecated: true
          description: >-
            (deprecated) The default value for the template variable on
            dashboard load. Cannot be used in conjunction with `defaults`.
          example: my-host
          nullable: true
          type: string
        defaults:
          description: >-
            One or many default values for template variables on load. If more
            than one default is specified, they will be unioned together with
            `OR`. Cannot be used in conjunction with `default`.
          example:
            - my-host-1
            - my-host-2
          items:
            description: >-
              One of many default values for the template variable on dashboard
              load.
            minLength: 1
            type: string
          type: array
        name:
          description: The name of the variable.
          example: host1
          type: string
        prefix:
          description: >-
            The tag prefix associated with the variable. Only tags with this
            prefix appear in the variable drop-down.
          example: host
          nullable: true
          type: string
      required:
        - name
      type: object
    WidgetLiveSpanv1:
      description: The available timeframes depend on the widget you are using.
      enum:
        - 1m
        - 5m
        - 10m
        - 15m
        - 30m
        - 1h
        - 4h
        - 1d
        - 2d
        - 1w
        - 1mo
        - 3mo
        - 6mo
        - week_to_date
        - month_to_date
        - 1y
        - alert
      example: 5m
      type: string
      x-enum-varnames:
        - PAST_ONE_MINUTE
        - PAST_FIVE_MINUTES
        - PAST_TEN_MINUTES
        - PAST_FIFTEEN_MINUTES
        - PAST_THIRTY_MINUTES
        - PAST_ONE_HOUR
        - PAST_FOUR_HOURS
        - PAST_ONE_DAY
        - PAST_TWO_DAYS
        - PAST_ONE_WEEK
        - PAST_ONE_MONTH
        - PAST_THREE_MONTHS
        - PAST_SIX_MONTHS
        - WEEK_TO_DATE
        - MONTH_TO_DATE
        - PAST_ONE_YEAR
        - ALERT
    WidgetLegacyLiveSpan:
      additionalProperties: false
      description: Wrapper for live span
      properties:
        live_span:
          $ref: '#/components/schemas/WidgetLiveSpanv1'
      type: object
    WidgetNewLiveSpanType:
      description: Type "live" denotes a live span in the new format.
      enum:
        - live
      example: live
      type: string
      x-enum-varnames:
        - LIVE
    WidgetLiveSpanUnit:
      description: Unit of the time span.
      enum:
        - minute
        - hour
        - day
        - week
        - month
        - year
      example: minute
      type: string
      x-enum-varnames:
        - MINUTE
        - HOUR
        - DAY
        - WEEK
        - MONTH
        - YEAR
    WidgetNewLiveSpan:
      description: Used for arbitrary live span times, such as 17 minutes or 6 hours.
      properties:
        type:
          $ref: '#/components/schemas/WidgetNewLiveSpanType'
        unit:
          $ref: '#/components/schemas/WidgetLiveSpanUnit'
        value:
          description: Value of the time span.
          example: 4
          format: int64
          minimum: 1
          type: integer
      required:
        - type
        - value
        - unit
      type: object
    WidgetNewFixedSpanType:
      description: Type "fixed" denotes a fixed span.
      enum:
        - fixed
      example: fixed
      type: string
      x-enum-varnames:
        - FIXED
    WidgetNewFixedSpan:
      description: Used for fixed span times, such as 'March 1 to March 7'.
      properties:
        from:
          description: Start time in seconds since epoch.
          example: 1712080128
          format: int64
          minimum: 0
          type: integer
        to:
          description: End time in seconds since epoch.
          example: 1712083128
          format: int64
          minimum: 0
          type: integer
        type:
          $ref: '#/components/schemas/WidgetNewFixedSpanType'
      required:
        - type
        - from
        - to
      type: object
    WidgetTime:
      description: Time setting for the widget.
      oneOf:
        - $ref: '#/components/schemas/WidgetLegacyLiveSpan'
        - $ref: '#/components/schemas/WidgetNewLiveSpan'
        - $ref: '#/components/schemas/WidgetNewFixedSpan'
    WidgetTextAlign:
      description: How to align the text on the widget.
      enum:
        - center
        - left
        - right
      type: string
      x-enum-varnames:
        - CENTER
        - LEFT
        - RIGHT
    AlertGraphWidgetDefinitionType:
      default: alert_graph
      description: Type of the alert graph widget.
      enum:
        - alert_graph
      example: alert_graph
      type: string
      x-enum-varnames:
        - ALERT_GRAPH
    WidgetVizType:
      description: Whether to display the Alert Graph as a timeseries or a top list.
      enum:
        - timeseries
        - toplist
      example: timeseries
      type: string
      x-enum-varnames:
        - TIMESERIES
        - TOPLIST
    AlertGraphWidgetDefinition:
      description: >-
        Alert graphs are timeseries graphs showing the current status of any
        monitor defined on your system.
      properties:
        alert_id:
          description: ID of the alert to use in the widget.
          example: ''
          type: string
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: The title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/AlertGraphWidgetDefinitionType'
        viz_type:
          $ref: '#/components/schemas/WidgetVizType'
      required:
        - type
        - alert_id
        - viz_type
      type: object
    AlertValueWidgetDefinitionType:
      default: alert_value
      description: Type of the alert value widget.
      enum:
        - alert_value
      example: alert_value
      type: string
      x-enum-varnames:
        - ALERT_VALUE
    AlertValueWidgetDefinition:
      description: >-
        Alert values are query values showing the current value of the metric in
        any monitor defined on your system.
      properties:
        alert_id:
          description: ID of the alert to use in the widget.
          example: ''
          type: string
        precision:
          description: Number of decimal to show. If not defined, will use the raw value.
          format: int64
          type: integer
        text_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of value in the widget.
          type: string
        type:
          $ref: '#/components/schemas/AlertValueWidgetDefinitionType'
        unit:
          description: Unit to display with the value.
          type: string
      required:
        - type
        - alert_id
      type: object
    WidgetCustomLink:
      description: >-
        Custom links help you connect a data value to a URL, like a Datadog page
        or your AWS console.
      properties:
        is_hidden:
          description: The flag for toggling context menu link visibility.
          type: boolean
        label:
          description: >-
            The label for the custom link URL. Keep the label short and
            descriptive. Use metrics and tags as variables.
          example: Search logs for {{host}}
          type: string
        link:
          description: >-
            The URL of the custom link. URL must include `http` or `https`. A
            relative URL must start with `/`.
          example: https://app.datadoghq.com/logs?query={{host}}
          type: string
        override_label:
          description: >-
            The label ID that refers to a context menu link. Can be `logs`,
            `hosts`, `traces`, `profiles`, `processes`, `containers`, or `rum`.
          example: logs
          type: string
      type: object
    LogsQueryCompute:
      description: Define computation for a log query.
      properties:
        aggregation:
          description: The aggregation method.
          example: avg
          type: string
        facet:
          description: Facet name.
          example: '@duration'
          type: string
        interval:
          description: Define a time interval in seconds.
          example: 5000
          format: int64
          type: integer
      required:
        - aggregation
      type: object
    WidgetSort:
      description: Widget sorting methods.
      enum:
        - asc
        - desc
      example: desc
      type: string
      x-enum-varnames:
        - ASCENDING
        - DESCENDING
    LogQueryDefinitionGroupBySort:
      description: Define a sorting method.
      properties:
        aggregation:
          description: The aggregation method.
          example: avg
          type: string
        facet:
          description: Facet name.
          example: '@string_query.interval'
          type: string
        order:
          $ref: '#/components/schemas/WidgetSort'
      required:
        - aggregation
        - order
      type: object
    LogQueryDefinitionGroupBy:
      description: Defined items in the group.
      properties:
        facet:
          description: Facet name.
          example: resource_name
          type: string
        limit:
          description: Maximum number of items in the group.
          example: 50
          format: int64
          type: integer
        sort:
          $ref: '#/components/schemas/LogQueryDefinitionGroupBySort'
      required:
        - facet
      type: object
    LogQueryDefinitionSearch:
      description: The query being made on the logs.
      properties:
        query:
          description: Search value to apply.
          example: ''
          type: string
      required:
        - query
      type: object
    LogQueryDefinition:
      description: The log query.
      properties:
        compute:
          $ref: '#/components/schemas/LogsQueryCompute'
        group_by:
          description: List of tag prefixes to group by in the case of a cluster check.
          items:
            $ref: '#/components/schemas/LogQueryDefinitionGroupBy'
          type: array
        index:
          description: >-
            A coma separated-list of index names. Use "*" query all indexes at
            once. [Multiple
            Indexes](https://docs.datadoghq.com/logs/indexes/#multiple-indexes)
          example: days-3,days-7
          type: string
        multi_compute:
          description: This field is mutually exclusive with `compute`.
          items:
            $ref: '#/components/schemas/LogsQueryCompute'
          type: array
        search:
          $ref: '#/components/schemas/LogQueryDefinitionSearch'
      type: object
    WidgetChangeType:
      description: Show the absolute or the relative change.
      enum:
        - absolute
        - relative
      type: string
      x-enum-varnames:
        - ABSOLUTE
        - RELATIVE
    WidgetCompareTo:
      description: Timeframe used for the change comparison.
      enum:
        - hour_before
        - day_before
        - week_before
        - month_before
      type: string
      x-enum-varnames:
        - HOUR_BEFORE
        - DAY_BEFORE
        - WEEK_BEFORE
        - MONTH_BEFORE
    TableWidgetCellDisplayMode:
      description: Define a display mode for the table cell.
      enum:
        - number
        - bar
        - trend
      example: number
      type: string
      x-enum-varnames:
        - NUMBER
        - BAR
        - TREND
    WidgetFormulaCellDisplayModeOptionsTrendType:
      description: Trend type for the cell display mode options.
      enum:
        - area
        - line
        - bars
      example: area
      type: string
      x-enum-varnames:
        - AREA
        - LINE
        - BARS
    WidgetFormulaCellDisplayModeOptionsYScale:
      description: Y scale for the cell display mode options.
      enum:
        - shared
        - independent
      example: shared
      type: string
      x-enum-varnames:
        - SHARED
        - INDEPENDENT
    WidgetFormulaCellDisplayModeOptions:
      description: >-
        Cell display mode options for the widget formula. (only if
        `cell_display_mode` is set to `trend`).
      properties:
        trend_type:
          $ref: '#/components/schemas/WidgetFormulaCellDisplayModeOptionsTrendType'
        y_scale:
          $ref: '#/components/schemas/WidgetFormulaCellDisplayModeOptionsYScale'
      type: object
    WidgetComparator:
      description: Comparator to apply.
      enum:
        - '='
        - '>'
        - '>='
        - <
        - <=
      example: '>'
      type: string
      x-enum-varnames:
        - EQUAL_TO
        - GREATER_THAN
        - GREATER_THAN_OR_EQUAL_TO
        - LESS_THAN
        - LESS_THAN_OR_EQUAL_TO
    WidgetPalette:
      description: Color palette to apply.
      enum:
        - blue
        - custom_bg
        - custom_image
        - custom_text
        - gray_on_white
        - grey
        - green
        - orange
        - red
        - red_on_white
        - white_on_gray
        - white_on_green
        - green_on_white
        - white_on_red
        - white_on_yellow
        - yellow_on_white
        - black_on_light_yellow
        - black_on_light_green
        - black_on_light_red
      example: blue
      type: string
      x-enum-varnames:
        - BLUE
        - CUSTOM_BACKGROUND
        - CUSTOM_IMAGE
        - CUSTOM_TEXT
        - GRAY_ON_WHITE
        - GREY
        - GREEN
        - ORANGE
        - RED
        - RED_ON_WHITE
        - WHITE_ON_GRAY
        - WHITE_ON_GREEN
        - GREEN_ON_WHITE
        - WHITE_ON_RED
        - WHITE_ON_YELLOW
        - YELLOW_ON_WHITE
        - BLACK_ON_LIGHT_YELLOW
        - BLACK_ON_LIGHT_GREEN
        - BLACK_ON_LIGHT_RED
    WidgetConditionalFormat:
      description: Define a conditional format for the widget.
      properties:
        comparator:
          $ref: '#/components/schemas/WidgetComparator'
        custom_bg_color:
          description: >-
            Color palette to apply to the background, same values available as
            palette.
          type: string
        custom_fg_color:
          description: >-
            Color palette to apply to the foreground, same values available as
            palette.
          type: string
        hide_value:
          description: True hides values.
          type: boolean
        image_url:
          description: Displays an image as the background.
          type: string
        metric:
          description: Metric from the request to correlate this conditional format with.
          type: string
        palette:
          $ref: '#/components/schemas/WidgetPalette'
        timeframe:
          description: Defines the displayed timeframe.
          type: string
        value:
          description: Value for the comparator.
          example: 0
          format: double
          type: number
      required:
        - comparator
        - value
        - palette
      type: object
    QuerySortOrder:
      default: desc
      description: Direction of sort.
      enum:
        - asc
        - desc
      type: string
      x-enum-varnames:
        - ASC
        - DESC
    WidgetFormulaLimit:
      description: Options for limiting results returned.
      properties:
        count:
          description: Number of results to return.
          format: int64
          type: integer
        order:
          $ref: '#/components/schemas/QuerySortOrder'
      type: object
    NumberFormatUnitScaleType:
      description: The type of unit scale.
      enum:
        - canonical_unit
      example: canonical_unit
      type: string
      x-enum-varnames:
        - CANONICAL_UNIT
    NumberFormatUnitCanonical:
      description: Canonical unit.
      properties:
        per_unit_name:
          description: The name of the unit per item.
          example: bytes
          type: string
        type:
          $ref: '#/components/schemas/NumberFormatUnitScaleType'
        unit_name:
          description: The name of the unit.
          example: bytes
          type: string
      type: object
    NumberFormatUnitCustomType:
      description: The type of custom unit.
      enum:
        - custom_unit_label
      type: string
      x-enum-varnames:
        - CUSTOM_UNIT_LABEL
    NumberFormatUnitCustom:
      description: Custom unit.
      properties:
        label:
          description: The label for the custom unit.
          maxLength: 12
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/NumberFormatUnitCustomType'
      type: object
    NumberFormatUnit:
      description: Number format unit.
      oneOf:
        - $ref: '#/components/schemas/NumberFormatUnitCanonical'
        - $ref: '#/components/schemas/NumberFormatUnitCustom'
    NumberFormatUnitScale:
      description: The definition of `NumberFormatUnitScale` object.
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/NumberFormatUnitScaleType'
        unit_name:
          description: The name of the unit.
          example: bytes
          type: string
      type: object
    WidgetNumberFormat:
      description: Number format options for the widget.
      properties:
        unit:
          $ref: '#/components/schemas/NumberFormatUnit'
        unit_scale:
          $ref: '#/components/schemas/NumberFormatUnitScale'
      type: object
    WidgetFormulaStyle:
      description: Styling options for widget formulas.
      properties:
        palette:
          description: >-
            The color palette used to display the formula. A guide to the
            available color palettes can be found at
            https://docs.datadoghq.com/dashboards/guide/widget_colors
          example: classic
          type: string
        palette_index:
          description: Index specifying which color to use within the palette.
          example: 1
          format: int64
          type: integer
      type: object
    WidgetFormula:
      description: Formula to be used in a widget query.
      properties:
        alias:
          description: Expression alias.
          type: string
        cell_display_mode:
          $ref: '#/components/schemas/TableWidgetCellDisplayMode'
        cell_display_mode_options:
          $ref: '#/components/schemas/WidgetFormulaCellDisplayModeOptions'
        conditional_formats:
          description: List of conditional formats.
          items:
            $ref: '#/components/schemas/WidgetConditionalFormat'
          type: array
        formula:
          description: String expression built from queries, formulas, and functions.
          example: func(a) + b
          type: string
        limit:
          $ref: '#/components/schemas/WidgetFormulaLimit'
        number_format:
          $ref: '#/components/schemas/WidgetNumberFormat'
        style:
          $ref: '#/components/schemas/WidgetFormulaStyle'
      required:
        - formula
      type: object
    WidgetOrderBy:
      description: What to order by.
      enum:
        - change
        - name
        - present
        - past
      type: string
      x-enum-varnames:
        - CHANGE
        - NAME
        - PRESENT
        - PAST
    ProcessQueryDefinition:
      description: The process query to use in the widget.
      properties:
        filter_by:
          description: List of processes.
          items:
            description: Process name.
            type: string
          type: array
        limit:
          description: Max number of items in the filter list.
          format: int64
          minimum: 0
          type: integer
        metric:
          description: Your chosen metric.
          example: system.load.1
          type: string
        search_by:
          description: Your chosen search term.
          type: string
      required:
        - metric
      type: object
    FormulaAndFunctionMetricAggregation:
      description: The aggregation methods available for metrics queries.
      enum:
        - avg
        - min
        - max
        - sum
        - last
        - area
        - l2norm
        - percentile
      example: avg
      type: string
      x-enum-varnames:
        - AVG
        - MIN
        - MAX
        - SUM
        - LAST
        - AREA
        - L2NORM
        - PERCENTILE
    CrossOrgUuids:
      description: >-
        The source organization UUID for cross organization queries. Feature in
        Private Beta.
      example:
        - 6434abde-xxxx-yyyy-zzzz-da7ad0900001
      items:
        description: The source organization UUID.
        example: 6434abde-xxxx-yyyy-zzzz-da7ad0900001
        type: string
      maxItems: 1
      type: array
    FormulaAndFunctionMetricDataSource:
      description: Data source for metrics queries.
      enum:
        - metrics
      example: metrics
      type: string
      x-enum-varnames:
        - METRICS
    FormulaAndFunctionMetricQueryDefinition:
      description: A formula and functions metrics query.
      example:
        data_source: metrics
        name: my_query
        query: avg:system.cpu.user{*}
      properties:
        aggregator:
          $ref: '#/components/schemas/FormulaAndFunctionMetricAggregation'
        cross_org_uuids:
          $ref: '#/components/schemas/CrossOrgUuids'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionMetricDataSource'
        name:
          description: Name of the query for use in formulas.
          example: my_query
          type: string
        query:
          description: Metrics query definition.
          example: avg:system.cpu.user{*}
          type: string
      required:
        - data_source
        - query
        - name
      type: object
    FormulaAndFunctionEventAggregation:
      description: Aggregation methods for event platform queries.
      enum:
        - count
        - cardinality
        - median
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
      example: avg
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - MEDIAN
        - PC75
        - PC90
        - PC95
        - PC98
        - PC99
        - SUM
        - MIN
        - MAX
        - AVG
    FormulaAndFunctionEventQueryDefinitionCompute:
      description: Compute options.
      properties:
        aggregation:
          $ref: '#/components/schemas/FormulaAndFunctionEventAggregation'
        interval:
          description: A time interval in milliseconds.
          example: 60000
          format: int64
          type: integer
        metric:
          description: Measurable attribute to compute.
          example: '@duration'
          type: string
      required:
        - aggregation
      type: object
    FormulaAndFunctionEventsDataSource:
      description: Data source for event platform-based queries.
      enum:
        - logs
        - spans
        - network
        - rum
        - security_signals
        - profiles
        - audit
        - events
        - ci_tests
        - ci_pipelines
        - incident_analytics
      example: logs
      type: string
      x-enum-varnames:
        - LOGS
        - SPANS
        - NETWORK
        - RUM
        - SECURITY_SIGNALS
        - PROFILES
        - AUDIT
        - EVENTS
        - CI_TESTS
        - CI_PIPELINES
        - INCIDENT_ANALYTICS
    FormulaAndFunctionEventQueryGroupBySort:
      description: Options for sorting group by results.
      properties:
        aggregation:
          $ref: '#/components/schemas/FormulaAndFunctionEventAggregation'
        metric:
          description: Metric used for sorting group by results.
          type: string
        order:
          $ref: '#/components/schemas/QuerySortOrder'
      required:
        - aggregation
      type: object
    FormulaAndFunctionEventQueryGroupBy:
      description: List of objects used to group by.
      properties:
        facet:
          description: Event facet.
          example: status.
          type: string
        limit:
          description: Number of groups to return.
          example: 10
          format: int64
          type: integer
        sort:
          $ref: '#/components/schemas/FormulaAndFunctionEventQueryGroupBySort'
      required:
        - facet
      type: object
    FormulaAndFunctionEventQueryDefinitionSearch:
      description: Search options.
      properties:
        query:
          description: Events search string.
          example: service:query
          type: string
      required:
        - query
      type: object
    FormulaAndFunctionEventQueryDefinition:
      description: A formula and functions events query.
      properties:
        compute:
          $ref: '#/components/schemas/FormulaAndFunctionEventQueryDefinitionCompute'
        cross_org_uuids:
          $ref: '#/components/schemas/CrossOrgUuids'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionEventsDataSource'
        group_by:
          description: Group by options.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionEventQueryGroupBy'
          type: array
        indexes:
          description: >-
            An array of index names to query in the stream. Omit or use `[]` to
            query all indexes at once.
          example:
            - days-3
            - days-7
          items:
            description: >-
              A log index set up for your organization. For additional indexes,
              see the [multiple
              indexes](https://docs.datadoghq.com/logs/indexes/#multiple-indexes)
              documentation.
            type: string
          type: array
        name:
          description: Name of the query for use in formulas.
          example: query_errors
          type: string
        search:
          $ref: '#/components/schemas/FormulaAndFunctionEventQueryDefinitionSearch'
        storage:
          description: Option for storage location. Feature in Private Beta.
          example: indexes
          type: string
      required:
        - data_source
        - compute
        - name
      type: object
    FormulaAndFunctionProcessQueryDataSource:
      description: Data sources that rely on the process backend.
      enum:
        - process
        - container
      example: process
      type: string
      x-enum-varnames:
        - PROCESS
        - CONTAINER
    FormulaAndFunctionProcessQueryDefinition:
      description: Process query using formulas and functions.
      properties:
        aggregator:
          $ref: '#/components/schemas/FormulaAndFunctionMetricAggregation'
        cross_org_uuids:
          $ref: '#/components/schemas/CrossOrgUuids'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionProcessQueryDataSource'
        is_normalized_cpu:
          description: Whether to normalize the CPU percentages.
          type: boolean
        limit:
          description: Number of hits to return.
          format: int64
          type: integer
        metric:
          description: Process metric name.
          example: avg:system.cpu.user{*}
          type: string
        name:
          description: Name of query for use in formulas.
          example: query_errors
          type: string
        sort:
          $ref: '#/components/schemas/QuerySortOrder'
        tag_filters:
          description: An array of tags to filter by.
          items:
            description: One of the tags to filter by.
            type: string
          type: array
        text_filter:
          description: Text to use as filter.
          type: string
      required:
        - data_source
        - metric
        - name
      type: object
    FormulaAndFunctionApmDependencyStatsDataSource:
      description: Data source for APM dependency stats queries.
      enum:
        - apm_dependency_stats
      example: apm_dependency_stats
      type: string
      x-enum-varnames:
        - APM_DEPENDENCY_STATS
    FormulaAndFunctionApmDependencyStatName:
      description: APM statistic.
      enum:
        - avg_duration
        - avg_root_duration
        - avg_spans_per_trace
        - error_rate
        - pct_exec_time
        - pct_of_traces
        - total_traces_count
      example: avg_duration
      type: string
      x-enum-varnames:
        - AVG_DURATION
        - AVG_ROOT_DURATION
        - AVG_SPANS_PER_TRACE
        - ERROR_RATE
        - PCT_EXEC_TIME
        - PCT_OF_TRACES
        - TOTAL_TRACES_COUNT
    FormulaAndFunctionApmDependencyStatsQueryDefinition:
      description: A formula and functions APM dependency stats query.
      properties:
        cross_org_uuids:
          $ref: '#/components/schemas/CrossOrgUuids'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionApmDependencyStatsDataSource'
        env:
          description: APM environment.
          example: staging
          type: string
        is_upstream:
          description: >-
            Determines whether stats for upstream or downstream dependencies
            should be queried.
          example: false
          type: boolean
        name:
          description: Name of query to use in formulas.
          example: query_errors
          type: string
        operation_name:
          description: Name of operation on service.
          example: cassandra.query
          type: string
        primary_tag_name:
          description: >-
            The name of the second primary tag used within APM; required when
            `primary_tag_value` is specified. See
            https://docs.datadoghq.com/tracing/guide/setting_primary_tags_to_scope/#add-a-second-primary-tag-in-datadog.
          example: datacenter
          type: string
        primary_tag_value:
          description: >-
            Filter APM data by the second primary tag. `primary_tag_name` must
            also be specified.
          example: staging
          type: string
        resource_name:
          description: APM resource.
          example: DELETE FROM foo WHERE baz = ?
          type: string
        service:
          description: APM service.
          example: cassandra
          type: string
        stat:
          $ref: '#/components/schemas/FormulaAndFunctionApmDependencyStatName'
      required:
        - data_source
        - env
        - stat
        - operation_name
        - resource_name
        - service
        - name
      type: object
    FormulaAndFunctionApmResourceStatsDataSource:
      description: Data source for APM resource stats queries.
      enum:
        - apm_resource_stats
      example: apm_resource_stats
      type: string
      x-enum-varnames:
        - APM_RESOURCE_STATS
    FormulaAndFunctionApmResourceStatName:
      description: APM resource stat name.
      enum:
        - errors
        - error_rate
        - hits
        - latency_avg
        - latency_distribution
        - latency_max
        - latency_p50
        - latency_p75
        - latency_p90
        - latency_p95
        - latency_p99
      example: hits
      type: string
      x-enum-varnames:
        - ERRORS
        - ERROR_RATE
        - HITS
        - LATENCY_AVG
        - LATENCY_DISTRIBUTION
        - LATENCY_MAX
        - LATENCY_P50
        - LATENCY_P75
        - LATENCY_P90
        - LATENCY_P95
        - LATENCY_P99
    FormulaAndFunctionApmResourceStatsQueryDefinition:
      description: APM resource stats query using formulas and functions.
      properties:
        cross_org_uuids:
          $ref: '#/components/schemas/CrossOrgUuids'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionApmResourceStatsDataSource'
        env:
          description: APM environment.
          example: staging
          type: string
        group_by:
          description: Array of fields to group results by.
          items:
            description: Field to group results by.
            example: resource_name
            type: string
          type: array
        name:
          description: Name of this query to use in formulas.
          example: query_errors
          type: string
        operation_name:
          description: Name of operation on service.
          example: cassandra.query
          type: string
        primary_tag_name:
          description: >-
            Name of the second primary tag used within APM. Required when
            `primary_tag_value` is specified. See
            https://docs.datadoghq.com/tracing/guide/setting_primary_tags_to_scope/#add-a-second-primary-tag-in-datadog
          example: datacenter
          type: string
        primary_tag_value:
          description: >-
            Value of the second primary tag by which to filter APM data.
            `primary_tag_name` must also be specified.
          example: us-east-az
          type: string
        resource_name:
          description: APM resource name.
          example: Admin::ProductsController#create
          type: string
        service:
          description: APM service name.
          example: web-store
          type: string
        stat:
          $ref: '#/components/schemas/FormulaAndFunctionApmResourceStatName'
      required:
        - data_source
        - env
        - name
        - service
        - stat
      type: object
    FormulaAndFunctionSLODataSource:
      description: Data source for SLO measures queries.
      enum:
        - slo
      example: slo
      type: string
      x-enum-varnames:
        - SLO
    FormulaAndFunctionSLOGroupMode:
      description: Group mode to query measures.
      enum:
        - overall
        - components
      example: overall
      type: string
      x-enum-varnames:
        - OVERALL
        - COMPONENTS
    FormulaAndFunctionSLOMeasure:
      description: SLO measures queries.
      enum:
        - good_events
        - bad_events
        - good_minutes
        - bad_minutes
        - slo_status
        - error_budget_remaining
        - burn_rate
        - error_budget_burndown
      example: slo_status
      type: string
      x-enum-varnames:
        - GOOD_EVENTS
        - BAD_EVENTS
        - GOOD_MINUTES
        - BAD_MINUTES
        - SLO_STATUS
        - ERROR_BUDGET_REMAINING
        - BURN_RATE
        - ERROR_BUDGET_BURNDOWN
    FormulaAndFunctionSLOQueryType:
      description: Name of the query for use in formulas.
      enum:
        - metric
        - monitor
        - time_slice
      example: metric
      type: string
      x-enum-varnames:
        - METRIC
        - MONITOR
        - TIME_SLICE
    FormulaAndFunctionSLOQueryDefinition:
      description: A formula and functions metrics query.
      example:
        additional_query_filters: '*'
        data_source: slo
        group_mode: overall
        measure: good_events
        name: my_slo
        slo_id: '12345678910'
        slo_query_type: metric
      properties:
        additional_query_filters:
          description: Additional filters applied to the SLO query.
          example: host:host_a,env:prod
          type: string
        cross_org_uuids:
          $ref: '#/components/schemas/CrossOrgUuids'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionSLODataSource'
        group_mode:
          $ref: '#/components/schemas/FormulaAndFunctionSLOGroupMode'
        measure:
          $ref: '#/components/schemas/FormulaAndFunctionSLOMeasure'
        name:
          description: Name of the query for use in formulas.
          example: my_slo
          type: string
        slo_id:
          description: ID of an SLO to query measures.
          example: '12345678910'
          type: string
        slo_query_type:
          $ref: '#/components/schemas/FormulaAndFunctionSLOQueryType'
      required:
        - data_source
        - slo_id
        - measure
      type: object
    WidgetAggregator:
      description: Aggregator used for the request.
      enum:
        - avg
        - last
        - max
        - min
        - sum
        - percentile
      type: string
      x-enum-varnames:
        - AVERAGE
        - LAST
        - MAXIMUM
        - MINIMUM
        - SUM
        - PERCENTILE
    FormulaAndFunctionCloudCostDataSource:
      description: Data source for Cloud Cost queries.
      enum:
        - cloud_cost
      example: cloud_cost
      type: string
      x-enum-varnames:
        - CLOUD_COST
    FormulaAndFunctionCloudCostQueryDefinition:
      description: A formula and functions Cloud Cost query.
      example:
        data_source: cloud_cost
        name: query1
        query: sum:aws.cost.amortized{*}
      properties:
        aggregator:
          $ref: '#/components/schemas/WidgetAggregator'
        cross_org_uuids:
          $ref: '#/components/schemas/CrossOrgUuids'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionCloudCostDataSource'
        name:
          description: Name of the query for use in formulas.
          example: my_query
          type: string
        query:
          description: Query for Cloud Cost data.
          example: ''
          type: string
      required:
        - data_source
        - query
        - name
      type: object
    FormulaAndFunctionQueryDefinition:
      description: A formula and function query.
      oneOf:
        - $ref: '#/components/schemas/FormulaAndFunctionMetricQueryDefinition'
        - $ref: '#/components/schemas/FormulaAndFunctionEventQueryDefinition'
        - $ref: '#/components/schemas/FormulaAndFunctionProcessQueryDefinition'
        - $ref: >-
            #/components/schemas/FormulaAndFunctionApmDependencyStatsQueryDefinition
        - $ref: >-
            #/components/schemas/FormulaAndFunctionApmResourceStatsQueryDefinition
        - $ref: '#/components/schemas/FormulaAndFunctionSLOQueryDefinition'
        - $ref: '#/components/schemas/FormulaAndFunctionCloudCostQueryDefinition'
    FormulaAndFunctionResponseFormat:
      description: >-
        Timeseries, scalar, or event list response. Event list response formats
        are supported by Geomap widgets.
      enum:
        - timeseries
        - scalar
        - event_list
      example: timeseries
      type: string
      x-enum-varnames:
        - TIMESERIES
        - SCALAR
        - EVENT_LIST
    ChangeWidgetRequest:
      description: Updated change widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        change_type:
          $ref: '#/components/schemas/WidgetChangeType'
        compare_to:
          $ref: '#/components/schemas/WidgetCompareTo'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        increase_good:
          description: Whether to show increase as good.
          type: boolean
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        order_by:
          $ref: '#/components/schemas/WidgetOrderBy'
        order_dir:
          $ref: '#/components/schemas/WidgetSort'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Query definition.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        show_present:
          description: Whether to show the present value.
          type: boolean
      type: object
    ChangeWidgetDefinitionType:
      default: change
      description: Type of the change widget.
      enum:
        - change
      example: change
      type: string
      x-enum-varnames:
        - CHANGE
    ChangeWidgetDefinition:
      description: >-
        The Change graph shows you the change in a value over the time period
        chosen.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          description: >-
            Array of one request object to display in the widget.


            See the dedicated [Request JSON schema
            documentation](https://docs.datadoghq.com/dashboards/graphing_json/request_json)
             to learn how to build the `REQUEST_SCHEMA`.
          example:
            - q: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/ChangeWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ChangeWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    WidgetGrouping:
      description: The kind of grouping to use.
      enum:
        - check
        - cluster
      example: check
      type: string
      x-enum-varnames:
        - CHECK
        - CLUSTER
    CheckStatusWidgetDefinitionType:
      default: check_status
      description: Type of the check status widget.
      enum:
        - check_status
      example: check_status
      type: string
      x-enum-varnames:
        - CHECK_STATUS
    CheckStatusWidgetDefinition:
      description: >-
        Check status shows the current status or number of results for any check
        performed.
      properties:
        check:
          description: Name of the check to use in the widget.
          example: ''
          type: string
        group:
          description: Group reporting a single check.
          type: string
        group_by:
          description: List of tag prefixes to group by in the case of a cluster check.
          items:
            description: Tag prefix.
            type: string
          type: array
        grouping:
          $ref: '#/components/schemas/WidgetGrouping'
        tags:
          description: List of tags used to filter the groups reporting a cluster check.
          items:
            description: Tag name.
            type: string
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/CheckStatusWidgetDefinitionType'
      required:
        - type
        - check
        - grouping
      type: object
    WidgetMarker:
      description: Markers allow you to add visual conditional formatting for your graphs.
      properties:
        display_type:
          description: >
            Combination of:
              - A severity error, warning, ok, or info
              - A line type: dashed, solid, or bold
            In this case of a Distribution widget, this can be set to be
            `x_axis_percentile`.
          example: error dashed
          type: string
        label:
          description: Label to display over the marker.
          example: Error threshold
          type: string
        time:
          description: Timestamp for the widget.
          type: string
        value:
          description: >-
            Value to apply. Can be a single value y = 15 or a range of values 0
            < y < 10.
          example: y = 15
          type: string
      required:
        - value
      type: object
    ApmStatsQueryColumnType:
      description: Column properties.
      properties:
        alias:
          description: A user-assigned alias for the column.
          example: Requests
          type: string
        cell_display_mode:
          $ref: '#/components/schemas/TableWidgetCellDisplayMode'
        name:
          description: Column name.
          example: Reqs
          type: string
        order:
          $ref: '#/components/schemas/WidgetSort'
      required:
        - name
      type: object
    ApmStatsQueryRowType:
      description: The level of detail for the request.
      enum:
        - service
        - resource
        - span
      example: service
      type: string
      x-enum-varnames:
        - SERVICE
        - RESOURCE
        - SPAN
    ApmStatsQueryDefinition:
      description: The APM stats query for table and distributions widgets.
      properties:
        columns:
          description: Column properties used by the front end for display.
          items:
            $ref: '#/components/schemas/ApmStatsQueryColumnType'
          type: array
        env:
          description: Environment name.
          example: prod
          type: string
        name:
          description: Operation name associated with service.
          example: rack.request
          type: string
        primary_tag:
          description: The organization's host group name and value.
          example: datacenter:*
          type: string
        resource:
          description: Resource name.
          example: CartsController
          type: string
        row_type:
          $ref: '#/components/schemas/ApmStatsQueryRowType'
        service:
          description: Service name.
          example: web-store
          type: string
      required:
        - service
        - env
        - name
        - primary_tag
        - row_type
      type: object
    DistributionWidgetHistogramRequestQuery:
      description: Query definition for Distribution Widget Histogram Request
      example:
        data_source: metrics
        name: query1
        query: histogram:trace.Load{*}
      oneOf:
        - $ref: '#/components/schemas/FormulaAndFunctionMetricQueryDefinition'
        - $ref: '#/components/schemas/FormulaAndFunctionEventQueryDefinition'
        - $ref: >-
            #/components/schemas/FormulaAndFunctionApmResourceStatsQueryDefinition
    DistributionWidgetHistogramRequestType:
      description: Request type for the histogram request.
      enum:
        - histogram
      example: histogram
      type: string
      x-enum-varnames:
        - HISTOGRAM
    WidgetStyle:
      description: Widget style definition.
      properties:
        palette:
          description: Color palette to apply to the widget.
          type: string
      type: object
    DistributionWidgetRequest:
      description: Updated distribution widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        apm_stats_query:
          $ref: '#/components/schemas/ApmStatsQueryDefinition'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        query:
          $ref: '#/components/schemas/DistributionWidgetHistogramRequestQuery'
        request_type:
          $ref: '#/components/schemas/DistributionWidgetHistogramRequestType'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        style:
          $ref: '#/components/schemas/WidgetStyle'
      type: object
    DistributionWidgetDefinitionType:
      default: distribution
      description: Type of the distribution widget.
      enum:
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - DISTRIBUTION
    DistributionWidgetXAxis:
      description: X Axis controls for the distribution widget.
      properties:
        include_zero:
          description: True includes zero.
          type: boolean
        max:
          default: auto
          description: >-
            Specifies maximum value to show on the x-axis. It takes a number,
            percentile (p90 === 90th percentile), or auto for default behavior.
          type: string
        min:
          default: auto
          description: >-
            Specifies minimum value to show on the x-axis. It takes a number,
            percentile (p90 === 90th percentile), or auto for default behavior.
          type: string
        scale:
          default: linear
          description: Specifies the scale type. Possible values are `linear`.
          type: string
      type: object
    DistributionWidgetYAxis:
      description: Y Axis controls for the distribution widget.
      properties:
        include_zero:
          description: True includes zero.
          type: boolean
        label:
          description: The label of the axis to display on the graph.
          type: string
        max:
          default: auto
          description: >-
            Specifies the maximum value to show on the y-axis. It takes a
            number, or auto for default behavior.
          type: string
        min:
          default: auto
          description: >-
            Specifies minimum value to show on the y-axis. It takes a number, or
            auto for default behavior.
          type: string
        scale:
          default: linear
          description: Specifies the scale type. Possible values are `linear` or `log`.
          type: string
      type: object
    DistributionWidgetDefinition:
      description: >-
        The Distribution visualization is another way of showing metrics

        aggregated across one or several tags, such as hosts.

        Unlike the heat map, a distribution graph’s x-axis is quantity rather
        than time.
      properties:
        custom_links:
          description: A list of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        legend_size:
          deprecated: true
          description: >-
            (Deprecated) The widget legend was replaced by a tooltip and
            sidebar.
          type: string
        markers:
          description: List of markers.
          items:
            $ref: '#/components/schemas/WidgetMarker'
          type: array
        requests:
          description: >-
            Array of one request object to display in the widget.


            See the dedicated [Request JSON schema
            documentation](https://docs.datadoghq.com/dashboards/graphing_json/request_json)
             to learn how to build the `REQUEST_SCHEMA`.
          example:
            - q: host:X tags:Y
          items:
            $ref: '#/components/schemas/DistributionWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        show_legend:
          deprecated: true
          description: >-
            (Deprecated) The widget legend was replaced by a tooltip and
            sidebar.
          type: boolean
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/DistributionWidgetDefinitionType'
        xaxis:
          $ref: '#/components/schemas/DistributionWidgetXAxis'
        yaxis:
          $ref: '#/components/schemas/DistributionWidgetYAxis'
      required:
        - type
        - requests
      type: object
    WidgetEventSize:
      description: Size to use to display an event.
      enum:
        - s
        - l
      type: string
      x-enum-varnames:
        - SMALL
        - LARGE
    EventStreamWidgetDefinitionType:
      default: event_stream
      description: Type of the event stream widget.
      enum:
        - event_stream
      example: event_stream
      type: string
      x-enum-varnames:
        - EVENT_STREAM
    EventStreamWidgetDefinition:
      description: |-
        The event stream is a widget version of the stream of events
        on the Event Stream view. Only available on FREE layout dashboards.
      properties:
        event_size:
          $ref: '#/components/schemas/WidgetEventSize'
        query:
          description: Query to filter the event stream with.
          example: ''
          type: string
        tags_execution:
          description: >-
            The execution method for multi-value filters. Can be either and or
            or.
          type: string
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/EventStreamWidgetDefinitionType'
      required:
        - type
        - query
      type: object
    EventTimelineWidgetDefinitionType:
      default: event_timeline
      description: Type of the event timeline widget.
      enum:
        - event_timeline
      example: event_timeline
      type: string
      x-enum-varnames:
        - EVENT_TIMELINE
    EventTimelineWidgetDefinition:
      description: >-
        The event timeline is a widget version of the timeline that appears at
        the top of the Event Stream view. Only available on FREE layout
        dashboards.
      properties:
        query:
          description: Query to filter the event timeline with.
          example: ''
          type: string
        tags_execution:
          description: >-
            The execution method for multi-value filters. Can be either and or
            or.
          type: string
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/EventTimelineWidgetDefinitionType'
      required:
        - type
        - query
      type: object
    FreeTextWidgetDefinitionType:
      default: free_text
      description: Type of the free text widget.
      enum:
        - free_text
      example: free_text
      type: string
      x-enum-varnames:
        - FREE_TEXT
    FreeTextWidgetDefinition:
      description: >-
        Free text is a widget that allows you to add headings to your
        screenboard. Commonly used to state the overall purpose of the
        dashboard. Only available on FREE layout dashboards.
      properties:
        color:
          description: Color of the text.
          type: string
        font_size:
          description: Size of the text.
          type: string
        text:
          description: Text to display.
          example: ''
          type: string
        text_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        type:
          $ref: '#/components/schemas/FreeTextWidgetDefinitionType'
      required:
        - type
        - text
      type: object
    FunnelSource:
      default: rum
      description: Source from which to query items to display in the funnel.
      enum:
        - rum
      example: rum
      type: string
      x-enum-varnames:
        - RUM
    FunnelStep:
      description: The funnel step.
      properties:
        facet:
          description: The facet of the step.
          example: '@view.name'
          type: string
        value:
          description: The value of the step.
          example: /apm/home
          type: string
      required:
        - facet
        - value
      type: object
    FunnelQuery:
      description: Updated funnel widget.
      properties:
        data_source:
          $ref: '#/components/schemas/FunnelSource'
        query_string:
          description: The widget query.
          example: '@browser.name:Chrome'
          type: string
        steps:
          description: List of funnel steps.
          items:
            $ref: '#/components/schemas/FunnelStep'
          type: array
      required:
        - query_string
        - data_source
        - steps
      type: object
    FunnelRequestType:
      description: Widget request type.
      enum:
        - funnel
      example: funnel
      type: string
      x-enum-varnames:
        - FUNNEL
    FunnelWidgetRequest:
      description: Updated funnel widget.
      properties:
        query:
          $ref: '#/components/schemas/FunnelQuery'
        request_type:
          $ref: '#/components/schemas/FunnelRequestType'
      required:
        - query
        - request_type
      type: object
    FunnelWidgetDefinitionType:
      default: funnel
      description: Type of funnel widget.
      enum:
        - funnel
      example: funnel
      type: string
      x-enum-varnames:
        - FUNNEL
    FunnelWidgetDefinition:
      description: >
        The funnel visualization displays a funnel of user sessions that maps a
        sequence of view navigation and user interaction in your application.
      properties:
        requests:
          description: Request payload used to query items.
          example:
            - query:
                data_source: rum
                query_string: '@browser.name:Chrome'
                steps:
                  - facet: '@view.name'
                    value: /logs
                  - facet: '@view.name'
                    value: /apm/home
              request_type: funnel
          items:
            $ref: '#/components/schemas/FunnelWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: The title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: The size of the title.
          type: string
        type:
          $ref: '#/components/schemas/FunnelWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    ListStreamColumnWidth:
      description: Widget column width.
      enum:
        - auto
        - compact
        - full
      example: compact
      type: string
      x-enum-varnames:
        - AUTO
        - COMPACT
        - FULL
    ListStreamColumn:
      description: Widget column.
      example:
        field: timestamp
        width: auto
      properties:
        field:
          description: Widget column field.
          example: content
          type: string
        width:
          $ref: '#/components/schemas/ListStreamColumnWidth'
      required:
        - width
        - field
      type: object
    ListStreamComputeAggregation:
      description: Aggregation value.
      enum:
        - count
        - cardinality
        - median
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
        - earliest
        - latest
        - most_frequent
      example: count
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - MEDIAN
        - PC75
        - PC90
        - PC95
        - PC98
        - PC99
        - SUM
        - MIN
        - MAX
        - AVG
        - EARLIEST
        - LATEST
        - MOST_FREQUENT
    ListStreamComputeItems:
      description: List of facets and aggregations which to compute.
      properties:
        aggregation:
          $ref: '#/components/schemas/ListStreamComputeAggregation'
        facet:
          description: Facet name.
          example: resource_name
          type: string
      required:
        - aggregation
      type: object
    ListStreamSource:
      default: apm_issue_stream
      description: Source from which to query items to display in the stream.
      enum:
        - logs_stream
        - audit_stream
        - ci_pipeline_stream
        - ci_test_stream
        - rum_issue_stream
        - apm_issue_stream
        - trace_stream
        - logs_issue_stream
        - logs_pattern_stream
        - logs_transaction_stream
        - event_stream
        - rum_stream
        - llm_observability_stream
      example: apm_issue_stream
      type: string
      x-enum-varnames:
        - LOGS_STREAM
        - AUDIT_STREAM
        - CI_PIPELINE_STREAM
        - CI_TEST_STREAM
        - RUM_ISSUE_STREAM
        - APM_ISSUE_STREAM
        - TRACE_STREAM
        - LOGS_ISSUE_STREAM
        - LOGS_PATTERN_STREAM
        - LOGS_TRANSACTION_STREAM
        - EVENT_STREAM
        - RUM_STREAM
        - LLM_OBSERVABILITY_STREAM
    ListStreamGroupByItems:
      description: List of facets on which to group.
      properties:
        facet:
          description: Facet name.
          example: resource_name
          type: string
      required:
        - facet
      type: object
    WidgetFieldSort:
      description: Which column and order to sort by
      properties:
        column:
          description: Facet path for the column
          example: ''
          type: string
        order:
          $ref: '#/components/schemas/WidgetSort'
      required:
        - column
        - order
      type: object
    ListStreamQuery:
      description: Updated list stream widget.
      properties:
        clustering_pattern_field_path:
          description: >-
            Specifies the field for logs pattern clustering. Usable only with
            logs_pattern_stream.
          example: message
          type: string
        compute:
          description: >-
            Compute configuration for the List Stream Widget. Compute can be
            used only with the logs_transaction_stream (from 1 to 5 items) list
            stream source.
          items:
            $ref: '#/components/schemas/ListStreamComputeItems'
          maxItems: 5
          minItems: 1
          type: array
        data_source:
          $ref: '#/components/schemas/ListStreamSource'
        event_size:
          $ref: '#/components/schemas/WidgetEventSize'
        group_by:
          description: >-
            Group by configuration for the List Stream Widget. Group by can be
            used only with logs_pattern_stream (up to 4 items) or
            logs_transaction_stream (one group by item is required) list stream
            source.
          items:
            $ref: '#/components/schemas/ListStreamGroupByItems'
          maxItems: 4
          type: array
        indexes:
          description: List of indexes.
          items:
            description: Index.
            type: string
          type: array
        query_string:
          description: Widget query.
          example: '@service:app'
          type: string
        sort:
          $ref: '#/components/schemas/WidgetFieldSort'
        storage:
          description: Option for storage location. Feature in Private Beta.
          example: indexes
          type: string
      required:
        - query_string
        - data_source
      type: object
    FormulaType:
      description: Set the sort type to formula.
      enum:
        - formula
      example: formula
      type: string
      x-enum-varnames:
        - FORMULA
    WidgetFormulaSort:
      description: The formula to sort the widget by.
      properties:
        index:
          description: The index of the formula to sort by.
          example: 0
          format: int64
          minimum: 0
          type: integer
        order:
          $ref: '#/components/schemas/WidgetSort'
        type:
          $ref: '#/components/schemas/FormulaType'
      required:
        - type
        - index
        - order
      type: object
    GroupType:
      description: Set the sort type to group.
      enum:
        - group
      example: group
      type: string
      x-enum-varnames:
        - GROUP
    WidgetGroupSort:
      description: The group to sort the widget by.
      properties:
        name:
          description: The name of the group.
          example: group_name
          type: string
        order:
          $ref: '#/components/schemas/WidgetSort'
        type:
          $ref: '#/components/schemas/GroupType'
      required:
        - type
        - name
        - order
      type: object
    WidgetSortOrderBy:
      description: The item to sort the widget by.
      oneOf:
        - $ref: '#/components/schemas/WidgetFormulaSort'
        - $ref: '#/components/schemas/WidgetGroupSort'
    WidgetSortBy:
      description: The controls for sorting the widget.
      properties:
        count:
          description: The number of items to limit the widget to.
          format: int64
          minimum: 0
          type: integer
        order_by:
          description: The array of items to sort the widget by in order.
          items:
            $ref: '#/components/schemas/WidgetSortOrderBy'
          type: array
      type: object
    GeomapWidgetRequest:
      description: An updated geomap widget.
      properties:
        columns:
          description: Widget columns.
          example:
            - field: timestamp
              width: auto
            - field: content
              width: full
          items:
            $ref: '#/components/schemas/ListStreamColumn'
          type: array
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: The widget metrics query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        query:
          $ref: '#/components/schemas/ListStreamQuery'
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        sort:
          $ref: '#/components/schemas/WidgetSortBy'
      type: object
    GeomapWidgetDefinitionStyle:
      description: The style to apply to the widget.
      example:
        palette: hostmap_blues
        palette_flip: false
      properties:
        palette:
          description: The color palette to apply to the widget.
          example: hostmap_blues
          type: string
        palette_flip:
          description: Whether to flip the palette tones.
          example: false
          type: boolean
      required:
        - palette
        - palette_flip
      type: object
    GeomapWidgetDefinitionType:
      default: geomap
      description: Type of the geomap widget.
      enum:
        - geomap
      example: geomap
      type: string
      x-enum-varnames:
        - GEOMAP
    GeomapWidgetDefinitionView:
      description: The view of the world that the map should render.
      example:
        focus: WORLD
      properties:
        focus:
          description: The 2-letter ISO code of a country to focus the map on. Or `WORLD`.
          example: WORLD
          type: string
      required:
        - focus
      type: object
    GeomapWidgetDefinition:
      description: >-
        This visualization displays a series of values by country on a world
        map.
      properties:
        custom_links:
          description: A list of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          description: >-
            Array of one request object to display in the widget. The request
            must contain a `group-by` tag whose value is a country ISO code.


            See the [Request JSON schema
            documentation](https://docs.datadoghq.com/dashboards/graphing_json/request_json)

            for information about building the `REQUEST_SCHEMA`.
          example:
            - rum_query:
                search:
                  query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/GeomapWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        style:
          $ref: '#/components/schemas/GeomapWidgetDefinitionStyle'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: The title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: The size of the title.
          type: string
        type:
          $ref: '#/components/schemas/GeomapWidgetDefinitionType'
        view:
          $ref: '#/components/schemas/GeomapWidgetDefinitionView'
      required:
        - type
        - requests
        - style
        - view
      type: object
    WidgetLayoutType:
      description: Layout type of the group.
      enum:
        - ordered
      example: ordered
      type: string
      x-enum-varnames:
        - ORDERED
    GroupWidgetDefinitionType:
      default: group
      description: Type of the group widget.
      enum:
        - group
      example: group
      type: string
      x-enum-varnames:
        - GROUP
    Widget:
      description: >-
        Information about widget.


        **Note**: The `layout` property is required for widgets in dashboards
        with `free` `layout_type`.
              For the **new dashboard layout**, the `layout` property depends on the `reflow_type` of the dashboard.
              - If `reflow_type` is `fixed`, `layout` is required.
              - If `reflow_type` is `auto`, `layout` should not be set.
      properties:
        definition:
          $ref: '#/components/schemas/WidgetDefinition'
        id:
          description: ID of the widget.
          format: int64
          type: integer
        layout:
          $ref: '#/components/schemas/WidgetLayout'
      required:
        - definition
      type: object
    GroupWidgetDefinition:
      description: >-
        The groups widget allows you to keep similar graphs together on your
        timeboard. Each group has a custom header, can hold one to many graphs,
        and is collapsible.
      properties:
        background_color:
          description: Background color of the group title.
          type: string
        banner_img:
          description: URL of image to display as a banner for the group.
          type: string
        layout_type:
          $ref: '#/components/schemas/WidgetLayoutType'
        show_title:
          default: true
          description: Whether to show the title or not.
          type: boolean
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        type:
          $ref: '#/components/schemas/GroupWidgetDefinitionType'
        widgets:
          description: List of widget groups.
          example:
            - definition:
                requests:
                  fill:
                    q: avg:system.cpu.user{*}
                type: hostmap
          items:
            $ref: '#/components/schemas/Widget'
          type: array
      required:
        - type
        - layout_type
        - widgets
      type: object
    WidgetEvent:
      description: >-
        Event overlay control options.


        See the dedicated [Events JSON schema
        documentation](https://docs.datadoghq.com/dashboards/graphing_json/widget_json/#events-schema)

        to learn how to build the `<EVENTS_SCHEMA>`.
      properties:
        q:
          description: Query definition.
          example: ''
          type: string
        tags_execution:
          description: The execution method for multi-value filters.
          type: string
      required:
        - q
      type: object
    WidgetLegendSize:
      description: >-
        Available legend sizes for a widget. Should be one of "0", "2", "4",
        "8", "16", or "auto".
      type: string
    EventQueryDefinition:
      description: The event query.
      properties:
        search:
          description: The query being made on the event.
          example: ''
          type: string
        tags_execution:
          description: >-
            The execution method for multi-value filters. Can be either and or
            or.
          example: ''
          type: string
      required:
        - search
        - tags_execution
      type: object
    HeatMapWidgetRequest:
      description: Updated heat map widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        event_query:
          $ref: '#/components/schemas/EventQueryDefinition'
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        style:
          $ref: '#/components/schemas/WidgetStyle'
      type: object
    HeatMapWidgetDefinitionType:
      default: heatmap
      description: Type of the heat map widget.
      enum:
        - heatmap
      example: heatmap
      type: string
      x-enum-varnames:
        - HEATMAP
    WidgetAxis:
      description: Axis controls for the widget.
      properties:
        include_zero:
          description: Set to `true` to include zero.
          type: boolean
        label:
          description: >-
            The label of the axis to display on the graph. Only usable on
            Scatterplot Widgets.
          type: string
        max:
          default: auto
          description: >-
            Specifies maximum numeric value to show on the axis. Defaults to
            `auto`.
          type: string
        min:
          default: auto
          description: >-
            Specifies minimum numeric value to show on the axis. Defaults to
            `auto`.
          type: string
        scale:
          default: linear
          description: >-
            Specifies the scale type. Possible values are `linear`, `log`,
            `sqrt`, and `pow##` (for example `pow2` or `pow0.5`).
          type: string
      type: object
    HeatMapWidgetDefinition:
      description: >-
        The heat map visualization shows metrics aggregated across many tags,
        such as hosts. The more hosts that have a particular value, the darker
        that square is.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        events:
          description: List of widget events.
          items:
            $ref: '#/components/schemas/WidgetEvent'
          type: array
        legend_size:
          $ref: '#/components/schemas/WidgetLegendSize'
        requests:
          description: List of widget types.
          example:
            - q: jvm.heap.memory
          items:
            $ref: '#/components/schemas/HeatMapWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        show_legend:
          description: Whether or not to display the legend on this widget.
          type: boolean
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/HeatMapWidgetDefinitionType'
        yaxis:
          $ref: '#/components/schemas/WidgetAxis'
      required:
        - type
        - requests
      type: object
    WidgetNodeType:
      description: Which type of node to use in the map.
      enum:
        - host
        - container
      type: string
      x-enum-varnames:
        - HOST
        - CONTAINER
    HostMapRequest:
      description: Updated host map.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Query definition.
          type: string
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
      type: object
    HostMapWidgetDefinitionRequests:
      description: List of definitions.
      example: {}
      properties:
        fill:
          $ref: '#/components/schemas/HostMapRequest'
        size:
          $ref: '#/components/schemas/HostMapRequest'
      type: object
    HostMapWidgetDefinitionStyle:
      description: The style to apply to the widget.
      properties:
        fill_max:
          description: Max value to use to color the map.
          type: string
        fill_min:
          description: Min value to use to color the map.
          type: string
        palette:
          description: Color palette to apply to the widget.
          type: string
        palette_flip:
          description: Whether to flip the palette tones.
          type: boolean
      type: object
    HostMapWidgetDefinitionType:
      default: hostmap
      description: Type of the host map widget.
      enum:
        - hostmap
      example: hostmap
      type: string
      x-enum-varnames:
        - HOSTMAP
    HostMapWidgetDefinition:
      description: >-
        The host map widget graphs any metric across your hosts using the same
        visualization available from the main Host Map page.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        group:
          description: List of tag prefixes to group by.
          items:
            description: Tag prefixes.
            type: string
          type: array
        no_group_hosts:
          description: Whether to show the hosts that don’t fit in a group.
          type: boolean
        no_metric_hosts:
          description: Whether to show the hosts with no metrics.
          type: boolean
        node_type:
          $ref: '#/components/schemas/WidgetNodeType'
        notes:
          description: Notes on the title.
          type: string
        requests:
          $ref: '#/components/schemas/HostMapWidgetDefinitionRequests'
        scope:
          description: List of tags used to filter the map.
          items:
            description: Tags.
            type: string
          type: array
        style:
          $ref: '#/components/schemas/HostMapWidgetDefinitionStyle'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/HostMapWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    IFrameWidgetDefinitionType:
      default: iframe
      description: Type of the iframe widget.
      enum:
        - iframe
      example: iframe
      type: string
      x-enum-varnames:
        - IFRAME
    IFrameWidgetDefinition:
      description: >-
        The iframe widget allows you to embed a portion of any other web page on
        your dashboard. Only available on FREE layout dashboards.
      properties:
        type:
          $ref: '#/components/schemas/IFrameWidgetDefinitionType'
        url:
          description: URL of the iframe.
          example: ''
          type: string
      required:
        - type
        - url
      type: object
    WidgetHorizontalAlign:
      description: Horizontal alignment.
      enum:
        - center
        - left
        - right
      type: string
      x-enum-varnames:
        - CENTER
        - LEFT
        - RIGHT
    WidgetMargin:
      description: |-
        Size of the margins around the image.
        **Note**: `small` and `large` values are deprecated.
      enum:
        - sm
        - md
        - lg
        - small
        - large
      type: string
      x-enum-varnames:
        - SM
        - MD
        - LG
        - SMALL
        - LARGE
    WidgetImageSizing:
      description: >-
        How to size the image on the widget. The values are based on the image
        `object-fit` CSS properties.

        **Note**: `zoom`, `fit` and `center` values are deprecated.
      enum:
        - fill
        - contain
        - cover
        - none
        - scale-down
        - zoom
        - fit
        - center
      type: string
      x-enum-varnames:
        - FILL
        - CONTAIN
        - COVER
        - NONE
        - SCALEDOWN
        - ZOOM
        - FIT
        - CENTER
    ImageWidgetDefinitionType:
      default: image
      description: Type of the image widget.
      enum:
        - image
      example: image
      type: string
      x-enum-varnames:
        - IMAGE
    WidgetVerticalAlign:
      description: Vertical alignment.
      enum:
        - center
        - top
        - bottom
      type: string
      x-enum-varnames:
        - CENTER
        - TOP
        - BOTTOM
    ImageWidgetDefinition:
      description: >-
        The image widget allows you to embed an image on your dashboard. An
        image can be a PNG, JPG, or animated GIF. Only available on FREE layout
        dashboards.
      properties:
        has_background:
          default: true
          description: Whether to display a background or not.
          example: true
          type: boolean
        has_border:
          default: true
          description: Whether to display a border or not.
          example: true
          type: boolean
        horizontal_align:
          $ref: '#/components/schemas/WidgetHorizontalAlign'
        margin:
          $ref: '#/components/schemas/WidgetMargin'
        sizing:
          $ref: '#/components/schemas/WidgetImageSizing'
        type:
          $ref: '#/components/schemas/ImageWidgetDefinitionType'
        url:
          description: URL of the image.
          example: https://example.com/image.png
          type: string
        url_dark_theme:
          description: URL of the image in dark mode.
          example: https://example.com/image-dark-mode.png
          type: string
        vertical_align:
          $ref: '#/components/schemas/WidgetVerticalAlign'
      required:
        - type
        - url
      type: object
    ListStreamResponseFormat:
      description: Widget response format.
      enum:
        - event_list
      example: event_list
      type: string
      x-enum-varnames:
        - EVENT_LIST
    ListStreamWidgetRequest:
      description: Updated list stream widget.
      properties:
        columns:
          description: Widget columns.
          example:
            - field: timestamp
              width: auto
            - field: content
              width: full
          items:
            $ref: '#/components/schemas/ListStreamColumn'
          type: array
        query:
          $ref: '#/components/schemas/ListStreamQuery'
        response_format:
          $ref: '#/components/schemas/ListStreamResponseFormat'
      required:
        - columns
        - query
        - response_format
      type: object
    ListStreamWidgetDefinitionType:
      default: list_stream
      description: Type of the list stream widget.
      enum:
        - list_stream
      example: list_stream
      type: string
      x-enum-varnames:
        - LIST_STREAM
    ListStreamWidgetDefinition:
      description: >
        The list stream visualization displays a table of recent events in your
        application that

        match a search criteria using user-defined columns.
      properties:
        legend_size:
          $ref: '#/components/schemas/WidgetLegendSize'
        requests:
          description: Request payload used to query items.
          example:
            - columns:
                - field: timestamp
                  width: auto
              query:
                data_source: apm_issue_stream
                query_string: '@data_source:APM'
              response_format: event_list
          items:
            $ref: '#/components/schemas/ListStreamWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        show_legend:
          description: Whether or not to display the legend on this widget.
          type: boolean
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ListStreamWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    WidgetMessageDisplay:
      description: Amount of log lines to display
      enum:
        - inline
        - expanded-md
        - expanded-lg
      type: string
      x-enum-varnames:
        - INLINE
        - EXPANDED_MEDIUM
        - EXPANDED_LARGE
    LogStreamWidgetDefinitionType:
      default: log_stream
      description: Type of the log stream widget.
      enum:
        - log_stream
      example: log_stream
      type: string
      x-enum-varnames:
        - LOG_STREAM
    LogStreamWidgetDefinition:
      description: >-
        The Log Stream displays a log flow matching the defined query. Only
        available on FREE layout dashboards.
      properties:
        columns:
          description: Which columns to display on the widget.
          items:
            description: Column name.
            type: string
          type: array
        indexes:
          description: >-
            An array of index names to query in the stream. Use [] to query all
            indexes at once.
          example:
            - days-3
            - days-7
          items:
            description: >-
              One of the log indexes set up for your organization. [Multiple
              Indexes](https://docs.datadoghq.com/logs/indexes/#multiple-indexes)
            type: string
          type: array
        logset:
          deprecated: true
          description: ID of the log set to use.
          type: string
        message_display:
          $ref: '#/components/schemas/WidgetMessageDisplay'
        query:
          description: Query to filter the log stream with.
          type: string
        show_date_column:
          description: Whether to show the date column or not
          type: boolean
        show_message_column:
          description: Whether to show the message column or not
          type: boolean
        sort:
          $ref: '#/components/schemas/WidgetFieldSort'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/LogStreamWidgetDefinitionType'
      required:
        - type
      type: object
    WidgetColorPreference:
      description: Which color to use on the widget.
      enum:
        - background
        - text
      type: string
      x-enum-varnames:
        - BACKGROUND
        - TEXT
    WidgetMonitorSummaryDisplayFormat:
      description: What to display on the widget.
      enum:
        - counts
        - countsAndList
        - list
      type: string
      x-enum-varnames:
        - COUNTS
        - COUNTS_AND_LIST
        - LIST
    WidgetMonitorSummarySort:
      description: Widget sorting methods.
      enum:
        - name
        - group
        - status
        - tags
        - triggered
        - group,asc
        - group,desc
        - name,asc
        - name,desc
        - status,asc
        - status,desc
        - tags,asc
        - tags,desc
        - triggered,asc
        - triggered,desc
        - priority,asc
        - priority,desc
      example: name,asc
      type: string
      x-enum-varnames:
        - NAME
        - GROUP
        - STATUS
        - TAGS
        - TRIGGERED
        - GROUP_ASCENDING
        - GROUP_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
        - STATUS_ASCENDING
        - STATUS_DESCENDING
        - TAGS_ASCENDING
        - TAGS_DESCENDING
        - TRIGGERED_ASCENDING
        - TRIGGERED_DESCENDING
        - PRIORITY_ASCENDING
        - PRIORITY_DESCENDING
    WidgetSummaryType:
      description: Which summary type should be used.
      enum:
        - monitors
        - groups
        - combined
      type: string
      x-enum-varnames:
        - MONITORS
        - GROUPS
        - COMBINED
    MonitorSummaryWidgetDefinitionType:
      default: manage_status
      description: Type of the monitor summary widget.
      enum:
        - manage_status
      example: manage_status
      type: string
      x-enum-varnames:
        - MANAGE_STATUS
    MonitorSummaryWidgetDefinition:
      description: >-
        The monitor summary widget displays a summary view of all your Datadog
        monitors, or a subset based on a query. Only available on FREE layout
        dashboards.
      properties:
        color_preference:
          $ref: '#/components/schemas/WidgetColorPreference'
        count:
          deprecated: true
          description: The number of monitors to display.
          format: int64
          type: integer
        display_format:
          $ref: '#/components/schemas/WidgetMonitorSummaryDisplayFormat'
        hide_zero_counts:
          description: Whether to show counts of 0 or not.
          type: boolean
        query:
          description: Query to filter the monitors with.
          example: ''
          type: string
        show_last_triggered:
          description: >-
            Whether to show the time that has elapsed since the monitor/group
            triggered.
          type: boolean
        show_priority:
          default: false
          description: Whether to show the priorities column.
          type: boolean
        sort:
          $ref: '#/components/schemas/WidgetMonitorSummarySort'
        start:
          deprecated: true
          description: The start of the list. Typically 0.
          format: int64
          type: integer
        summary_type:
          $ref: '#/components/schemas/WidgetSummaryType'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/MonitorSummaryWidgetDefinitionType'
      required:
        - type
        - query
      type: object
    WidgetTickEdge:
      description: Define how you want to align the text on the widget.
      enum:
        - bottom
        - left
        - right
        - top
      type: string
      x-enum-varnames:
        - BOTTOM
        - LEFT
        - RIGHT
        - TOP
    NoteWidgetDefinitionType:
      default: note
      description: Type of the note widget.
      enum:
        - note
      example: note
      type: string
      x-enum-varnames:
        - NOTE
    NoteWidgetDefinition:
      description: >-
        The notes and links widget is similar to free text widget, but allows
        for more formatting options.
      properties:
        background_color:
          description: Background color of the note.
          type: string
        content:
          description: Content of the note.
          example: ''
          type: string
        font_size:
          description: Size of the text.
          type: string
        has_padding:
          default: true
          description: Whether to add padding or not.
          type: boolean
        show_tick:
          description: Whether to show a tick or not.
          type: boolean
        text_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        tick_edge:
          $ref: '#/components/schemas/WidgetTickEdge'
        tick_pos:
          description: Where to position the tick on an edge.
          type: string
        type:
          $ref: '#/components/schemas/NoteWidgetDefinitionType'
        vertical_align:
          $ref: '#/components/schemas/WidgetVerticalAlign'
      required:
        - type
        - content
      type: object
    PowerpackTemplateVariableContents:
      description: Powerpack template variable contents.
      properties:
        name:
          description: The name of the variable.
          example: host1
          type: string
        prefix:
          description: The tag prefix associated with the variable.
          type: string
        values:
          description: >-
            One or many template variable values within the saved view, which
            will be unioned together using `OR` if more than one is specified.
          example:
            - my-host
            - host1
            - host2
          items:
            description: One or more possible values of the template variable.
            minLength: 1
            type: string
          type: array
      required:
        - name
        - values
      type: object
    PowerpackTemplateVariables:
      description: Powerpack template variables.
      properties:
        controlled_by_powerpack:
          description: Template variables controlled at the powerpack level.
          items:
            $ref: '#/components/schemas/PowerpackTemplateVariableContents'
          type: array
        controlled_externally:
          description: >-
            Template variables controlled by the external resource, such as the
            dashboard this powerpack is on.
          items:
            $ref: '#/components/schemas/PowerpackTemplateVariableContents'
          type: array
      type: object
    PowerpackWidgetDefinitionType:
      default: powerpack
      description: Type of the powerpack widget.
      enum:
        - powerpack
      example: powerpack
      type: string
      x-enum-varnames:
        - POWERPACK
    PowerpackWidgetDefinition:
      description: >-
        The powerpack widget allows you to keep similar graphs together on your
        timeboard. Each group has a custom header, can hold one to many graphs,
        and is collapsible.
      properties:
        background_color:
          description: Background color of the powerpack title.
          type: string
        banner_img:
          description: URL of image to display as a banner for the powerpack.
          type: string
        powerpack_id:
          description: UUID of the associated powerpack.
          example: df43cf2a-6475-490d-b686-6fbc6cb9a49c
          type: string
        show_title:
          default: true
          description: Whether to show the title or not.
          type: boolean
        template_variables:
          $ref: '#/components/schemas/PowerpackTemplateVariables'
        title:
          description: Title of the widget.
          type: string
        type:
          $ref: '#/components/schemas/PowerpackWidgetDefinitionType'
      required:
        - type
        - powerpack_id
      type: object
    QueryValueWidgetRequest:
      description: Updated query value widget.
      properties:
        aggregator:
          $ref: '#/components/schemas/WidgetAggregator'
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        audit_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        conditional_formats:
          description: List of conditional formats.
          items:
            $ref: '#/components/schemas/WidgetConditionalFormat'
          type: array
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: TODO.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
      type: object
    TimeseriesBackgroundType:
      default: area
      description: Timeseries is made using an area or bars.
      enum:
        - bars
        - area
      example: bars
      type: string
      x-enum-varnames:
        - BARS
        - AREA
    TimeseriesBackground:
      description: Set a timeseries on the widget background.
      properties:
        type:
          $ref: '#/components/schemas/TimeseriesBackgroundType'
        yaxis:
          $ref: '#/components/schemas/WidgetAxis'
      required:
        - type
      type: object
    QueryValueWidgetDefinitionType:
      default: query_value
      description: Type of the query value widget.
      enum:
        - query_value
      example: query_value
      type: string
      x-enum-varnames:
        - QUERY_VALUE
    QueryValueWidgetDefinition:
      description: >-
        Query values display the current value of a given metric, APM, or log
        query.
      properties:
        autoscale:
          description: Whether to use auto-scaling or not.
          type: boolean
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        custom_unit:
          description: Display a unit of your choice on the widget.
          type: string
        precision:
          description: >-
            Number of decimals to show. If not defined, the widget uses the raw
            value.
          format: int64
          type: integer
        requests:
          description: Widget definition.
          example:
            - q/apm_query/log_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/QueryValueWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        text_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        time:
          $ref: '#/components/schemas/WidgetTime'
        timeseries_background:
          $ref: '#/components/schemas/TimeseriesBackground'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/QueryValueWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    RunWorkflowWidgetInput:
      description: Object to map a dashboard template variable to a workflow input.
      properties:
        name:
          description: Name of the workflow input.
          example: Environment
          type: string
        value:
          description: >-
            Dashboard template variable. Can be suffixed with '.value' or
            '.key'.
          example: $env.value
          type: string
      required:
        - name
        - value
      type: object
    RunWorkflowWidgetDefinitionType:
      default: run_workflow
      description: Type of the run workflow widget.
      enum:
        - run_workflow
      example: run_workflow
      type: string
      x-enum-varnames:
        - RUN_WORKFLOW
    RunWorkflowWidgetDefinition:
      description: >-
        Run workflow is widget that allows you to run a workflow from a
        dashboard.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        inputs:
          description: Array of workflow inputs to map to dashboard template variables.
          items:
            $ref: '#/components/schemas/RunWorkflowWidgetInput'
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/RunWorkflowWidgetDefinitionType'
        workflow_id:
          description: Workflow id.
          example: <workflow_id>
          type: string
      required:
        - type
        - workflow_id
      type: object
    SLOListWidgetQuery:
      description: Updated SLO List widget.
      properties:
        limit:
          default: 100
          description: Maximum number of results to display in the table.
          format: int64
          maximum: 100
          minimum: 1
          type: integer
        query_string:
          description: Widget query.
          example: env:prod AND service:my-app
          type: string
        sort:
          description: Options for sorting results.
          items:
            $ref: '#/components/schemas/WidgetFieldSort'
          type: array
      required:
        - query_string
      type: object
    SLOListWidgetRequestType:
      description: Widget request type.
      enum:
        - slo_list
      example: slo_list
      type: string
      x-enum-varnames:
        - SLO_LIST
    SLOListWidgetRequest:
      description: Updated SLO List widget.
      properties:
        query:
          $ref: '#/components/schemas/SLOListWidgetQuery'
        request_type:
          $ref: '#/components/schemas/SLOListWidgetRequestType'
      required:
        - query
        - request_type
      type: object
    SLOListWidgetDefinitionType:
      default: slo_list
      description: Type of the SLO List widget.
      enum:
        - slo_list
      example: slo_list
      type: string
      x-enum-varnames:
        - SLO_LIST
    SLOListWidgetDefinition:
      description: >-
        Use the SLO List widget to track your SLOs (Service Level Objectives) on
        dashboards.
      properties:
        requests:
          description: Array of one request object to display in the widget.
          items:
            $ref: '#/components/schemas/SLOListWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/SLOListWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    WidgetTimeWindows:
      description: Define a time window.
      enum:
        - 7d
        - 30d
        - 90d
        - week_to_date
        - previous_week
        - month_to_date
        - previous_month
        - global_time
      type: string
      x-enum-varnames:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - NINETY_DAYS
        - WEEK_TO_DATE
        - PREVIOUS_WEEK
        - MONTH_TO_DATE
        - PREVIOUS_MONTH
        - GLOBAL_TIME
    SLOWidgetDefinitionType:
      default: slo
      description: Type of the SLO widget.
      enum:
        - slo
      example: slo
      type: string
      x-enum-varnames:
        - SLO
    WidgetViewMode:
      description: Define how you want the SLO to be displayed.
      enum:
        - overall
        - component
        - both
      type: string
      x-enum-varnames:
        - OVERALL
        - COMPONENT
        - BOTH
    SLOWidgetDefinition:
      description: >-
        Use the SLO and uptime widget to track your SLOs (Service Level
        Objectives) and uptime on screenboards and timeboards.
      properties:
        additional_query_filters:
          description: Additional filters applied to the SLO query.
          type: string
        global_time_target:
          description: Defined global time target.
          type: string
        show_error_budget:
          description: Defined error budget.
          type: boolean
        slo_id:
          description: ID of the SLO displayed.
          type: string
        time_windows:
          description: Times being monitored.
          items:
            $ref: '#/components/schemas/WidgetTimeWindows'
          type: array
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/SLOWidgetDefinitionType'
        view_mode:
          $ref: '#/components/schemas/WidgetViewMode'
        view_type:
          default: detail
          description: Type of view displayed by the widget.
          example: detail
          type: string
      required:
        - type
        - view_type
      type: object
    ScatterplotDimension:
      description: Dimension of the Scatterplot.
      enum:
        - x
        - 'y'
        - radius
        - color
      example: radius
      type: string
      x-enum-varnames:
        - X
        - 'Y'
        - RADIUS
        - COLOR
    ScatterplotWidgetFormula:
      description: Formula to be used in a Scatterplot widget query.
      properties:
        alias:
          description: Expression alias.
          example: my-query
          type: string
        dimension:
          $ref: '#/components/schemas/ScatterplotDimension'
        formula:
          description: String expression built from queries, formulas, and functions.
          example: func(a) + b
          type: string
      required:
        - formula
        - dimension
      type: object
    ScatterplotTableRequest:
      description: Scatterplot request containing formulas and functions.
      properties:
        formulas:
          description: List of Scatterplot formulas that operate on queries.
          items:
            $ref: '#/components/schemas/ScatterplotWidgetFormula'
          type: array
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
      type: object
    ScatterplotWidgetAggregator:
      description: Aggregator used for the request.
      enum:
        - avg
        - last
        - max
        - min
        - sum
      type: string
      x-enum-varnames:
        - AVERAGE
        - LAST
        - MAXIMUM
        - MINIMUM
        - SUM
    ScatterPlotRequest:
      description: Updated scatter plot.
      properties:
        aggregator:
          $ref: '#/components/schemas/ScatterplotWidgetAggregator'
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Query definition.
          type: string
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
      type: object
    ScatterPlotWidgetDefinitionRequests:
      description: Widget definition.
      example:
        x:
          q: system.cpu.user
        'y':
          q: system.mem.used
      properties:
        table:
          $ref: '#/components/schemas/ScatterplotTableRequest'
        x:
          $ref: '#/components/schemas/ScatterPlotRequest'
        'y':
          $ref: '#/components/schemas/ScatterPlotRequest'
      type: object
    ScatterPlotWidgetDefinitionType:
      default: scatterplot
      description: Type of the scatter plot widget.
      enum:
        - scatterplot
      example: scatterplot
      type: string
      x-enum-varnames:
        - SCATTERPLOT
    ScatterPlotWidgetDefinition:
      description: >-
        The scatter plot visualization allows you to graph a chosen scope over
        two different metrics with their respective aggregation.
      properties:
        color_by_groups:
          description: List of groups used for colors.
          items:
            description: Group name.
            type: string
          type: array
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          $ref: '#/components/schemas/ScatterPlotWidgetDefinitionRequests'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ScatterPlotWidgetDefinitionType'
        xaxis:
          $ref: '#/components/schemas/WidgetAxis'
        yaxis:
          $ref: '#/components/schemas/WidgetAxis'
      required:
        - type
        - requests
      type: object
    ServiceMapWidgetDefinitionType:
      default: servicemap
      description: Type of the service map widget.
      enum:
        - servicemap
      example: servicemap
      type: string
      x-enum-varnames:
        - SERVICEMAP
    ServiceMapWidgetDefinition:
      description: >-
        This widget displays a map of a service to all of the services that call
        it, and all of the services that it calls.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        filters:
          description: Your environment and primary tag (or * if enabled for your account).
          example:
            - '*'
          items:
            description: Filter name.
            type: string
          minItems: 1
          type: array
        service:
          description: The ID of the service you want to map.
          example: ''
          type: string
        title:
          description: The title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ServiceMapWidgetDefinitionType'
      required:
        - type
        - filters
        - service
      type: object
    WidgetServiceSummaryDisplayFormat:
      description: Number of columns to display.
      enum:
        - one_column
        - two_column
        - three_column
      type: string
      x-enum-varnames:
        - ONE_COLUMN
        - TWO_COLUMN
        - THREE_COLUMN
    WidgetSizeFormat:
      description: Size of the widget.
      enum:
        - small
        - medium
        - large
      type: string
      x-enum-varnames:
        - SMALL
        - MEDIUM
        - LARGE
    ServiceSummaryWidgetDefinitionType:
      default: trace_service
      description: Type of the service summary widget.
      enum:
        - trace_service
      example: trace_service
      type: string
      x-enum-varnames:
        - TRACE_SERVICE
    ServiceSummaryWidgetDefinition:
      description: >-
        The service summary displays the graphs of a chosen service in your
        screenboard. Only available on FREE layout dashboards.
      properties:
        display_format:
          $ref: '#/components/schemas/WidgetServiceSummaryDisplayFormat'
        env:
          description: APM environment.
          example: ''
          type: string
        service:
          description: APM service.
          example: ''
          type: string
        show_breakdown:
          description: Whether to show the latency breakdown or not.
          type: boolean
        show_distribution:
          description: Whether to show the latency distribution or not.
          type: boolean
        show_errors:
          description: Whether to show the error metrics or not.
          type: boolean
        show_hits:
          description: Whether to show the hits metrics or not.
          type: boolean
        show_latency:
          description: Whether to show the latency metrics or not.
          type: boolean
        show_resource_list:
          description: Whether to show the resource list or not.
          type: boolean
        size_format:
          $ref: '#/components/schemas/WidgetSizeFormat'
        span_name:
          description: APM span name.
          example: ''
          type: string
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ServiceSummaryWidgetDefinitionType'
      required:
        - type
        - env
        - service
        - span_name
      type: object
    SplitGraphVizSize:
      description: Size of the individual graphs in the split.
      enum:
        - xs
        - sm
        - md
        - lg
      example: sm
      type: string
      x-enum-varnames:
        - XS
        - SM
        - MD
        - LG
    SunburstWidgetLegendTableType:
      description: Whether or not to show a table legend.
      enum:
        - table
        - none
      example: table
      type: string
      x-enum-varnames:
        - TABLE
        - NONE
    SunburstWidgetLegendTable:
      description: Configuration of table-based legend.
      properties:
        type:
          $ref: '#/components/schemas/SunburstWidgetLegendTableType'
      required:
        - type
      type: object
    SunburstWidgetLegendInlineAutomaticType:
      description: Whether to show the legend inline or let it be automatically generated.
      enum:
        - inline
        - automatic
      example: automatic
      type: string
      x-enum-varnames:
        - INLINE
        - AUTOMATIC
    SunburstWidgetLegendInlineAutomatic:
      description: Configuration of inline or automatic legends.
      properties:
        hide_percent:
          description: Whether to hide the percentages of the groups.
          type: boolean
        hide_value:
          description: Whether to hide the values of the groups.
          type: boolean
        type:
          $ref: '#/components/schemas/SunburstWidgetLegendInlineAutomaticType'
      required:
        - type
      type: object
    SunburstWidgetLegend:
      description: Configuration of the legend.
      oneOf:
        - $ref: '#/components/schemas/SunburstWidgetLegendTable'
        - $ref: '#/components/schemas/SunburstWidgetLegendInlineAutomatic'
    SunburstWidgetRequest:
      description: Request definition of sunburst widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        audit_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        style:
          $ref: '#/components/schemas/WidgetStyle'
      type: object
    SunburstWidgetDefinitionType:
      default: sunburst
      description: Type of the Sunburst widget.
      enum:
        - sunburst
      example: sunburst
      type: string
      x-enum-varnames:
        - SUNBURST
    SunburstWidgetDefinition:
      description: >-
        Sunbursts are spot on to highlight how groups contribute to the total of
        a query.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        hide_total:
          description: Show the total value in this widget.
          type: boolean
        legend:
          $ref: '#/components/schemas/SunburstWidgetLegend'
        requests:
          description: List of sunburst widget requests.
          example:
            - q/apm_query/log_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/SunburstWidgetRequest'
          minItems: 1
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/SunburstWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    TableWidgetHasSearchBar:
      description: Controls the display of the search bar.
      enum:
        - always
        - never
        - auto
      example: auto
      type: string
      x-enum-varnames:
        - ALWAYS
        - NEVER
        - AUTO
    TableWidgetTextFormatMatchType:
      description: Match or compare option.
      enum:
        - is
        - is_not
        - contains
        - does_not_contain
        - starts_with
        - ends_with
      example: is
      type: string
      x-enum-varnames:
        - IS
        - IS_NOT
        - CONTAINS
        - DOES_NOT_CONTAIN
        - STARTS_WITH
        - ENDS_WITH
    TableWidgetTextFormatMatch:
      description: Match rule for the table widget text format.
      example:
        type: is
        value: fruit
      properties:
        type:
          $ref: '#/components/schemas/TableWidgetTextFormatMatchType'
        value:
          description: Table Widget Match String.
          example: Match Value
          type: string
      required:
        - type
        - value
      type: object
    TableWidgetTextFormatPalette:
      default: white_on_green
      description: Color-on-color palette to highlight replaced text.
      enum:
        - white_on_red
        - white_on_yellow
        - white_on_green
        - black_on_light_red
        - black_on_light_yellow
        - black_on_light_green
        - red_on_white
        - yellow_on_white
        - green_on_white
        - custom_bg
        - custom_text
      type: string
      x-enum-varnames:
        - WHITE_ON_RED
        - WHITE_ON_YELLOW
        - WHITE_ON_GREEN
        - BLACK_ON_LIGHT_RED
        - BLACK_ON_LIGHT_YELLOW
        - BLACK_ON_LIGHT_GREEN
        - RED_ON_WHITE
        - YELLOW_ON_WHITE
        - GREEN_ON_WHITE
        - CUSTOM_BG
        - CUSTOM_TEXT
    TableWidgetTextFormatReplaceAllType:
      description: Table widget text format replace all type.
      enum:
        - all
      example: all
      type: string
      x-enum-varnames:
        - ALL
    TableWidgetTextFormatReplaceAll:
      description: Match All definition.
      example:
        type: all
        with: vegetable
      properties:
        type:
          $ref: '#/components/schemas/TableWidgetTextFormatReplaceAllType'
        with:
          description: Replace All type.
          example: all
          type: string
      required:
        - type
        - with
      type: object
    TableWidgetTextFormatReplaceSubstringType:
      description: Table widget text format replace sub-string type.
      enum:
        - substring
      example: substring
      type: string
      x-enum-varnames:
        - SUBSTRING
    TableWidgetTextFormatReplaceSubstring:
      description: Match Sub-string definition.
      example:
        substring: fruit
        type: substring
        with: vegetable
      properties:
        substring:
          description: Text that will be replaced.
          example: string to replace
          type: string
        type:
          $ref: '#/components/schemas/TableWidgetTextFormatReplaceSubstringType'
        with:
          description: Text that will replace original sub-string.
          example: replacement
          type: string
      required:
        - type
        - with
        - substring
      type: object
    TableWidgetTextFormatReplace:
      description: Replace rule for the table widget text format.
      example:
        type: all
        with: vegetable
      oneOf:
        - $ref: '#/components/schemas/TableWidgetTextFormatReplaceAll'
        - $ref: '#/components/schemas/TableWidgetTextFormatReplaceSubstring'
    TableWidgetTextFormatRule:
      description: Text format rules.
      example:
        match:
          type: is
          value: apple
        replace:
          type: all
          with: vegetable
      properties:
        custom_bg_color:
          description: >-
            Hex representation of the custom background color. Used with custom
            background palette option.
          example: '#632ca6'
          type: string
        custom_fg_color:
          description: >-
            Hex representation of the custom text color. Used with custom text
            palette option.
          example: '#632ca6'
          type: string
        match:
          $ref: '#/components/schemas/TableWidgetTextFormatMatch'
        palette:
          $ref: '#/components/schemas/TableWidgetTextFormatPalette'
        replace:
          $ref: '#/components/schemas/TableWidgetTextFormatReplace'
      required:
        - match
      type: object
    TableWidgetTextFormat:
      description: Text format rules for a tag-based column within a table widget.
      example:
        - match:
            type: is
            value: fruit
          replace:
            type: all
            with: vegetable
        - match:
            type: is
            value: cake
          palette: white_on_green
      items:
        $ref: '#/components/schemas/TableWidgetTextFormatRule'
      minItems: 1
      type: array
    TableWidgetRequest:
      description: Updated table widget.
      properties:
        aggregator:
          $ref: '#/components/schemas/WidgetAggregator'
        alias:
          description: The column name (defaults to the metric name).
          type: string
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        apm_stats_query:
          $ref: '#/components/schemas/ApmStatsQueryDefinition'
        cell_display_mode:
          description: A list of display modes for each table cell.
          items:
            $ref: '#/components/schemas/TableWidgetCellDisplayMode'
          type: array
        conditional_formats:
          description: List of conditional formats.
          items:
            $ref: '#/components/schemas/WidgetConditionalFormat'
          type: array
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        limit:
          description: >-
            For metric queries, the number of lines to show in the table. Only
            one request should have this property.
          format: int64
          type: integer
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        order:
          $ref: '#/components/schemas/WidgetSort'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Query definition.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        sort:
          $ref: '#/components/schemas/WidgetSortBy'
        text_formats:
          description: List of text formats for columns produced by tags.
          items:
            $ref: '#/components/schemas/TableWidgetTextFormat'
          type: array
      type: object
    TableWidgetDefinitionType:
      default: query_table
      description: Type of the table widget.
      enum:
        - query_table
      example: query_table
      type: string
      x-enum-varnames:
        - QUERY_TABLE
    TableWidgetDefinition:
      description: >-
        The table visualization is available on timeboards and screenboards. It
        displays columns of metrics grouped by tag key.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        has_search_bar:
          $ref: '#/components/schemas/TableWidgetHasSearchBar'
        requests:
          description: Widget definition.
          example:
            - q/apm_query/log_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/TableWidgetRequest'
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/TableWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    TimeseriesWidgetLegendColumn:
      description: Legend column.
      enum:
        - value
        - avg
        - sum
        - min
        - max
      type: string
      x-enum-varnames:
        - VALUE
        - AVG
        - SUM
        - MIN
        - MAX
    TimeseriesWidgetLegendLayout:
      description: Layout of the legend.
      enum:
        - auto
        - horizontal
        - vertical
      type: string
      x-enum-varnames:
        - AUTO
        - HORIZONTAL
        - VERTICAL
    WidgetDisplayType:
      description: Type of display to use for the request.
      enum:
        - area
        - bars
        - line
        - overlay
      type: string
      x-enum-varnames:
        - AREA
        - BARS
        - LINE
        - OVERLAY
    TimeseriesWidgetExpressionAlias:
      description: Define an expression alias.
      properties:
        alias_name:
          description: Expression alias.
          type: string
        expression:
          description: Expression name.
          example: ''
          type: string
      required:
        - expression
      type: object
    WidgetLineType:
      description: Type of lines displayed.
      enum:
        - dashed
        - dotted
        - solid
      type: string
      x-enum-varnames:
        - DASHED
        - DOTTED
        - SOLID
    WidgetLineWidth:
      description: Width of line displayed.
      enum:
        - normal
        - thick
        - thin
      type: string
      x-enum-varnames:
        - NORMAL
        - THICK
        - THIN
    WidgetRequestStyle:
      description: Define request widget style.
      properties:
        line_type:
          $ref: '#/components/schemas/WidgetLineType'
        line_width:
          $ref: '#/components/schemas/WidgetLineWidth'
        palette:
          description: Color palette to apply to the widget.
          type: string
      type: object
    TimeseriesWidgetRequest:
      description: Updated timeseries widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        audit_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        display_type:
          $ref: '#/components/schemas/WidgetDisplayType'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        metadata:
          description: Used to define expression aliases.
          items:
            $ref: '#/components/schemas/TimeseriesWidgetExpressionAlias'
          type: array
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        on_right_yaxis:
          description: Whether or not to display a second y-axis on the right.
          type: boolean
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        style:
          $ref: '#/components/schemas/WidgetRequestStyle'
      type: object
    TimeseriesWidgetDefinitionType:
      default: timeseries
      description: Type of the timeseries widget.
      enum:
        - timeseries
      example: timeseries
      type: string
      x-enum-varnames:
        - TIMESERIES
    TimeseriesWidgetDefinition:
      description: >-
        The timeseries visualization allows you to display the evolution of one
        or more metrics, log events, or Indexed Spans over time.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        events:
          description: List of widget events.
          items:
            $ref: '#/components/schemas/WidgetEvent'
          type: array
        legend_columns:
          description: Columns displayed in the legend.
          items:
            $ref: '#/components/schemas/TimeseriesWidgetLegendColumn'
          type: array
        legend_layout:
          $ref: '#/components/schemas/TimeseriesWidgetLegendLayout'
        legend_size:
          $ref: '#/components/schemas/WidgetLegendSize'
        markers:
          description: List of markers.
          items:
            $ref: '#/components/schemas/WidgetMarker'
          type: array
        requests:
          description: List of timeseries widget requests.
          example:
            - q/apm_query/log_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/TimeseriesWidgetRequest'
          minItems: 1
          type: array
        right_yaxis:
          $ref: '#/components/schemas/WidgetAxis'
        show_legend:
          description: (screenboard only) Show the legend for this widget.
          type: boolean
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/TimeseriesWidgetDefinitionType'
        yaxis:
          $ref: '#/components/schemas/WidgetAxis'
      required:
        - type
        - requests
      type: object
    ToplistWidgetRequest:
      description: Updated top list widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        audit_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        conditional_formats:
          description: List of conditional formats.
          example:
            - comparator: '>='
              palette: blue
              value: 1
          items:
            $ref: '#/components/schemas/WidgetConditionalFormat'
          minItems: 1
          type: array
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        sort:
          $ref: '#/components/schemas/WidgetSortBy'
        style:
          $ref: '#/components/schemas/WidgetRequestStyle'
      type: object
    ToplistWidgetLegend:
      description: Top list widget stacked legend behavior.
      enum:
        - automatic
        - inline
        - none
      example: automatic
      type: string
      x-enum-varnames:
        - AUTOMATIC
        - INLINE
        - NONE
    ToplistWidgetStackedType:
      default: stacked
      description: Top list widget stacked display type.
      enum:
        - stacked
      example: stacked
      type: string
      x-enum-varnames:
        - STACKED
    ToplistWidgetStacked:
      description: Top list widget stacked display options.
      properties:
        legend:
          $ref: '#/components/schemas/ToplistWidgetLegend'
        type:
          $ref: '#/components/schemas/ToplistWidgetStackedType'
      required:
        - type
      type: object
    ToplistWidgetFlatType:
      default: flat
      description: Top list widget flat display type.
      enum:
        - flat
      example: flat
      type: string
      x-enum-varnames:
        - FLAT
    ToplistWidgetFlat:
      description: Top list widget flat display.
      properties:
        type:
          $ref: '#/components/schemas/ToplistWidgetFlatType'
      required:
        - type
      type: object
    ToplistWidgetDisplay:
      description: Top list widget display options.
      oneOf:
        - $ref: '#/components/schemas/ToplistWidgetStacked'
        - $ref: '#/components/schemas/ToplistWidgetFlat'
    ToplistWidgetScaling:
      description: Top list widget scaling definition.
      enum:
        - absolute
        - relative
      type: string
      x-enum-varnames:
        - ABSOLUTE
        - RELATIVE
    ToplistWidgetStyle:
      description: Style customization for a top list widget.
      properties:
        display:
          $ref: '#/components/schemas/ToplistWidgetDisplay'
        palette:
          description: Color palette to apply to the widget.
          type: string
        scaling:
          $ref: '#/components/schemas/ToplistWidgetScaling'
      type: object
    ToplistWidgetDefinitionType:
      default: toplist
      description: Type of the top list widget.
      enum:
        - toplist
      example: toplist
      type: string
      x-enum-varnames:
        - TOPLIST
    ToplistWidgetDefinition:
      description: >-
        The top list visualization enables you to display a list of Tag value
        like hostname or service with the most or least of any metric value,
        such as highest consumers of CPU, hosts with the least disk space, etc.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          description: List of top list widget requests.
          example:
            - q: system.load.1
          items:
            $ref: '#/components/schemas/ToplistWidgetRequest'
          type: array
        style:
          $ref: '#/components/schemas/ToplistWidgetStyle'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ToplistWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    TreeMapColorBy:
      default: user
      deprecated: true
      description: >-
        (deprecated) The attribute formerly used to determine color in the
        widget.
      enum:
        - user
      example: user
      type: string
      x-enum-varnames:
        - USER
    TreeMapGroupBy:
      deprecated: true
      description: >-
        (deprecated) The attribute formerly used to group elements in the
        widget.
      enum:
        - user
        - family
        - process
      example: user
      type: string
      x-enum-varnames:
        - USER
        - FAMILY
        - PROCESS
    TreeMapWidgetRequest:
      description: An updated treemap widget.
      properties:
        formulas:
          description: List of formulas that operate on queries.
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        q:
          description: The widget metrics query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
      type: object
    TreeMapSizeBy:
      deprecated: true
      description: >-
        (deprecated) The attribute formerly used to determine size in the
        widget.
      enum:
        - pct_cpu
        - pct_mem
      example: pct_cpu
      type: string
      x-enum-varnames:
        - PCT_CPU
        - PCT_MEM
    TreeMapWidgetDefinitionType:
      default: treemap
      description: Type of the treemap widget.
      enum:
        - treemap
      example: treemap
      type: string
      x-enum-varnames:
        - TREEMAP
    TreeMapWidgetDefinition:
      description: >-
        The treemap visualization enables you to display hierarchical and nested
        data. It is well suited for queries that describe part-whole
        relationships, such as resource usage by availability zone, data center,
        or team.
      properties:
        color_by:
          $ref: '#/components/schemas/TreeMapColorBy'
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        group_by:
          $ref: '#/components/schemas/TreeMapGroupBy'
        requests:
          description: List of treemap widget requests.
          example:
            - aggregator: sum
              data_source: metrics
              name: query1
              query: sum:system.mem.total{*} by {service}
          items:
            $ref: '#/components/schemas/TreeMapWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        size_by:
          $ref: '#/components/schemas/TreeMapSizeBy'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        type:
          $ref: '#/components/schemas/TreeMapWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    SplitGraphSourceWidgetDefinition:
      description: The original widget we are splitting on.
      oneOf:
        - $ref: '#/components/schemas/ChangeWidgetDefinition'
        - $ref: '#/components/schemas/GeomapWidgetDefinition'
        - $ref: '#/components/schemas/QueryValueWidgetDefinition'
        - $ref: '#/components/schemas/ScatterPlotWidgetDefinition'
        - $ref: '#/components/schemas/SunburstWidgetDefinition'
        - $ref: '#/components/schemas/TableWidgetDefinition'
        - $ref: '#/components/schemas/TimeseriesWidgetDefinition'
        - $ref: '#/components/schemas/ToplistWidgetDefinition'
        - $ref: '#/components/schemas/TreeMapWidgetDefinition'
    SplitConfigSortCompute:
      description: Defines the metric and aggregation used as the sort value.
      properties:
        aggregation:
          description: How to aggregate the sort metric for the purposes of ordering.
          example: sum
          type: string
        metric:
          description: The metric to use for sorting graphs.
          example: system.cpu.user
          type: string
      required:
        - aggregation
        - metric
      type: object
    SplitSort:
      description: Controls the order in which graphs appear in the split.
      properties:
        compute:
          $ref: '#/components/schemas/SplitConfigSortCompute'
        order:
          $ref: '#/components/schemas/WidgetSort'
      required:
        - order
      type: object
    SplitDimension:
      description: The property by which the graph splits
      example:
        one_graph_per: service
      properties:
        one_graph_per:
          description: >-
            The system interprets this attribute differently depending on the
            data source of the query being split. For metrics, it's a tag. For
            the events platform, it's an attribute or tag.
          example: service
          type: string
      required:
        - one_graph_per
      type: object
    SplitVectorEntryItem:
      description: >-
        The split graph list contains a graph for each value of the split
        dimension.
      minLength: 1
      properties:
        tag_key:
          description: The tag key.
          example: demo
          minLength: 1
          type: string
        tag_values:
          description: The tag values.
          example:
            - env
          items:
            minLength: 1
            type: string
          type: array
      required:
        - tag_key
        - tag_values
      type: object
    SplitVectorEntry:
      description: The widget displays one graph for each entry in this parameter.
      example:
        - tag_key: demo
          tag_values:
            - env
      items:
        $ref: '#/components/schemas/SplitVectorEntryItem'
      minItems: 1
      type: array
    SplitConfig:
      description: Encapsulates all user choices about how to split a graph.
      properties:
        limit:
          description: Maximum number of graphs to display in the widget.
          example: 24
          format: int64
          maximum: 500
          minimum: 1
          type: integer
        sort:
          $ref: '#/components/schemas/SplitSort'
        split_dimensions:
          description: The dimension(s) on which to split the graph
          example:
            - one_graph_per: service
          items:
            $ref: '#/components/schemas/SplitDimension'
          maxItems: 1
          minItems: 1
          type: array
        static_splits:
          description: Manual selection of tags making split graph widget static
          items:
            $ref: '#/components/schemas/SplitVectorEntry'
          maxItems: 500
          type: array
      required:
        - split_dimensions
        - limit
        - sort
      type: object
    SplitGraphWidgetDefinitionType:
      default: split_group
      description: Type of the split graph widget
      enum:
        - split_group
      example: split_group
      type: string
      x-enum-varnames:
        - SPLIT_GROUP
    SplitGraphWidgetDefinition:
      description: >
        The split graph widget allows you to create repeating units of a graph -
        one for each value in a group (for example: one per service)
      properties:
        has_uniform_y_axes:
          description: Normalize y axes across graphs
          type: boolean
        size:
          $ref: '#/components/schemas/SplitGraphVizSize'
        source_widget_definition:
          $ref: '#/components/schemas/SplitGraphSourceWidgetDefinition'
        split_config:
          $ref: '#/components/schemas/SplitConfig'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        type:
          $ref: '#/components/schemas/SplitGraphWidgetDefinitionType'
      required:
        - size
        - type
        - source_widget_definition
        - split_config
      type: object
    TopologyQueryDataSource:
      description: Name of the data source
      enum:
        - data_streams
        - service_map
      type: string
      x-enum-varnames:
        - DATA_STREAMS
        - SERVICE_MAP
    TopologyQuery:
      description: >-
        Query to service-based topology data sources like the service map or
        data streams.
      properties:
        data_source:
          $ref: '#/components/schemas/TopologyQueryDataSource'
        filters:
          description: Your environment and primary tag (or * if enabled for your account).
          example:
            - env:prod
            - az:us-east
          items:
            description: Environment or primary tag, generally in a key:value format
            type: string
          minItems: 1
          type: array
        service:
          description: Name of the service
          example: myService
          type: string
      type: object
    TopologyRequestType:
      description: Widget request type.
      enum:
        - topology
      type: string
      x-enum-varnames:
        - TOPOLOGY
    TopologyRequest:
      description: Request that will return nodes and edges to be used by topology map.
      properties:
        query:
          $ref: '#/components/schemas/TopologyQuery'
        request_type:
          $ref: '#/components/schemas/TopologyRequestType'
      type: object
    TopologyMapWidgetDefinitionType:
      default: topology_map
      description: Type of the topology map widget.
      enum:
        - topology_map
      example: topology_map
      type: string
      x-enum-varnames:
        - TOPOLOGY_MAP
    TopologyMapWidgetDefinition:
      description: >-
        This widget displays a topology of nodes and edges for different data
        sources. It replaces the service map widget.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          description: One or more Topology requests.
          items:
            $ref: '#/components/schemas/TopologyRequest'
          minItems: 1
          type: array
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/TopologyMapWidgetDefinitionType'
      required:
        - type
        - requests
      type: object
    WidgetDefinition:
      description: >-
        [Definition of the
        widget](https://docs.datadoghq.com/dashboards/widgets/).
      oneOf:
        - $ref: '#/components/schemas/AlertGraphWidgetDefinition'
        - $ref: '#/components/schemas/AlertValueWidgetDefinition'
        - $ref: '#/components/schemas/ChangeWidgetDefinition'
        - $ref: '#/components/schemas/CheckStatusWidgetDefinition'
        - $ref: '#/components/schemas/DistributionWidgetDefinition'
        - $ref: '#/components/schemas/EventStreamWidgetDefinition'
        - $ref: '#/components/schemas/EventTimelineWidgetDefinition'
        - $ref: '#/components/schemas/FreeTextWidgetDefinition'
        - $ref: '#/components/schemas/FunnelWidgetDefinition'
        - $ref: '#/components/schemas/GeomapWidgetDefinition'
        - $ref: '#/components/schemas/GroupWidgetDefinition'
        - $ref: '#/components/schemas/HeatMapWidgetDefinition'
        - $ref: '#/components/schemas/HostMapWidgetDefinition'
        - $ref: '#/components/schemas/IFrameWidgetDefinition'
        - $ref: '#/components/schemas/ImageWidgetDefinition'
        - $ref: '#/components/schemas/ListStreamWidgetDefinition'
        - $ref: '#/components/schemas/LogStreamWidgetDefinition'
        - $ref: '#/components/schemas/MonitorSummaryWidgetDefinition'
        - $ref: '#/components/schemas/NoteWidgetDefinition'
        - $ref: '#/components/schemas/PowerpackWidgetDefinition'
        - $ref: '#/components/schemas/QueryValueWidgetDefinition'
        - $ref: '#/components/schemas/RunWorkflowWidgetDefinition'
        - $ref: '#/components/schemas/SLOListWidgetDefinition'
        - $ref: '#/components/schemas/SLOWidgetDefinition'
        - $ref: '#/components/schemas/ScatterPlotWidgetDefinition'
        - $ref: '#/components/schemas/ServiceMapWidgetDefinition'
        - $ref: '#/components/schemas/ServiceSummaryWidgetDefinition'
        - $ref: '#/components/schemas/SplitGraphWidgetDefinition'
        - $ref: '#/components/schemas/SunburstWidgetDefinition'
        - $ref: '#/components/schemas/TableWidgetDefinition'
        - $ref: '#/components/schemas/TimeseriesWidgetDefinition'
        - $ref: '#/components/schemas/ToplistWidgetDefinition'
        - $ref: '#/components/schemas/TopologyMapWidgetDefinition'
        - $ref: '#/components/schemas/TreeMapWidgetDefinition'
    WidgetLayout:
      description: >-
        The layout for a widget on a `free` or **new dashboard layout**
        dashboard.
      properties:
        height:
          description: The height of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        is_column_break:
          description: >-
            Whether the widget should be the first one on the second column in
            high density or not.

            **Note**: Only for the **new dashboard layout** and only one widget
            in the dashboard should have this property set to `true`.
          type: boolean
        width:
          description: The width of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        x:
          description: >-
            The position of the widget on the x (horizontal) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        'y':
          description: >-
            The position of the widget on the y (vertical) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
      required:
        - x
        - 'y'
        - width
        - height
      type: object
    Dashboard:
      description: >-
        A dashboard is Datadog’s tool for visually tracking, analyzing, and
        displaying

        key performance metrics, which enable you to monitor the health of your
        infrastructure.
      properties:
        author_handle:
          description: Identifier of the dashboard author.
          example: test@datadoghq.com
          readOnly: true
          type: string
        author_name:
          description: Name of the dashboard author.
          example: John Doe
          nullable: true
          readOnly: true
          type: string
        created_at:
          description: Creation date of the dashboard.
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the dashboard.
          nullable: true
          type: string
        id:
          description: ID of the dashboard.
          example: 123-abc-456
          readOnly: true
          type: string
        is_read_only:
          default: false
          deprecated: true
          description: >-
            Whether this dashboard is read-only. If True, only the author and
            admins can make changes to it.


            This property is deprecated; please use the [Restriction Policies
            API](https://docs.datadoghq.com/api/latest/restriction-policies/)
            instead to manage write authorization for individual dashboards.
          example: false
          type: boolean
        layout_type:
          $ref: '#/components/schemas/DashboardLayoutType'
        modified_at:
          description: Modification date of the dashboard.
          format: date-time
          readOnly: true
          type: string
        notify_list:
          description: >-
            List of handles of users to notify when changes are made to this
            dashboard.
          items:
            description: User handles.
            type: string
          nullable: true
          type: array
        reflow_type:
          $ref: '#/components/schemas/DashboardReflowType'
        restricted_roles:
          description: >-
            A list of role identifiers. Only the author and users associated
            with at least one of these roles can edit this dashboard.
          items:
            description: A role UUID.
            type: string
          type: array
        tags:
          description: List of team names representing ownership of a dashboard.
          items:
            description: The name of a Datadog team of the form `team:<name>`
            type: string
          maxItems: 5
          nullable: true
          type: array
        template_variable_presets:
          description: Array of template variables saved views.
          items:
            $ref: '#/components/schemas/DashboardTemplateVariablePreset'
          nullable: true
          type: array
        template_variables:
          description: List of template variables for this dashboard.
          items:
            $ref: '#/components/schemas/DashboardTemplateVariable'
          nullable: true
          type: array
        title:
          description: Title of the dashboard.
          example: ''
          type: string
        url:
          description: The URL of the dashboard.
          example: /dashboard/123-abc-456/example-dashboard-title
          readOnly: true
          type: string
        widgets:
          description: List of widgets to display on the dashboard.
          example:
            - definition:
                requests:
                  fill:
                    q: avg:system.cpu.user{*}
                type: hostmap
          items:
            $ref: '#/components/schemas/Widget'
          type: array
      required:
        - title
        - layout_type
        - widgets
      type: object
    DashboardID:
      description: Dashboard resource ID.
      example: 123-abc-456
      type: string
    DashboardResourceType:
      default: dashboard
      description: Dashboard resource type.
      enum:
        - dashboard
      example: dashboard
      type: string
      x-enum-varnames:
        - DASHBOARD
    DashboardBulkActionData:
      description: Dashboard bulk action request data.
      example:
        id: 123-abc-456
        type: dashboard
      properties:
        id:
          $ref: '#/components/schemas/DashboardID'
        type:
          $ref: '#/components/schemas/DashboardResourceType'
      required:
        - type
        - id
      type: object
    DashboardBulkActionDataList:
      description: List of dashboard bulk action request data objects.
      example:
        - id: 123-abc-456
          type: dashboard
      items:
        $ref: '#/components/schemas/DashboardBulkActionData'
      type: array
    DashboardBulkDeleteRequest:
      description: Dashboard bulk delete request body.
      example:
        data:
          - id: 123-abc-456
            type: dashboard
      properties:
        data:
          $ref: '#/components/schemas/DashboardBulkActionDataList'
      required:
        - data
      type: object
    DashboardRestoreRequest:
      description: Dashboard restore request body.
      example:
        data:
          - id: 123-abc-456
            type: dashboard
      properties:
        data:
          $ref: '#/components/schemas/DashboardBulkActionDataList'
      required:
        - data
      type: object
    Creatorv1:
      description: Object describing the creator of the shared element.
      properties:
        email:
          description: Email of the creator.
          type: string
        handle:
          description: Handle of the creator.
          type: string
        name:
          description: Name of the creator.
          nullable: true
          type: string
      readOnly: true
      type: object
    DashboardList:
      description: Your Datadog Dashboards.
      properties:
        author:
          $ref: '#/components/schemas/Creatorv1'
        created:
          description: Date of creation of the dashboard list.
          format: date-time
          readOnly: true
          type: string
        dashboard_count:
          description: The number of dashboards in the list.
          format: int64
          readOnly: true
          type: integer
        id:
          description: The ID of the dashboard list.
          format: int64
          readOnly: true
          type: integer
        is_favorite:
          description: Whether or not the list is in the favorites.
          readOnly: true
          type: boolean
        modified:
          description: Date of last edition of the dashboard list.
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the dashboard list.
          example: My Dashboard
          type: string
        type:
          description: The type of dashboard list.
          example: manual_dashboard_list
          readOnly: true
          type: string
      required:
        - name
      type: object
    DashboardListListResponse:
      description: Information on your dashboard lists.
      properties:
        dashboard_lists:
          description: List of all your dashboard lists.
          items:
            $ref: '#/components/schemas/DashboardList'
          type: array
      type: object
    DashboardListDeleteResponse:
      description: Deleted dashboard details.
      properties:
        deleted_dashboard_list_id:
          description: ID of the deleted dashboard list.
          format: int64
          type: integer
      type: object
    SharedDashboardAuthor:
      description: User who shared the dashboard.
      properties:
        handle:
          description: Identifier of the user who shared the dashboard.
          example: test@datadoghq.com
          readOnly: true
          type: string
        name:
          description: Name of the user who shared the dashboard.
          nullable: true
          readOnly: true
          type: string
      readOnly: true
      type: object
    DashboardTypev1:
      description: The type of the associated private dashboard.
      enum:
        - custom_timeboard
        - custom_screenboard
      example: custom_timeboard
      type: string
      x-enum-varnames:
        - CUSTOM_TIMEBOARD
        - CUSTOM_SCREENBOARD
    DashboardGlobalTimeLiveSpan:
      description: Dashboard global time live_span selection
      enum:
        - 15m
        - 1h
        - 4h
        - 1d
        - 2d
        - 1w
        - 1mo
        - 3mo
      example: 1h
      type: string
      x-enum-varnames:
        - PAST_FIFTEEN_MINUTES
        - PAST_ONE_HOUR
        - PAST_FOUR_HOURS
        - PAST_ONE_DAY
        - PAST_TWO_DAYS
        - PAST_ONE_WEEK
        - PAST_ONE_MONTH
        - PAST_THREE_MONTHS
    DashboardGlobalTime:
      description: Object containing the live span selection for the dashboard.
      properties:
        live_span:
          $ref: '#/components/schemas/DashboardGlobalTimeLiveSpan'
      type: object
    SharedDashboardInviteesItems:
      description: The allowlisted invitees for an INVITE-only shared dashboard.
      properties:
        access_expiration:
          description: >-
            Time of the invitee expiration. Null means the invite will not
            expire.
          format: date-time
          nullable: true
          type: string
        created_at:
          description: Time that the invitee was created.
          format: date-time
          readOnly: true
          type: string
        email:
          description: Email of the invitee.
          example: test@datadoghq.com
          type: string
      required:
        - email
      type: object
    SelectableTemplateVariableItems:
      description: >-
        Object containing the template variable's name, associated
        tag/attribute, default value and selectable values.
      properties:
        default_value:
          description: The default value of the template variable.
          type: string
        name:
          description: Name of the template variable.
          type: string
        prefix:
          description: The tag/attribute key associated with the template variable.
          type: string
        visible_tags:
          description: List of visible tag values on the shared dashboard.
          items:
            description: >-
              Other values for this tag that can be selected on the shared
              dashboard.
            type: string
          nullable: true
          type: array
      type: object
    DashboardShareType:
      description: >-
        Type of sharing access (either open to anyone who has the public URL or
        invite-only).
      enum:
        - open
        - invite
        - embed
      nullable: true
      type: string
      x-enum-varnames:
        - OPEN
        - INVITE
        - EMBED
    SharedDashboardStatus:
      description: >-
        Active means the dashboard is publicly available. Paused means the
        dashboard is not publicly available.
      enum:
        - active
        - paused
      example: active
      type: string
      x-enum-varnames:
        - ACTIVE
        - PAUSED
    ViewingPreferencesTheme:
      description: >-
        The theme of the shared dashboard view. "system" follows your system's
        default viewing theme.
      enum:
        - system
        - light
        - dark
      type: string
      x-enum-varnames:
        - SYSTEM
        - LIGHT
        - DARK
    ViewingPreferences:
      description: The viewing preferences for a shared dashboard.
      properties:
        high_density:
          description: >-
            Whether the widgets on the shared dashboard should be displayed with
            high density.
          type: boolean
        theme:
          $ref: '#/components/schemas/ViewingPreferencesTheme'
      type: object
    SharedDashboard:
      description: >-
        The metadata object associated with how a dashboard has been/will be
        shared.
      properties:
        author:
          $ref: '#/components/schemas/SharedDashboardAuthor'
        created:
          description: Date the dashboard was shared.
          format: date-time
          readOnly: true
          type: string
        dashboard_id:
          description: ID of the dashboard to share.
          example: 123-abc-456
          type: string
        dashboard_type:
          $ref: '#/components/schemas/DashboardTypev1'
        embeddable_domains:
          description: The `SharedDashboard` `embeddable_domains`.
          example:
            - https://domain.atlassian.net/
            - http://myserver.com/
          items:
            description: The allowlisted referrers for an EMBED shared dashboard.
            type: string
          type: array
        expiration:
          description: The time when an OPEN shared dashboard becomes publicly unavailable.
          format: date-time
          nullable: true
          type: string
        global_time:
          $ref: '#/components/schemas/DashboardGlobalTime'
        global_time_selectable_enabled:
          description: >-
            Whether to allow viewers to select a different global time setting
            for the shared dashboard.
          nullable: true
          type: boolean
        invitees:
          description: The `SharedDashboard` `invitees`.
          example:
            - access_expiration: '2030-01-01T12:00:00.00Z'
              email: test@datadoghq.com
            - access_expiration: null
              email: test2@datadoghq.com
          items:
            $ref: '#/components/schemas/SharedDashboardInviteesItems'
          type: array
        last_accessed:
          description: >-
            The last time the shared dashboard was accessed. Null if never
            accessed.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        public_url:
          description: URL of the shared dashboard.
          readOnly: true
          type: string
        selectable_template_vars:
          description: >-
            List of objects representing template variables on the shared
            dashboard which can have selectable values.
          example:
            - default_value: '*'
              name: exampleVar
              prefix: test
              visible_tags:
                - selectableValue1
                - selectableValue2
          items:
            $ref: '#/components/schemas/SelectableTemplateVariableItems'
          nullable: true
          type: array
        share_list:
          deprecated: true
          description: >-
            List of email addresses that can receive an invitation to access to
            the shared dashboard.
          example:
            - test@datadoghq.com
            - test2@email.com
          items:
            description: >-
              Email address that can receive an invitation to access the shared
              dashboard.
            type: string
          nullable: true
          type: array
        share_type:
          $ref: '#/components/schemas/DashboardShareType'
        status:
          $ref: '#/components/schemas/SharedDashboardStatus'
        title:
          description: Title of the shared dashboard.
          type: string
        token:
          description: A unique token assigned to the shared dashboard.
          readOnly: true
          type: string
        viewing_preferences:
          $ref: '#/components/schemas/ViewingPreferences'
      required:
        - dashboard_id
        - dashboard_type
      type: object
    SharedDashboardUpdateRequestGlobalTime:
      description: Timeframe setting for the shared dashboard.
      example:
        live_span: 1h
      nullable: true
      properties:
        live_span:
          $ref: '#/components/schemas/DashboardGlobalTimeLiveSpan'
      type: object
    SharedDashboardUpdateRequest:
      description: Update a shared dashboard's settings.
      example:
        global_time:
          live_span: 1h
        share_list:
          - test@datadoghq.com
          - test2@datadoghq.com
        share_type: invite
      properties:
        embeddable_domains:
          description: The `SharedDashboard` `embeddable_domains`.
          example:
            - https://domain.atlassian.net/
            - http://myserver.com/
          items:
            description: The allowlisted referrers for an EMBED shared dashboard.
            type: string
          type: array
        expiration:
          description: The time when an OPEN shared dashboard becomes publicly unavailable.
          format: date-time
          nullable: true
          type: string
        global_time:
          $ref: '#/components/schemas/SharedDashboardUpdateRequestGlobalTime'
        global_time_selectable_enabled:
          description: >-
            Whether to allow viewers to select a different global time setting
            for the shared dashboard.
          nullable: true
          type: boolean
        invitees:
          description: The `SharedDashboard` `invitees`.
          example:
            - access_expiration: '2030-01-01T12:00:00.00Z'
              email: test@datadoghq.com
            - access_expiration: null
              email: test2@datadoghq.com
          items:
            $ref: '#/components/schemas/SharedDashboardInviteesItems'
          type: array
        selectable_template_vars:
          description: >-
            List of objects representing template variables on the shared
            dashboard which can have selectable values.
          example:
            - default_value: '*'
              name: exampleVar
              prefix: test
              visible_tags:
                - selectableValue1
                - selectableValue2
          items:
            $ref: '#/components/schemas/SelectableTemplateVariableItems'
          nullable: true
          type: array
        share_list:
          deprecated: true
          description: >-
            List of email addresses that can be given access to the shared
            dashboard.
          example:
            - test@datadoghq.com
            - test2@email.com
          items:
            description: >-
              Email address that can receive an invitation to access the shared
              dashboard.
            type: string
          nullable: true
          type: array
        share_type:
          $ref: '#/components/schemas/DashboardShareType'
        status:
          $ref: '#/components/schemas/SharedDashboardStatus'
        title:
          description: Title of the shared dashboard.
          type: string
        viewing_preferences:
          $ref: '#/components/schemas/ViewingPreferences'
      type: object
    DeleteSharedDashboardResponse:
      description: Response containing token of deleted shared dashboard.
      properties:
        deleted_public_dashboard_token:
          description: Token associated with the shared dashboard that was revoked.
          type: string
      type: object
    SharedDashboardInvitesDataObjectAttributes:
      description: Attributes of the shared dashboard invitation
      example:
        created_at: '2020-12-07T20:16:27.846985+00:00'
        email: test@datadoghq.com
        has_session: false
        invitation_expiry: '2020-12-07T21:16:27.840542+00:00'
        session_expiry: null
        share_token: XXXXXX-123456abcedfg7890hijklmnopqrstuv
      properties:
        created_at:
          description: When the invitation was sent.
          format: date-time
          readOnly: true
          type: string
        email:
          description: >-
            An email address that an invitation has been (or if used in
            invitation request, will be) sent to.
          nullable: false
          type: string
        has_session:
          description: >-
            Indicates whether an active session exists for the invitation
            (produced when a user clicks the link in the email).
          readOnly: true
          type: boolean
        invitation_expiry:
          description: When the invitation expires.
          format: date-time
          readOnly: true
          type: string
        session_expiry:
          description: >-
            When the invited user's session expires. null if the invitation has
            no associated session.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        share_token:
          description: >-
            The unique token of the shared dashboard that was (or is to be)
            shared.
          readOnly: true
          type: string
      type: object
    DashboardInviteType:
      description: Type for shared dashboard invitation request body.
      enum:
        - public_dashboard_invitation
      example: public_dashboard_invitation
      type: string
      x-enum-varnames:
        - PUBLIC_DASHBOARD_INVITATION
    SharedDashboardInvitesDataObject:
      description: >-
        Object containing the information for an invitation to a shared
        dashboard.
      example:
        attributes:
          created_at: '2020-12-07T20:16:27.846985+00:00'
          email: test@datadoghq.com
          has_session: false
          invitation_expiry: '2020-12-07T21:16:27.840542+00:00'
          session_expiry: null
          share_token: XXXXXX-123456abcedfg7890hijklmnopqrstuv
        type: public_dashboard_invitation
      properties:
        attributes:
          $ref: '#/components/schemas/SharedDashboardInvitesDataObjectAttributes'
        type:
          $ref: '#/components/schemas/DashboardInviteType'
      required:
        - type
        - attributes
      type: object
    SharedDashboardInvitesDataList:
      description: >-
        A list of objects containing the information for an invitation(s) to a
        shared dashboard.
      example:
        - attributes:
            email: test@datadoghq.com
          type: public_dashboard_invitation
      items:
        $ref: '#/components/schemas/SharedDashboardInvitesDataObject'
      type: array
    SharedDashboardInvitesData:
      description: >-
        An object or list of objects containing the information for an
        invitation to a shared dashboard.
      example:
        - attributes:
            email: test@datadoghq.com
          type: public_dashboard_invitation
      oneOf:
        - $ref: '#/components/schemas/SharedDashboardInvitesDataObject'
        - $ref: '#/components/schemas/SharedDashboardInvitesDataList'
    SharedDashboardInvitesMetaPage:
      description: Object containing the total count of invitations across all pages
      properties:
        total_count:
          description: >-
            The total number of invitations on this shared board, across all
            pages.
          format: int64
          type: integer
      type: object
    SharedDashboardInvitesMeta:
      description: Pagination metadata returned by the API.
      properties:
        page:
          $ref: '#/components/schemas/SharedDashboardInvitesMetaPage'
      readOnly: true
      type: object
    SharedDashboardInvites:
      description: >-
        Invitations data and metadata that exists for a shared dashboard
        returned by the API.
      example:
        data:
          - attributes:
              email: test@datadoghq.com
            type: public_dashboard_invitation
      properties:
        data:
          $ref: '#/components/schemas/SharedDashboardInvitesData'
        meta:
          $ref: '#/components/schemas/SharedDashboardInvitesMeta'
      required:
        - data
      type: object
    DashboardDeleteResponse:
      description: Response from the delete dashboard call.
      properties:
        deleted_dashboard_id:
          description: ID of the deleted dashboard.
          type: string
      type: object
    DistributionPointsContentEncoding:
      description: HTTP header used to compress the media-type.
      enum:
        - deflate
      type: string
      x-enum-varnames:
        - DEFLATE
    DistributionPointTimestamp:
      description: Distribution point timestamp. It should be in seconds and current.
      format: double
      type: number
    DistributionPointData:
      description: Distribution point data.
      items:
        description: List of distribution point data.
        format: double
        type: number
      type: array
    DistributionPoint:
      description: Array of distribution points.
      example:
        - 1575317847
        - - 0.5
          - 1
      items:
        description: List of distribution point.
        oneOf:
          - $ref: '#/components/schemas/DistributionPointTimestamp'
          - $ref: '#/components/schemas/DistributionPointData'
      maxItems: 2
      minItems: 2
      type: array
    DistributionPointsType:
      default: distribution
      description: The type of the distribution point.
      enum:
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - DISTRIBUTION
    DistributionPointsSeries:
      description: A distribution points metric to submit to Datadog.
      properties:
        host:
          description: The name of the host that produced the distribution point metric.
          example: test.example.com
          type: string
        metric:
          description: The name of the distribution points metric.
          example: system.load.1
          type: string
        points:
          description: >-
            Points relating to the distribution point metric. All points must be
            tuples with timestamp and a list of values (cannot be a string).
            Timestamps should be in POSIX time in seconds.
          example:
            - - 1575317847
              - - 0.5
                - 1
          items:
            $ref: '#/components/schemas/DistributionPoint'
          type: array
        tags:
          description: A list of tags associated with the distribution point metric.
          example:
            - environment:test
          items:
            description: Individual tags.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/DistributionPointsType'
      required:
        - metric
        - points
      type: object
    DistributionPointsPayload:
      description: The distribution points payload.
      properties:
        series:
          description: A list of distribution points series to submit to Datadog.
          example:
            - metric: system.load.1
              points:
                - - 1475317847
                  - - 1
                    - 2
          items:
            $ref: '#/components/schemas/DistributionPointsSeries'
          type: array
      required:
        - series
      type: object
    NotifyEndState:
      description: A notification end state.
      enum:
        - alert
        - no data
        - warn
      example: alert
      type: string
      x-enum-varnames:
        - ALERT
        - NO_DATA
        - WARN
    NotifyEndStates:
      default:
        - alert
        - no data
        - warn
      description: States for which `notify_end_types` sends out notifications for.
      example:
        - alert
        - no data
        - warn
      items:
        $ref: '#/components/schemas/NotifyEndState'
      type: array
    NotifyEndType:
      description: A notification end type.
      enum:
        - canceled
        - expired
      example: expired
      type: string
      x-enum-varnames:
        - CANCELED
        - EXPIRED
    NotifyEndTypes:
      default:
        - expired
      description: >-
        If set, notifies if a monitor is in an alert-worthy state (`ALERT`,
        `WARNING`, or `NO DATA`)

        when this downtime expires or is canceled. Applied to monitors that
        change states during

        the downtime (such as from `OK` to `ALERT`, `WARNING`, or `NO DATA`),
        and to monitors that

        already have an alert-worthy state when downtime begins.
      example:
        - canceled
        - expired
      items:
        $ref: '#/components/schemas/NotifyEndType'
      type: array
    DowntimeRecurrence:
      description: An object defining the recurrence of the downtime.
      nullable: true
      properties:
        period:
          description: >-
            How often to repeat as an integer.

            For example, to repeat every 3 days, select a type of `days` and a
            period of `3`.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
        rrule:
          description: >-
            The `RRULE` standard for defining recurring events (**requires to
            set "type" to rrule**)

            For example, to have a recurring event on the first day of each
            month, set the type to `rrule` and set the `FREQ` to `MONTHLY` and
            `BYMONTHDAY` to `1`.

            Most common `rrule` options from the [iCalendar
            Spec](https://tools.ietf.org/html/rfc5545) are supported.


            **Note**: Attributes specifying the duration in `RRULE` are not
            supported (for example, `DTSTART`, `DTEND`, `DURATION`).

            More examples available in this [downtime
            guide](https://docs.datadoghq.com/monitors/guide/suppress-alert-with-downtimes/?tab=api)
          example: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
          type: string
        type:
          description: >-
            The type of recurrence. Choose from `days`, `weeks`, `months`,
            `years`, `rrule`.
          example: weeks
          type: string
        until_date:
          description: |-
            The date at which the recurrence should end as a POSIX timestamp.
            `until_occurences` and `until_date` are mutually exclusive.
          example: 1447786293
          format: int64
          nullable: true
          type: integer
        until_occurrences:
          description: |-
            How many times the downtime is rescheduled.
            `until_occurences` and `until_date` are mutually exclusive.
          example: 2
          format: int32
          maximum: 2147483647
          nullable: true
          type: integer
        week_days:
          description: >-
            A list of week days to repeat on. Choose from `Mon`, `Tue`, `Wed`,
            `Thu`, `Fri`, `Sat` or `Sun`.

            Only applicable when type is weeks. First letter must be
            capitalized.
          example:
            - Mon
            - Tue
          items:
            description: >-
              A day of the week, formatted as `Mon`, `Tue`, `Wed`, `Thu`, `Fri`,
              `Sat` or `Sun`.
            type: string
          nullable: true
          type: array
      type: object
    DowntimeChild:
      description: >-
        The downtime object definition of the active child for the original
        parent recurring downtime. This

        field will only exist on recurring downtimes.
      nullable: true
      properties:
        active:
          description: If a scheduled downtime currently exists.
          example: true
          readOnly: true
          type: boolean
        canceled:
          description: If a scheduled downtime is canceled.
          example: 1412799983
          format: int64
          nullable: true
          readOnly: true
          type: integer
        creator_id:
          description: User ID of the downtime creator.
          example: 123456
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        disabled:
          description: If a downtime has been disabled.
          example: false
          type: boolean
        downtime_type:
          description: |-
            `0` for a downtime applied on `*` or all,
            `1` when the downtime is only scoped to hosts,
            or `2` when the downtime is scoped to anything but hosts.
          example: 2
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        end:
          description: |-
            POSIX timestamp to end the downtime. If not provided,
            the downtime is in effect indefinitely until you cancel it.
          example: 1412793983
          format: int64
          nullable: true
          type: integer
        id:
          description: The downtime ID.
          example: 1626
          format: int64
          readOnly: true
          type: integer
        message:
          description: >-
            A message to include with notifications for this downtime.

            Email notifications can be sent to specific users by using the same
            `@username` notation as events.
          example: Message on the downtime
          nullable: true
          type: string
        monitor_id:
          description: |-
            A single monitor to which the downtime applies.
            If not provided, the downtime applies to all monitors.
          example: 123456
          format: int64
          nullable: true
          type: integer
        monitor_tags:
          description: >-
            A comma-separated list of monitor tags. For example, tags that are
            applied directly to monitors,

            not tags that are used in monitor queries (which are filtered by the
            scope parameter), to which the downtime applies.

            The resulting downtime applies to monitors that match ALL provided
            monitor tags.

            For example, `service:postgres` **AND** `team:frontend`.
          example:
            - '*'
          items:
            description: A monitor tag.
            type: string
          type: array
        mute_first_recovery_notification:
          description: >-
            If the first recovery notification during a downtime should be
            muted.
          example: false
          type: boolean
        notify_end_states:
          $ref: '#/components/schemas/NotifyEndStates'
        notify_end_types:
          $ref: '#/components/schemas/NotifyEndTypes'
        parent_id:
          description: ID of the parent Downtime.
          example: 123
          format: int64
          nullable: true
          type: integer
        recurrence:
          $ref: '#/components/schemas/DowntimeRecurrence'
        scope:
          description: >-
            The scope(s) to which the downtime applies and must be in
            `key:value` format. For example, `host:app2`.

            Provide multiple scopes as a comma-separated list like
            `env:dev,env:prod`.

            The resulting downtime applies to sources that matches ALL provided
            scopes (`env:dev` **AND** `env:prod`).
          example:
            - env:staging
          items:
            description: A scope. For example, `"env:staging"`.
            type: string
          type: array
        start:
          description: |-
            POSIX timestamp to start the downtime.
            If not provided, the downtime starts the moment it is created.
          example: 1412792983
          format: int64
          type: integer
        timezone:
          description: >-
            The timezone in which to display the downtime's start and end times
            in Datadog applications.
          example: America/New_York
          type: string
        updater_id:
          description: ID of the last user that updated the downtime.
          example: 123456
          format: int32
          maximum: 2147483647
          nullable: true
          readOnly: true
          type: integer
      readOnly: true
      type: object
    Downtime:
      description: |-
        Downtiming gives you greater control over monitor notifications by
        allowing you to globally exclude scopes from alerting.
        Downtime settings, which can be scheduled with start and end times,
        prevent all alerting related to specified Datadog tags.
      properties:
        active:
          description: If a scheduled downtime currently exists.
          example: true
          readOnly: true
          type: boolean
        active_child:
          $ref: '#/components/schemas/DowntimeChild'
        canceled:
          description: If a scheduled downtime is canceled.
          example: 1412799983
          format: int64
          nullable: true
          readOnly: true
          type: integer
        creator_id:
          description: User ID of the downtime creator.
          example: 123456
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        disabled:
          description: If a downtime has been disabled.
          example: false
          type: boolean
        downtime_type:
          description: |-
            `0` for a downtime applied on `*` or all,
            `1` when the downtime is only scoped to hosts,
            or `2` when the downtime is scoped to anything but hosts.
          example: 2
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        end:
          description: |-
            POSIX timestamp to end the downtime. If not provided,
            the downtime is in effect indefinitely until you cancel it.
          example: 1412793983
          format: int64
          nullable: true
          type: integer
        id:
          description: The downtime ID.
          example: 1625
          format: int64
          readOnly: true
          type: integer
        message:
          description: >-
            A message to include with notifications for this downtime.

            Email notifications can be sent to specific users by using the same
            `@username` notation as events.
          example: Message on the downtime
          nullable: true
          type: string
        monitor_id:
          description: |-
            A single monitor to which the downtime applies.
            If not provided, the downtime applies to all monitors.
          example: 123456
          format: int64
          nullable: true
          type: integer
        monitor_tags:
          description: >-
            A comma-separated list of monitor tags. For example, tags that are
            applied directly to monitors,

            not tags that are used in monitor queries (which are filtered by the
            scope parameter), to which the downtime applies.

            The resulting downtime applies to monitors that match ALL provided
            monitor tags.

            For example, `service:postgres` **AND** `team:frontend`.
          example:
            - '*'
          items:
            description: A monitor tag.
            type: string
          type: array
        mute_first_recovery_notification:
          description: >-
            If the first recovery notification during a downtime should be
            muted.
          example: false
          type: boolean
        notify_end_states:
          $ref: '#/components/schemas/NotifyEndStates'
        notify_end_types:
          $ref: '#/components/schemas/NotifyEndTypes'
        parent_id:
          description: ID of the parent Downtime.
          example: 123
          format: int64
          nullable: true
          type: integer
        recurrence:
          $ref: '#/components/schemas/DowntimeRecurrence'
        scope:
          description: >-
            The scope(s) to which the downtime applies and must be in
            `key:value` format. For example, `host:app2`.

            Provide multiple scopes as a comma-separated list like
            `env:dev,env:prod`.

            The resulting downtime applies to sources that matches ALL provided
            scopes (`env:dev` **AND** `env:prod`).
          example:
            - env:staging
          items:
            description: A scope. For example, `"env:staging"`.
            type: string
          type: array
        start:
          description: |-
            POSIX timestamp to start the downtime.
            If not provided, the downtime starts the moment it is created.
          example: 1412792983
          format: int64
          type: integer
        timezone:
          description: >-
            The timezone in which to display the downtime's start and end times
            in Datadog applications.
          example: America/New_York
          type: string
        updater_id:
          description: ID of the last user that updated the downtime.
          example: 123456
          format: int32
          maximum: 2147483647
          nullable: true
          readOnly: true
          type: integer
      type: object
    CancelDowntimesByScopeRequest:
      description: Cancel downtimes according to scope.
      properties:
        scope:
          description: >-
            The scope(s) to which the downtime applies and must be in
            `key:value` format. For example, `host:app2`.

            Provide multiple scopes as a comma-separated list like
            `env:dev,env:prod`.

            The resulting downtime applies to sources that matches ALL provided
            scopes (`env:dev` **AND** `env:prod`).
          example: host:myserver
          type: string
      required:
        - scope
      type: object
    CanceledDowntimesIds:
      description: Object containing array of IDs of canceled downtimes.
      properties:
        cancelled_ids:
          description: ID of downtimes that were canceled.
          example:
            - 123456789
            - 123456790
          items:
            description: Integer representation of one downtime ID.
            format: int64
            type: integer
          type: array
      type: object
    EventPriorityv1:
      description: The priority of the event. For example, `normal` or `low`.
      enum:
        - normal
        - low
      example: normal
      nullable: true
      type: string
      x-enum-varnames:
        - NORMAL
        - LOW
    EventAlertType:
      description: |-
        If an alert event is enabled, set its type.
        For example, `error`, `warning`, `info`, `success`, `user_update`,
        `recommendation`, and `snapshot`.
      enum:
        - error
        - warning
        - info
        - success
        - user_update
        - recommendation
        - snapshot
      example: info
      type: string
      x-enum-varnames:
        - ERROR
        - WARNING
        - INFO
        - SUCCESS
        - USER_UPDATE
        - RECOMMENDATION
        - SNAPSHOT
    Eventv1:
      description: Object representing an event.
      properties:
        alert_type:
          $ref: '#/components/schemas/EventAlertType'
        date_happened:
          description: >-
            POSIX timestamp of the event. Must be sent as an integer (that is no
            quotes).

            Limited to events up to 18 hours in the past and two hours in the
            future.
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        host:
          description: |-
            Host name to associate with the event.
            Any tags associated with the host are also applied to this event.
          type: string
        id:
          description: Integer ID of the event.
          format: int64
          readOnly: true
          type: integer
        id_str:
          description: >-
            Handling IDs as large 64-bit numbers can cause loss of accuracy
            issues with some programming languages.

            Instead, use the string representation of the Event ID to avoid
            losing accuracy.
          readOnly: true
          type: string
        payload:
          description: Payload of the event.
          example: '{}'
          readOnly: true
          type: string
        priority:
          $ref: '#/components/schemas/EventPriorityv1'
        source_type_name:
          description: >-
            The type of event being posted. Option examples include nagios,
            hudson, jenkins, my_apps, chef, puppet, git, bitbucket, etc.

            The list of standard source attribute values [available
            here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          type: string
        tags:
          description: A list of tags to apply to the event.
          example:
            - environment:test
          items:
            description: A tag.
            type: string
          type: array
        text:
          description: >-
            The body of the event. Limited to 4000 characters. The text supports
            markdown.

            To use markdown in the event text, start the text block with `%%%
            \n` and end the text block with `\n %%%`.

            Use `msg_text` with the Datadog Ruby library.
          example: Oh boy!
          maxLength: 4000
          type: string
        title:
          description: The event title.
          example: Did you hear the news today?
          type: string
        url:
          description: URL of the event.
          readOnly: true
          type: string
      type: object
    EventListResponse:
      description: An event list response.
      properties:
        events:
          description: An array of events.
          items:
            $ref: '#/components/schemas/Eventv1'
          type: array
        status:
          description: A status.
          type: string
      type: object
    EventCreateRequestv1:
      description: Object representing an event.
      properties:
        aggregation_key:
          description: >-
            An arbitrary string to use for aggregation. Limited to 100
            characters.

            If you specify a key, all events using that key are grouped together
            in the Event Stream.
          maxLength: 100
          type: string
        alert_type:
          $ref: '#/components/schemas/EventAlertType'
        date_happened:
          description: >-
            POSIX timestamp of the event. Must be sent as an integer (that is no
            quotes).

            Limited to events no older than 18 hours
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        host:
          description: |-
            Host name to associate with the event.
            Any tags associated with the host are also applied to this event.
          type: string
        priority:
          $ref: '#/components/schemas/EventPriorityv1'
        related_event_id:
          description: >-
            ID of the parent event. Must be sent as an integer (that is no
            quotes).
          format: int64
          type: integer
        source_type_name:
          description: >-
            The type of event being posted. Option examples include nagios,
            hudson, jenkins, my_apps, chef, puppet, git, bitbucket, etc.

            A complete list of source attribute values [available
            here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          type: string
        tags:
          description: A list of tags to apply to the event.
          example:
            - environment:test
          items:
            description: A tag.
            type: string
          type: array
        text:
          description: >-
            The body of the event. Limited to 4000 characters. The text supports
            markdown.

            To use markdown in the event text, start the text block with `%%%
            \n` and end the text block with `\n %%%`.

            Use `msg_text` with the Datadog Ruby library.
          example: Oh boy!
          maxLength: 4000
          type: string
        title:
          description: The event title.
          example: Did you hear the news today?
          type: string
      required:
        - title
        - text
      type: object
    EventCreateResponsev1:
      description: Object containing an event response.
      properties:
        event:
          $ref: '#/components/schemas/Eventv1'
        status:
          description: A status.
          type: string
      type: object
    EventResponsev1:
      description: Object containing an event response.
      properties:
        event:
          $ref: '#/components/schemas/Eventv1'
        status:
          description: A status.
          type: string
      type: object
    GraphSnapshot:
      description: Object representing a graph snapshot.
      properties:
        graph_def:
          description: >-
            A JSON document defining the graph. `graph_def` can be used instead
            of `metric_query`.

            The JSON document uses the [grammar defined
            here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)

            and should be formatted to a single line then URL encoded.
          type: string
        metric_query:
          description: The metric query. One of `metric_query` or `graph_def` is required.
          type: string
        snapshot_url:
          description: >-
            URL of your [graph
            snapshot](https://docs.datadoghq.com/metrics/explorer/#snapshot).
          example: https://app.datadoghq.com/s/f12345678/aaa-bbb-ccc
          type: string
      type: object
    HostMuteSettings:
      description: Combination of settings to mute a host.
      properties:
        end:
          description: >-
            POSIX timestamp in seconds when the host is unmuted. If omitted, the
            host remains muted until explicitly unmuted.
          example: 1579098130
          format: int64
          type: integer
        message:
          description: Message to associate with the muting of this host.
          example: Muting this host for a test!
          type: string
        override:
          description: >-
            If true and the host is already muted, replaces existing host mute
            settings.
          example: false
          type: boolean
      type: object
    HostMuteResponse:
      description: Response with the list of muted host for your organization.
      properties:
        action:
          description: Action applied to the hosts.
          example: Muted
          type: string
        end:
          description: POSIX timestamp in seconds when the host is unmuted.
          example: 1579098130
          format: int64
          type: integer
        hostname:
          description: The host name.
          example: test.host
          type: string
        message:
          description: Message associated with the mute.
          example: Muting this host for a test!
          type: string
      type: object
    AgentCheck:
      description: Array of strings.
      example:
        - ntp
        - ntp
        - ntp:d884b5186b651429
        - OK
        - ''
        - ''
      items:
        description: Agent check running on the host.
      type: array
    HostMetaInstallMethod:
      description: Agent install method.
      properties:
        installer_version:
          description: The installer version.
          example: install_script-1.7.1
          type: string
        tool:
          description: Tool used to install the agent.
          example: install_script
          type: string
        tool_version:
          description: The tool version.
          example: install_script
          type: string
      type: object
    HostMeta:
      description: Metadata associated with your host.
      properties:
        agent_checks:
          description: A list of Agent checks running on the host.
          items:
            $ref: '#/components/schemas/AgentCheck'
          type: array
        agent_version:
          description: The Datadog Agent version.
          example: 7.32.3
          type: string
        cpuCores:
          description: The number of cores.
          example: 1
          format: int64
          type: integer
        fbsdV:
          description: An array of Mac versions.
          items:
            description: The version name.
            example: FreeBSD
          type: array
        gohai:
          description: JSON string containing system information.
          example: >-
            {"cpu":{"cache_size":"8192
            KB","cpu_cores":"1","cpu_logical_processors":"1","family":"6","mhz":"2712.000","model":"142","model_name":"Intel(R)
            Core(TM) i7-8559U CPU @
            2.70GHz","stepping":"10","vendor_id":"GenuineIntel"},"filesystem":[{"kb_size":"3966896","mounted_on":"/dev","name":"udev"},{"kb_size":"797396","mounted_on":"/run","name":"tmpfs"},{"kb_size":"64800356","mounted_on":"/","name":"/dev/mapper/vagrant--vg-root"},{"kb_size":"3986972","mounted_on":"/dev/shm","name":"tmpfs"},{"kb_size":"5120","mounted_on":"/run/lock","name":"tmpfs"},{"kb_size":"3986972","mounted_on":"/sys/fs/cgroup","name":"tmpfs"},{"kb_size":"488245288","mounted_on":"/vagrant","name":"vagrant"},{"kb_size":"797392","mounted_on":"/run/user/1000","name":"tmpfs"}],"memory":{"swap_total":"1003516kB","total":"7973944kB"},"network":{"interfaces":[{"ipv4":"10.0.2.15","ipv4-network":"10.0.2.0/24","ipv6":"fe80::a00:27ff:fec2:be11","ipv6-network":"fe80::/64","macaddress":"08:00:27:c2:be:11","name":"eth0"},{"ipv4":"192.168.122.1","ipv4-network":"192.168.122.0/24","macaddress":"52:54:00:6f:1c:bf","name":"virbr0"}],"ipaddress":"10.0.2.15","ipaddressv6":"fe80::a00:27ff:fec2:be11","macaddress":"08:00:27:c2:be:11"},"platform":{"GOOARCH":"amd64","GOOS":"linux","goV":"1.16.7","hardware_platform":"x86_64","hostname":"vagrant","kernel_name":"Linux","kernel_release":"4.15.0-29-generic","kernel_version":"#31-Ubuntu
            SMP Tue Jul 17 15:39:52 UTC
            2018","machine":"x86_64","os":"GNU/Linux","processor":"x86_64","pythonV":"2.7.15rc1"}}
          type: string
        install_method:
          $ref: '#/components/schemas/HostMetaInstallMethod'
        macV:
          description: An array of Mac versions.
          items:
            description: Version name.
            example: Mac
          type: array
        machine:
          description: The machine architecture.
          example: amd64
          type: string
        nixV:
          description: Array of Unix versions.
          items:
            description: Version name.
            example: Ubuntu
          type: array
        platform:
          description: The OS platform.
          example: linux
          type: string
        processor:
          description: The processor.
          example: Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz
          type: string
        pythonV:
          description: The Python version.
          example: 3.8.11
          type: string
        socket-fqdn:
          description: The socket fqdn.
          example: vagrant.vm.
          type: string
        socket-hostname:
          description: The socket hostname.
          example: vagrant
          type: string
        winV:
          description: An array of Windows versions.
          items:
            description: Version name.
            example: Windows
          type: array
      type: object
    HostMetrics:
      description: Host Metrics collected.
      properties:
        cpu:
          description: The percent of CPU used (everything but idle).
          example: 99
          format: double
          type: number
        iowait:
          description: >-
            The percent of CPU spent waiting on the IO (not reported for all
            platforms).
          example: 3.2
          format: double
          type: number
        load:
          description: The system load over the last 15 minutes.
          example: 0.5
          format: double
          type: number
      type: object
    Host:
      description: Object representing a host.
      properties:
        aliases:
          description: Host aliases collected by Datadog.
          items:
            description: A host alias.
            example: mycoolhost-1
            type: string
          type: array
        apps:
          description: The Datadog integrations reporting metrics for the host.
          items:
            description: Name of an app.
            example: agent
            type: string
          type: array
        aws_name:
          description: AWS name of your host.
          example: mycoolhost-1
          type: string
        host_name:
          description: The host name.
          example: i-deadbeef
          type: string
        id:
          description: The host ID.
          example: 123456
          format: int64
          type: integer
        is_muted:
          description: If a host is muted or unmuted.
          example: false
          type: boolean
        last_reported_time:
          description: Last time the host reported a metric data point.
          example: 1565000000
          format: int64
          type: integer
        meta:
          $ref: '#/components/schemas/HostMeta'
        metrics:
          $ref: '#/components/schemas/HostMetrics'
        mute_timeout:
          description: Timeout of the mute applied to your host.
          format: int64
          nullable: true
          type: integer
        name:
          description: The host name.
          example: i-hostname
          type: string
        sources:
          description: Source or cloud provider associated with your host.
          items:
            description: A source or cloud provider name.
            example: aws
            type: string
          type: array
        tags_by_source:
          additionalProperties:
            description: Array of tags for a single source.
            items:
              description: A tag.
              example: test.example.com.host
              type: string
            type: array
          description: List of tags for each source (AWS, Datadog Agent, Chef..).
          type: object
        up:
          description: >-
            Displays UP when the expected metrics are received and displays
            `???` if no metrics are received.
          example: true
          type: boolean
      type: object
    HostListResponse:
      description: Response with Host information from Datadog.
      properties:
        host_list:
          description: Array of hosts.
          items:
            $ref: '#/components/schemas/Host'
          type: array
        total_matching:
          description: Number of host matching the query.
          example: 1
          format: int64
          type: integer
        total_returned:
          description: Number of host returned.
          example: 1
          format: int64
          type: integer
      type: object
    HostTotals:
      description: Total number of host currently monitored by Datadog.
      properties:
        total_active:
          description: Total number of active host (UP and ???) reporting to Datadog.
          format: int64
          type: integer
        total_up:
          description: Number of host that are UP and reporting to Datadog.
          format: int64
          type: integer
      type: object
    AWSAccount:
      description: Returns the AWS account associated with this integration.
      properties:
        access_key_id:
          description: >-
            Your AWS access key ID. Only required if your AWS account is a
            GovCloud or China account.
          type: string
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        account_specific_namespace_rules:
          additionalProperties:
            description: A list of additional properties.
            type: boolean
          description: >-
            An object, (in the form `{"namespace1":true/false,
            "namespace2":true/false}`),

            that enables or disables metric collection for specific AWS
            namespaces for this

            AWS account only.
          example:
            auto_scaling: false
            opswork: false
          type: object
        cspm_resource_collection_enabled:
          default: false
          description: >-
            Whether Datadog collects cloud security posture management resources
            from your AWS account. This includes additional resources not
            covered under the general `resource_collection`.
          example: true
          type: boolean
        excluded_regions:
          description: >-
            An array of [AWS
            regions](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints)

            to exclude from metrics collection.
          example:
            - us-east-1
            - us-west-2
          items:
            description: Regions to exclude.
            type: string
          type: array
        extended_resource_collection_enabled:
          default: false
          description: >-
            Whether Datadog collects additional attributes and configuration
            information about the resources in your AWS account. Required for
            `cspm_resource_collection`.
          example: true
          type: boolean
        filter_tags:
          description: >-
            The array of EC2 tags (in the form `key:value`) defines a filter
            that Datadog uses when collecting metrics from EC2.

            Wildcards, such as `?` (for single characters) and `*` (for multiple
            characters) can also be used.

            Only hosts that match one of the defined tags

            will be imported into Datadog. The rest will be ignored.

            Host matching a given tag can also be excluded by adding `!` before
            the tag.

            For example, `env:production,instance-type:c1.*,!region:us-east-1`
          example:
            - $KEY:$VALUE
          items:
            description: The list of the filter_tags.
            type: string
          type: array
        host_tags:
          description: |-
            Array of tags (in the form `key:value`) to add to all hosts
            and metrics reporting through this integration.
          example:
            - $KEY:$VALUE
          items:
            description: The list of the host_tags.
            type: string
          type: array
        metrics_collection_enabled:
          default: true
          description: Whether Datadog collects metrics for this AWS account.
          example: false
          type: boolean
        resource_collection_enabled:
          default: false
          deprecated: true
          description: >-
            Deprecated in favor of 'extended_resource_collection_enabled'.
            Whether Datadog collects a standard set of resources from your AWS
            account.
          example: true
          type: boolean
        role_name:
          description: Your Datadog role delegation name.
          example: DatadogAWSIntegrationRole
          type: string
        secret_access_key:
          description: >-
            Your AWS secret access key. Only required if your AWS account is a
            GovCloud or China account.
          type: string
      type: object
    AWSAccountListResponse:
      description: List of enabled AWS accounts.
      properties:
        accounts:
          description: List of enabled AWS accounts.
          items:
            $ref: '#/components/schemas/AWSAccount'
          type: array
      type: object
    AWSAccountCreateResponse:
      description: The Response returned by the AWS Create Account call.
      properties:
        external_id:
          description: AWS external_id.
          type: string
      type: object
    AWSAccountDeleteRequest:
      description: List of AWS accounts to delete.
      properties:
        access_key_id:
          description: >-
            Your AWS access key ID. Only required if your AWS account is a
            GovCloud or China account.
          type: string
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        role_name:
          description: Your Datadog role delegation name.
          example: DatadogAWSIntegrationRole
          type: string
      type: object
    AWSEventBridgeSource:
      description: An EventBridge source.
      properties:
        name:
          description: The event source name.
          type: string
        region:
          description: >-
            The event source's [AWS
            region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
          type: string
      type: object
    AWSEventBridgeAccountConfiguration:
      description: The EventBridge configuration for one AWS account.
      properties:
        accountId:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        eventHubs:
          description: Array of AWS event sources associated with this account.
          items:
            $ref: '#/components/schemas/AWSEventBridgeSource'
          type: array
        tags:
          description: |-
            Array of tags (in the form `key:value`) which are added to all hosts
            and metrics reporting through the main AWS integration.
          example:
            - $KEY:$VALUE
          items:
            description: The list of the host_tags.
            type: string
          type: array
      type: object
    AWSEventBridgeListResponse:
      description: >-
        An object describing the EventBridge configuration for multiple
        accounts.
      properties:
        accounts:
          description: List of accounts with their event sources.
          items:
            $ref: '#/components/schemas/AWSEventBridgeAccountConfiguration'
          type: array
        isInstalled:
          description: >-
            True if the EventBridge sub-integration is enabled for your
            organization.
          type: boolean
      type: object
    AWSEventBridgeCreateRequest:
      description: An object used to create an EventBridge source.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        create_event_bus:
          description: |-
            True if Datadog should create the event bus in addition to the event
            source. Requires the `events:CreateEventBus` permission.
          example: true
          type: boolean
        event_generator_name:
          description: >-
            The given part of the event source name, which is then combined with
            an

            assigned suffix to form the full name.
          example: app-alerts
          type: string
        region:
          description: >-
            The event source's [AWS
            region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
          example: us-east-1
          type: string
      type: object
    AWSEventBridgeCreateStatus:
      description: The event source status "created".
      enum:
        - created
      example: created
      type: string
      x-enum-varnames:
        - CREATED
    AWSEventBridgeCreateResponse:
      description: A created EventBridge source.
      properties:
        event_source_name:
          description: The event source name.
          example: app-alerts-zyxw3210
          type: string
        has_bus:
          description: True if the event bus was created in addition to the source.
          example: true
          type: boolean
        region:
          description: >-
            The event source's [AWS
            region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
          example: us-east-1
          type: string
        status:
          $ref: '#/components/schemas/AWSEventBridgeCreateStatus'
      type: object
    AWSEventBridgeDeleteRequest:
      description: An object used to delete an EventBridge source.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        event_generator_name:
          description: The event source name.
          example: app-alerts-zyxw3210
          type: string
        region:
          description: >-
            The event source's [AWS
            region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
          example: us-east-1
          type: string
      type: object
    AWSEventBridgeDeleteStatus:
      description: The event source status "empty".
      enum:
        - empty
      example: empty
      type: string
      x-enum-varnames:
        - EMPTY
    AWSEventBridgeDeleteResponse:
      description: An indicator of the successful deletion of an EventBridge source.
      properties:
        status:
          $ref: '#/components/schemas/AWSEventBridgeDeleteStatus'
      type: object
    AWSNamespace:
      description: The namespace associated with the tag filter entry.
      enum:
        - elb
        - application_elb
        - sqs
        - rds
        - custom
        - network_elb
        - lambda
        - step_functions
      type: string
      x-enum-varnames:
        - ELB
        - APPLICATION_ELB
        - SQS
        - RDS
        - CUSTOM
        - NETWORK_ELB
        - LAMBDA
        - STEP_FUNCTIONS
    AWSTagFilter:
      description: A tag filter.
      properties:
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
        tag_filter_str:
          description: The tag filter string.
          example: prod*
          type: string
      type: object
    AWSTagFilterListResponse:
      description: An array of tag filter rules by `namespace` and tag filter string.
      properties:
        filters:
          description: An array of tag filters.
          items:
            $ref: '#/components/schemas/AWSTagFilter'
          type: array
      type: object
    AWSTagFilterCreateRequest:
      description: The objects used to set an AWS tag filter.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
        tag_filter_str:
          description: The tag filter string.
          example: prod*
          type: string
      type: object
    AWSTagFilterDeleteRequest:
      description: The objects used to delete an AWS tag filter entry.
      properties:
        account_id:
          description: The unique identifier of your AWS account.
          example: FAKEAC0FAKEAC2FAKEAC
          type: string
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
      type: object
    AWSLogsLambda:
      description: Description of the Lambdas.
      properties:
        arn:
          description: Available ARN IDs.
          type: string
      type: object
    AWSLogsListResponse:
      description: >-
        A list of all Datadog-AWS logs integrations available in your Datadog
        organization.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '1234567'
          type: string
        lambdas:
          description: List of ARNs configured in your Datadog account.
          example:
            - arn: arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
          items:
            $ref: '#/components/schemas/AWSLogsLambda'
          type: array
        services:
          description: Array of services IDs.
          example:
            - s3
            - elb
            - elbv2
            - cloudfront
            - redshift
            - lambda
          items:
            description: Description of the services.
            type: string
          type: array
      type: object
    AWSAccountAndLambdaRequest:
      description: AWS account ID and Lambda ARN.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '1234567'
          type: string
        lambda_arn:
          description: >-
            ARN of the Datadog Lambda created during the Datadog-Amazon Web
            services Log collection setup.
          example: arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
          type: string
      required:
        - account_id
        - lambda_arn
      type: object
    AWSLogsAsyncError:
      description: Description of errors.
      properties:
        code:
          description: Code properties
          example: no_such_config
          type: string
        message:
          description: Message content.
          example: AWS account 12345 has no Lambda config to update
          type: string
      type: object
    AWSLogsAsyncResponse:
      description: >-
        A list of all Datadog-AWS logs integrations available in your Datadog
        organization.
      properties:
        errors:
          description: List of errors.
          items:
            $ref: '#/components/schemas/AWSLogsAsyncError'
          type: array
        status:
          description: Status of the properties.
          example: created
          type: string
      type: object
    AWSLogsListServicesResponse:
      description: >-
        The list of current AWS services for which Datadog offers automatic log
        collection.
      properties:
        id:
          description: Key value in returned object.
          example: s3
          type: string
        label:
          description: Name of service available for configuration with Datadog logs.
          example: S3 Access Logs
          type: string
      type: object
    AWSLogsServicesRequest:
      description: >-
        A list of current AWS services for which Datadog offers automatic log
        collection.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '1234567'
          type: string
        services:
          description: >-
            Array of services IDs set to enable automatic log collection.
            Discover the list of available services with the get list of AWS log
            ready services API endpoint.
          example:
            - s3
            - elb
            - elbv2
            - cloudfront
            - redshift
            - lambda
          items:
            description: Description of services.
            type: string
          type: array
      required:
        - account_id
        - services
      type: object
    ResourceProviderConfig:
      description: >-
        Configuration settings applied to resources from the specified Azure
        resource provider.
      properties:
        metrics_enabled:
          description: Collect metrics for resources from this provider.
          example: true
          type: boolean
        namespace:
          description: The provider namespace to apply this configuration to.
          example: Microsoft.Compute
          type: string
      type: object
    AzureAccount:
      description: Datadog-Azure integrations configured for your organization.
      properties:
        app_service_plan_filters:
          description: >-
            Limit the Azure app service plans that are pulled into Datadog using
            tags.

            Only app service plans that match one of the defined tags are
            imported into Datadog.
          example: key:value,filter:example
          type: string
        automute:
          description: Silence monitors for expected Azure VM shutdowns.
          example: true
          type: boolean
        client_id:
          description: Your Azure web application ID.
          example: testc7f6-1234-5678-9101-3fcbf464test
          type: string
        client_secret:
          description: Your Azure web application secret key.
          example: TestingRh2nx664kUy5dIApvM54T4AtO
          type: string
        container_app_filters:
          description: >-
            Limit the Azure container apps that are pulled into Datadog using
            tags.

            Only container apps that match one of the defined tags are imported
            into Datadog.
          example: key:value,filter:example
          type: string
        cspm_enabled:
          description: >-
            When enabled, Datadog’s Cloud Security Management product scans
            resource configurations monitored by this app registration.

            Note: This requires resource_collection_enabled to be set to true.
          example: true
          type: boolean
        custom_metrics_enabled:
          description: Enable custom metrics for your organization.
          example: true
          type: boolean
        errors:
          description: Errors in your configuration.
          example:
            - '*'
          items:
            description: List of errors.
            readOnly: true
            type: string
          type: array
        host_filters:
          description: >-
            Limit the Azure instances that are pulled into Datadog by using
            tags.

            Only hosts that match one of the defined tags are imported into
            Datadog.
          example: key:value,filter:example
          type: string
        metrics_enabled:
          description: Enable Azure metrics for your organization.
          example: true
          type: boolean
        metrics_enabled_default:
          description: >-
            Enable Azure metrics for your organization for resource providers
            where no resource provider config is specified.
          example: true
          type: boolean
        new_client_id:
          description: Your New Azure web application ID.
          example: new1c7f6-1234-5678-9101-3fcbf464test
          type: string
        new_tenant_name:
          description: Your New Azure Active Directory ID.
          example: new1c44-1234-5678-9101-cc00736ftest
          type: string
        resource_collection_enabled:
          description: >-
            When enabled, Datadog collects metadata and configuration info from
            cloud resources (compute instances, databases, load balancers, etc.)
            monitored by this app registration.
          example: true
          type: boolean
        resource_provider_configs:
          description: >-
            Configuration settings applied to resources from the specified Azure
            resource providers.
          items:
            $ref: '#/components/schemas/ResourceProviderConfig'
          type: array
        tenant_name:
          description: Your Azure Active Directory ID.
          example: testc44-1234-5678-9101-cc00736ftest
          type: string
        usage_metrics_enabled:
          description: Enable azure.usage metrics for your organization.
          example: true
          type: boolean
      type: object
    AzureAccountListResponse:
      description: Accounts configured for your organization.
      items:
        $ref: '#/components/schemas/AzureAccount'
      type: array
    GCPAccount:
      description: Your Google Cloud Platform Account.
      properties:
        auth_provider_x509_cert_url:
          description: Should be `https://www.googleapis.com/oauth2/v1/certs`.
          example: https://www.googleapis.com/oauth2/v1/certs
          type: string
        auth_uri:
          description: Should be `https://accounts.google.com/o/oauth2/auth`.
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        automute:
          description: Silence monitors for expected GCE instance shutdowns.
          type: boolean
        client_email:
          description: Your email found in your JSON service account key.
          example: api-dev@datadog-sandbox.iam.gserviceaccount.com
          type: string
        client_id:
          description: Your ID found in your JSON service account key.
          example: '123456712345671234567'
          type: string
        client_x509_cert_url:
          description: >-
            Should be
            `https://www.googleapis.com/robot/v1/metadata/x509/$CLIENT_EMAIL`

            where `$CLIENT_EMAIL` is the email found in your JSON service
            account key.
          example: https://www.googleapis.com/robot/v1/metadata/x509/$CLIENT_EMAIL
          type: string
        cloud_run_revision_filters:
          description: >-
            Limit the Cloud Run revisions that are pulled into Datadog by using
            tags.

            Only Cloud Run revision resources that apply to specified filters
            are imported into Datadog.
          example:
            - $KEY:$VALUE
          items:
            description: Cloud Run Filters
            type: string
          type: array
        errors:
          description: An array of errors.
          example:
            - '*'
          items:
            description: String representation of one error.
            readOnly: true
            type: string
          type: array
        host_filters:
          description: >-
            Limit the GCE instances that are pulled into Datadog by using tags.

            Only hosts that match one of the defined tags are imported into
            Datadog.
          example: key:value,filter:example
          type: string
        is_cspm_enabled:
          description: >-
            When enabled, Datadog will activate the Cloud Security Monitoring
            product for this service account. Note: This requires
            resource_collection_enabled to be set to true.
          example: true
          type: boolean
        is_resource_change_collection_enabled:
          default: false
          description: >-
            When enabled, Datadog scans for all resource change data in your
            Google Cloud environment.
          example: true
          type: boolean
        is_security_command_center_enabled:
          default: false
          description: >-
            When enabled, Datadog will attempt to collect Security Command
            Center Findings. Note: This requires additional permissions on the
            service account.
          example: true
          type: boolean
        private_key:
          description: Your private key name found in your JSON service account key.
          example: private_key
          type: string
        private_key_id:
          description: Your private key ID found in your JSON service account key.
          example: 123456789abcdefghi123456789abcdefghijklm
          type: string
        project_id:
          description: Your Google Cloud project ID found in your JSON service account key.
          example: datadog-apitest
          type: string
        resource_collection_enabled:
          description: >-
            When enabled, Datadog scans for all resources in your GCP
            environment.
          example: true
          type: boolean
        token_uri:
          description: Should be `https://accounts.google.com/o/oauth2/token`.
          example: https://accounts.google.com/o/oauth2/token
          type: string
        type:
          description: >-
            The value for service_account found in your JSON service account
            key.
          example: service_account
          type: string
      type: object
    GCPAccountListResponse:
      description: Array of GCP account responses.
      items:
        $ref: '#/components/schemas/GCPAccount'
      type: array
    PagerDutyService:
      description: The PagerDuty service that is available for integration with Datadog.
      properties:
        service_key:
          description: Your service key in PagerDuty.
          example: ''
          type: string
        service_name:
          description: Your service name associated with a service key in PagerDuty.
          example: ''
          type: string
      required:
        - service_name
        - service_key
      type: object
    PagerDutyServiceName:
      description: PagerDuty service object name.
      properties:
        service_name:
          description: Your service name associated service key in PagerDuty.
          example: ''
          type: string
      required:
        - service_name
      type: object
    PagerDutyServiceKey:
      description: PagerDuty service object key.
      properties:
        service_key:
          description: Your service key in PagerDuty.
          example: ''
          type: string
      required:
        - service_key
      type: object
    SlackIntegrationChannelDisplay:
      description: Configuration options for what is shown in an alert event message.
      properties:
        message:
          default: true
          description: Show the main body of the alert event.
          type: boolean
        mute_buttons:
          default: false
          description: Show interactive buttons to mute the alerting monitor.
          type: boolean
        notified:
          default: true
          description: Show the list of @-handles in the alert event.
          type: boolean
        snapshot:
          default: true
          description: Show the alert event's snapshot image.
          type: boolean
        tags:
          default: true
          description: Show the scopes on which the monitor alerted.
          type: boolean
      type: object
    SlackIntegrationChannel:
      description: The Slack channel configuration.
      properties:
        display:
          $ref: '#/components/schemas/SlackIntegrationChannelDisplay'
        name:
          description: Your channel name.
          example: '#general'
          type: string
      type: object
    SlackIntegrationChannels:
      description: A list of configured Slack channels.
      example:
        - display:
            message: true
            mute_buttons: true
            notified: true
            snapshot: true
            tags: true
          name: '#channel_name_main_account'
        - display:
            message: true
            mute_buttons: true
            notified: true
            snapshot: false
            tags: true
          name: '#channel_name_doghouse'
      items:
        $ref: '#/components/schemas/SlackIntegrationChannel'
      type: array
    WebhooksIntegrationCustomVariable:
      description: Custom variable for Webhook integration.
      properties:
        is_secret:
          description: >-
            Make custom variable is secret or not.

            If the custom variable is secret, the value is not returned in the
            response payload.
          example: true
          type: boolean
        name:
          description: >-
            The name of the variable. It corresponds with
            `<CUSTOM_VARIABLE_NAME>`.
          example: CUSTOM_VARIABLE_NAME
          type: string
        value:
          description: Value of the custom variable.
          example: CUSTOM_VARIABLE_VALUE
          type: string
      required:
        - name
        - value
        - is_secret
      type: object
    WebhooksIntegrationCustomVariableResponse:
      description: Custom variable for Webhook integration.
      properties:
        is_secret:
          description: >-
            Make custom variable is secret or not.

            If the custom variable is secret, the value is not returned in the
            response payload.
          example: true
          type: boolean
        name:
          description: >-
            The name of the variable. It corresponds with
            `<CUSTOM_VARIABLE_NAME>`. It must only contains upper-case
            characters, integers or underscores.
          example: CUSTOM_VARIABLE_NAME
          type: string
        value:
          description: >-
            Value of the custom variable. It won't be returned if the variable
            is secret.
          example: CUSTOM_VARIABLE_VALUE
          type: string
      required:
        - name
        - is_secret
      type: object
    WebhooksIntegrationCustomVariableUpdateRequest:
      description: |-
        Update request of a custom variable object.

        *All properties are optional.*
      properties:
        is_secret:
          description: >-
            Make custom variable is secret or not.

            If the custom variable is secret, the value is not returned in the
            response payload.
          type: boolean
        name:
          description: >-
            The name of the variable. It corresponds with
            `<CUSTOM_VARIABLE_NAME>`. It must only contains upper-case
            characters, integers or underscores.
          example: CUSTOM_VARIABLE_NAME
          type: string
        value:
          description: Value of the custom variable.
          example: CUSTOM_VARIABLE_VALUE
          type: string
      type: object
    WebhooksIntegrationEncoding:
      default: json
      description: Encoding type. Can be given either `json` or `form`.
      enum:
        - json
        - form
      type: string
      x-enum-varnames:
        - JSON
        - FORM
    WebhooksIntegration:
      description: Datadog-Webhooks integration.
      properties:
        custom_headers:
          description: >-
            If `null`, uses no header.

            If given a JSON payload, these will be headers attached to your
            webhook.
          nullable: true
          type: string
        encode_as:
          $ref: '#/components/schemas/WebhooksIntegrationEncoding'
        name:
          description: |-
            The name of the webhook. It corresponds with `<WEBHOOK_NAME>`.
            Learn more on how to use it in
            [monitor notifications](https://docs.datadoghq.com/monitors/notify).
          example: WEBHOOK_NAME
          type: string
        payload:
          description: >-
            If `null`, uses the default payload.

            If given a JSON payload, the webhook returns the payload

            specified by the given payload.

            [Webhooks variable
            usage](https://docs.datadoghq.com/integrations/webhooks/#usage).
          nullable: true
          type: string
        url:
          description: URL of the webhook.
          example: https://example.com/webhook
          type: string
      required:
        - name
        - url
      type: object
    WebhooksIntegrationUpdateRequest:
      description: |-
        Update request of a Webhooks integration object.

        *All properties are optional.*
      properties:
        custom_headers:
          description: >-
            If `null`, uses no header.

            If given a JSON payload, these will be headers attached to your
            webhook.
          type: string
        encode_as:
          $ref: '#/components/schemas/WebhooksIntegrationEncoding'
        name:
          description: |-
            The name of the webhook. It corresponds with `<WEBHOOK_NAME>`.
            Learn more on how to use it in
            [monitor notifications](https://docs.datadoghq.com/monitors/notify).
          example: WEBHOOK_NAME
          type: string
        payload:
          description: >-
            If `null`, uses the default payload.

            If given a JSON payload, the webhook returns the payload

            specified by the given payload.

            [Webhooks variable
            usage](https://docs.datadoghq.com/integrations/webhooks/#usage).
          nullable: true
          type: string
        url:
          description: URL of the webhook.
          example: https://example.com/webhook
          type: string
      type: object
    LogsSortv1:
      description: Time-ascending `asc` or time-descending `desc` results.
      enum:
        - asc
        - desc
      type: string
      x-enum-varnames:
        - TIME_ASCENDING
        - TIME_DESCENDING
    LogsListRequestTime:
      description: Timeframe to retrieve the log from.
      properties:
        from:
          description: Minimum timestamp for requested logs.
          example: '2020-02-02T02:02:02.202Z'
          format: date-time
          type: string
        timezone:
          description: >-
            Timezone can be specified both as an offset (for example
            "UTC+03:00")

            or a regional zone (for example "Europe/Paris").
          type: string
        to:
          description: Maximum timestamp for requested logs.
          example: '2020-02-20T02:02:02.202Z'
          format: date-time
          type: string
      required:
        - from
        - to
      type: object
    LogsListRequestv1:
      description: >-
        Object to send with the request to retrieve a list of logs from your
        Organization.
      properties:
        index:
          description: >-
            The log index on which the request is performed. For multi-index
            organizations,

            the default is all live indexes. Historical indexes of rehydrated
            logs must be specified.
          example: retention-3,retention-15
          type: string
        limit:
          description: Number of logs return in the response.
          format: int32
          maximum: 1000
          type: integer
        query:
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
        sort:
          $ref: '#/components/schemas/LogsSortv1'
        startAt:
          description: >-
            Hash identifier of the first log to return in the list, available in
            a log `id` attribute.

            This parameter is used for the pagination feature.


            **Note**: This parameter is ignored if the corresponding log

            is out of the scope of the specified time window.
          type: string
        time:
          $ref: '#/components/schemas/LogsListRequestTime'
      required:
        - time
      type: object
    LogContent:
      description: JSON object containing all log attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from your log.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        host:
          description: Name of the machine from where the logs are being sent.
          example: i-0123
          type: string
        message:
          description: >-
            The message [reserved
            attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message
            attribute as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where
            it is indexed for full text search.
          example: Host connected to remote
          type: string
        service:
          description: >-
            The name of the application or service generating the log events.

            It is used to switch from Logs to APM, so make sure you define the
            same

            value when you use both products.
          example: agent
          type: string
        tags:
          description: Array of tags associated with your log.
          example:
            - team:A
          items:
            description: Tag associated with your log.
            type: string
          type: array
        timestamp:
          description: Timestamp of your log.
          example: '2020-05-26T13:36:14Z'
          format: date-time
          type: string
      type: object
    Logv1:
      description: Object describing a log after being processed and stored by Datadog.
      properties:
        content:
          $ref: '#/components/schemas/LogContent'
        id:
          description: ID of the Log.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
      type: object
    LogsListResponsev1:
      description: >-
        Response object with all logs matching the request and pagination
        information.
      properties:
        logs:
          description: Array of logs matching the request and the `nextLogId` if sent.
          items:
            $ref: '#/components/schemas/Logv1'
          type: array
        nextLogId:
          description: |-
            Hash identifier of the next log to return in the list.
            This parameter is used for the pagination feature.
          nullable: true
          type: string
        status:
          description: Status of the response.
          type: string
      type: object
    LogsAPIError:
      description: Error returned by the Logs API
      properties:
        code:
          description: Code identifying the error
          type: string
        details:
          description: Additional error details
          items:
            $ref: '#/components/schemas/LogsAPIError'
          type: array
        message:
          description: Error message
          type: string
      type: object
    LogsAPIErrorResponse:
      description: Response returned by the Logs API when errors occur.
      properties:
        error:
          $ref: '#/components/schemas/LogsAPIError'
      type: object
    LogsIndexesOrder:
      description: Object containing the ordered list of log index names.
      properties:
        index_names:
          description: >-
            Array of strings identifying by their name(s) the index(es) of your
            organization.

            Logs are tested against the query filter of each index one by one,
            following the order of the array.

            Logs are eventually stored in the first matching index.
          example:
            - main
            - payments
            - web
          items:
            description: An index name.
            type: string
          type: array
      required:
        - index_names
      type: object
    LogsDailyLimitReset:
      description: >-
        Object containing options to override the default daily limit reset
        time.
      properties:
        reset_time:
          description: >-
            String in `HH:00` format representing the time of day the daily
            limit should be reset. The hours must be between 00 and 23
            (inclusive).
          example: '14:00'
          type: string
        reset_utc_offset:
          description: >-
            String in `(-|+)HH:00` format representing the UTC offset to apply
            to the given reset time. The hours must be between -12 and +14
            (inclusive).
          example: '+02:00'
          type: string
      type: object
    LogsExclusionFilter:
      description: >-
        Exclusion filter is defined by a query, a sampling rule, and a
        active/inactive toggle.
      properties:
        query:
          description: >-
            Default query is `*`, meaning all logs flowing in the index would be
            excluded.

            Scope down exclusion filter to only a subset of logs with a log
            query.
          example: '*'
          type: string
        sample_rate:
          description: |-
            Sample rate to apply to logs going through this exclusion filter,
            a value of 1.0 excludes all logs matching the query.
          example: 1
          format: double
          type: number
      required:
        - sample_rate
      type: object
    LogsExclusion:
      description: Represents the index exclusion filter object from configuration API.
      properties:
        filter:
          $ref: '#/components/schemas/LogsExclusionFilter'
        is_enabled:
          description: Whether or not the exclusion filter is active.
          type: boolean
        name:
          description: Name of the index exclusion filter.
          example: payment
          type: string
      required:
        - name
      type: object
    LogsFilter:
      description: Filter for logs.
      properties:
        query:
          description: The filter query.
          example: source:python
          type: string
      type: object
    LogsIndex:
      description: Object describing a Datadog Log index.
      properties:
        daily_limit:
          description: >-
            The number of log events you can send in this index per day before
            you are rate-limited.
          example: 300000000
          format: int64
          type: integer
        daily_limit_reset:
          $ref: '#/components/schemas/LogsDailyLimitReset'
        daily_limit_warning_threshold_percentage:
          description: >-
            A percentage threshold of the daily quota at which a Datadog warning
            event is generated.
          example: 70
          format: double
          maximum: 99.99
          minimum: 50
          type: number
        exclusion_filters:
          description: >-
            An array of exclusion objects. The logs are tested against the query
            of each filter,

            following the order of the array. Only the first matching active
            exclusion matters,

            others (if any) are ignored.
          items:
            $ref: '#/components/schemas/LogsExclusion'
          type: array
        filter:
          $ref: '#/components/schemas/LogsFilter'
        is_rate_limited:
          description: >-
            A boolean stating if the index is rate limited, meaning more logs
            than the daily limit have been sent.

            Rate limit is reset every-day at 2pm UTC.
          example: false
          readOnly: true
          type: boolean
        name:
          description: The name of the index.
          example: main
          type: string
        num_flex_logs_retention_days:
          description: >-
            The total number of days logs are stored in Standard and Flex Tier
            before being deleted from the index.

            If Standard Tier is enabled on this index, logs are first retained
            in Standard Tier for the number of days specified through
            `num_retention_days`,

            and then stored in Flex Tier until the number of days specified in
            `num_flex_logs_retention_days` is reached.

            The available values depend on retention plans specified in your
            organization's contract/subscriptions.
          example: 360
          format: int64
          type: integer
        num_retention_days:
          description: >-
            The number of days logs are stored in Standard Tier before aging
            into the Flex Tier or being deleted from the index.

            The available values depend on retention plans specified in your
            organization's contract/subscriptions.
          example: 15
          format: int64
          type: integer
      required:
        - name
        - filter
      type: object
    LogsIndexListResponse:
      description: Object with all Index configurations for a given organization.
      properties:
        indexes:
          description: Array of Log index configurations.
          items:
            $ref: '#/components/schemas/LogsIndex'
          type: array
      type: object
    LogsIndexUpdateRequest:
      description: Object for updating a Datadog Log index.
      properties:
        daily_limit:
          description: >-
            The number of log events you can send in this index per day before
            you are rate-limited.
          example: 300000000
          format: int64
          type: integer
        daily_limit_reset:
          $ref: '#/components/schemas/LogsDailyLimitReset'
        daily_limit_warning_threshold_percentage:
          description: >-
            A percentage threshold of the daily quota at which a Datadog warning
            event is generated.
          example: 70
          format: double
          maximum: 99.99
          minimum: 50
          type: number
        disable_daily_limit:
          description: >-
            If true, sets the `daily_limit` value to null and the index is not
            limited on a daily basis (any

            specified `daily_limit` value in the request is ignored). If false
            or omitted, the index's current

            `daily_limit` is maintained.
          example: false
          type: boolean
        exclusion_filters:
          description: >-
            An array of exclusion objects. The logs are tested against the query
            of each filter,

            following the order of the array. Only the first matching active
            exclusion matters,

            others (if any) are ignored.
          items:
            $ref: '#/components/schemas/LogsExclusion'
          type: array
        filter:
          $ref: '#/components/schemas/LogsFilter'
        num_flex_logs_retention_days:
          description: >-
            The total number of days logs are stored in Standard and Flex Tier
            before being deleted from the index.

            If Standard Tier is enabled on this index, logs are first retained
            in Standard Tier for the number of days specified through
            `num_retention_days`,

            and then stored in Flex Tier until the number of days specified in
            `num_flex_logs_retention_days` is reached.

            The available values depend on retention plans specified in your
            organization's contract/subscriptions.


            **Note**: Changing this value affects all logs already in this
            index. It may also affect billing.
          example: 360
          format: int64
          type: integer
        num_retention_days:
          description: >-
            The number of days logs are stored in Standard Tier before aging
            into the Flex Tier or being deleted from the index.

            The available values depend on retention plans specified in your
            organization's contract/subscriptions.


            **Note**: Changing this value affects all logs already in this
            index. It may also affect billing.
          example: 15
          format: int64
          type: integer
      required:
        - filter
      type: object
    LogsPipelinesOrder:
      description: Object containing the ordered list of pipeline IDs.
      properties:
        pipeline_ids:
          description: >-
            Ordered Array of `<PIPELINE_ID>` strings, the order of pipeline IDs
            in the array

            define the overall Pipelines order for Datadog.
          example:
            - tags
            - org_ids
            - products
          items:
            description: A given pipeline ID.
            type: string
          type: array
      required:
        - pipeline_ids
      type: object
    LogsGrokParserRules:
      description: Set of rules for the grok parser.
      properties:
        match_rules:
          description: List of match rules for the grok parser, separated by a new line.
          example: |
            rule_name_1 foo
            rule_name_2 bar
          type: string
        support_rules:
          default: ''
          description: List of support rules for the grok parser, separated by a new line.
          example: |
            rule_name_1 foo
            rule_name_2 bar
          type: string
      required:
        - match_rules
      type: object
    LogsGrokParserType:
      default: grok-parser
      description: Type of logs grok parser.
      enum:
        - grok-parser
      example: grok-parser
      type: string
      x-enum-varnames:
        - GROK_PARSER
    LogsGrokParser:
      description: >-
        Create custom grok rules to parse the full message or [a specific
        attribute of your raw
        event](https://docs.datadoghq.com/logs/log_configuration/parsing/#advanced-settings).

        For more information, see the [parsing
        section](https://docs.datadoghq.com/logs/log_configuration/parsing).
      properties:
        grok:
          $ref: '#/components/schemas/LogsGrokParserRules'
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        samples:
          description: List of sample logs to test this grok parser.
          items:
            description: A log sample that is used to test the grok parser.
            maxLength: 5000
            type: string
          maxItems: 5
          type: array
        source:
          default: message
          description: Name of the log attribute to parse.
          example: message
          type: string
        type:
          $ref: '#/components/schemas/LogsGrokParserType'
      required:
        - source
        - grok
        - type
      type: object
    LogsDateRemapperType:
      default: date-remapper
      description: Type of logs date remapper.
      enum:
        - date-remapper
      example: date-remapper
      type: string
      x-enum-varnames:
        - DATE_REMAPPER
    LogsDateRemapper:
      description: >-
        As Datadog receives logs, it timestamps them using the value(s) from any
        of these default attributes.

          - `timestamp`
          - `date`
          - `_timestamp`
          - `Timestamp`
          - `eventTime`
          - `published_date`

          If your logs put their dates in an attribute not in this list,
          use the log date Remapper Processor to define their date attribute as the official log timestamp.
          The recognized date formats are ISO8601, UNIX (the milliseconds EPOCH format), and RFC3164.

          **Note:** If your logs don’t contain any of the default attributes
          and you haven’t defined your own date attribute, Datadog timestamps
          the logs with the date it received them.

          If multiple log date remapper processors can be applied to a given log,
          only the first one (according to the pipelines order) is taken into account.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          description: Array of source attributes.
          example:
            - web
            - gateway
          items:
            description: Attribute used as a source to define the log associated date.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsDateRemapperType'
      required:
        - sources
        - type
      type: object
    LogsStatusRemapperType:
      default: status-remapper
      description: Type of logs status remapper.
      enum:
        - status-remapper
      example: status-remapper
      type: string
      x-enum-varnames:
        - STATUS_REMAPPER
    LogsStatusRemapper:
      description: >-
        Use this Processor if you want to assign some attributes as the official
        status.


        Each incoming status value is mapped as follows.

          - Integers from 0 to 7 map to the Syslog severity standards
          - Strings beginning with `emerg` or f (case-insensitive) map to `emerg` (0)
          - Strings beginning with `a` (case-insensitive) map to `alert` (1)
          - Strings beginning with `c` (case-insensitive) map to `critical` (2)
          - Strings beginning with `err` (case-insensitive) map to `error` (3)
          - Strings beginning with `w` (case-insensitive) map to `warning` (4)
          - Strings beginning with `n` (case-insensitive) map to `notice` (5)
          - Strings beginning with `i` (case-insensitive) map to `info` (6)
          - Strings beginning with `d`, `trace` or `verbose` (case-insensitive) map to `debug` (7)
          - Strings beginning with `o` or matching `OK` or `Success` (case-insensitive) map to OK
          - All others map to `info` (6)

          **Note:** If multiple log status remapper processors can be applied to a given log,
          only the first one (according to the pipelines order) is taken into account.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          description: Array of source attributes.
          example: []
          items:
            description: Attribute used as a source to define the log associated status.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsStatusRemapperType'
      required:
        - sources
        - type
      type: object
    LogsServiceRemapperType:
      default: service-remapper
      description: Type of logs service remapper.
      enum:
        - service-remapper
      example: service-remapper
      type: string
      x-enum-varnames:
        - SERVICE_REMAPPER
    LogsServiceRemapper:
      description: >-
        Use this processor if you want to assign one or more attributes as the
        official service.


        **Note:** If multiple service remapper processors can be applied to a
        given log,

        only the first one (according to the pipeline order) is taken into
        account.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          description: Array of source attributes.
          example:
            - web
            - gateway
          items:
            description: Attribute used as a source to define the log associated service.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsServiceRemapperType'
      required:
        - sources
        - type
      type: object
    LogsMessageRemapperType:
      default: message-remapper
      description: Type of logs message remapper.
      enum:
        - message-remapper
      example: message-remapper
      type: string
      x-enum-varnames:
        - MESSAGE_REMAPPER
    LogsMessageRemapper:
      description: >-
        The message is a key attribute in Datadog.

        It is displayed in the message column of the Log Explorer and you can do
        full string search on it.

        Use this Processor to define one or more attributes as the official log
        message.


        **Note:** If multiple log message remapper processors can be applied to
        a given log,

        only the first one (according to the pipeline order) is taken into
        account.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - msg
          description: Array of source attributes.
          example:
            - msg
          items:
            description: Attribute used as a source to define the log associated message.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsMessageRemapperType'
      required:
        - sources
        - type
      type: object
    TargetFormatType:
      description: >-
        If the `target_type` of the remapper is `attribute`, try to cast the
        value to a new specific type.

        If the cast is not possible, the original type is kept. `string`,
        `integer`, or `double` are the possible types.

        If the `target_type` is `tag`, this parameter may not be specified.
      enum:
        - auto
        - string
        - integer
        - double
      type: string
      x-enum-varnames:
        - AUTO
        - STRING
        - INTEGER
        - DOUBLE
    LogsAttributeRemapperType:
      default: attribute-remapper
      description: Type of logs attribute remapper.
      enum:
        - attribute-remapper
      example: attribute-remapper
      type: string
      x-enum-varnames:
        - ATTRIBUTE_REMAPPER
    LogsAttributeRemapper:
      description: >-
        The remapper processor remaps any source attribute(s) or tag to another
        target attribute or tag.

        Constraints on the tag/attribute name are explained in the [Tag Best
        Practice
        documentation](https://docs.datadoghq.com/logs/guide/log-parsing-best-practice).

        Some additional constraints are applied as `:` or `,` are not allowed in
        the target tag/attribute name.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        override_on_conflict:
          default: false
          description: Override or not the target element if already set,
          type: boolean
        preserve_source:
          default: false
          description: Remove or preserve the remapped source element.
          type: boolean
        source_type:
          default: attribute
          description: Defines if the sources are from log `attribute` or `tag`.
          type: string
        sources:
          description: Array of source attributes.
          example:
            - web
            - gateway
          items:
            description: >-
              Attribute used as a source to remap its value to the target
              attribute.
            type: string
          type: array
        target:
          description: Final attribute or tag name to remap the sources to.
          example: operation_id
          type: string
        target_format:
          $ref: '#/components/schemas/TargetFormatType'
        target_type:
          default: attribute
          description: >-
            Defines if the final attribute or tag name is from log `attribute`
            or `tag`.
          type: string
        type:
          $ref: '#/components/schemas/LogsAttributeRemapperType'
      required:
        - sources
        - target
        - type
      type: object
    LogsURLParserType:
      default: url-parser
      description: Type of logs URL parser.
      enum:
        - url-parser
      example: url-parser
      type: string
      x-enum-varnames:
        - URL_PARSER
    LogsURLParser:
      description: >-
        This processor extracts query parameters and other important parameters
        from a URL.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        normalize_ending_slashes:
          default: false
          description: Normalize the ending slashes or not.
          nullable: true
          type: boolean
        sources:
          default:
            - http.url
          description: Array of source attributes.
          example:
            - http.url
          items:
            description: Attribute to extract the URL from.
            type: string
          type: array
        target:
          default: http.url_details
          description: >-
            Name of the parent attribute that contains all the extracted details
            from the `sources`.
          example: http.url_details
          type: string
        type:
          $ref: '#/components/schemas/LogsURLParserType'
      required:
        - sources
        - target
        - type
      type: object
    LogsUserAgentParserType:
      default: user-agent-parser
      description: Type of logs User-Agent parser.
      enum:
        - user-agent-parser
      example: user-agent-parser
      type: string
      x-enum-varnames:
        - USER_AGENT_PARSER
    LogsUserAgentParser:
      description: >-
        The User-Agent parser takes a User-Agent attribute and extracts the OS,
        browser, device, and other user data.

        It recognizes major bots like the Google Bot, Yahoo Slurp, and Bing.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        is_encoded:
          default: false
          description: Define if the source attribute is URL encoded or not.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - http.useragent
          description: Array of source attributes.
          example:
            - http.useragent
          items:
            description: Attribute to extract the User-Agent from.
            type: string
          type: array
        target:
          default: http.useragent_details
          description: >-
            Name of the parent attribute that contains all the extracted details
            from the `sources`.
          example: http.useragent_details
          type: string
        type:
          $ref: '#/components/schemas/LogsUserAgentParserType'
      required:
        - sources
        - target
        - type
      type: object
    LogsCategoryProcessorCategory:
      description: Object describing the logs filter.
      properties:
        filter:
          $ref: '#/components/schemas/LogsFilter'
        name:
          description: Value to assign to the target attribute.
          type: string
      type: object
    LogsCategoryProcessorType:
      default: category-processor
      description: Type of logs category processor.
      enum:
        - category-processor
      example: category-processor
      type: string
      x-enum-varnames:
        - CATEGORY_PROCESSOR
    LogsCategoryProcessor:
      description: >-
        Use the Category Processor to add a new attribute (without spaces or
        special characters in the new attribute name)

        to a log matching a provided search query. Use categories to create
        groups for an analytical view.

        For example, URL groups, machine groups, environments, and response time
        buckets.


        **Notes**:


        - The syntax of the query is the one of Logs Explorer search bar.
          The query can be done on any log attribute or tag, whether it is a facet or not.
          Wildcards can also be used inside your query.
        - Once the log has matched one of the Processor queries, it stops.
          Make sure they are properly ordered in case a log could match several queries.
        - The names of the categories must be unique.

        - Once defined in the Category Processor, you can map categories to log
        status using the Log Status Remapper.
      properties:
        categories:
          description: |-
            Array of filters to match or not a log and their
            corresponding `name` to assign a custom value to the log.
          example: []
          items:
            $ref: '#/components/schemas/LogsCategoryProcessorCategory'
          type: array
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        target:
          description: >-
            Name of the target attribute which value is defined by the matching
            category.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/LogsCategoryProcessorType'
      required:
        - categories
        - target
        - type
      type: object
    LogsArithmeticProcessorType:
      default: arithmetic-processor
      description: Type of logs arithmetic processor.
      enum:
        - arithmetic-processor
      example: arithmetic-processor
      type: string
      x-enum-varnames:
        - ARITHMETIC_PROCESSOR
    LogsArithmeticProcessor:
      description: >-
        Use the Arithmetic Processor to add a new attribute (without spaces or
        special characters

        in the new attribute name) to a log with the result of the provided
        formula.

        This enables you to remap different time attributes with different units
        into a single attribute,

        or to compute operations on attributes within the same log.


        The formula can use parentheses and the basic arithmetic operators `-`,
        `+`, `*`, `/`.


        By default, the calculation is skipped if an attribute is missing.

        Select “Replace missing attribute by 0” to automatically populate

        missing attribute values with 0 to ensure that the calculation is done.

        An attribute is missing if it is not found in the log attributes,

        or if it cannot be converted to a number.


        *Notes*:


        - The operator `-` needs to be space split in the formula as it can also
        be contained in attribute names.

        - If the target attribute already exists, it is overwritten by the
        result of the formula.

        - Results are rounded up to the 9th decimal. For example, if the result
        of the formula is `0.1234567891`,
          the actual value stored for the attribute is `0.123456789`.
        - If you need to scale a unit of measure,
          see [Scale Filter](https://docs.datadoghq.com/logs/log_configuration/parsing/?tab=filter#matcher-and-filter).
      properties:
        expression:
          description: Arithmetic operation between one or more log attributes.
          example: ''
          type: string
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        is_replace_missing:
          default: false
          description: >-
            If `true`, it replaces all missing attributes of expression by `0`,
            `false`

            skip the operation if an attribute is missing.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        target:
          description: >-
            Name of the attribute that contains the result of the arithmetic
            operation.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/LogsArithmeticProcessorType'
      required:
        - target
        - expression
        - type
      type: object
    LogsStringBuilderProcessorType:
      default: string-builder-processor
      description: Type of logs string builder processor.
      enum:
        - string-builder-processor
      example: string-builder-processor
      type: string
      x-enum-varnames:
        - STRING_BUILDER_PROCESSOR
    LogsStringBuilderProcessor:
      description: >-
        Use the string builder processor to add a new attribute (without spaces
        or special characters)

        to a log with the result of the provided template.

        This enables aggregation of different attributes or raw strings into a
        single attribute.


        The template is defined by both raw text and blocks with the syntax
        `%{attribute_path}`.


        **Notes**:


        - The processor only accepts attributes with values or an array of
        values in the blocks.

        - If an attribute cannot be used (object or array of object),
          it is replaced by an empty string or the entire operation is skipped depending on your selection.
        - If the target attribute already exists, it is overwritten by the
        result of the template.

        - Results of the template cannot exceed 256 characters.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        is_replace_missing:
          default: false
          description: >-
            If true, it replaces all missing attributes of `template` by an
            empty string.

            If `false` (default), skips the operation for missing attributes.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        target:
          description: The name of the attribute that contains the result of the template.
          example: ''
          type: string
        template:
          description: A formula with one or more attributes and raw text.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/LogsStringBuilderProcessorType'
      required:
        - target
        - template
        - type
      type: object
    LogsProcessor:
      description: Definition of a logs processor.
      oneOf:
        - $ref: '#/components/schemas/LogsGrokParser'
        - $ref: '#/components/schemas/LogsDateRemapper'
        - $ref: '#/components/schemas/LogsStatusRemapper'
        - $ref: '#/components/schemas/LogsServiceRemapper'
        - $ref: '#/components/schemas/LogsMessageRemapper'
        - $ref: '#/components/schemas/LogsAttributeRemapper'
        - $ref: '#/components/schemas/LogsURLParser'
        - $ref: '#/components/schemas/LogsUserAgentParser'
        - $ref: '#/components/schemas/LogsCategoryProcessor'
        - $ref: '#/components/schemas/LogsArithmeticProcessor'
        - $ref: '#/components/schemas/LogsStringBuilderProcessor'
        - $ref: '#/components/schemas/LogsPipelineProcessor'
        - $ref: '#/components/schemas/LogsGeoIPParser'
        - $ref: '#/components/schemas/LogsLookupProcessor'
        - $ref: '#/components/schemas/ReferenceTableLogsLookupProcessor'
        - $ref: '#/components/schemas/LogsTraceRemapper'
        - $ref: '#/components/schemas/LogsSpanRemapper'
    LogsPipelineProcessorType:
      default: pipeline
      description: Type of logs pipeline processor.
      enum:
        - pipeline
      example: pipeline
      type: string
      x-enum-varnames:
        - PIPELINE
    LogsPipelineProcessor:
      description: >-
        Nested Pipelines are pipelines within a pipeline. Use Nested Pipelines
        to split the processing into two steps.

        For example, first use a high-level filtering such as team and then a
        second level of filtering based on the

        integration, service, or any other tag or attribute.


        A pipeline can contain Nested Pipelines and Processors whereas a Nested
        Pipeline can only contain Processors.
      properties:
        filter:
          $ref: '#/components/schemas/LogsFilter'
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        processors:
          description: Ordered list of processors in this pipeline.
          items:
            $ref: '#/components/schemas/LogsProcessor'
          type: array
        type:
          $ref: '#/components/schemas/LogsPipelineProcessorType'
      required:
        - type
      type: object
    LogsGeoIPParserType:
      default: geo-ip-parser
      description: Type of GeoIP parser.
      enum:
        - geo-ip-parser
      example: geo-ip-parser
      type: string
      x-enum-varnames:
        - GEO_IP_PARSER
    LogsGeoIPParser:
      description: >-
        The GeoIP parser takes an IP address attribute and extracts if available

        the Continent, Country, Subdivision, and City information in the target
        attribute path.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - network.client.ip
          description: Array of source attributes.
          example:
            - network.client.ip
          items:
            description: Attribute to geo-localize the IP from.
            type: string
          type: array
        target:
          default: network.client.geoip
          description: >-
            Name of the parent attribute that contains all the extracted details
            from the `sources`.
          example: network.client.geoip
          type: string
        type:
          $ref: '#/components/schemas/LogsGeoIPParserType'
      required:
        - sources
        - target
        - type
      type: object
    LogsLookupProcessorType:
      default: lookup-processor
      description: Type of logs lookup processor.
      enum:
        - lookup-processor
      example: lookup-processor
      type: string
      x-enum-varnames:
        - LOOKUP_PROCESSOR
    LogsLookupProcessor:
      description: >-
        Use the Lookup Processor to define a mapping between a log attribute

        and a human readable value saved in the processors mapping table.

        For example, you can use the Lookup Processor to map an internal service
        ID

        into a human readable service name. Alternatively, you could also use it
        to check

        if the MAC address that just attempted to connect to the production

        environment belongs to your list of stolen machines.
      properties:
        default_lookup:
          description: >-
            Value to set the target attribute if the source value is not found
            in the list.
          type: string
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        lookup_table:
          description: >-
            Mapping table of values for the source attribute and their
            associated target attribute values,

            formatted as `["source_key1,target_value1",
            "source_key2,target_value2"]`
          example:
            - source_key1,target_value1
            - source_key2,target_value2
          items:
            description: >-
              Mapping between a source and a value, it should follow the format
              `"<SOURCE>,<VALUE>"`.
            type: string
          type: array
        name:
          description: Name of the processor.
          type: string
        source:
          description: Source attribute used to perform the lookup.
          example: service_id
          type: string
        target:
          description: >-
            Name of the attribute that contains the corresponding value in the
            mapping list

            or the `default_lookup` if not found in the mapping list.
          example: service
          type: string
        type:
          $ref: '#/components/schemas/LogsLookupProcessorType'
      required:
        - source
        - target
        - lookup_table
        - type
      type: object
    ReferenceTableLogsLookupProcessor:
      description: >-
        **Note**: Reference Tables are in public beta.

        Use the Lookup Processor to define a mapping between a log attribute

        and a human readable value saved in a Reference Table.

        For example, you can use the Lookup Processor to map an internal service
        ID

        into a human readable service name. Alternatively, you could also use it
        to check

        if the MAC address that just attempted to connect to the production

        environment belongs to your list of stolen machines.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        lookup_enrichment_table:
          description: >-
            Name of the Reference Table for the source attribute and their
            associated target attribute values.
          example: service_id_to_service_name_table
          type: string
        name:
          description: Name of the processor.
          type: string
        source:
          description: Source attribute used to perform the lookup.
          example: service_id
          type: string
        target:
          description: >-
            Name of the attribute that contains the corresponding value in the
            mapping list.
          example: service
          type: string
        type:
          $ref: '#/components/schemas/LogsLookupProcessorType'
      required:
        - source
        - target
        - lookup_enrichment_table
        - type
      type: object
    LogsTraceRemapperType:
      default: trace-id-remapper
      description: Type of logs trace remapper.
      enum:
        - trace-id-remapper
      example: trace-id-remapper
      type: string
      x-enum-varnames:
        - TRACE_ID_REMAPPER
    LogsTraceRemapper:
      description: >-
        There are two ways to improve correlation between application traces and
        logs.

          1. Follow the documentation on [how to inject a trace ID in the application logs](https://docs.datadoghq.com/tracing/connect_logs_and_traces)
          and by default log integrations take care of all the rest of the setup.

          2. Use the Trace remapper processor to define a log attribute as its associated trace ID.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - dd.trace_id
          description: Array of source attributes.
          items:
            description: Attribute to extract the trace ID from.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsTraceRemapperType'
      required:
        - type
      type: object
    LogsSpanRemapperType:
      default: span-id-remapper
      description: Type of logs span remapper.
      enum:
        - span-id-remapper
      example: span-id-remapper
      type: string
      x-enum-varnames:
        - SPAN_ID_REMAPPER
    LogsSpanRemapper:
      description: >-
        There are two ways to define correlation between application spans and
        logs:

          1. Follow the documentation on [how to inject a span ID in the application logs](https://docs.datadoghq.com/tracing/connect_logs_and_traces).
          Log integrations automatically handle all remaining setup steps by default.

          2. Use the span remapper processor to define a log attribute as its associated span ID.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - dd.span_id
          description: Array of source attributes.
          items:
            description: Attribute to extract the span ID from.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsSpanRemapperType'
      required:
        - type
      type: object
    LogsPipeline:
      description: >-
        Pipelines and processors operate on incoming logs,

        parsing and transforming them into structured attributes for easier
        querying.


        **Note**: These endpoints are only available for admin users.

        Make sure to use an application key created by an admin.
      properties:
        description:
          description: A description of the pipeline.
          type: string
        filter:
          $ref: '#/components/schemas/LogsFilter'
        id:
          description: ID of the pipeline.
          readOnly: true
          type: string
        is_enabled:
          description: Whether or not the pipeline is enabled.
          type: boolean
        is_read_only:
          description: Whether or not the pipeline can be edited.
          readOnly: true
          type: boolean
        name:
          description: Name of the pipeline.
          example: ''
          type: string
        processors:
          description: Ordered list of processors in this pipeline.
          items:
            $ref: '#/components/schemas/LogsProcessor'
          type: array
        tags:
          description: A list of tags associated with the pipeline.
          items:
            description: A single tag using the format `key:value`.
            type: string
          type: array
        type:
          description: Type of pipeline.
          example: pipeline
          readOnly: true
          type: string
      required:
        - name
      type: object
    LogsPipelineList:
      description: Array of all log pipeline objects configured for the organization.
      items:
        $ref: '#/components/schemas/LogsPipeline'
      type: array
    MetricsListResponse:
      description: Object listing all metric names stored by Datadog since a given time.
      properties:
        from:
          description: Time when the metrics were active, seconds since the Unix epoch.
          type: string
        metrics:
          description: List of metric names.
          items:
            description: A metric name.
            type: string
          type: array
      type: object
    MetricMetadatav1:
      description: Object with all metric related metadata.
      properties:
        description:
          description: Metric description.
          type: string
        integration:
          description: Name of the integration that sent the metric if applicable.
          readOnly: true
          type: string
        per_unit:
          description: Per unit of the metric such as `second` in `bytes per second`.
          example: second
          type: string
        short_name:
          description: A more human-readable and abbreviated version of the metric name.
          type: string
        statsd_interval:
          description: StatsD flush interval of the metric in seconds if applicable.
          format: int64
          type: integer
        type:
          description: Metric type such as `gauge` or `rate`.
          example: count
          type: string
        unit:
          description: Primary unit of the metric such as `byte` or `operation`.
          example: byte
          type: string
      type: object
    MatchingDowntime:
      description: Object describing a downtime that matches this monitor.
      properties:
        end:
          description: POSIX timestamp to end the downtime.
          example: 1412792983
          format: int64
          nullable: true
          type: integer
        id:
          description: The downtime ID.
          example: 1625
          format: int64
          readOnly: true
          type: integer
        scope:
          description: >-
            The scope(s) to which the downtime applies. Must be in `key:value`
            format. For example, `host:app2`.

            Provide multiple scopes as a comma-separated list like
            `env:dev,env:prod`.

            The resulting downtime applies to sources that matches ALL provided
            scopes (`env:dev` **AND** `env:prod`).
          example:
            - env:staging
          items:
            description: A scope. For example, `"env:staging"`.
            type: string
          type: array
        start:
          description: POSIX timestamp to start the downtime.
          example: 1412792983
          format: int64
          type: integer
      required:
        - id
      type: object
    MonitorOptionsAggregation:
      description: Type of aggregation performed in the monitor query.
      properties:
        group_by:
          description: Group to break down the monitor on.
          example: host
          type: string
        metric:
          description: Metric name used in the monitor.
          example: metrics.name
          type: string
        type:
          description: Metric type used in the monitor.
          example: count
          type: string
      readOnly: true
      type: object
    MonitorDeviceID:
      description: >-
        ID of the device the Synthetics monitor is running on. Same as
        `SyntheticsDeviceID`.
      enum:
        - laptop_large
        - tablet
        - mobile_small
        - chrome.laptop_large
        - chrome.tablet
        - chrome.mobile_small
        - firefox.laptop_large
        - firefox.tablet
        - firefox.mobile_small
      type: string
      x-enum-varnames:
        - LAPTOP_LARGE
        - TABLET
        - MOBILE_SMALL
        - CHROME_LAPTOP_LARGE
        - CHROME_TABLET
        - CHROME_MOBILE_SMALL
        - FIREFOX_LAPTOP_LARGE
        - FIREFOX_TABLET
        - FIREFOX_MOBILE_SMALL
    MonitorOptionsNotificationPresets:
      default: show_all
      description: >-
        Toggles the display of additional content sent in the monitor
        notification.
      enum:
        - show_all
        - hide_query
        - hide_handles
        - hide_all
      type: string
      x-enum-varnames:
        - SHOW_ALL
        - HIDE_QUERY
        - HIDE_HANDLES
        - HIDE_ALL
    OnMissingDataOption:
      description: >-
        Controls how groups or monitors are treated if an evaluation does not
        return any data points.

        The default option results in different behavior depending on the
        monitor query type.

        For monitors using Count queries, an empty monitor evaluation is treated
        as 0 and is compared to the threshold conditions.

        For monitors using any query type other than Count, for example Gauge,
        Measure, or Rate, the monitor shows the last known status.

        This option is only available for APM Trace Analytics, Audit Trail, CI,
        Error Tracking, Event, Logs, and RUM monitors.
      enum:
        - default
        - show_no_data
        - show_and_notify_no_data
        - resolve
      type: string
      x-enum-varnames:
        - DEFAULT
        - SHOW_NO_DATA
        - SHOW_AND_NOTIFY_NO_DATA
        - RESOLVE
    MonitorRenotifyStatusType:
      description: The different statuses for which renotification is supported.
      enum:
        - alert
        - warn
        - no data
      type: string
      x-enum-varnames:
        - ALERT
        - WARN
        - NO_DATA
    MonitorOptionsCustomScheduleRecurrence:
      description: >-
        Configuration for a recurrence set on the monitor options for custom
        schedule.
      properties:
        rrule:
          description: Defines the recurrence rule (RRULE) for a given schedule.
          example: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
          type: string
        start:
          description: Defines the start date and time of the recurring schedule.
          example: '2023-08-31T16:30:00'
          type: string
        timezone:
          description: Defines the timezone the schedule runs on.
          example: Europe/Paris
          type: string
      type: object
    MonitorOptionsCustomSchedule:
      description: >-
        Configuration options for the custom schedule. **This feature is in
        private beta.**
      properties:
        recurrences:
          description: Array of custom schedule recurrences.
          items:
            $ref: '#/components/schemas/MonitorOptionsCustomScheduleRecurrence'
          type: array
      type: object
    MonitorOptionsSchedulingOptionsEvaluationWindow:
      description: >-
        Configuration options for the evaluation window. If `hour_starts` is
        set, no other fields may be set. Otherwise, `day_starts` and
        `month_starts` must be set together.
      properties:
        day_starts:
          description: >-
            The time of the day at which a one day cumulative evaluation window
            starts.
          example: '04:00'
          type: string
        hour_starts:
          description: >-
            The minute of the hour at which a one hour cumulative evaluation
            window starts.
          example: 0
          format: int32
          maximum: 59
          minimum: 0
          type: integer
        month_starts:
          description: >-
            The day of the month at which a one month cumulative evaluation
            window starts.
          example: 1
          format: int32
          maximum: 1
          minimum: 1
          type: integer
        timezone:
          description: >-
            The timezone of the time of the day of the cumulative evaluation
            window start.
          example: Europe/Paris
          type: string
      type: object
    MonitorOptionsSchedulingOptions:
      description: Configuration options for scheduling.
      properties:
        custom_schedule:
          $ref: '#/components/schemas/MonitorOptionsCustomSchedule'
        evaluation_window:
          $ref: '#/components/schemas/MonitorOptionsSchedulingOptionsEvaluationWindow'
      type: object
    MonitorThresholdWindowOptions:
      description: Alerting time window options.
      properties:
        recovery_window:
          description: >-
            Describes how long an anomalous metric must be normal before the
            alert recovers.
          nullable: true
          type: string
        trigger_window:
          description: >-
            Describes how long a metric must be anomalous before an alert
            triggers.
          nullable: true
          type: string
      type: object
    MonitorThresholds:
      description: List of the different monitor threshold available.
      properties:
        critical:
          description: The monitor `CRITICAL` threshold.
          format: double
          type: number
        critical_recovery:
          description: The monitor `CRITICAL` recovery threshold.
          format: double
          nullable: true
          type: number
        ok:
          description: The monitor `OK` threshold.
          format: double
          nullable: true
          type: number
        unknown:
          description: The monitor UNKNOWN threshold.
          format: double
          nullable: true
          type: number
        warning:
          description: The monitor `WARNING` threshold.
          format: double
          nullable: true
          type: number
        warning_recovery:
          description: The monitor `WARNING` recovery threshold.
          format: double
          nullable: true
          type: number
      type: object
    MonitorFormulaAndFunctionEventAggregation:
      description: Aggregation methods for event platform queries.
      enum:
        - count
        - cardinality
        - median
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
      example: avg
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - MEDIAN
        - PC75
        - PC90
        - PC95
        - PC98
        - PC99
        - SUM
        - MIN
        - MAX
        - AVG
    MonitorFormulaAndFunctionEventQueryDefinitionCompute:
      description: Compute options.
      properties:
        aggregation:
          $ref: '#/components/schemas/MonitorFormulaAndFunctionEventAggregation'
        interval:
          description: A time interval in milliseconds.
          example: 60000
          format: int64
          type: integer
        metric:
          description: Measurable attribute to compute.
          example: '@duration'
          type: string
      required:
        - aggregation
      type: object
    MonitorFormulaAndFunctionEventsDataSource:
      description: Data source for event platform-based queries.
      enum:
        - rum
        - ci_pipelines
        - ci_tests
        - audit
        - events
        - logs
        - spans
        - database_queries
        - network
      example: rum
      type: string
      x-enum-varnames:
        - RUM
        - CI_PIPELINES
        - CI_TESTS
        - AUDIT
        - EVENTS
        - LOGS
        - SPANS
        - DATABASE_QUERIES
        - NETWORK
    MonitorFormulaAndFunctionEventQueryGroupBySort:
      description: Options for sorting group by results.
      properties:
        aggregation:
          $ref: '#/components/schemas/MonitorFormulaAndFunctionEventAggregation'
        metric:
          description: Metric used for sorting group by results.
          type: string
        order:
          $ref: '#/components/schemas/QuerySortOrder'
      required:
        - aggregation
      type: object
    MonitorFormulaAndFunctionEventQueryGroupBy:
      description: List of objects used to group by.
      properties:
        facet:
          description: Event facet.
          example: status
          type: string
        limit:
          description: Number of groups to return.
          example: 10
          format: int64
          type: integer
        sort:
          $ref: '#/components/schemas/MonitorFormulaAndFunctionEventQueryGroupBySort'
      required:
        - facet
      type: object
    MonitorFormulaAndFunctionEventQueryDefinitionSearch:
      description: Search options.
      properties:
        query:
          description: Events search string.
          example: service:query
          type: string
      required:
        - query
      type: object
    MonitorFormulaAndFunctionEventQueryDefinition:
      description: A formula and functions events query.
      properties:
        compute:
          $ref: >-
            #/components/schemas/MonitorFormulaAndFunctionEventQueryDefinitionCompute
        data_source:
          $ref: '#/components/schemas/MonitorFormulaAndFunctionEventsDataSource'
        group_by:
          description: Group by options.
          items:
            $ref: '#/components/schemas/MonitorFormulaAndFunctionEventQueryGroupBy'
          type: array
        indexes:
          description: >-
            An array of index names to query in the stream. Omit or use `[]` to
            query all indexes at once.
          example:
            - days-3
            - days-7
          items:
            description: >-
              A log index set up for your organization. For additional indexes,
              see the [multiple
              indexes](https://docs.datadoghq.com/logs/indexes/#multiple-indexes)
              documentation.
            type: string
          type: array
        name:
          description: Name of the query for use in formulas.
          example: query_errors
          type: string
        search:
          $ref: >-
            #/components/schemas/MonitorFormulaAndFunctionEventQueryDefinitionSearch
      required:
        - data_source
        - compute
        - name
      type: object
    MonitorFormulaAndFunctionCostAggregator:
      description: Aggregation methods for metric queries.
      enum:
        - avg
        - sum
        - max
        - min
        - last
        - area
        - l2norm
        - percentile
        - stddev
      example: avg
      type: string
      x-enum-varnames:
        - AVG
        - SUM
        - MAX
        - MIN
        - LAST
        - AREA
        - L2NORM
        - PERCENTILE
        - STDDEV
    MonitorFormulaAndFunctionCostDataSource:
      description: Data source for cost queries.
      enum:
        - metrics
        - cloud_cost
        - datadog_usage
      example: cloud_cost
      type: string
      x-enum-varnames:
        - METRICS
        - CLOUD_COST
        - DATADOG_USAGE
    MonitorFormulaAndFunctionCostQueryDefinition:
      description: A formula and functions cost query.
      properties:
        aggregator:
          $ref: '#/components/schemas/MonitorFormulaAndFunctionCostAggregator'
        data_source:
          $ref: '#/components/schemas/MonitorFormulaAndFunctionCostDataSource'
        name:
          description: Name of the query for use in formulas.
          example: query1
          type: string
        query:
          description: The monitor query.
          example: sum:all.cost{*}.rollup(sum, 86400)
          type: string
      required:
        - name
        - data_source
        - query
      type: object
    MonitorFormulaAndFunctionQueryDefinition:
      description: A formula and function query.
      oneOf:
        - $ref: '#/components/schemas/MonitorFormulaAndFunctionEventQueryDefinition'
        - $ref: '#/components/schemas/MonitorFormulaAndFunctionCostQueryDefinition'
    MonitorOptions:
      description: List of options associated with your monitor.
      properties:
        aggregation:
          $ref: '#/components/schemas/MonitorOptionsAggregation'
        device_ids:
          deprecated: true
          description: IDs of the device the Synthetics monitor is running on.
          items:
            $ref: '#/components/schemas/MonitorDeviceID'
          readOnly: true
          type: array
        enable_logs_sample:
          description: Whether or not to send a log sample when the log monitor triggers.
          type: boolean
        enable_samples:
          description: >-
            Whether or not to send a list of samples when the monitor triggers.
            This is only used by CI Test and Pipeline monitors.
          type: boolean
        escalation_message:
          description: >-
            We recommend using the
            [is_renotify](https://docs.datadoghq.com/monitors/notify/?tab=is_alert#renotify),

            block in the original message instead.

            A message to include with a re-notification. Supports the
            `@username` notification we allow elsewhere.

            Not applicable if `renotify_interval` is `None`.
          type: string
        evaluation_delay:
          description: >-
            Time (in seconds) to delay evaluation, as a non-negative integer.
            For example, if the value is set to `300` (5min),

            the timeframe is set to `last_5m` and the time is 7:00, the monitor
            evaluates data from 6:50 to 6:55.

            This is useful for AWS CloudWatch and other backfilled metrics to
            ensure the monitor always has data during evaluation.
          format: int64
          nullable: true
          type: integer
        group_retention_duration:
          description: >-
            The time span after which groups with missing data are dropped from
            the monitor state.

            The minimum value is one hour, and the maximum value is 72 hours.

            Example values are: "60m", "1h", and "2d".

            This option is only available for APM Trace Analytics, Audit Trail,
            CI, Error Tracking, Event, Logs, and RUM monitors.
          type: string
        groupby_simple_monitor:
          deprecated: true
          description: >-
            Whether the log alert monitor triggers a single alert or multiple
            alerts when any group breaches a threshold. Use `notify_by` instead.
          type: boolean
        include_tags:
          default: true
          description: >-
            A Boolean indicating whether notifications from this monitor
            automatically inserts its triggering tags into the title.


            **Examples**

            - If `True`, `[Triggered on {host:h1}] Monitor Title`

            - If `False`, `[Triggered] Monitor Title`
          type: boolean
        locked:
          deprecated: true
          description: >-
            Whether or not the monitor is locked (only editable by creator and
            admins). Use `restricted_roles` instead.
          type: boolean
        min_failure_duration:
          default: 0
          description: >-
            How long the test should be in failure before alerting (integer,
            number of seconds, max 7200).
          format: int64
          maximum: 7200
          minimum: 0
          nullable: true
          type: integer
        min_location_failed:
          default: 1
          description: >-
            The minimum number of locations in failure at the same time during

            at least one moment in the `min_failure_duration` period
            (`min_location_failed` and `min_failure_duration`

            are part of the advanced alerting rules - integer, >= 1).
          format: int64
          nullable: true
          type: integer
        new_group_delay:
          description: >-
            Time (in seconds) to skip evaluations for new groups.


            For example, this option can be used to skip evaluations for new
            hosts while they initialize.


            Must be a non negative integer.
          format: int64
          nullable: true
          type: integer
        new_host_delay:
          default: 300
          deprecated: true
          description: |-
            Time (in seconds) to allow a host to boot and applications
            to fully start before starting the evaluation of monitor results.
            Should be a non negative integer.

            Use new_group_delay instead.
          format: int64
          nullable: true
          type: integer
        no_data_timeframe:
          description: >-
            The number of minutes before a monitor notifies after data stops
            reporting.

            Datadog recommends at least 2x the monitor timeframe for query
            alerts or 2 minutes for service checks.

            If omitted, 2x the evaluation timeframe is used for query alerts,
            and 24 hours is used for service checks.
          format: int64
          nullable: true
          type: integer
        notification_preset_name:
          $ref: '#/components/schemas/MonitorOptionsNotificationPresets'
        notify_audit:
          default: false
          description: >-
            A Boolean indicating whether tagged users is notified on changes to
            this monitor.
          type: boolean
        notify_by:
          description: >-
            Controls what granularity a monitor alerts on. Only available for
            monitors with groupings.

            For instance, a monitor grouped by `cluster`, `namespace`, and `pod`
            can be configured to only notify on each

            new `cluster` violating the alert conditions by setting `notify_by`
            to `["cluster"]`. Tags mentioned

            in `notify_by` must be a subset of the grouping tags in the query.

            For example, a query grouped by `cluster` and `namespace` cannot
            notify on `region`.

            Setting `notify_by` to `[*]` configures the monitor to notify as a
            simple-alert.
          items:
            description: A grouping tag.
            type: string
          type: array
        notify_no_data:
          description: >-
            A Boolean indicating whether this monitor notifies when data stops
            reporting. Defaults to `false`.
          type: boolean
        on_missing_data:
          $ref: '#/components/schemas/OnMissingDataOption'
        renotify_interval:
          default: null
          description: >-
            The number of minutes after the last notification before a monitor
            re-notifies on the current status.

            It only re-notifies if it’s not resolved.
          format: int64
          nullable: true
          type: integer
        renotify_occurrences:
          description: >-
            The number of times re-notification messages should be sent on the
            current status at the provided re-notification interval.
          format: int64
          nullable: true
          type: integer
        renotify_statuses:
          description: >-
            The types of monitor statuses for which re-notification messages are
            sent.

            Default: **null** if `renotify_interval` is **null**.

            If `renotify_interval` is set, defaults to renotify on `Alert` and
            `No Data`.
          items:
            $ref: '#/components/schemas/MonitorRenotifyStatusType'
          nullable: true
          type: array
        require_full_window:
          description: >-
            A Boolean indicating whether this monitor needs a full window of
            data before it’s evaluated.

            We highly recommend you set this to `false` for sparse metrics,

            otherwise some evaluations are skipped. Default is false. This
            setting only applies to

            metric monitors.
          type: boolean
        scheduling_options:
          $ref: '#/components/schemas/MonitorOptionsSchedulingOptions'
        silenced:
          additionalProperties:
            description: >-
              UTC epoch timestamp in seconds when the downtime for the group
              expires.
            format: int64
            nullable: true
            type: integer
          deprecated: true
          description: >-
            Information about the downtime applied to the monitor. Only shows v1
            downtimes.
          type: object
        synthetics_check_id:
          deprecated: true
          description: ID of the corresponding Synthetic check.
          nullable: true
          type: string
        threshold_windows:
          $ref: '#/components/schemas/MonitorThresholdWindowOptions'
        thresholds:
          $ref: '#/components/schemas/MonitorThresholds'
        timeout_h:
          default: null
          description: >-
            The number of hours of the monitor not reporting data before it
            automatically resolves from a triggered state. The minimum allowed
            value is 0 hours. The maximum allowed value is 24 hours.
          format: int64
          nullable: true
          type: integer
        variables:
          description: >-
            List of requests that can be used in the monitor query. **This
            feature is currently in beta.**
          items:
            $ref: '#/components/schemas/MonitorFormulaAndFunctionQueryDefinition'
          type: array
      type: object
    MonitorOverallStates:
      description: The different states your monitor can be in.
      enum:
        - Alert
        - Ignored
        - No Data
        - OK
        - Skipped
        - Unknown
        - Warn
      readOnly: true
      type: string
      x-enum-varnames:
        - ALERT
        - IGNORED
        - NO_DATA
        - OK
        - SKIPPED
        - UNKNOWN
        - WARN
    MonitorStateGroup:
      description: Monitor state for a single group.
      properties:
        last_nodata_ts:
          description: Latest timestamp the monitor was in NO_DATA state.
          format: int64
          type: integer
        last_notified_ts:
          description: Latest timestamp of the notification sent for this monitor group.
          format: int64
          type: integer
        last_resolved_ts:
          description: Latest timestamp the monitor group was resolved.
          format: int64
          type: integer
        last_triggered_ts:
          description: Latest timestamp the monitor group triggered.
          format: int64
          type: integer
        name:
          description: The name of the monitor.
          type: string
        status:
          $ref: '#/components/schemas/MonitorOverallStates'
      type: object
    MonitorState:
      description: Wrapper object with the different monitor states.
      properties:
        groups:
          additionalProperties:
            $ref: '#/components/schemas/MonitorStateGroup'
          description: >-
            Dictionary where the keys are groups (comma separated lists of tags)
            and the values are

            the list of groups your monitor is broken down on.
          type: object
      readOnly: true
      type: object
    MonitorTypev1:
      description: >-
        The type of the monitor. For more information about `type`, see the
        [monitor
        options](https://docs.datadoghq.com/monitors/guide/monitor_api_options/)
        docs.
      enum:
        - composite
        - event alert
        - log alert
        - metric alert
        - process alert
        - query alert
        - rum alert
        - service check
        - synthetics alert
        - trace-analytics alert
        - slo alert
        - event-v2 alert
        - audit alert
        - ci-pipelines alert
        - ci-tests alert
        - error-tracking alert
        - database-monitoring alert
        - network-performance alert
        - cost alert
      example: query alert
      type: string
      x-enum-varnames:
        - COMPOSITE
        - EVENT_ALERT
        - LOG_ALERT
        - METRIC_ALERT
        - PROCESS_ALERT
        - QUERY_ALERT
        - RUM_ALERT
        - SERVICE_CHECK
        - SYNTHETICS_ALERT
        - TRACE_ANALYTICS_ALERT
        - SLO_ALERT
        - EVENT_V2_ALERT
        - AUDIT_ALERT
        - CI_PIPELINES_ALERT
        - CI_TESTS_ALERT
        - ERROR_TRACKING_ALERT
        - DATABASE_MONITORING_ALERT
        - NETWORK_PERFORMANCE_ALERT
        - COST_ALERT
    Monitor:
      description: Object describing a monitor.
      properties:
        created:
          description: Timestamp of the monitor creation.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/Creatorv1'
        deleted:
          description: Whether or not the monitor is deleted. (Always `null`)
          format: date-time
          nullable: true
          readOnly: true
          type: string
        id:
          description: ID of this monitor.
          format: int64
          readOnly: true
          type: integer
        matching_downtimes:
          description: A list of active v1 downtimes that match this monitor.
          items:
            $ref: '#/components/schemas/MatchingDowntime'
          type: array
        message:
          description: A message to include with notifications for this monitor.
          type: string
        modified:
          description: Last timestamp when the monitor was edited.
          format: date-time
          readOnly: true
          type: string
        multi:
          description: Whether or not the monitor is broken down on different groups.
          readOnly: true
          type: boolean
        name:
          description: The monitor name.
          example: My monitor
          type: string
        options:
          $ref: '#/components/schemas/MonitorOptions'
        overall_state:
          $ref: '#/components/schemas/MonitorOverallStates'
        priority:
          description: Integer from 1 (high) to 5 (low) indicating alert severity.
          format: int64
          nullable: true
          type: integer
        query:
          description: The monitor query.
          example: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
          type: string
        restricted_roles:
          description: >-
            A list of unique role identifiers to define which roles are allowed
            to edit the monitor. The unique identifiers for all roles can be
            pulled from the [Roles
            API](https://docs.datadoghq.com/api/latest/roles/#list-roles) and
            are located in the `data.id` field. Editing a monitor includes any
            updates to the monitor configuration, monitor deletion, and muting
            of the monitor for any amount of time. You can use the [Restriction
            Policies
            API](https://docs.datadoghq.com/api/latest/restriction-policies/) to
            manage write authorization for individual monitors by teams and
            users, in addition to roles.
          items:
            description: A role UUID.
            type: string
          nullable: true
          type: array
        state:
          $ref: '#/components/schemas/MonitorState'
        tags:
          description: Tags associated to your monitor.
          items:
            description: A Datadog tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/MonitorTypev1'
      required:
        - type
        - query
      type: object
    CheckCanDeleteMonitorResponseData:
      description: Wrapper object with the list of monitor IDs.
      example: {}
      properties:
        ok:
          description: An array of Monitor IDs that can be safely deleted.
          items:
            description: ID of a monitor that can be safely deleted.
            format: int64
            type: integer
          type: array
      type: object
    CheckCanDeleteMonitorResponse:
      description: Response of monitor IDs that can or can't be safely deleted.
      properties:
        data:
          $ref: '#/components/schemas/CheckCanDeleteMonitorResponseData'
        errors:
          additionalProperties:
            description: Strings denoting where a monitor is used.
            items:
              description: Asset where a monitor is used.
              type: string
            type: array
          description: A mapping of Monitor ID to strings denoting where it's used.
          nullable: true
          type: object
      required:
        - data
      type: object
    MonitorSearchCountItem:
      description: A facet item.
      properties:
        count:
          description: The number of found monitors with the listed value.
          format: int64
          readOnly: true
          type: integer
        name:
          description: The facet value.
          readOnly: true
      type: object
    MonitorSearchCount:
      description: Search facets.
      items:
        $ref: '#/components/schemas/MonitorSearchCountItem'
      type: array
    MonitorGroupSearchResponseCounts:
      description: The counts of monitor groups per different criteria.
      properties:
        status:
          $ref: '#/components/schemas/MonitorSearchCount'
        type:
          $ref: '#/components/schemas/MonitorSearchCount'
      readOnly: true
      type: object
    MonitorGroupSearchResult:
      description: A single monitor group search result.
      properties:
        group:
          description: The name of the group.
          readOnly: true
          type: string
        group_tags:
          description: The list of tags of the monitor group.
          items:
            description: One monitor group tag.
            readOnly: true
            type: string
          readOnly: true
          type: array
        last_nodata_ts:
          description: Latest timestamp the monitor group was in NO_DATA state.
          format: int64
          readOnly: true
          type: integer
        last_triggered_ts:
          description: Latest timestamp the monitor group triggered.
          format: int64
          nullable: true
          readOnly: true
          type: integer
        monitor_id:
          description: The ID of the monitor.
          format: int64
          readOnly: true
          type: integer
        monitor_name:
          description: The name of the monitor.
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/MonitorOverallStates'
      type: object
    MonitorSearchResponseMetadata:
      description: Metadata about the response.
      properties:
        page:
          description: The page to start paginating from.
          format: int64
          readOnly: true
          type: integer
        page_count:
          description: The number of pages.
          format: int64
          readOnly: true
          type: integer
        per_page:
          description: The number of monitors to return per page.
          format: int64
          readOnly: true
          type: integer
        total_count:
          description: The total number of monitors.
          format: int64
          readOnly: true
          type: integer
      type: object
    MonitorGroupSearchResponse:
      description: The response of a monitor group search.
      example:
        counts:
          status:
            - count: 2
              name: OK
          type:
            - count: 2
              name: metric
        groups:
          - group: '*'
            group_tags:
              - '*'
            last_nodata_ts: 0
            last_triggered_ts: 1525702966
            monitor_id: 2738266
            monitor_name: '[demo] Cassandra disk usage is high on {{host.name}}'
            status: OK
          - group: '*'
            group_tags:
              - '*'
            last_nodata_ts: 0
            last_triggered_ts: 1525703008
            monitor_id: 1576648
            monitor_name: '[demo] Disk usage is high on {{host.name}}'
            status: OK
        metadata:
          page: 0
          page_count: 2
          per_page: 30
          total_count: 2
      properties:
        counts:
          $ref: '#/components/schemas/MonitorGroupSearchResponseCounts'
        groups:
          description: The list of found monitor groups.
          items:
            $ref: '#/components/schemas/MonitorGroupSearchResult'
          readOnly: true
          type: array
        metadata:
          $ref: '#/components/schemas/MonitorSearchResponseMetadata'
      type: object
    MonitorSearchResponseCounts:
      description: The counts of monitors per different criteria.
      properties:
        muted:
          $ref: '#/components/schemas/MonitorSearchCount'
        status:
          $ref: '#/components/schemas/MonitorSearchCount'
        tag:
          $ref: '#/components/schemas/MonitorSearchCount'
        type:
          $ref: '#/components/schemas/MonitorSearchCount'
      readOnly: true
      type: object
    MonitorSearchResultNotification:
      description: A notification triggered by the monitor.
      properties:
        handle:
          description: The email address that received the notification.
          readOnly: true
          type: string
        name:
          description: The username receiving the notification
          readOnly: true
          type: string
      readOnly: true
      type: object
    MonitorSearchResult:
      description: Holds search results.
      properties:
        classification:
          description: Classification of the monitor.
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/Creatorv1'
        id:
          description: ID of the monitor.
          format: int64
          readOnly: true
          type: integer
        last_triggered_ts:
          description: Latest timestamp the monitor triggered.
          format: int64
          nullable: true
          readOnly: true
          type: integer
        metrics:
          description: Metrics used by the monitor.
          items:
            description: A metric used by the monitor.
            readOnly: true
            type: string
          readOnly: true
          type: array
        name:
          description: The monitor name.
          readOnly: true
          type: string
        notifications:
          description: The notification triggered by the monitor.
          items:
            $ref: '#/components/schemas/MonitorSearchResultNotification'
          readOnly: true
          type: array
        org_id:
          description: The ID of the organization.
          format: int64
          readOnly: true
          type: integer
        quality_issues:
          description: Quality issues detected with the monitor.
          items:
            description: A quality issue detected with the monitor.
            readOnly: true
            type: string
          readOnly: true
          type: array
        query:
          description: The monitor query.
          example: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
          type: string
        scopes:
          description: >-
            The scope(s) to which the downtime applies, for example `host:app2`.

            Provide multiple scopes as a comma-separated list, for example
            `env:dev,env:prod`.

            The resulting downtime applies to sources that matches ALL provided
            scopes

            (that is `env:dev AND env:prod`), NOT any of them.
          example:
            - host:app2
            - env:dev,env:prod
          items:
            description: Scope value(s).
            readOnly: true
            type: string
          type: array
        status:
          $ref: '#/components/schemas/MonitorOverallStates'
        tags:
          description: Tags associated with the monitor.
          items:
            description: A tag associated with the monitor.
            readOnly: true
            type: string
          readOnly: true
          type: array
        type:
          $ref: '#/components/schemas/MonitorTypev1'
      type: object
    MonitorSearchResponse:
      description: The response form a monitor search.
      example:
        counts:
          muted:
            - count: 3
              name: false
            - count: 3
              name: true
          status:
            - count: 4
              name: No Data
            - count: 2
              name: OK
          tag:
            - count: 6
              name: service:cassandra
          type:
            - count: 6
              name: metric
        metadata:
          page: 0
          page_count: 6
          per_page: 30
          total_count: 6
        monitors:
          - classification: metric
            creator:
              handle: john@datadoghq.com
              name: John Doe
            id: 2699850
            last_triggered_ts: null
            metrics:
              - system.cpu.user
            name: >-
              Cassandra CPU is high on {{host.name}} in
              {{availability-zone.name}}
            notifications:
              - handle: jane@datadoghq.com
                name: Jane Doe
            org_id: 1234
            quality_issues:
              - broken_at_handle
              - noisy_monitor
            scopes:
              - '!availability-zone:us-east-1c'
              - name:cassandra
            status: No Data
            tags:
              - service:cassandra
            type: query alert
      properties:
        counts:
          $ref: '#/components/schemas/MonitorSearchResponseCounts'
        metadata:
          $ref: '#/components/schemas/MonitorSearchResponseMetadata'
        monitors:
          description: The list of found monitors.
          items:
            $ref: '#/components/schemas/MonitorSearchResult'
          readOnly: true
          type: array
      type: object
    MonitorUpdateRequest:
      description: Object describing a monitor update request.
      properties:
        created:
          description: Timestamp of the monitor creation.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/Creatorv1'
        deleted:
          description: Whether or not the monitor is deleted. (Always `null`)
          format: date-time
          nullable: true
          readOnly: true
          type: string
        id:
          description: ID of this monitor.
          format: int64
          readOnly: true
          type: integer
        message:
          description: A message to include with notifications for this monitor.
          type: string
        modified:
          description: Last timestamp when the monitor was edited.
          format: date-time
          readOnly: true
          type: string
        multi:
          description: Whether or not the monitor is broken down on different groups.
          readOnly: true
          type: boolean
        name:
          description: The monitor name.
          type: string
        options:
          $ref: '#/components/schemas/MonitorOptions'
        overall_state:
          $ref: '#/components/schemas/MonitorOverallStates'
        priority:
          description: Integer from 1 (high) to 5 (low) indicating alert severity.
          format: int64
          nullable: true
          type: integer
        query:
          description: The monitor query.
          type: string
        restricted_roles:
          description: >-
            A list of unique role identifiers to define which roles are allowed
            to edit the monitor. The unique identifiers for all roles can be
            pulled from the [Roles
            API](https://docs.datadoghq.com/api/latest/roles/#list-roles) and
            are located in the `data.id` field. Editing a monitor includes any
            updates to the monitor configuration, monitor deletion, and muting
            of the monitor for any amount of time. You can use the [Restriction
            Policies
            API](https://docs.datadoghq.com/api/latest/restriction-policies/) to
            manage write authorization for individual monitors by teams and
            users, in addition to roles.
          items:
            description: A role UUID.
            type: string
          nullable: true
          type: array
        state:
          $ref: '#/components/schemas/MonitorState'
        tags:
          description: Tags associated to your monitor.
          items:
            description: A Datadog tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/MonitorTypev1'
      type: object
    DeletedMonitor:
      description: Response from the delete monitor call.
      properties:
        deleted_monitor_id:
          description: ID of the deleted monitor.
          example: 666486743
          format: int64
          type: integer
      readOnly: true
      type: object
    NotebookAuthor:
      description: Attributes of user object returned by the API.
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        name:
          description: Name of the user.
          nullable: true
          type: string
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          nullable: true
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    NotebookMarkdownCellDefinitionType:
      default: markdown
      description: Type of the markdown cell.
      enum:
        - markdown
      example: markdown
      type: string
      x-enum-varnames:
        - MARKDOWN
    NotebookMarkdownCellDefinition:
      description: >-
        Text in a notebook is formatted with
        [Markdown](https://daringfireball.net/projects/markdown/), which enables
        the use of headings, subheadings, links, images, lists, and code blocks.
      properties:
        text:
          description: The markdown content.
          example: |-
            # Example Header 
            example content
          type: string
        type:
          $ref: '#/components/schemas/NotebookMarkdownCellDefinitionType'
      required:
        - type
        - text
      type: object
    NotebookMarkdownCellAttributes:
      description: The attributes of a notebook `markdown` cell.
      properties:
        definition:
          $ref: '#/components/schemas/NotebookMarkdownCellDefinition'
      required:
        - definition
      type: object
    NotebookGraphSize:
      description: The size of the graph.
      enum:
        - xs
        - s
        - m
        - l
        - xl
      example: m
      type: string
      x-enum-varnames:
        - EXTRA_SMALL
        - SMALL
        - MEDIUM
        - LARGE
        - EXTRA_LARGE
    NotebookSplitBy:
      description: >-
        Object describing how to split the graph to display multiple
        visualizations per request.
      example:
        keys: []
        tags: []
      properties:
        keys:
          description: Keys to split on.
          example:
            - environment
          items:
            description: A key to split on.
            example: environment
            type: string
          type: array
        tags:
          description: Tags to split on.
          example:
            - environment:staging
          items:
            description: A tag to split on.
            example: environment:staging
            type: string
          type: array
      required:
        - keys
        - tags
      type: object
    NotebookRelativeTime:
      description: Relative timeframe.
      example:
        live_span: 1h
      nullable: true
      properties:
        live_span:
          $ref: '#/components/schemas/WidgetLiveSpanv1'
      required:
        - live_span
      type: object
    NotebookAbsoluteTime:
      description: Absolute timeframe.
      example:
        end: '2021-02-24T20:18:28+00:00'
        start: '2021-02-24T19:18:28+00:00'
      properties:
        end:
          description: The end time.
          example: '2021-02-24T20:18:28+00:00'
          format: date-time
          type: string
        live:
          description: >-
            Indicates whether the timeframe should be shifted to end at the
            current time.
          type: boolean
        start:
          description: The start time.
          example: '2021-02-24T19:18:28+00:00'
          format: date-time
          type: string
      required:
        - start
        - end
      type: object
    NotebookCellTime:
      description: >-
        Timeframe for the notebook cell. When 'null', the notebook global time
        is used.
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/NotebookRelativeTime'
        - $ref: '#/components/schemas/NotebookAbsoluteTime'
      type: object
    NotebookTimeseriesCellAttributes:
      description: The attributes of a notebook `timeseries` cell.
      properties:
        definition:
          $ref: '#/components/schemas/TimeseriesWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        split_by:
          $ref: '#/components/schemas/NotebookSplitBy'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookToplistCellAttributes:
      description: The attributes of a notebook `toplist` cell.
      properties:
        definition:
          $ref: '#/components/schemas/ToplistWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        split_by:
          $ref: '#/components/schemas/NotebookSplitBy'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookHeatMapCellAttributes:
      description: The attributes of a notebook `heatmap` cell.
      properties:
        definition:
          $ref: '#/components/schemas/HeatMapWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        split_by:
          $ref: '#/components/schemas/NotebookSplitBy'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookDistributionCellAttributes:
      description: The attributes of a notebook `distribution` cell.
      properties:
        definition:
          $ref: '#/components/schemas/DistributionWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        split_by:
          $ref: '#/components/schemas/NotebookSplitBy'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookLogStreamCellAttributes:
      description: The attributes of a notebook `log_stream` cell.
      properties:
        definition:
          $ref: '#/components/schemas/LogStreamWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookCellResponseAttributes:
      description: >-
        The attributes of a notebook cell response. Valid cell types are
        `markdown`, `timeseries`, `toplist`, `heatmap`, `distribution`,

        `log_stream`. [More information on each graph visualization
        type.](https://docs.datadoghq.com/dashboards/widgets/)
      example:
        definition:
          requests:
            - display_type: line
              q: avg:system.load.1{*}
              style:
                line_type: solid
                line_width: normal
                palette: dog_classic
          show_legend: true
          type: timeseries
          yaxis:
            scale: linear
        graph_size: m
        split_by:
          keys: []
          tags: []
        time: null
      oneOf:
        - $ref: '#/components/schemas/NotebookMarkdownCellAttributes'
        - $ref: '#/components/schemas/NotebookTimeseriesCellAttributes'
        - $ref: '#/components/schemas/NotebookToplistCellAttributes'
        - $ref: '#/components/schemas/NotebookHeatMapCellAttributes'
        - $ref: '#/components/schemas/NotebookDistributionCellAttributes'
        - $ref: '#/components/schemas/NotebookLogStreamCellAttributes'
    NotebookCellResourceType:
      default: notebook_cells
      description: Type of the Notebook Cell resource.
      enum:
        - notebook_cells
      example: notebook_cells
      type: string
      x-enum-varnames:
        - NOTEBOOK_CELLS
    NotebookCellResponse:
      description: The description of a notebook cell response.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookCellResponseAttributes'
        id:
          description: Notebook cell ID.
          example: abcd1234
          type: string
        type:
          $ref: '#/components/schemas/NotebookCellResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    NotebookMetadataType:
      description: Metadata type of the notebook.
      enum:
        - postmortem
        - runbook
        - investigation
        - documentation
        - report
      example: investigation
      nullable: true
      type: string
      x-enum-varnames:
        - POSTMORTEM
        - RUNBOOK
        - INVESTIGATION
        - DOCUMENTATION
        - REPORT
    NotebookMetadata:
      description: Metadata associated with the notebook.
      properties:
        is_template:
          default: false
          description: Whether or not the notebook is a template.
          example: false
          type: boolean
        take_snapshots:
          default: false
          description: >-
            Whether or not the notebook takes snapshot image backups of the
            notebook's fixed-time graphs.
          example: false
          type: boolean
        type:
          $ref: '#/components/schemas/NotebookMetadataType'
      type: object
    NotebookStatus:
      default: published
      description: Publication status of the notebook. For now, always "published".
      enum:
        - published
      example: published
      type: string
      x-enum-varnames:
        - PUBLISHED
    NotebookGlobalTime:
      description: Notebook global timeframe.
      oneOf:
        - $ref: '#/components/schemas/NotebookRelativeTime'
        - $ref: '#/components/schemas/NotebookAbsoluteTime'
    NotebooksResponseDataAttributes:
      description: The attributes of a notebook in get all response.
      properties:
        author:
          $ref: '#/components/schemas/NotebookAuthor'
        cells:
          description: List of cells to display in the notebook.
          items:
            $ref: '#/components/schemas/NotebookCellResponse'
          type: array
        created:
          description: UTC time stamp for when the notebook was created.
          example: '2021-02-24T23:14:15.173964+00:00'
          format: date-time
          readOnly: true
          type: string
        metadata:
          $ref: '#/components/schemas/NotebookMetadata'
        modified:
          description: UTC time stamp for when the notebook was last modified.
          example: '2021-02-24T23:15:23.274966+00:00'
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the notebook.
          example: Example Notebook
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/NotebookStatus'
        time:
          $ref: '#/components/schemas/NotebookGlobalTime'
      required:
        - name
      type: object
    NotebookResourceType:
      default: notebooks
      description: Type of the Notebook resource.
      enum:
        - notebooks
      example: notebooks
      type: string
      x-enum-varnames:
        - NOTEBOOKS
    NotebooksResponseData:
      description: The data for a notebook in get all response.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebooksResponseDataAttributes'
        id:
          description: Unique notebook ID, assigned when you create the notebook.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        type:
          $ref: '#/components/schemas/NotebookResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    NotebooksResponsePage:
      description: Pagination metadata returned by the API.
      properties:
        total_count:
          description: >-
            The total number of notebooks that would be returned if the request
            was not filtered by `start` and `count` parameters.
          format: int64
          type: integer
        total_filtered_count:
          description: The total number of notebooks returned.
          format: int64
          type: integer
      type: object
    NotebooksResponseMeta:
      description: Searches metadata returned by the API.
      properties:
        page:
          $ref: '#/components/schemas/NotebooksResponsePage'
      type: object
    NotebooksResponse:
      description: Notebooks get all response.
      properties:
        data:
          description: List of notebook definitions.
          items:
            $ref: '#/components/schemas/NotebooksResponseData'
          type: array
        meta:
          $ref: '#/components/schemas/NotebooksResponseMeta'
      type: object
    NotebookCellCreateRequestAttributes:
      description: >-
        The attributes of a notebook cell in create cell request. Valid cell
        types are `markdown`, `timeseries`, `toplist`, `heatmap`,
        `distribution`,

        `log_stream`. [More information on each graph visualization
        type.](https://docs.datadoghq.com/dashboards/widgets/)
      example:
        definition:
          requests:
            - display_type: line
              q: avg:system.load.1{*}
              style:
                line_type: solid
                line_width: normal
                palette: dog_classic
          show_legend: true
          type: timeseries
          yaxis:
            scale: linear
        graph_size: m
        split_by:
          keys: []
          tags: []
        time: null
      oneOf:
        - $ref: '#/components/schemas/NotebookMarkdownCellAttributes'
        - $ref: '#/components/schemas/NotebookTimeseriesCellAttributes'
        - $ref: '#/components/schemas/NotebookToplistCellAttributes'
        - $ref: '#/components/schemas/NotebookHeatMapCellAttributes'
        - $ref: '#/components/schemas/NotebookDistributionCellAttributes'
        - $ref: '#/components/schemas/NotebookLogStreamCellAttributes'
    NotebookCellCreateRequest:
      additionalProperties: false
      description: The description of a notebook cell create request.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookCellCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/NotebookCellResourceType'
      required:
        - attributes
        - type
      type: object
    NotebookCreateDataAttributes:
      description: The data attributes of a notebook.
      properties:
        cells:
          description: List of cells to display in the notebook.
          example:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              type: notebook_cells
          items:
            $ref: '#/components/schemas/NotebookCellCreateRequest'
          type: array
        metadata:
          $ref: '#/components/schemas/NotebookMetadata'
        name:
          description: The name of the notebook.
          example: Example Notebook
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/NotebookStatus'
        time:
          $ref: '#/components/schemas/NotebookGlobalTime'
      required:
        - name
        - cells
        - time
      type: object
    NotebookCreateData:
      description: The data for a notebook create request.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookCreateDataAttributes'
        type:
          $ref: '#/components/schemas/NotebookResourceType'
      required:
        - type
        - attributes
      type: object
    NotebookCreateRequest:
      description: The description of a notebook create request.
      properties:
        data:
          $ref: '#/components/schemas/NotebookCreateData'
      required:
        - data
      type: object
    NotebookResponseDataAttributes:
      description: The attributes of a notebook.
      properties:
        author:
          $ref: '#/components/schemas/NotebookAuthor'
        cells:
          description: List of cells to display in the notebook.
          example:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              id: bzbycoya
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              id: 9k6bc6xc
              type: notebook_cells
          items:
            $ref: '#/components/schemas/NotebookCellResponse'
          type: array
        created:
          description: UTC time stamp for when the notebook was created.
          example: '2021-02-24T23:14:15.173964+00:00'
          format: date-time
          readOnly: true
          type: string
        metadata:
          $ref: '#/components/schemas/NotebookMetadata'
        modified:
          description: UTC time stamp for when the notebook was last modified.
          example: '2021-02-24T23:15:23.274966+00:00'
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the notebook.
          example: Example Notebook
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/NotebookStatus'
        time:
          $ref: '#/components/schemas/NotebookGlobalTime'
      required:
        - cells
        - time
        - name
      type: object
    NotebookResponseData:
      description: The data for a notebook.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookResponseDataAttributes'
        id:
          description: Unique notebook ID, assigned when you create the notebook.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        type:
          $ref: '#/components/schemas/NotebookResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    NotebookResponse:
      description: The description of a notebook response.
      properties:
        data:
          $ref: '#/components/schemas/NotebookResponseData'
      type: object
    NotebookCellUpdateRequestAttributes:
      description: >-
        The attributes of a notebook cell in update cell request. Valid cell
        types are `markdown`, `timeseries`, `toplist`, `heatmap`,
        `distribution`,

        `log_stream`. [More information on each graph visualization
        type.](https://docs.datadoghq.com/dashboards/widgets/)
      example:
        definition:
          requests:
            - display_type: line
              q: avg:system.load.1{*}
              style:
                line_type: solid
                line_width: normal
                palette: dog_classic
          show_legend: true
          type: timeseries
          yaxis:
            scale: linear
        graph_size: m
        split_by:
          keys: []
          tags: []
        time: null
      oneOf:
        - $ref: '#/components/schemas/NotebookMarkdownCellAttributes'
        - $ref: '#/components/schemas/NotebookTimeseriesCellAttributes'
        - $ref: '#/components/schemas/NotebookToplistCellAttributes'
        - $ref: '#/components/schemas/NotebookHeatMapCellAttributes'
        - $ref: '#/components/schemas/NotebookDistributionCellAttributes'
        - $ref: '#/components/schemas/NotebookLogStreamCellAttributes'
    NotebookCellUpdateRequest:
      description: The description of a notebook cell update request.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookCellUpdateRequestAttributes'
        id:
          description: Notebook cell ID.
          example: abcd1234
          type: string
        type:
          $ref: '#/components/schemas/NotebookCellResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    NotebookUpdateCell:
      description: >-
        Updating a notebook can either insert new cell(s) or update existing
        cell(s) by including the cell `id`.

        To delete existing cell(s), simply omit it from the list of cells.
      oneOf:
        - $ref: '#/components/schemas/NotebookCellCreateRequest'
        - $ref: '#/components/schemas/NotebookCellUpdateRequest'
    NotebookUpdateDataAttributes:
      description: The data attributes of a notebook.
      properties:
        cells:
          description: List of cells to display in the notebook.
          example:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              id: bzbycoya
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              id: 9k6bc6xc
              type: notebook_cells
          items:
            $ref: '#/components/schemas/NotebookUpdateCell'
          type: array
        metadata:
          $ref: '#/components/schemas/NotebookMetadata'
        name:
          description: The name of the notebook.
          example: Example Notebook
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/NotebookStatus'
        time:
          $ref: '#/components/schemas/NotebookGlobalTime'
      required:
        - name
        - cells
        - time
      type: object
    NotebookUpdateData:
      description: The data for a notebook update request.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookUpdateDataAttributes'
        type:
          $ref: '#/components/schemas/NotebookResourceType'
      required:
        - type
        - attributes
      type: object
    NotebookUpdateRequest:
      description: The description of a notebook update request.
      properties:
        data:
          $ref: '#/components/schemas/NotebookUpdateData'
      required:
        - data
      type: object
    OrganizationBilling:
      deprecated: true
      description: A JSON array of billing type.
      example:
        type: parent_billing
      properties:
        type:
          description: The type of billing. Only `parent_billing` is supported.
          type: string
      type: object
    OrganizationSettingsSaml:
      description: >-
        Set the boolean property enabled to enable or disable single sign on
        with SAML.

        See the SAML documentation for more information about all SAML settings.
      properties:
        enabled:
          description: Whether or not SAML is enabled for this organization.
          example: false
          type: boolean
      type: object
    AccessRole:
      description: >-
        The access role of the user. Options are **st** (standard user), **adm**
        (admin user), or **ro** (read-only user).
      enum:
        - st
        - adm
        - ro
        - ERROR
      example: ro
      nullable: true
      type: string
      x-enum-varnames:
        - STANDARD
        - ADMIN
        - READ_ONLY
        - ERROR
    OrganizationSettingsSamlAutocreateUsersDomains:
      description: >-
        Has two properties, `enabled` (boolean) and `domains`, which is a list
        of domains without the @ symbol.
      properties:
        domains:
          description: List of domains where the SAML automated user creation is enabled.
          items:
            description: Domain to automate user creation from.
            example: example.com
            type: string
          type: array
        enabled:
          description: >-
            Whether or not the automated user creation based on SAML domain is
            enabled.
          example: false
          type: boolean
      type: object
    OrganizationSettingsSamlIdpInitiatedLogin:
      description: Has one property enabled (boolean).
      properties:
        enabled:
          description: >-
            Whether SAML IdP initiated login is enabled, learn more

            in the [SAML
            documentation](https://docs.datadoghq.com/account_management/saml/#idp-initiated-login).
          example: false
          type: boolean
      type: object
    OrganizationSettingsSamlStrictMode:
      description: Has one property enabled (boolean).
      properties:
        enabled:
          description: >-
            Whether or not the SAML strict mode is enabled. If true, all users
            must log in with SAML.

            Learn more on the [SAML Strict
            documentation](https://docs.datadoghq.com/account_management/saml/#saml-strict).
          example: false
          type: boolean
      type: object
    OrganizationSettings:
      description: A JSON array of settings.
      properties:
        private_widget_share:
          description: >-
            Whether or not the organization users can share widgets outside of
            Datadog.
          example: false
          type: boolean
        saml:
          $ref: '#/components/schemas/OrganizationSettingsSaml'
        saml_autocreate_access_role:
          $ref: '#/components/schemas/AccessRole'
        saml_autocreate_users_domains:
          $ref: '#/components/schemas/OrganizationSettingsSamlAutocreateUsersDomains'
        saml_can_be_enabled:
          description: Whether or not SAML can be enabled for this organization.
          example: false
          type: boolean
        saml_idp_endpoint:
          description: Identity provider endpoint for SAML authentication.
          example: https://my.saml.endpoint
          type: string
        saml_idp_initiated_login:
          $ref: '#/components/schemas/OrganizationSettingsSamlIdpInitiatedLogin'
        saml_idp_metadata_uploaded:
          description: >-
            Whether or not a SAML identity provider metadata file was provided
            to the Datadog organization.
          example: false
          type: boolean
        saml_login_url:
          description: URL for SAML logging.
          example: https://my.saml.login.url
          type: string
        saml_strict_mode:
          $ref: '#/components/schemas/OrganizationSettingsSamlStrictMode'
      type: object
    OrganizationSubscription:
      deprecated: true
      description: Subscription definition.
      example:
        type: pro
      properties:
        type:
          description: >-
            The subscription type. Types available are `trial`, `free`, and
            `pro`.
          type: string
      type: object
    Organizationv1:
      description: Create, edit, and manage organizations.
      properties:
        billing:
          $ref: '#/components/schemas/OrganizationBilling'
        created:
          description: Date of the organization creation.
          example: '2019-09-26T17:28:28Z'
          readOnly: true
          type: string
        description:
          description: Description of the organization.
          example: some description
          type: string
        name:
          description: The name of the child organization, limited to 32 characters.
          example: New child org
          maxLength: 32
          type: string
        public_id:
          description: The `public_id` of the organization you are operating within.
          example: abcdef12345
          type: string
        settings:
          $ref: '#/components/schemas/OrganizationSettings'
        subscription:
          $ref: '#/components/schemas/OrganizationSubscription'
        trial:
          description: >-
            Only available for MSP customers. Allows child organizations to be
            created on a trial plan.
          example: false
          type: boolean
      type: object
    OrganizationListResponse:
      description: Response with the list of organizations.
      properties:
        orgs:
          description: Array of organization objects.
          items:
            $ref: '#/components/schemas/Organizationv1'
          type: array
      type: object
    OrganizationCreateBody:
      description: Object describing an organization to create.
      properties:
        billing:
          $ref: '#/components/schemas/OrganizationBilling'
        name:
          description: The name of the new child-organization, limited to 32 characters.
          example: New child org
          maxLength: 32
          type: string
        subscription:
          $ref: '#/components/schemas/OrganizationSubscription'
      required:
        - name
      type: object
    Userv1:
      description: Create, edit, and disable users.
      properties:
        access_role:
          $ref: '#/components/schemas/AccessRole'
        disabled:
          description: The new disabled status of the user.
          example: false
          type: boolean
        email:
          description: The new email of the user.
          example: test@datadoghq.com
          type: string
        handle:
          description: The user handle, must be a valid email.
          example: test@datadoghq.com
          type: string
        icon:
          description: Gravatar icon associated to the user.
          example: /path/to/matching/gravatar/icon
          readOnly: true
          type: string
        name:
          description: The name of the user.
          example: test user
          type: string
        verified:
          description: Whether or not the user logged in Datadog at least once.
          example: true
          readOnly: true
          type: boolean
      type: object
    OrganizationCreateResponse:
      description: Response object for an organization creation.
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKey'
        application_key:
          $ref: '#/components/schemas/ApplicationKey'
        org:
          $ref: '#/components/schemas/Organizationv1'
        user:
          $ref: '#/components/schemas/Userv1'
      type: object
    OrganizationResponse:
      description: Response with an organization.
      properties:
        org:
          $ref: '#/components/schemas/Organizationv1'
      type: object
    OrgDowngradedResponse:
      description: Status of downgrade
      properties:
        message:
          description: Information pertaining to the downgraded child organization.
          type: string
      type: object
    IdpFormData:
      description: Object describing the IdP configuration.
      properties:
        idp_file:
          description: The path to the XML metadata file you wish to upload.
          example: ''
          format: binary
          type: string
      required:
        - idp_file
      type: object
    IdpResponse:
      description: The IdP response object.
      properties:
        message:
          description: Identity provider response.
          example: IdP metadata successfully uploaded for example org
          type: string
      required:
        - message
      type: object
    Point:
      description: Array of timeseries points.
      example:
        - 1575317847
        - 0.5
      items:
        description: >-
          Each point is of the form `[POSIX_timestamp, numeric_value]`.

          The timestamp should be in seconds and current.

          The numeric value format should be a 32bit float gauge-type value.

          Current is defined as not more than 10 minutes in the future or more
          than 1 hour in the past.
        format: double
        nullable: true
        type: number
      maxItems: 2
      minItems: 2
      type: array
    MetricsQueryUnit:
      description: >-
        Object containing the metric unit family, scale factor, name, and short
        name.
      nullable: true
      properties:
        family:
          description: >-
            Unit family, allows for conversion between units of the same family,
            for scaling.
          example: time
          readOnly: true
          type: string
        name:
          description: Unit name
          example: minute
          readOnly: true
          type: string
        plural:
          description: Plural form of the unit name.
          example: minutes
          readOnly: true
          type: string
        scale_factor:
          description: Factor for scaling between units of the same family.
          example: 60
          format: double
          readOnly: true
          type: number
        short_name:
          description: Abbreviation of the unit.
          example: min
          readOnly: true
          type: string
      type: object
    MetricsQueryMetadata:
      description: >-
        Object containing all metric names returned and their associated
        metadata.
      properties:
        aggr:
          description: Aggregation type.
          example: avg
          nullable: true
          readOnly: true
          type: string
        display_name:
          description: Display name of the metric.
          example: system.cpu.idle
          readOnly: true
          type: string
        end:
          description: End of the time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        expression:
          description: Metric expression.
          example: system.cpu.idle{host:foo,env:test}
          readOnly: true
          type: string
        interval:
          description: Number of milliseconds between data samples.
          format: int64
          readOnly: true
          type: integer
        length:
          description: Number of data samples.
          format: int64
          readOnly: true
          type: integer
        metric:
          description: Metric name.
          example: system.cpu.idle
          readOnly: true
          type: string
        pointlist:
          description: List of points of the timeseries in milliseconds.
          example:
            - - 1681683300000
              - 77.62145685254418
          items:
            $ref: '#/components/schemas/Point'
          readOnly: true
          type: array
        query_index:
          description: The index of the series' query within the request.
          format: int64
          readOnly: true
          type: integer
        scope:
          description: Metric scope, comma separated list of tags.
          example: host:foo,env:test
          readOnly: true
          type: string
        start:
          description: Start of the time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        tag_set:
          description: Unique tags identifying this series.
          items:
            description: Unique tags identifying this series.
            type: string
          readOnly: true
          type: array
        unit:
          description: >-
            Detailed information about the metric unit.

            The first element describes the "primary unit" (for example, `bytes`
            in `bytes per second`).

            The second element describes the "per unit" (for example, `second`
            in `bytes per second`).

            If the second element is not present, the API returns null.
          items:
            $ref: '#/components/schemas/MetricsQueryUnit'
          maxItems: 2
          minItems: 2
          readOnly: true
          type: array
      type: object
    MetricsQueryResponse:
      description: >-
        Response Object that includes your query and the list of metrics
        retrieved.
      properties:
        error:
          description: Message indicating the errors if status is not `ok`.
          readOnly: true
          type: string
        from_date:
          description: Start of requested time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        group_by:
          description: List of tag keys on which to group.
          items:
            description: Tag key to group by your metric.
            type: string
          readOnly: true
          type: array
        message:
          description: Message indicating `success` if status is `ok`.
          readOnly: true
          type: string
        query:
          description: Query string
          readOnly: true
          type: string
        res_type:
          description: Type of response.
          example: time_series
          readOnly: true
          type: string
        series:
          description: List of timeseries queried.
          items:
            $ref: '#/components/schemas/MetricsQueryMetadata'
          readOnly: true
          type: array
        status:
          description: Status of the query.
          example: ok
          readOnly: true
          type: string
        to_date:
          description: End of requested time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
      type: object
    MetricSearchResponseResults:
      description: Search result.
      properties:
        metrics:
          description: List of metrics that match the search query.
          items:
            description: Metric name.
            type: string
          type: array
      type: object
    MetricSearchResponse:
      description: Object containing the list of metrics matching the search query.
      properties:
        results:
          $ref: '#/components/schemas/MetricSearchResponseResults'
      type: object
    Versionv1:
      description: >-
        Version of the updated signal. If server side version is higher, update
        will be rejected.
      example: 0
      format: int64
      type: integer
    AddSignalToIncidentRequest:
      description: Attributes describing which incident to add the signal to.
      properties:
        add_to_signal_timeline:
          description: Whether to post the signal on the incident timeline.
          type: boolean
        incident_id:
          description: >-
            Public ID attribute of the incident to which the signal will be
            added.
          example: 2066
          format: int64
          type: integer
        version:
          $ref: '#/components/schemas/Versionv1'
      required:
        - incident_id
      type: object
    SuccessfulSignalUpdateResponse:
      description: Updated signal data following a successfully performed update.
      properties:
        status:
          description: Status of the response.
          type: string
      type: object
    SignalAssigneeUpdateRequest:
      description: >-
        Attributes describing an assignee update operation over a security
        signal.
      properties:
        assignee:
          description: >-
            The UUID of the user being assigned. Use empty string to return
            signal to unassigned.
          example: 773b045d-ccf8-4808-bd3b-955ef6a8c940
          type: string
        version:
          $ref: '#/components/schemas/Versionv1'
      required:
        - assignee
      type: object
    SignalArchiveReason:
      description: Reason why a signal has been archived.
      enum:
        - none
        - false_positive
        - testing_or_maintenance
        - investigated_case_opened
        - true_positive_benign
        - true_positive_malicious
        - other
      type: string
      x-enum-varnames:
        - NONE
        - FALSE_POSITIVE
        - TESTING_OR_MAINTENANCE
        - INVESTIGATED_CASE_OPENED
        - TRUE_POSITIVE_BENIGN
        - TRUE_POSITIVE_MALICIOUS
        - OTHER
    SignalTriageState:
      description: The new triage state of the signal.
      enum:
        - open
        - archived
        - under_review
      example: open
      type: string
      x-enum-varnames:
        - OPEN
        - ARCHIVED
        - UNDER_REVIEW
    SignalStateUpdateRequest:
      description: Attributes describing the change of state for a given state.
      properties:
        archiveComment:
          description: Optional comment to explain why a signal is being archived.
          type: string
        archiveReason:
          $ref: '#/components/schemas/SignalArchiveReason'
        state:
          $ref: '#/components/schemas/SignalTriageState'
        version:
          $ref: '#/components/schemas/Versionv1'
      required:
        - state
      type: object
    MetricContentEncodingv1:
      default: deflate
      description: HTTP header used to compress the media-type.
      enum:
        - deflate
        - gzip
      example: deflate
      type: string
      x-enum-varnames:
        - DEFLATE
        - GZIP
    Series:
      description: >-
        A metric to submit to Datadog.

        See [Datadog
        metrics](https://docs.datadoghq.com/developers/metrics/#custom-metrics-properties).
      properties:
        host:
          description: The name of the host that produced the metric.
          example: test.example.com
          type: string
        interval:
          default: null
          description: >-
            If the type of the metric is rate or count, define the corresponding
            interval in seconds.
          example: 20
          format: int64
          nullable: true
          type: integer
        metric:
          description: The name of the timeseries.
          example: system.load.1
          type: string
        points:
          description: >-
            Points relating to a metric. All points must be tuples with
            timestamp and a scalar value (cannot be a string). Timestamps should
            be in POSIX time in seconds, and cannot be more than ten minutes in
            the future or more than one hour in the past.
          example:
            - - 1575317847
              - 0.5
          items:
            $ref: '#/components/schemas/Point'
          type: array
        tags:
          description: A list of tags associated with the metric.
          example:
            - environment:test
          items:
            description: Individual tags.
            type: string
          type: array
        type:
          default: ''
          description: >-
            The type of the metric. Valid types are "",`count`, `gauge`, and
            `rate`.
          example: rate
          type: string
      required:
        - metric
        - points
      type: object
    MetricsPayload:
      description: The metrics' payload.
      properties:
        series:
          description: A list of timeseries to submit to Datadog.
          example:
            - metric: system.load.1
              points:
                - - 1475317847
                  - 0.7
          items:
            $ref: '#/components/schemas/Series'
          type: array
      required:
        - series
      type: object
    ServiceLevelObjectiveQuery:
      description: >-
        A metric-based SLO. **Required if type is `metric`**. Note that Datadog
        only allows the sum by aggregator

        to be used because this will sum up all request counts instead of
        averaging them, or taking the max or

        min of all of those requests.
      properties:
        denominator:
          description: A Datadog metric query for total (valid) events.
          example: sum:my.custom.metric{*}.as_count()
          type: string
        numerator:
          description: A Datadog metric query for good events.
          example: sum:my.custom.metric{type:good}.as_count()
          type: string
      required:
        - numerator
        - denominator
      type: object
    SLOTimeSliceComparator:
      description: The comparator used to compare the SLI value to the threshold.
      enum:
        - '>'
        - '>='
        - <
        - <=
      example: '>'
      type: string
      x-enum-varnames:
        - GREATER
        - GREATER_EQUAL
        - LESS
        - LESS_EQUAL
    SLOFormula:
      description: A formula that specifies how to combine the results of multiple queries.
      example:
        formula: query1 - default_zero(query2)
      properties:
        formula:
          description: The formula string, which is an expression involving named queries.
          example: query1 - default_zero(query2)
          type: string
      required:
        - formula
      type: object
    SLODataSourceQueryDefinition:
      description: A formula and function query.
      example:
        data_source: metrics
        name: query1
        query: sum:trace.servlet.request.hits{*} by {env}.as_count()
      oneOf:
        - $ref: '#/components/schemas/FormulaAndFunctionMetricQueryDefinition'
    SLOTimeSliceQuery:
      description: The queries and formula used to calculate the SLI value.
      example:
        formulas:
          - formula: query2/query1
        queries:
          - data_source: metrics
            name: query1
            query: sum:trace.servlet.request.hits{*} by {env}.as_count()
          - data_source: metrics
            name: query1
            query: sum:trace.servlet.request.errors{*} by {env}.as_count()
      properties:
        formulas:
          description: >-
            A list that contains exactly one formula, as only a single formula
            may be used in a time-slice SLO.
          example:
            - formula: query1 - default_zero(query2)
          items:
            $ref: '#/components/schemas/SLOFormula'
          maxItems: 1
          minItems: 1
          type: array
        queries:
          description: A list of queries that are used to calculate the SLI value.
          example:
            - data_source: metrics
              name: query1
              query: sum:trace.servlet.request.hits{*} by {env}.as_count()
          items:
            $ref: '#/components/schemas/SLODataSourceQueryDefinition'
          type: array
      required:
        - formulas
        - queries
      type: object
    SLOTimeSliceInterval:
      description: >-
        The interval used when querying data, which defines the size of a time
        slice.

        Two values are allowed: 60 (1 minute) and 300 (5 minutes).

        If not provided, the value defaults to 300 (5 minutes).
      enum:
        - 60
        - 300
      example: 300
      format: int32
      type: integer
      x-enum-varnames:
        - ONE_MINUTE
        - FIVE_MINUTES
    SLOTimeSliceCondition:
      description: >-
        The time-slice condition, composed of 3 parts: 1. the metric timeseries
        query, 2. the comparator,

        and 3. the threshold. Optionally, a fourth part, the query interval, can
        be provided.
      example:
        comparator: <
        query:
          formulas:
            - formula: query2/query1
          queries:
            - data_source: metrics
              name: query1
              query: sum:trace.servlet.request.hits{*} by {env}.as_count()
            - data_source: metrics
              name: query1
              query: sum:trace.servlet.request.errors{*} by {env}.as_count()
        threshold: 5
      properties:
        comparator:
          $ref: '#/components/schemas/SLOTimeSliceComparator'
        query:
          $ref: '#/components/schemas/SLOTimeSliceQuery'
        query_interval_seconds:
          $ref: '#/components/schemas/SLOTimeSliceInterval'
        threshold:
          description: The threshold value to which each SLI value will be compared.
          example: 5
          format: double
          type: number
      required:
        - comparator
        - threshold
        - query
      type: object
    SLOTimeSliceSpec:
      additionalProperties: false
      description: A time-slice SLI specification.
      example:
        time_slice:
          comparator: <
          query:
            formulas:
              - formula: query2/query1
            queries:
              - data_source: metrics
                name: query1
                query: sum:trace.servlet.request.hits{*} by {env}.as_count()
              - data_source: metrics
                name: query1
                query: sum:trace.servlet.request.errors{*} by {env}.as_count()
          threshold: 5
      properties:
        time_slice:
          $ref: '#/components/schemas/SLOTimeSliceCondition'
      required:
        - time_slice
      type: object
    SLOSliSpec:
      description: >-
        A generic SLI specification. This is currently used for time-slice SLOs
        only.
      oneOf:
        - $ref: '#/components/schemas/SLOTimeSliceSpec'
    SLOTimeframe:
      description: >-
        The SLO time window options. Note that "custom" is not a valid option
        for creating

        or updating SLOs. It is only used when querying SLO history over custom
        timeframes.
      enum:
        - 7d
        - 30d
        - 90d
        - custom
      example: 30d
      type: string
      x-enum-varnames:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - NINETY_DAYS
        - CUSTOM
    SLOThreshold:
      description: SLO thresholds (target and optionally warning) for a single time window.
      properties:
        target:
          description: >-
            The target value for the service level indicator within the
            corresponding

            timeframe.
          example: 99.9
          format: double
          type: number
        target_display:
          description: >-
            A string representation of the target that indicates its precision.

            It uses trailing zeros to show significant decimal places (for
            example `98.00`).


            Always included in service level objective responses. Ignored in

            create/update requests.
          example: '99.9'
          type: string
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        warning:
          description: The warning value for the service level objective.
          example: 90
          format: double
          type: number
        warning_display:
          description: >-
            A string representation of the warning target (see the description
            of

            the `target_display` field for details).


            Included in service level objective responses if a warning target
            exists.

            Ignored in create/update requests.
          example: '90.0'
          type: string
      required:
        - timeframe
        - target
      type: object
    SLOType:
      description: The type of the service level objective.
      enum:
        - metric
        - monitor
        - time_slice
      example: metric
      type: string
      x-enum-varnames:
        - METRIC
        - MONITOR
        - TIME_SLICE
    ServiceLevelObjective:
      description: >-
        A service level objective object includes a service level indicator,
        thresholds

        for one or more timeframes, and metadata (`name`, `description`, `tags`,
        etc.).
      properties:
        created_at:
          description: |-
            Creation timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        creator:
          $ref: '#/components/schemas/Creatorv1'
        description:
          description: >-
            A user-defined description of the service level objective.


            Always included in service level objective responses (but may be
            `null`).

            Optional in create/update requests.
          nullable: true
          type: string
        groups:
          description: >-
            A list of (up to 100) monitor groups that narrow the scope of a
            monitor service level objective.


            Included in service level objective responses if it is not empty.
            Optional in

            create/update requests for monitor service level objectives, but may
            only be

            used when then length of the `monitor_ids` field is one.
          example:
            - env:prod
            - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        id:
          description: |-
            A unique identifier for the service level objective object.

            Always included in service level objective responses.
          readOnly: true
          type: string
        modified_at:
          description: |-
            Modification timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        monitor_ids:
          description: >-
            A list of monitor ids that defines the scope of a monitor service
            level

            objective. **Required if type is `monitor`**.
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        monitor_tags:
          description: >-
            The union of monitor tags for all monitors referenced by the
            `monitor_ids`

            field.

            Always included in service level objective responses for
            monitor-based service level

            objectives (but may be empty). Ignored in create/update requests.
            Does not

            affect which monitors are included in the service level objective
            (that is

            determined entirely by the `monitor_ids` field).
          items:
            description: A monitor tag.
            type: string
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        sli_specification:
          $ref: '#/components/schemas/SLOSliSpec'
        tags:
          description: >-
            A list of tags associated with this service level objective.

            Always included in service level objective responses (but may be
            empty).

            Optional in create/update requests.
          example:
            - env:prod
            - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        target_threshold:
          description: >-
            The target threshold such that when the service level indicator is
            above this

            threshold over the given timeframe, the objective is being met.
          example: 99.9
          format: double
          type: number
        thresholds:
          description: >-
            The thresholds (timeframes and associated targets) for this service
            level

            objective object.
          example:
            - target: 95
              timeframe: 7d
            - target: 95
              timeframe: 30d
              warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        type:
          $ref: '#/components/schemas/SLOType'
        warning_threshold:
          description: >-
            The optional warning threshold such that when the service level
            indicator is

            below this value for the given threshold, but above the target
            threshold, the

            objective appears in a "warning" state. This value must be greater
            than the target

            threshold.
          example: 99.95
          format: double
          type: number
      required:
        - name
        - thresholds
        - type
      type: object
    SLOListResponseMetadataPage:
      description: The object containing information about the pages of the list of SLOs.
      properties:
        total_count:
          description: >-
            The total number of resources that could be retrieved ignoring the
            parameters and filters in the request.
          format: int64
          type: integer
        total_filtered_count:
          description: >-
            The total number of resources that match the parameters and filters
            in the request. This attribute can be used by a client to determine
            the total number of pages.
          format: int64
          type: integer
      type: object
    SLOListResponseMetadata:
      description: >-
        The metadata object containing additional information about the list of
        SLOs.
      properties:
        page:
          $ref: '#/components/schemas/SLOListResponseMetadataPage'
      type: object
    SLOListResponse:
      description: A response with one or more service level objective.
      properties:
        data:
          description: An array of service level objective objects.
          items:
            $ref: '#/components/schemas/ServiceLevelObjective'
          type: array
        errors:
          description: >-
            An array of error messages. Each endpoint documents how/whether this
            field is

            used.
          items:
            description: The error message.
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/SLOListResponseMetadata'
      type: object
    ServiceLevelObjectiveRequest:
      description: >-
        A service level objective object includes a service level indicator,
        thresholds

        for one or more timeframes, and metadata (`name`, `description`, `tags`,
        etc.).
      properties:
        description:
          description: >-
            A user-defined description of the service level objective.


            Always included in service level objective responses (but may be
            `null`).

            Optional in create/update requests.
          nullable: true
          type: string
        groups:
          description: >-
            A list of (up to 100) monitor groups that narrow the scope of a
            monitor service level objective.


            Included in service level objective responses if it is not empty.
            Optional in

            create/update requests for monitor service level objectives, but may
            only be

            used when then length of the `monitor_ids` field is one.
          example:
            - env:prod
            - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        monitor_ids:
          description: >-
            A list of monitor IDs that defines the scope of a monitor service
            level

            objective. **Required if type is `monitor`**.
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        sli_specification:
          $ref: '#/components/schemas/SLOSliSpec'
        tags:
          description: >-
            A list of tags associated with this service level objective.

            Always included in service level objective responses (but may be
            empty).

            Optional in create/update requests.
          example:
            - env:prod
            - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        target_threshold:
          description: >-
            The target threshold such that when the service level indicator is
            above this

            threshold over the given timeframe, the objective is being met.
          example: 99.9
          format: double
          type: number
        thresholds:
          description: >-
            The thresholds (timeframes and associated targets) for this service
            level

            objective object.
          example:
            - target: 95
              timeframe: 7d
            - target: 95
              timeframe: 30d
              warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        type:
          $ref: '#/components/schemas/SLOType'
        warning_threshold:
          description: >-
            The optional warning threshold such that when the service level
            indicator is

            below this value for the given threshold, but above the target
            threshold, the

            objective appears in a "warning" state. This value must be greater
            than the target

            threshold.
          example: 99.95
          format: double
          type: number
      required:
        - name
        - thresholds
        - type
      type: object
    SLOBulkDelete:
      additionalProperties:
        description: An array of all SLO timeframes.
        items:
          $ref: '#/components/schemas/SLOTimeframe'
        type: array
      description: |-
        A map of service level objective object IDs to arrays of timeframes,
        which indicate the thresholds to delete for each ID.
      example:
        id1:
          - 7d
          - 30d
        id2:
          - 7d
          - 30d
      type: object
    SLOBulkDeleteResponseData:
      description: An array of service level objective objects.
      properties:
        deleted:
          description: |-
            An array of service level objective object IDs that indicates
            which objects that were completely deleted.
          items:
            description: A deleted SLO ID.
            type: string
          type: array
        updated:
          description: |-
            An array of service level objective object IDs that indicates
            which objects that were modified (objects for which at least one
            threshold was deleted, but that were not completely deleted).
          items:
            description: An updated SLO ID.
            type: string
          type: array
      type: object
    SLOErrorTimeframe:
      description: |-
        The timeframe of the threshold associated with this error
        or "all" if all thresholds are affected.
      enum:
        - 7d
        - 30d
        - 90d
        - all
      example: 30d
      type: string
      x-enum-varnames:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - NINETY_DAYS
        - ALL
    SLOBulkDeleteError:
      description: Object describing the error.
      properties:
        id:
          description: |-
            The ID of the service level objective object associated with
            this error.
          example: ''
          type: string
        message:
          description: The error message.
          example: ''
          type: string
        timeframe:
          $ref: '#/components/schemas/SLOErrorTimeframe'
      required:
        - id
        - timeframe
        - message
      type: object
    SLOBulkDeleteResponse:
      description: |-
        The bulk partial delete service level objective object endpoint
        response.

        This endpoint operates on multiple service level objective objects, so
        it may be partially successful. In such cases, the "data" and "error"
        fields in this response indicate which deletions succeeded and failed.
      properties:
        data:
          $ref: '#/components/schemas/SLOBulkDeleteResponseData'
        errors:
          description: Array of errors object returned.
          items:
            $ref: '#/components/schemas/SLOBulkDeleteError'
          type: array
      type: object
    CheckCanDeleteSLOResponseData:
      description: An array of service level objective objects.
      properties:
        ok:
          description: An array of SLO IDs that can be safely deleted.
          items:
            description: An SLO ID.
            type: string
          type: array
      type: object
    CheckCanDeleteSLOResponse:
      description: A service level objective response containing the requested object.
      properties:
        data:
          $ref: '#/components/schemas/CheckCanDeleteSLOResponseData'
        errors:
          additionalProperties:
            description: Description of the service level objective reference.
            type: string
          description: A mapping of SLO id to it's current usages.
          type: object
      type: object
    SLOCorrectionCategory:
      description: Category the SLO correction belongs to.
      enum:
        - Scheduled Maintenance
        - Outside Business Hours
        - Deployment
        - Other
      example: Scheduled Maintenance
      type: string
      x-enum-varnames:
        - SCHEDULED_MAINTENANCE
        - OUTSIDE_BUSINESS_HOURS
        - DEPLOYMENT
        - OTHER
    SLOCorrectionResponseAttributesModifier:
      description: Modifier of the object.
      nullable: true
      properties:
        email:
          description: Email of the Modifier.
          type: string
        handle:
          description: Handle of the Modifier.
          type: string
        name:
          description: Name of the Modifier.
          type: string
      type: object
    SLOCorrectionResponseAttributes:
      description: The attribute object associated with the SLO correction.
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        created_at:
          description: The epoch timestamp of when the correction was created at.
          format: int64
          nullable: true
          type: integer
        creator:
          $ref: '#/components/schemas/Creatorv1'
        description:
          description: Description of the correction being made.
          type: string
        duration:
          description: >-
            Length of time (in seconds) for a specified `rrule` recurring SLO
            correction.
          example: 3600
          format: int64
          nullable: true
          type: integer
        end:
          description: Ending time of the correction in epoch seconds.
          format: int64
          nullable: true
          type: integer
        modified_at:
          description: The epoch timestamp of when the correction was modified at.
          format: int64
          nullable: true
          type: integer
        modifier:
          $ref: '#/components/schemas/SLOCorrectionResponseAttributesModifier'
        rrule:
          description: >-
            The recurrence rules as defined in the iCalendar RFC 5545. The
            supported rules for SLO corrections

            are `FREQ`, `INTERVAL`, `COUNT`, `UNTIL` and `BYDAY`.
          example: FREQ=DAILY;INTERVAL=10;COUNT=5
          nullable: true
          type: string
        slo_id:
          description: ID of the SLO that this correction applies to.
          type: string
        start:
          description: Starting time of the correction in epoch seconds.
          format: int64
          type: integer
        timezone:
          description: >-
            The timezone to display in the UI for the correction times (defaults
            to "UTC").
          type: string
      type: object
    SLOCorrectionType:
      default: correction
      description: SLO correction resource type.
      enum:
        - correction
      example: correction
      type: string
      x-enum-varnames:
        - CORRECTION
    SLOCorrection:
      description: The response object of a list of SLO corrections.
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionResponseAttributes'
        id:
          description: The ID of the SLO correction.
          type: string
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      type: object
    Pagination:
      description: Pagination object.
      properties:
        total_count:
          description: Total count.
          format: int64
          type: integer
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    ResponseMetaAttributes:
      description: Object describing meta attributes of response.
      properties:
        page:
          $ref: '#/components/schemas/Pagination'
      type: object
    SLOCorrectionListResponse:
      description: A list of  SLO correction objects.
      properties:
        data:
          description: The list of SLO corrections objects.
          items:
            $ref: '#/components/schemas/SLOCorrection'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    SLOCorrectionCreateRequestAttributes:
      description: The attribute object associated with the SLO correction to be created.
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        description:
          description: Description of the correction being made.
          type: string
        duration:
          description: >-
            Length of time (in seconds) for a specified `rrule` recurring SLO
            correction.
          example: 1600000000
          format: int64
          type: integer
        end:
          description: Ending time of the correction in epoch seconds.
          example: 1600000000
          format: int64
          type: integer
        rrule:
          description: >-
            The recurrence rules as defined in the iCalendar RFC 5545. The
            supported rules for SLO corrections

            are `FREQ`, `INTERVAL`, `COUNT`, `UNTIL` and `BYDAY`.
          example: FREQ=DAILY;INTERVAL=10;COUNT=5
          type: string
        slo_id:
          description: ID of the SLO that this correction applies to.
          example: sloId
          type: string
        start:
          description: Starting time of the correction in epoch seconds.
          example: 1600000000
          format: int64
          type: integer
        timezone:
          description: >-
            The timezone to display in the UI for the correction times (defaults
            to "UTC").
          example: UTC
          type: string
      required:
        - slo_id
        - start
        - category
      type: object
    SLOCorrectionCreateData:
      description: The data object associated with the SLO correction to be created.
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      required:
        - type
      type: object
    SLOCorrectionCreateRequest:
      description: An object that defines a correction to be applied to an SLO.
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrectionCreateData'
      type: object
    SLOCorrectionResponse:
      description: The response object of an SLO correction.
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrection'
      type: object
    SLOCorrectionUpdateRequestAttributes:
      description: The attribute object associated with the SLO correction to be updated.
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        description:
          description: Description of the correction being made.
          type: string
        duration:
          description: >-
            Length of time (in seconds) for a specified `rrule` recurring SLO
            correction.
          example: 3600
          format: int64
          type: integer
        end:
          description: Ending time of the correction in epoch seconds.
          example: 1600000000
          format: int64
          type: integer
        rrule:
          description: >-
            The recurrence rules as defined in the iCalendar RFC 5545. The
            supported rules for SLO corrections

            are `FREQ`, `INTERVAL`, `COUNT`, `UNTIL` and `BYDAY`.
          example: FREQ=DAILY;INTERVAL=10;COUNT=5
          type: string
        start:
          description: Starting time of the correction in epoch seconds.
          example: 1600000000
          format: int64
          type: integer
        timezone:
          description: >-
            The timezone to display in the UI for the correction times (defaults
            to "UTC").
          example: UTC
          type: string
      type: object
    SLOCorrectionUpdateData:
      description: The data object associated with the SLO correction to be updated.
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      type: object
    SLOCorrectionUpdateRequest:
      description: An object that defines a correction to be applied to an SLO.
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrectionUpdateData'
      type: object
    SearchSLOResponseDataAttributesFacetsObjectString:
      description: Facet
      properties:
        count:
          description: Count
          format: int64
          type: integer
        name:
          description: Facet
          type: string
      type: object
    SearchSLOResponseDataAttributesFacetsObjectInt:
      description: Facet
      properties:
        count:
          description: Count
          format: int64
          type: integer
        name:
          description: Facet
          format: double
          type: number
      type: object
    SearchSLOResponseDataAttributesFacets:
      description: Facets
      properties:
        all_tags:
          description: All tags associated with an SLO.
          items:
            $ref: >-
              #/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString
          type: array
        creator_name:
          description: Creator of an SLO.
          items:
            $ref: >-
              #/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString
          type: array
        env_tags:
          description: Tags with the `env` tag key.
          items:
            $ref: >-
              #/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString
          type: array
        service_tags:
          description: Tags with the `service` tag key.
          items:
            $ref: >-
              #/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString
          type: array
        slo_type:
          description: Type of SLO.
          items:
            $ref: >-
              #/components/schemas/SearchSLOResponseDataAttributesFacetsObjectInt
          type: array
        target:
          description: SLO Target
          items:
            $ref: >-
              #/components/schemas/SearchSLOResponseDataAttributesFacetsObjectInt
          type: array
        team_tags:
          description: Tags with the `team` tag key.
          items:
            $ref: >-
              #/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString
          type: array
        timeframe:
          description: Timeframes of SLOs.
          items:
            $ref: >-
              #/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString
          type: array
      type: object
    SLOCreator:
      description: The creator of the SLO
      nullable: true
      properties:
        email:
          description: Email of the creator.
          type: string
        id:
          description: User ID of the creator.
          format: int64
          type: integer
        name:
          description: Name of the creator.
          nullable: true
          type: string
      type: object
    SLORawErrorBudgetRemaining:
      description: Error budget remaining for an SLO.
      nullable: true
      properties:
        unit:
          description: Error budget remaining unit.
          example: requests
          type: string
        value:
          description: Error budget remaining value.
          example: 60
          format: double
          type: number
      type: object
    SLOState:
      description: State of the SLO.
      enum:
        - breached
        - warning
        - ok
        - no_data
      example: ok
      type: string
      x-enum-varnames:
        - BREACHED
        - WARNING
        - OK
        - NO_DATA
    SLOOverallStatuses:
      description: Overall status of the SLO by timeframes.
      properties:
        error:
          description: Error message if SLO status or error budget could not be calculated.
          nullable: true
          type: string
        error_budget_remaining:
          description: Remaining error budget of the SLO in percentage.
          example: 100
          format: double
          nullable: true
          type: number
        indexed_at:
          description: >-
            timestamp (UNIX time in seconds) of when the SLO status and error
            budget

            were calculated.
          example: 1662496260
          format: int64
          type: integer
        raw_error_budget_remaining:
          $ref: '#/components/schemas/SLORawErrorBudgetRemaining'
        span_precision:
          description: The amount of decimal places the SLI value is accurate to.
          example: 2
          format: int64
          nullable: true
          type: integer
        state:
          $ref: '#/components/schemas/SLOState'
        status:
          description: The status of the SLO.
          example: 100
          format: double
          nullable: true
          type: number
        target:
          description: The target of the SLO.
          example: 99
          format: double
          type: number
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
      type: object
    SearchSLOQuery:
      description: >-
        A metric-based SLO. **Required if type is `metric`**. Note that Datadog
        only allows the sum by aggregator

        to be used because this will sum up all request counts instead of
        averaging them, or taking the max or

        min of all of those requests.
      nullable: true
      properties:
        denominator:
          description: A Datadog metric query for total (valid) events.
          example: sum:my.custom.metric{*}.as_count()
          type: string
        metrics:
          description: >-
            Metric names used in the query's numerator and denominator.

            This field will return null and will be implemented in the next
            version of this endpoint.
          example:
            - my.custom.metric
            - my.other.custom.metric
          items:
            description: Metric name.
            type: string
          nullable: true
          type: array
        numerator:
          description: A Datadog metric query for good events.
          example: sum:my.custom.metric{type:good}.as_count()
          type: string
      type: object
    SLOStatus:
      description: Status of the SLO's primary timeframe.
      properties:
        calculation_error:
          description: Error message if SLO status or error budget could not be calculated.
          nullable: true
          type: string
        error_budget_remaining:
          description: Remaining error budget of the SLO in percentage.
          example: 100
          format: double
          nullable: true
          type: number
        indexed_at:
          description: >-
            timestamp (UNIX time in seconds) of when the SLO status and error
            budget

            were calculated.
          example: 1662496260
          format: int64
          type: integer
        raw_error_budget_remaining:
          $ref: '#/components/schemas/SLORawErrorBudgetRemaining'
        sli:
          description: >-
            The current service level indicator (SLI) of the SLO, also known as
            'status'. This is a percentage value from 0-100 (inclusive).
          example: 100
          format: double
          nullable: true
          type: number
        span_precision:
          description: The number of decimal places the SLI value is accurate to.
          example: 2
          format: int64
          nullable: true
          type: integer
        state:
          $ref: '#/components/schemas/SLOState'
      type: object
    SearchSLOTimeframe:
      description: The SLO time window options.
      enum:
        - 7d
        - 30d
        - 90d
      example: 30d
      type: string
      x-enum-varnames:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - NINETY_DAYS
    SearchSLOThreshold:
      description: SLO thresholds (target and optionally warning) for a single time window.
      properties:
        target:
          description: >-
            The target value for the service level indicator within the
            corresponding

            timeframe.
          example: 99.9
          format: double
          type: number
        target_display:
          description: >-
            A string representation of the target that indicates its precision.

            It uses trailing zeros to show significant decimal places (for
            example `98.00`).


            Always included in service level objective responses. Ignored in

            create/update requests.
          example: '99.9'
          type: string
        timeframe:
          $ref: '#/components/schemas/SearchSLOTimeframe'
        warning:
          description: The warning value for the service level objective.
          example: 90
          format: double
          nullable: true
          type: number
        warning_display:
          description: >-
            A string representation of the warning target (see the description
            of

            the `target_display` field for details).


            Included in service level objective responses if a warning target
            exists.

            Ignored in create/update requests.
          example: '90.0'
          nullable: true
          type: string
      required:
        - timeframe
        - target
      type: object
    SearchServiceLevelObjectiveAttributes:
      description: >-
        A service level objective object includes a service level indicator,
        thresholds

        for one or more timeframes, and metadata (`name`, `description`, and
        `tags`).
      properties:
        all_tags:
          description: >-
            A list of tags associated with this service level objective.

            Always included in service level objective responses (but may be
            empty).
          example:
            - env:prod
            - app:core
          items:
            type: string
          type: array
        created_at:
          description: |-
            Creation timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        creator:
          $ref: '#/components/schemas/SLOCreator'
        description:
          description: >-
            A user-defined description of the service level objective.


            Always included in service level objective responses (but may be
            `null`).

            Optional in create/update requests.
          nullable: true
          type: string
        env_tags:
          description: Tags with the `env` tag key.
          items:
            type: string
          type: array
        groups:
          description: >-
            A list of (up to 100) monitor groups that narrow the scope of a
            monitor service level objective.

            Included in service level objective responses if it is not empty.
          example:
            - env:prod
            - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          nullable: true
          type: array
        modified_at:
          description: |-
            Modification timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        monitor_ids:
          description: >-
            A list of monitor ids that defines the scope of a monitor service
            level

            objective.
          items:
            description: A monitor ID.
            format: int64
            type: integer
          nullable: true
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        overall_status:
          description: calculated status and error budget remaining.
          items:
            $ref: '#/components/schemas/SLOOverallStatuses'
          type: array
        query:
          $ref: '#/components/schemas/SearchSLOQuery'
        service_tags:
          description: Tags with the `service` tag key.
          items:
            type: string
          type: array
        slo_type:
          $ref: '#/components/schemas/SLOType'
        status:
          $ref: '#/components/schemas/SLOStatus'
        team_tags:
          description: Tags with the `team` tag key.
          items:
            type: string
          type: array
        thresholds:
          description: >-
            The thresholds (timeframes and associated targets) for this service
            level

            objective object.
          example:
            - target: 95
              target_display: '95'
              timeframe: 7d
            - target: 95
              target_display: '95'
              timeframe: 30d
              warning: 97
              warning_display: '97'
          items:
            $ref: '#/components/schemas/SearchSLOThreshold'
          type: array
      type: object
    SearchServiceLevelObjectiveData:
      description: A service level objective ID and attributes.
      properties:
        attributes:
          $ref: '#/components/schemas/SearchServiceLevelObjectiveAttributes'
        id:
          description: |-
            A unique identifier for the service level objective object.

            Always included in service level objective responses.
          readOnly: true
          type: string
        type:
          description: The type of the object, must be `slo`.
          type: string
      type: object
    SearchServiceLevelObjective:
      description: A service level objective data container.
      properties:
        data:
          $ref: '#/components/schemas/SearchServiceLevelObjectiveData'
      type: object
    SearchSLOResponseDataAttributes:
      description: Attributes
      properties:
        facets:
          $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacets'
        slos:
          description: SLOs
          items:
            $ref: '#/components/schemas/SearchServiceLevelObjective'
          type: array
      type: object
    SearchSLOResponseData:
      description: Data from search SLO response.
      properties:
        attributes:
          $ref: '#/components/schemas/SearchSLOResponseDataAttributes'
        type:
          description: Type of service level objective result.
          example: ''
          type: string
      type: object
    SearchSLOResponseLinks:
      description: Pagination links.
      properties:
        first:
          description: Link to last page.
          type: string
        last:
          description: Link to first page.
          nullable: true
          type: string
        next:
          description: Link to the next page.
          type: string
        prev:
          description: Link to previous page.
          nullable: true
          type: string
        self:
          description: Link to current page.
          type: string
      type: object
    SearchSLOResponseMetaPage:
      description: Pagination metadata returned by the API.
      properties:
        first_number:
          description: The first number.
          format: int64
          type: integer
        last_number:
          description: The last number.
          format: int64
          type: integer
        next_number:
          description: The next number.
          format: int64
          type: integer
        number:
          description: The page number.
          format: int64
          type: integer
        prev_number:
          description: The previous page number.
          format: int64
          type: integer
        size:
          description: The size of the response.
          format: int64
          type: integer
        total:
          description: The total number of SLOs in the response.
          format: int64
          type: integer
        type:
          description: Type of pagination.
          type: string
      type: object
    SearchSLOResponseMeta:
      description: Searches metadata returned by the API.
      properties:
        pagination:
          $ref: '#/components/schemas/SearchSLOResponseMetaPage'
      type: object
    SearchSLOResponse:
      description: A search SLO response containing results from the search query.
      properties:
        data:
          $ref: '#/components/schemas/SearchSLOResponseData'
        links:
          $ref: '#/components/schemas/SearchSLOResponseLinks'
        meta:
          $ref: '#/components/schemas/SearchSLOResponseMeta'
      type: object
    SLOResponseData:
      description: >-
        A service level objective object includes a service level indicator,
        thresholds

        for one or more timeframes, and metadata (`name`, `description`, `tags`,
        etc.).
      properties:
        configured_alert_ids:
          description: >-
            A list of SLO monitors IDs that reference this SLO. This field is
            returned only when `with_configured_alert_ids` parameter is true in
            query.
          example:
            - 123
            - 456
            - 789
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        created_at:
          description: |-
            Creation timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        creator:
          $ref: '#/components/schemas/Creatorv1'
        description:
          description: >-
            A user-defined description of the service level objective.


            Always included in service level objective responses (but may be
            `null`).

            Optional in create/update requests.
          nullable: true
          type: string
        groups:
          description: >-
            A list of (up to 20) monitor groups that narrow the scope of a
            monitor service level objective.


            Included in service level objective responses if it is not empty.
            Optional in

            create/update requests for monitor service level objectives, but may
            only be

            used when then length of the `monitor_ids` field is one.
          example:
            - env:prod
            - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        id:
          description: |-
            A unique identifier for the service level objective object.

            Always included in service level objective responses.
          readOnly: true
          type: string
        modified_at:
          description: |-
            Modification timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        monitor_ids:
          description: >-
            A list of monitor ids that defines the scope of a monitor service
            level

            objective. **Required if type is `monitor`**.
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        monitor_tags:
          description: >-
            The union of monitor tags for all monitors referenced by the
            `monitor_ids`

            field.

            Always included in service level objective responses for monitor
            service level

            objectives (but may be empty). Ignored in create/update requests.
            Does not

            affect which monitors are included in the service level objective
            (that is

            determined entirely by the `monitor_ids` field).
          items:
            description: A monitor tag.
            type: string
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        sli_specification:
          $ref: '#/components/schemas/SLOSliSpec'
        tags:
          description: >-
            A list of tags associated with this service level objective.

            Always included in service level objective responses (but may be
            empty).

            Optional in create/update requests.
          example:
            - env:prod
            - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        target_threshold:
          description: >-
            The target threshold such that when the service level indicator is
            above this

            threshold over the given timeframe, the objective is being met.
          example: 99.9
          format: double
          type: number
        thresholds:
          description: >-
            The thresholds (timeframes and associated targets) for this service
            level

            objective object.
          example:
            - target: 95
              timeframe: 7d
            - target: 95
              timeframe: 30d
              warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        type:
          $ref: '#/components/schemas/SLOType'
        warning_threshold:
          description: >-
            The optional warning threshold such that when the service level
            indicator is

            below this value for the given threshold, but above the target
            threshold, the

            objective appears in a "warning" state. This value must be greater
            than the target

            threshold.
          example: 99.95
          format: double
          type: number
      type: object
    SLOResponse:
      description: >-
        A service level objective response containing a single service level
        objective.
      properties:
        data:
          $ref: '#/components/schemas/SLOResponseData'
        errors:
          description: >-
            An array of error messages. Each endpoint documents how/whether this
            field is

            used.
          items:
            description: The error message.
            type: string
          type: array
      type: object
    SLODeleteResponse:
      description: A response list of all service level objective deleted.
      properties:
        data:
          description: >-
            An array containing the ID of the deleted service level objective
            object.
          items:
            description: ID of a deleted SLO.
            type: string
          type: array
        errors:
          additionalProperties:
            description: Error preventing the SLO deletion.
            type: string
          description: >-
            An dictionary containing the ID of the SLO as key and a deletion
            error as value.
          type: object
      type: object
    SLOErrorBudgetRemainingData:
      additionalProperties:
        description: Remaining error budget.
        format: double
        type: number
      description: A mapping of threshold `timeframe` to the remaining error budget.
      example:
        7d: 100
      type: object
    SLOHistoryResponseErrorWithType:
      description: An object describing the error with error type and error message.
      properties:
        error_message:
          description: A message with more details about the error.
          example: ''
          type: string
        error_type:
          description: Type of the error.
          example: ''
          type: string
      required:
        - error_type
        - error_message
      type: object
    SLOHistoryMonitor:
      description: >-
        An object that holds an SLI value and its associated data. It can
        represent an SLO's overall SLI value.

        This can also represent the SLI value for a specific monitor in
        multi-monitor SLOs, or a group in grouped SLOs.
      properties:
        error_budget_remaining:
          $ref: '#/components/schemas/SLOErrorBudgetRemainingData'
        errors:
          description: >-
            An array of error objects returned while querying the history data
            for the service level objective.
          items:
            $ref: '#/components/schemas/SLOHistoryResponseErrorWithType'
          type: array
        group:
          description: For groups in a grouped SLO, this is the group name.
          example: name
          type: string
        history:
          description: >-
            The state transition history for the monitor. It is represented as

            an array of pairs. Each pair is an array containing the timestamp of
            the transition

            as an integer in Unix epoch format in the first element, and the
            state as an integer in the

            second element. An integer value of `0` for state means uptime, `1`
            means downtime, and `2` means no data.

            Periods of no data are counted either as uptime or downtime
            depending on monitor settings.

            See [SLO
            documentation](https://docs.datadoghq.com/service_management/service_level_objectives/monitor/#missing-data)

            for detailed information.
          example:
            - - 1579212382
              - 0
          items:
            description: Represents an array timeseries data.
            example:
              - 1579212382
              - 0
            items:
              description: A timeseries data point which is a tuple of (timestamp, value).
              format: double
              type: number
            maxItems: 2
            minItems: 2
            type: array
          type: array
        monitor_modified:
          description: >-
            For `monitor` based SLOs, this is the last modified timestamp in
            epoch seconds of the monitor.
          example: 1615867200
          format: int64
          type: integer
        monitor_type:
          description: For `monitor` based SLOs, this describes the type of monitor.
          example: string
          type: string
        name:
          description: >-
            For groups in a grouped SLO, this is the group name. For monitors in
            a multi-monitor SLO, this is the monitor name.
          example: string
          type: string
        precision:
          deprecated: true
          description: >-
            The amount of decimal places the SLI value is accurate to for the
            given from `&&` to timestamp. Use `span_precision` instead.
          example: 2
          format: double
          type: number
        preview:
          description: >-
            For `monitor` based SLOs, when `true` this indicates that a replay
            is in progress to give an accurate uptime

            calculation.
          example: true
          type: boolean
        sli_value:
          description: The current SLI value of the SLO over the history window.
          example: 99.99
          format: double
          nullable: true
          type: number
        span_precision:
          description: >-
            The amount of decimal places the SLI value is accurate to for the
            given from `&&` to timestamp.
          example: 2
          format: double
          type: number
        uptime:
          deprecated: true
          description: Use `sli_value` instead.
          example: 99.99
          format: double
          type: number
      type: object
    SLOHistorySLIData:
      description: >-
        An object that holds an SLI value and its associated data. It can
        represent an SLO's overall SLI value.

        This can also represent the SLI value for a specific monitor in
        multi-monitor SLOs, or a group in grouped SLOs.
      properties:
        error_budget_remaining:
          $ref: '#/components/schemas/SLOErrorBudgetRemainingData'
        errors:
          description: >-
            An array of error objects returned while querying the history data
            for the service level objective.
          items:
            $ref: '#/components/schemas/SLOHistoryResponseErrorWithType'
          type: array
        group:
          description: For groups in a grouped SLO, this is the group name.
          example: name
          type: string
        history:
          description: >-
            The state transition history for `monitor` or `time-slice` SLOs. It
            is represented as

            an array of pairs. Each pair is an array containing the timestamp of
            the transition

            as an integer in Unix epoch format in the first element, and the
            state as an integer in the

            second element. An integer value of `0` for state means uptime, `1`
            means downtime, and `2` means no data.

            Periods of no data count as uptime in time-slice SLOs, while for
            monitor SLOs, no data is counted

            either as uptime or downtime depending on monitor settings. See

            [SLO
            documentation](https://docs.datadoghq.com/service_management/service_level_objectives/monitor/#missing-data)

            for detailed information.
          example:
            - - 1579212382
              - 0
          items:
            description: Represents an array timeseries data.
            example:
              - 1579212382
              - 0
            items:
              description: A timeseries data point which is a tuple of (timestamp, value).
              format: double
              type: number
            maxItems: 2
            minItems: 2
            type: array
          type: array
        monitor_modified:
          description: >-
            For `monitor` based SLOs, this is the last modified timestamp in
            epoch seconds of the monitor.
          example: 1615867200
          format: int64
          type: integer
        monitor_type:
          description: For `monitor` based SLOs, this describes the type of monitor.
          example: string
          type: string
        name:
          description: >-
            For groups in a grouped SLO, this is the group name. For monitors in
            a multi-monitor SLO, this is the monitor name.
          example: string
          type: string
        precision:
          additionalProperties:
            description: The number of accurate decimals.
            format: double
            type: number
          description: >-
            A mapping of threshold `timeframe` to number of accurate decimals,
            regardless of the from && to timestamp.
          example:
            30d: 1
            7d: 2
          type: object
        preview:
          description: >-
            For `monitor` based SLOs, when `true` this indicates that a replay
            is in progress to give an accurate uptime

            calculation.
          example: true
          type: boolean
        sli_value:
          description: The current SLI value of the SLO over the history window.
          example: 99.99
          format: double
          nullable: true
          type: number
        span_precision:
          description: >-
            The amount of decimal places the SLI value is accurate to for the
            given from `&&` to timestamp.
          example: 2
          format: double
          type: number
        uptime:
          deprecated: true
          description: Use `sli_value` instead.
          example: 99.99
          format: double
          nullable: true
          type: number
      type: object
    SLOHistoryMetricsSeriesMetadataUnit:
      description: An Object of metric units.
      nullable: true
      properties:
        family:
          description: >-
            The family of metric unit, for example `bytes` is the family for
            `kibibyte`, `byte`, and `bit` units.
          type: string
        id:
          description: The ID of the metric unit.
          format: int64
          type: integer
        name:
          description: The unit of the metric, for instance `byte`.
          type: string
        plural:
          description: The plural Unit of metric, for instance `bytes`.
          nullable: true
          type: string
        scale_factor:
          description: The scale factor of metric unit, for instance `1.0`.
          format: double
          type: number
        short_name:
          description: >-
            A shorter and abbreviated version of the metric unit, for instance
            `B`.
          nullable: true
          type: string
      type: object
    SLOHistoryMetricsSeriesMetadata:
      description: Query metadata.
      example: {}
      properties:
        aggr:
          description: Query aggregator function.
          type: string
        expression:
          description: Query expression.
          type: string
        metric:
          description: Query metric used.
          type: string
        query_index:
          description: Query index from original combined query.
          format: int64
          type: integer
        scope:
          description: Query scope.
          type: string
        unit:
          description: >-
            An array of metric units that contains up to two unit objects.

            For example, bytes represents one unit object and bytes per second
            represents two unit objects.

            If a metric query only has one unit object, the second array element
            is null.
          example:
            - family: bytes
              id: 2
              name: byte
              plural: bytes
              scale_factor: 1
              short_name: B
            - null
          items:
            $ref: '#/components/schemas/SLOHistoryMetricsSeriesMetadataUnit'
          nullable: true
          type: array
      type: object
    SLOHistoryMetricsSeries:
      description: >-
        A representation of `metric` based SLO timeseries for the provided
        queries.

        This is the same response type from `batch_query` endpoint.
      properties:
        count:
          description: Count of submitted metrics.
          example: 0
          format: int64
          type: integer
        metadata:
          $ref: '#/components/schemas/SLOHistoryMetricsSeriesMetadata'
        sum:
          description: Total sum of the query.
          example: 0
          format: double
          type: number
        values:
          description: The query values for each metric.
          example: []
          items:
            description: A metric name and its value.
            format: double
            type: number
          type: array
      required:
        - count
        - sum
        - values
      type: object
    SLOHistoryMetrics:
      description: |-
        A `metric` based SLO history response.

        This is not included in responses for `monitor` based SLOs.
      properties:
        denominator:
          $ref: '#/components/schemas/SLOHistoryMetricsSeries'
        interval:
          description: >-
            The aggregated query interval for the series data. It's implicit
            based on the query time window.
          example: 0
          format: int64
          type: integer
        message:
          description: Optional message if there are specific query issues/warnings.
          example: ''
          type: string
        numerator:
          $ref: '#/components/schemas/SLOHistoryMetricsSeries'
        query:
          description: The combined numerator and denominator query CSV.
          example: ''
          type: string
        res_type:
          description: The series result type. This mimics `batch_query` response type.
          example: ''
          type: string
        resp_version:
          description: >-
            The series response version type. This mimics `batch_query` response
            type.
          example: 0
          format: int64
          type: integer
        times:
          description: An array of query timestamps in EPOCH milliseconds.
          example: []
          items:
            description: A timestamp in EPOCH milliseconds.
            format: double
            type: number
          type: array
      required:
        - res_type
        - interval
        - resp_version
        - query
        - times
        - numerator
        - denominator
      type: object
    SLOTypeNumeric:
      description: >-
        A numeric representation of the type of the service level objective (`0`
        for

        monitor, `1` for metric). Always included in service level objective
        responses.

        Ignored in create/update requests.
      enum:
        - 0
        - 1
        - 2
      example: 0
      format: int32
      type: integer
      x-enum-varnames:
        - MONITOR
        - METRIC
        - TIME_SLICE
    SLOHistoryResponseData:
      description: An array of service level objective objects.
      properties:
        from_ts:
          description: The `from` timestamp in epoch seconds.
          example: 1615323990
          format: int64
          type: integer
        group_by:
          description: >-
            For `metric` based SLOs where the query includes a group-by clause,
            this represents the list of grouping parameters.


            This is not included in responses for `monitor` based SLOs.
          items:
            description: A grouping parameter.
            type: string
          type: array
        groups:
          description: |-
            For grouped SLOs, this represents SLI data for specific groups.

            This is not included in the responses for `metric` based SLOs.
          items:
            $ref: '#/components/schemas/SLOHistoryMonitor'
          type: array
        monitors:
          description: >-
            For multi-monitor SLOs, this represents SLI data for specific
            monitors.


            This is not included in the responses for `metric` based SLOs.
          items:
            $ref: '#/components/schemas/SLOHistoryMonitor'
          type: array
        overall:
          $ref: '#/components/schemas/SLOHistorySLIData'
        series:
          $ref: '#/components/schemas/SLOHistoryMetrics'
        thresholds:
          additionalProperties:
            $ref: '#/components/schemas/SLOThreshold'
          description: mapping of string timeframe to the SLO threshold.
          example:
            my_service:
              target: 95
              timeframe: 7d
          type: object
        to_ts:
          description: The `to` timestamp in epoch seconds.
          example: 1615928790
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/SLOType'
        type_id:
          $ref: '#/components/schemas/SLOTypeNumeric'
      type: object
    SLOHistoryResponseError:
      description: >-
        A list of errors while querying the history data for the service level
        objective.
      properties:
        error:
          description: Human readable error.
          type: string
      type: object
    SLOHistoryResponse:
      description: A service level objective history response.
      properties:
        data:
          $ref: '#/components/schemas/SLOHistoryResponseData'
        errors:
          description: >-
            A list of errors while querying the history data for the service
            level objective.
          items:
            $ref: '#/components/schemas/SLOHistoryResponseError'
          nullable: true
          type: array
      type: object
    SyntheticsCIBatchMetadataPipeline:
      description: Description of the CI pipeline.
      properties:
        url:
          description: URL of the pipeline.
          type: string
      type: object
    SyntheticsCIBatchMetadataProvider:
      description: Description of the CI provider.
      properties:
        name:
          description: Name of the CI provider.
          type: string
      type: object
    SyntheticsCIBatchMetadataCI:
      description: Description of the CI provider.
      properties:
        pipeline:
          $ref: '#/components/schemas/SyntheticsCIBatchMetadataPipeline'
        provider:
          $ref: '#/components/schemas/SyntheticsCIBatchMetadataProvider'
      type: object
    SyntheticsCIBatchMetadataGit:
      description: Git information.
      properties:
        branch:
          description: Branch name.
          type: string
        commitSha:
          description: The commit SHA.
          type: string
      type: object
    SyntheticsCIBatchMetadata:
      description: Metadata for the Synthetic tests run.
      properties:
        ci:
          $ref: '#/components/schemas/SyntheticsCIBatchMetadataCI'
        git:
          $ref: '#/components/schemas/SyntheticsCIBatchMetadataGit'
      type: object
    SyntheticsDeviceID:
      description: The device ID.
      example: chrome.laptop_large
      type: string
    SyntheticsTestExecutionRule:
      description: Execution rule for a Synthetic test.
      enum:
        - blocking
        - non_blocking
        - skipped
      example: blocking
      type: string
      x-enum-varnames:
        - BLOCKING
        - NON_BLOCKING
        - SKIPPED
    SyntheticsBatchStatus:
      description: Determines whether the batch has passed, failed, or is in progress.
      enum:
        - passed
        - skipped
        - failed
      type: string
      x-enum-varnames:
        - PASSED
        - SKIPPED
        - FAILED
    SyntheticsTestDetailsType:
      description: Type of the Synthetic test, either `api` or `browser`.
      enum:
        - api
        - browser
        - mobile
      type: string
      x-enum-varnames:
        - API
        - BROWSER
        - MOBILE
    SyntheticsBatchResult:
      description: Object with the results of a Synthetic batch.
      properties:
        device:
          $ref: '#/components/schemas/SyntheticsDeviceID'
        duration:
          description: Total duration in millisecond of the test.
          format: double
          type: number
        execution_rule:
          $ref: '#/components/schemas/SyntheticsTestExecutionRule'
        location:
          description: Name of the location.
          type: string
        result_id:
          description: The ID of the result to get.
          type: string
        retries:
          description: Number of times this result has been retried.
          format: double
          type: number
        status:
          $ref: '#/components/schemas/SyntheticsBatchStatus'
        test_name:
          description: Name of the test.
          type: string
        test_public_id:
          description: The public ID of the Synthetic test.
          type: string
        test_type:
          $ref: '#/components/schemas/SyntheticsTestDetailsType'
      type: object
    SyntheticsBatchDetailsData:
      description: Wrapper object that contains the details of a batch.
      properties:
        metadata:
          $ref: '#/components/schemas/SyntheticsCIBatchMetadata'
        results:
          description: List of results for the batch.
          items:
            $ref: '#/components/schemas/SyntheticsBatchResult'
          type: array
        status:
          $ref: '#/components/schemas/SyntheticsBatchStatus'
      type: object
    SyntheticsBatchDetails:
      description: Details about a batch response.
      properties:
        data:
          $ref: '#/components/schemas/SyntheticsBatchDetailsData'
      type: object
    SyntheticsLocation:
      description: |-
        Synthetic location that can be used when creating or editing a
        test.
      properties:
        id:
          description: Unique identifier of the location.
          type: string
        name:
          description: Name of the location.
          type: string
      type: object
    SyntheticsLocations:
      description: List of Synthetic locations.
      properties:
        locations:
          description: List of Synthetic locations.
          items:
            $ref: '#/components/schemas/SyntheticsLocation'
          type: array
      type: object
    SyntheticsRestrictedRoles:
      description: >-
        A list of role identifiers that can be pulled from the Roles API, for
        restricting read and write access.
      example:
        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
      items:
        description: UUID for a role.
        example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        type: string
      type: array
    SyntheticsPrivateLocationMetadata:
      description: Object containing metadata about the private location.
      properties:
        restricted_roles:
          $ref: '#/components/schemas/SyntheticsRestrictedRoles'
      type: object
    SyntheticsPrivateLocationSecretsAuthentication:
      description: Authentication part of the secrets.
      properties:
        id:
          description: Access key for the private location.
          readOnly: true
          type: string
        key:
          description: Secret access key for the private location.
          readOnly: true
          type: string
      type: object
    SyntheticsPrivateLocationSecretsConfigDecryption:
      description: Private key for the private location.
      properties:
        key:
          description: Private key for the private location.
          readOnly: true
          type: string
      type: object
    SyntheticsPrivateLocationSecrets:
      description: >-
        Secrets for the private location. Only present in the response when
        creating the private location.
      properties:
        authentication:
          $ref: '#/components/schemas/SyntheticsPrivateLocationSecretsAuthentication'
        config_decryption:
          $ref: >-
            #/components/schemas/SyntheticsPrivateLocationSecretsConfigDecryption
      readOnly: true
      type: object
    SyntheticsPrivateLocation:
      description: Object containing information about the private location to create.
      properties:
        description:
          description: Description of the private location.
          example: Description of private location
          type: string
        id:
          description: Unique identifier of the private location.
          readOnly: true
          type: string
        metadata:
          $ref: '#/components/schemas/SyntheticsPrivateLocationMetadata'
        name:
          description: Name of the private location.
          example: New private location
          type: string
        secrets:
          $ref: '#/components/schemas/SyntheticsPrivateLocationSecrets'
        tags:
          description: Array of tags attached to the private location.
          example:
            - team:front
          items:
            description: A tag attached to the private location.
            example: team:front
            type: string
          type: array
      required:
        - name
        - description
        - tags
      type: object
    SyntheticsPrivateLocationCreationResponseResultEncryption:
      description: Public key for the result encryption.
      properties:
        id:
          description: Fingerprint for the encryption key.
          type: string
        key:
          description: Public key for result encryption.
          type: string
      type: object
    SyntheticsPrivateLocationCreationResponse:
      description: >-
        Object that contains the new private location, the public key for result
        encryption, and the configuration skeleton.
      properties:
        config:
          description: >-
            Configuration skeleton for the private location. See installation
            instructions of the private location on how to use this
            configuration.
          type: object
        private_location:
          $ref: '#/components/schemas/SyntheticsPrivateLocation'
        result_encryption:
          $ref: >-
            #/components/schemas/SyntheticsPrivateLocationCreationResponseResultEncryption
      type: object
    SyntheticsDefaultLocations:
      description: List of Synthetics default locations settings.
      example:
        - aws:eu-west-3
      items:
        description: Name of the location.
        type: string
      type: array
    SyntheticsAssertionOperator:
      description: Assertion operator to apply.
      enum:
        - contains
        - doesNotContain
        - is
        - isNot
        - lessThan
        - lessThanOrEqual
        - moreThan
        - moreThanOrEqual
        - matches
        - doesNotMatch
        - validates
        - isInMoreThan
        - isInLessThan
        - doesNotExist
        - isUndefined
      example: contains
      type: string
      x-enum-varnames:
        - CONTAINS
        - DOES_NOT_CONTAIN
        - IS
        - IS_NOT
        - LESS_THAN
        - LESS_THAN_OR_EQUAL
        - MORE_THAN
        - MORE_THAN_OR_EQUAL
        - MATCHES
        - DOES_NOT_MATCH
        - VALIDATES
        - IS_IN_MORE_DAYS_THAN
        - IS_IN_LESS_DAYS_THAN
        - DOES_NOT_EXIST
        - IS_UNDEFINED
    SyntheticsAssertionTimingsScope:
      description: Timings scope for response time assertions.
      enum:
        - all
        - withoutDNS
      type: string
      x-enum-varnames:
        - ALL
        - WITHOUT_DNS
    SyntheticsAssertionType:
      description: Type of the assertion.
      enum:
        - body
        - header
        - statusCode
        - certificate
        - responseTime
        - property
        - recordEvery
        - recordSome
        - tlsVersion
        - minTlsVersion
        - latency
        - packetLossPercentage
        - packetsReceived
        - networkHop
        - receivedMessage
        - grpcHealthcheckStatus
        - grpcMetadata
        - grpcProto
        - connection
      example: statusCode
      type: string
      x-enum-varnames:
        - BODY
        - HEADER
        - STATUS_CODE
        - CERTIFICATE
        - RESPONSE_TIME
        - PROPERTY
        - RECORD_EVERY
        - RECORD_SOME
        - TLS_VERSION
        - MIN_TLS_VERSION
        - LATENCY
        - PACKET_LOSS_PERCENTAGE
        - PACKETS_RECEIVED
        - NETWORK_HOP
        - RECEIVED_MESSAGE
        - GRPC_HEALTHCHECK_STATUS
        - GRPC_METADATA
        - GRPC_PROTO
        - CONNECTION
    SyntheticsAssertionTarget:
      description: An assertion which uses a simple target.
      properties:
        operator:
          $ref: '#/components/schemas/SyntheticsAssertionOperator'
        property:
          description: The associated assertion property.
          type: string
        target:
          description: Value used by the operator.
          example: 123456
        timingsScope:
          $ref: '#/components/schemas/SyntheticsAssertionTimingsScope'
        type:
          $ref: '#/components/schemas/SyntheticsAssertionType'
      required:
        - type
        - operator
        - target
      type: object
    SyntheticsAssertionBodyHashOperator:
      description: Assertion operator to apply.
      enum:
        - md5
        - sha1
        - sha256
      example: md5
      type: string
      x-enum-varnames:
        - MD5
        - SHA1
        - SHA256
    SyntheticsAssertionBodyHashType:
      description: Type of the assertion.
      enum:
        - bodyHash
      example: bodyHash
      type: string
      x-enum-varnames:
        - BODY_HASH
    SyntheticsAssertionBodyHashTarget:
      description: An assertion which targets body hash.
      properties:
        operator:
          $ref: '#/components/schemas/SyntheticsAssertionBodyHashOperator'
        target:
          description: Value used by the operator.
          example: 123456
        type:
          $ref: '#/components/schemas/SyntheticsAssertionBodyHashType'
      required:
        - type
        - operator
        - target
      type: object
    SyntheticsAssertionJSONPathOperator:
      description: Assertion operator to apply.
      enum:
        - validatesJSONPath
      example: validatesJSONPath
      type: string
      x-enum-varnames:
        - VALIDATES_JSON_PATH
    SyntheticsAssertionJSONPathTargetTarget:
      description: Composed target for `validatesJSONPath` operator.
      properties:
        elementsOperator:
          description: >-
            The element from the list of results to assert on.  To choose from
            the first element in the list `firstElementMatches`, every element
            in the list `everyElementMatches`, at least one element in the list
            `atLeastOneElementMatches` or the serialized value of the list
            `serializationMatches`.
          type: string
        jsonPath:
          description: The JSON path to assert.
          type: string
        operator:
          description: The specific operator to use on the path.
          type: string
        targetValue:
          description: The path target value to compare to.
      type: object
    SyntheticsAssertionJSONPathTarget:
      description: An assertion for the `validatesJSONPath` operator.
      properties:
        operator:
          $ref: '#/components/schemas/SyntheticsAssertionJSONPathOperator'
        property:
          description: The associated assertion property.
          type: string
        target:
          $ref: '#/components/schemas/SyntheticsAssertionJSONPathTargetTarget'
        type:
          $ref: '#/components/schemas/SyntheticsAssertionType'
      required:
        - type
        - operator
      type: object
    SyntheticsAssertionJSONSchemaOperator:
      description: Assertion operator to apply.
      enum:
        - validatesJSONSchema
      example: validatesJSONSchema
      type: string
      x-enum-varnames:
        - VALIDATES_JSON_SCHEMA
    SyntheticsAssertionJSONSchemaMetaSchema:
      description: The JSON Schema meta-schema version used in the assertion.
      enum:
        - draft-07
        - draft-06
      type: string
      x-enum-varnames:
        - DRAFT_07
        - DRAFT_06
    SyntheticsAssertionJSONSchemaTargetTarget:
      description: Composed target for `validatesJSONSchema` operator.
      properties:
        jsonSchema:
          description: The JSON Schema to assert.
          type: string
        metaSchema:
          $ref: '#/components/schemas/SyntheticsAssertionJSONSchemaMetaSchema'
      type: object
    SyntheticsAssertionJSONSchemaTarget:
      description: An assertion for the `validatesJSONSchema` operator.
      properties:
        operator:
          $ref: '#/components/schemas/SyntheticsAssertionJSONSchemaOperator'
        target:
          $ref: '#/components/schemas/SyntheticsAssertionJSONSchemaTargetTarget'
        type:
          $ref: '#/components/schemas/SyntheticsAssertionType'
      required:
        - type
        - operator
      type: object
    SyntheticsAssertionXPathOperator:
      description: Assertion operator to apply.
      enum:
        - validatesXPath
      example: validatesXPath
      type: string
      x-enum-varnames:
        - VALIDATES_X_PATH
    SyntheticsAssertionXPathTargetTarget:
      description: Composed target for `validatesXPath` operator.
      properties:
        operator:
          description: The specific operator to use on the path.
          type: string
        targetValue:
          description: The path target value to compare to.
        xPath:
          description: The X path to assert.
          type: string
      type: object
    SyntheticsAssertionXPathTarget:
      description: An assertion for the `validatesXPath` operator.
      properties:
        operator:
          $ref: '#/components/schemas/SyntheticsAssertionXPathOperator'
        property:
          description: The associated assertion property.
          type: string
        target:
          $ref: '#/components/schemas/SyntheticsAssertionXPathTargetTarget'
        type:
          $ref: '#/components/schemas/SyntheticsAssertionType'
      required:
        - type
        - operator
      type: object
    SyntheticsAssertionJavascriptType:
      description: Type of the assertion.
      enum:
        - javascript
      example: javascript
      type: string
      x-enum-varnames:
        - JAVASCRIPT
    SyntheticsAssertionJavascript:
      description: A JavaScript assertion.
      properties:
        code:
          description: The JavaScript code that performs the assertions.
          example: dd.expect(dd.response.statusCode).to.equal(200);
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsAssertionJavascriptType'
      required:
        - type
        - code
      type: object
    SyntheticsAssertion:
      description: |-
        Object describing the assertions type, their associated operator,
        which property they apply, and upon which target.
      oneOf:
        - $ref: '#/components/schemas/SyntheticsAssertionTarget'
        - $ref: '#/components/schemas/SyntheticsAssertionBodyHashTarget'
        - $ref: '#/components/schemas/SyntheticsAssertionJSONPathTarget'
        - $ref: '#/components/schemas/SyntheticsAssertionJSONSchemaTarget'
        - $ref: '#/components/schemas/SyntheticsAssertionXPathTarget'
        - $ref: '#/components/schemas/SyntheticsAssertionJavascript'
    SyntheticsConfigVariableType:
      description: Type of the configuration variable.
      enum:
        - global
        - text
        - email
      example: text
      type: string
      x-enum-varnames:
        - GLOBAL
        - TEXT
        - EMAIL
    SyntheticsConfigVariable:
      description: Object defining a variable that can be used in your test configuration.
      properties:
        example:
          description: Example for the variable.
          type: string
        id:
          description: ID of the variable for global variables.
          type: string
        name:
          description: Name of the variable.
          example: VARIABLE_NAME
          type: string
        pattern:
          description: Pattern of the variable.
          type: string
        secure:
          description: >-
            Whether the value of this variable will be obfuscated in test
            results. Only for config variables of type `text`.
          example: false
          type: boolean
        type:
          $ref: '#/components/schemas/SyntheticsConfigVariableType'
      required:
        - type
        - name
      type: object
    SyntheticsBasicAuthWebType:
      default: web
      description: The type of basic authentication to use when performing the test.
      enum:
        - web
      example: web
      type: string
      x-enum-varnames:
        - WEB
    SyntheticsBasicAuthWeb:
      description: Object to handle basic authentication when performing the test.
      properties:
        password:
          description: Password to use for the basic authentication.
          example: PaSSw0RD!
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsBasicAuthWebType'
        username:
          description: Username to use for the basic authentication.
          example: my_username
          type: string
      required:
        - password
        - username
      type: object
    SyntheticsBasicAuthSigv4Type:
      default: sigv4
      description: The type of authentication to use when performing the test.
      enum:
        - sigv4
      example: sigv4
      type: string
      x-enum-varnames:
        - SIGV4
    SyntheticsBasicAuthSigv4:
      description: Object to handle `SIGV4` authentication when performing the test.
      properties:
        accessKey:
          description: Access key for the `SIGV4` authentication.
          example: AKIAIOSFODNN7EXAMPLE
          type: string
        region:
          description: Region for the `SIGV4` authentication.
          example: us-east-1
          type: string
        secretKey:
          description: Secret key for the `SIGV4` authentication.
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
          type: string
        serviceName:
          description: Service name for the `SIGV4` authentication.
          example: execute-api
          type: string
        sessionToken:
          description: Session token for the `SIGV4` authentication.
          example: |
            AQoEXAMPLEH4aoAH0gNCAPyJxz4BlCFFxWNE1OPTgk5TthT+FvwqnKwRcOIfrRh3c/L
            To6UDdyJwOOvEVPvLXCrrrUtdnniCEXAMPLE/IvU1dYUg2RVAJBanLiHb4IgRmpRV3z
            rkuWJOgQs8IZZaIv2BXIa2R4OlgkBN9bkUDNCJiBeb/AXlzBBko7b15fjrBs2+cTQtp
            Z3CYWFXG8C5zqx37wnOE49mRl/+OtkIKGO7fAE
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsBasicAuthSigv4Type'
      required:
        - accessKey
        - secretKey
        - type
      type: object
    SyntheticsBasicAuthNTLMType:
      default: ntlm
      description: The type of authentication to use when performing the test.
      enum:
        - ntlm
      example: ntlm
      type: string
      x-enum-varnames:
        - NTLM
    SyntheticsBasicAuthNTLM:
      description: Object to handle `NTLM` authentication when performing the test.
      properties:
        domain:
          description: Domain for the authentication to use when performing the test.
          example: DOMAINNAME
          type: string
        password:
          description: Password for the authentication to use when performing the test.
          example: examplepassword
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsBasicAuthNTLMType'
        username:
          description: Username for the authentication to use when performing the test.
          example: joedoe
          type: string
        workstation:
          description: Workstation for the authentication to use when performing the test.
          example: ''
          type: string
      required:
        - type
      type: object
    SyntheticsBasicAuthDigestType:
      default: digest
      description: The type of basic authentication to use when performing the test.
      enum:
        - digest
      example: digest
      type: string
      x-enum-varnames:
        - DIGEST
    SyntheticsBasicAuthDigest:
      description: Object to handle digest authentication when performing the test.
      properties:
        password:
          description: Password to use for the digest authentication.
          example: PaSSw0RD!
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsBasicAuthDigestType'
        username:
          description: Username to use for the digest authentication.
          example: my_username
          type: string
      required:
        - password
        - username
        - type
      type: object
    SyntheticsBasicAuthOauthTokenApiAuthentication:
      description: Type of token to use when performing the authentication.
      enum:
        - header
        - body
      example: header
      type: string
      x-enum-varnames:
        - HEADER
        - BODY
    SyntheticsBasicAuthOauthClientType:
      default: oauth-client
      description: The type of basic authentication to use when performing the test.
      enum:
        - oauth-client
      example: oauth-client
      type: string
      x-enum-varnames:
        - OAUTH_CLIENT
    SyntheticsBasicAuthOauthClient:
      description: Object to handle `oauth client` authentication when performing the test.
      properties:
        accessTokenUrl:
          description: Access token URL to use when performing the authentication.
          example: https://example.com
          type: string
        audience:
          description: Audience to use when performing the authentication.
          example: audience
          type: string
        clientId:
          description: Client ID to use when performing the authentication.
          example: oauth-username
          type: string
        clientSecret:
          description: Client secret to use when performing the authentication.
          example: oauth-password
          type: string
        resource:
          description: Resource to use when performing the authentication.
          example: resource
          type: string
        scope:
          description: Scope to use when performing the authentication.
          example: scope
          type: string
        tokenApiAuthentication:
          $ref: '#/components/schemas/SyntheticsBasicAuthOauthTokenApiAuthentication'
        type:
          $ref: '#/components/schemas/SyntheticsBasicAuthOauthClientType'
      required:
        - accessTokenUrl
        - tokenApiAuthentication
        - clientId
        - clientSecret
        - type
      type: object
    SyntheticsBasicAuthOauthROPType:
      default: oauth-rop
      description: The type of basic authentication to use when performing the test.
      enum:
        - oauth-rop
      example: oauth-rop
      type: string
      x-enum-varnames:
        - OAUTH_ROP
    SyntheticsBasicAuthOauthROP:
      description: Object to handle `oauth rop` authentication when performing the test.
      properties:
        accessTokenUrl:
          description: Access token URL to use when performing the authentication.
          example: https://example.com
          type: string
        audience:
          description: Audience to use when performing the authentication.
          example: audience
          type: string
        clientId:
          description: Client ID to use when performing the authentication.
          example: client-id
          type: string
        clientSecret:
          description: Client secret to use when performing the authentication.
          example: client-secret
          type: string
        password:
          description: Password to use when performing the authentication.
          example: password
          type: string
        resource:
          description: Resource to use when performing the authentication.
          example: resource
          type: string
        scope:
          description: Scope to use when performing the authentication.
          example: scope
          type: string
        tokenApiAuthentication:
          $ref: '#/components/schemas/SyntheticsBasicAuthOauthTokenApiAuthentication'
        type:
          $ref: '#/components/schemas/SyntheticsBasicAuthOauthROPType'
        username:
          description: Username to use when performing the authentication.
          example: username
          type: string
      required:
        - accessTokenUrl
        - password
        - tokenApiAuthentication
        - username
        - type
      type: object
    SyntheticsBasicAuth:
      description: Object to handle basic authentication when performing the test.
      oneOf:
        - $ref: '#/components/schemas/SyntheticsBasicAuthWeb'
        - $ref: '#/components/schemas/SyntheticsBasicAuthSigv4'
        - $ref: '#/components/schemas/SyntheticsBasicAuthNTLM'
        - $ref: '#/components/schemas/SyntheticsBasicAuthDigest'
        - $ref: '#/components/schemas/SyntheticsBasicAuthOauthClient'
        - $ref: '#/components/schemas/SyntheticsBasicAuthOauthROP'
    SyntheticsTestRequestBodyType:
      description: Type of the request body.
      enum:
        - text/plain
        - application/json
        - text/xml
        - text/html
        - application/x-www-form-urlencoded
        - graphql
        - application/octet-stream
        - multipart/form-data
      example: text/plain
      type: string
      x-enum-varnames:
        - TEXT_PLAIN
        - APPLICATION_JSON
        - TEXT_XML
        - TEXT_HTML
        - APPLICATION_X_WWW_FORM_URLENCODED
        - GRAPHQL
        - APPLICATION_OCTET_STREAM
        - MULTIPART_FORM_DATA
    SyntheticsTestCallType:
      description: The type of gRPC call to perform.
      enum:
        - healthcheck
        - unary
      example: unary
      type: string
      x-enum-varnames:
        - HEALTHCHECK
        - UNARY
    SyntheticsTestRequestCertificateItem:
      description: Define a request certificate.
      properties:
        content:
          description: Content of the certificate or key.
          type: string
        filename:
          description: File name for the certificate or key.
          type: string
        updatedAt:
          description: Date of update of the certificate or key, ISO format.
          type: string
      type: object
    SyntheticsTestRequestCertificate:
      description: Client certificate to use when performing the test request.
      properties:
        cert:
          $ref: '#/components/schemas/SyntheticsTestRequestCertificateItem'
        key:
          $ref: '#/components/schemas/SyntheticsTestRequestCertificateItem'
      type: object
    SyntheticsTestRequestBodyFile:
      description: Object describing a file to be used as part of the request in the test.
      properties:
        bucketKey:
          description: Bucket key of the file.
          type: string
        content:
          description: Content of the file.
          maxLength: 3145728
          type: string
        name:
          description: Name of the file.
          maxLength: 1500
          type: string
        originalFileName:
          description: Original name of the file.
          maxLength: 1500
          type: string
        size:
          description: Size of the file.
          format: int64
          maximum: 3145728
          minimum: 1
          type: integer
        type:
          description: Type of the file.
          maxLength: 1500
          type: string
      type: object
    SyntheticsTestHeaders:
      additionalProperties:
        description: A single Header.
        type: string
      description: Headers to include when performing the test.
      type: object
    SyntheticsTestOptionsHTTPVersion:
      description: HTTP version to use for a Synthetic test.
      enum:
        - http1
        - http2
        - any
      type: string
      x-enum-varnames:
        - HTTP1
        - HTTP2
        - ANY
    SyntheticsTestMetadata:
      additionalProperties:
        description: A single metadatum.
        type: string
      description: Metadata to include when performing the gRPC test.
      type: object
    SyntheticsTestRequestNumericalPort:
      description: Integer Port number to use when performing the test.
      format: int64
      type: integer
    SyntheticsTestRequestVariablePort:
      description: >-
        String Port number to use when performing the test. Supports templated
        variables.
      type: string
    SyntheticsTestRequestPort:
      description: Port to use when performing the test.
      oneOf:
        - $ref: '#/components/schemas/SyntheticsTestRequestNumericalPort'
        - $ref: '#/components/schemas/SyntheticsTestRequestVariablePort'
    SyntheticsTestRequestProxy:
      description: The proxy to perform the test.
      properties:
        headers:
          $ref: '#/components/schemas/SyntheticsTestHeaders'
        url:
          description: URL of the proxy to perform the test.
          example: https://example.com
          type: string
      required:
        - url
      type: object
    SyntheticsTestRequest:
      description: Object describing the Synthetic test request.
      properties:
        allow_insecure:
          description: >-
            Allows loading insecure content for an HTTP request in a multistep
            test step.
          type: boolean
        basicAuth:
          $ref: '#/components/schemas/SyntheticsBasicAuth'
        body:
          description: Body to include in the test.
          type: string
        bodyType:
          $ref: '#/components/schemas/SyntheticsTestRequestBodyType'
        callType:
          $ref: '#/components/schemas/SyntheticsTestCallType'
        certificate:
          $ref: '#/components/schemas/SyntheticsTestRequestCertificate'
        certificateDomains:
          default: []
          description: >-
            By default, the client certificate is applied on the domain of the
            starting URL for browser tests. If you want your client certificate
            to be applied on other domains instead, add them in
            `certificateDomains`.
          items:
            description: Domain to apply the client certificate.
            example: ''
            type: string
          type: array
        compressedJsonDescriptor:
          description: >-
            A protobuf JSON descriptor that needs to be gzipped first then
            base64 encoded.
          type: string
        compressedProtoFile:
          description: A protobuf file that needs to be gzipped first then base64 encoded.
          type: string
        dnsServer:
          description: DNS server to use for DNS tests.
          type: string
        dnsServerPort:
          description: DNS server port to use for DNS tests.
          type: string
        files:
          description: Files to be used as part of the request in the test.
          items:
            $ref: '#/components/schemas/SyntheticsTestRequestBodyFile'
          type: array
        follow_redirects:
          description: Specifies whether or not the request follows redirects.
          type: boolean
        headers:
          $ref: '#/components/schemas/SyntheticsTestHeaders'
        host:
          description: Host name to perform the test with.
          type: string
        httpVersion:
          $ref: '#/components/schemas/SyntheticsTestOptionsHTTPVersion'
        message:
          description: Message to send for UDP or WebSocket tests.
          type: string
        metadata:
          $ref: '#/components/schemas/SyntheticsTestMetadata'
        method:
          description: >-
            Either the HTTP method/verb to use or a gRPC method available on the
            service set in the `service` field. Required if `subtype` is `HTTP`
            or if `subtype` is `grpc` and `callType` is `unary`.
          type: string
        noSavingResponseBody:
          description: Determines whether or not to save the response body.
          type: boolean
        numberOfPackets:
          description: Number of pings to use per test.
          format: int32
          maximum: 10
          minimum: 0
          type: integer
        persistCookies:
          description: Persist cookies across redirects.
          type: boolean
        port:
          $ref: '#/components/schemas/SyntheticsTestRequestPort'
        proxy:
          $ref: '#/components/schemas/SyntheticsTestRequestProxy'
        query:
          description: Query to use for the test.
          type: object
        servername:
          description: >-
            For SSL tests, it specifies on which server you want to initiate the
            TLS handshake,

            allowing the server to present one of multiple possible certificates
            on

            the same IP address and TCP port number.
          type: string
        service:
          description: The gRPC service on which you want to perform the gRPC call.
          example: Greeter
          type: string
        shouldTrackHops:
          description: >-
            Turns on a traceroute probe to discover all gateways along the path
            to the host destination.
          type: boolean
        timeout:
          description: Timeout in seconds for the test.
          format: double
          type: number
        url:
          description: URL to perform the test with.
          example: https://example.com
          type: string
      type: object
    SyntheticsBrowserVariableType:
      description: Type of browser test variable.
      enum:
        - element
        - email
        - global
        - text
      example: text
      type: string
      x-enum-varnames:
        - ELEMENT
        - EMAIL
        - GLOBAL
        - TEXT
    SyntheticsBrowserVariable:
      description: >-
        Object defining a variable that can be used in your browser test.

        See the [Recording Steps
        documentation](https://docs.datadoghq.com/synthetics/browser_tests/actions/?tab=testanelementontheactivepage#variables).
      properties:
        example:
          description: Example for the variable.
          type: string
        id:
          description: ID for the variable. Global variables require an ID.
          type: string
        name:
          description: Name of the variable.
          example: VARIABLE_NAME
          type: string
        pattern:
          description: Pattern of the variable.
          type: string
        secure:
          description: >-
            Determines whether or not the browser test variable is obfuscated.
            Can only be used with browser variables of type `text`.
          type: boolean
        type:
          $ref: '#/components/schemas/SyntheticsBrowserVariableType'
      required:
        - type
        - name
      type: object
    SyntheticsTestConfig:
      description: Configuration object for a Synthetic test.
      properties:
        assertions:
          default: []
          description: >-
            Array of assertions used for the test. Required for single API
            tests.
          example: []
          items:
            $ref: '#/components/schemas/SyntheticsAssertion'
          type: array
        configVariables:
          description: Array of variables used for the test.
          items:
            $ref: '#/components/schemas/SyntheticsConfigVariable'
          type: array
        request:
          $ref: '#/components/schemas/SyntheticsTestRequest'
        variables:
          description: Browser tests only - array of variables used for the test steps.
          items:
            $ref: '#/components/schemas/SyntheticsBrowserVariable'
          type: array
      type: object
    SyntheticsTestCiOptions:
      description: CI/CD options for a Synthetic test.
      properties:
        executionRule:
          $ref: '#/components/schemas/SyntheticsTestExecutionRule'
      required:
        - executionRule
      type: object
    SyntheticsTestOptionsMonitorOptionsNotificationPresetName:
      description: The name of the preset for the notification for the monitor.
      enum:
        - show_all
        - hide_all
        - hide_query
        - hide_handles
      type: string
      x-enum-varnames:
        - SHOW_ALL
        - HIDE_ALL
        - HIDE_QUERY
        - HIDE_HANDLES
    SyntheticsTestOptionsMonitorOptions:
      description: |-
        Object containing the options for a Synthetic test as a monitor
        (for example, renotification).
      properties:
        escalation_message:
          description: Message to include in the escalation notification.
          type: string
        notification_preset_name:
          $ref: >-
            #/components/schemas/SyntheticsTestOptionsMonitorOptionsNotificationPresetName
        renotify_interval:
          description: |-
            Time interval before renotifying if the test is still failing
            (in minutes).
          format: int64
          minimum: 0
          type: integer
        renotify_occurrences:
          description: The number of times to renotify if the test is still failing.
          format: int64
          type: integer
      type: object
    SyntheticsTestOptionsRetry:
      description: Object describing the retry strategy to apply to a Synthetic test.
      properties:
        count:
          description: |-
            Number of times a test needs to be retried before marking a
            location as failed. Defaults to 0.
          format: int64
          type: integer
        interval:
          description: |-
            Time interval between retries (in milliseconds). Defaults to
            300ms.
          format: double
          type: number
      type: object
    SyntheticsBrowserTestRumSettings:
      description: >-
        The RUM data collection settings for the Synthetic browser test.

        **Note:** There are 3 ways to format RUM settings:


        `{ isEnabled: false }`

        RUM data is not collected.


        `{ isEnabled: true }`

        RUM data is collected from the Synthetic test's default application.


        `{ isEnabled: true, applicationId:
        "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx", clientTokenId: 12345 }`

        RUM data is collected using the specified application.
      example:
        applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        clientTokenId: 12345
        isEnabled: true
      properties:
        applicationId:
          description: RUM application ID used to collect RUM data for the browser test.
          example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
          type: string
        clientTokenId:
          description: >-
            RUM application API key ID used to collect RUM data for the browser
            test.
          example: 12345
          format: int64
          type: integer
        isEnabled:
          description: Determines whether RUM data is collected during test runs.
          example: true
          type: boolean
      required:
        - isEnabled
      type: object
    SyntheticsTestOptionsSchedulingTimeframe:
      description: Object describing a timeframe.
      properties:
        day:
          description: Number representing the day of the week.
          example: 1
          format: int32
          maximum: 7
          minimum: 1
          type: integer
        from:
          description: The hour of the day on which scheduling starts.
          example: '07:00'
          type: string
        to:
          description: The hour of the day on which scheduling ends.
          example: '16:00'
          type: string
      required:
        - day
        - from
        - to
      type: object
    SyntheticsTestOptionsScheduling:
      description: Object containing timeframes and timezone used for advanced scheduling.
      properties:
        timeframes:
          description: >-
            Array containing objects describing the scheduling pattern to apply
            to each day.
          example:
            - day: 1
              from: '07:00'
              to: '16:00'
            - day: 3
              from: '07:00'
              to: '16:00'
          items:
            $ref: '#/components/schemas/SyntheticsTestOptionsSchedulingTimeframe'
          type: array
        timezone:
          description: Timezone in which the timeframe is based.
          example: America/New_York
          type: string
      required:
        - timeframes
        - timezone
      type: object
    SyntheticsTestOptions:
      description: Object describing the extra options for a Synthetic test.
      properties:
        accept_self_signed:
          description: |-
            For SSL test, whether or not the test should allow self signed
            certificates.
          type: boolean
        allow_insecure:
          description: Allows loading insecure content for an HTTP request in an API test.
          type: boolean
        checkCertificateRevocation:
          description: >-
            For SSL test, whether or not the test should fail on revoked
            certificate in stapled OCSP.
          type: boolean
        ci:
          $ref: '#/components/schemas/SyntheticsTestCiOptions'
        device_ids:
          description: >-
            For browser test, array with the different device IDs used to run
            the test.
          items:
            $ref: '#/components/schemas/SyntheticsDeviceID'
          type: array
        disableCors:
          description: Whether or not to disable CORS mechanism.
          type: boolean
        disableCsp:
          description: Disable Content Security Policy for browser tests.
          type: boolean
        enableProfiling:
          description: Enable profiling for browser tests.
          type: boolean
        enableSecurityTesting:
          deprecated: true
          description: >-
            Enable security testing for browser tests. Security testing is not
            available anymore. This field is deprecated and won't be used.
          type: boolean
        follow_redirects:
          description: For API HTTP test, whether or not the test should follow redirects.
          type: boolean
        httpVersion:
          $ref: '#/components/schemas/SyntheticsTestOptionsHTTPVersion'
        ignoreServerCertificateError:
          description: Ignore server certificate error for browser tests.
          type: boolean
        initialNavigationTimeout:
          description: >-
            Timeout before declaring the initial step as failed (in seconds) for
            browser tests.
          format: int64
          type: integer
        min_failure_duration:
          description: Minimum amount of time in failure required to trigger an alert.
          format: int64
          type: integer
        min_location_failed:
          description: |-
            Minimum number of locations in failure required to trigger
            an alert.
          format: int64
          type: integer
        monitor_name:
          description: >-
            The monitor name is used for the alert title as well as for all
            monitor dashboard widgets and SLOs.
          type: string
        monitor_options:
          $ref: '#/components/schemas/SyntheticsTestOptionsMonitorOptions'
        monitor_priority:
          description: Integer from 1 (high) to 5 (low) indicating alert severity.
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        noScreenshot:
          description: Prevents saving screenshots of the steps.
          type: boolean
        restricted_roles:
          $ref: '#/components/schemas/SyntheticsRestrictedRoles'
        retry:
          $ref: '#/components/schemas/SyntheticsTestOptionsRetry'
        rumSettings:
          $ref: '#/components/schemas/SyntheticsBrowserTestRumSettings'
        scheduling:
          $ref: '#/components/schemas/SyntheticsTestOptionsScheduling'
        tick_every:
          description: The frequency at which to run the Synthetic test (in seconds).
          format: int64
          maximum: 604800
          minimum: 30
          type: integer
      type: object
    SyntheticsTestPauseStatus:
      description: |-
        Define whether you want to start (`live`) or pause (`paused`) a
        Synthetic test.
      enum:
        - live
        - paused
      example: live
      type: string
      x-enum-varnames:
        - LIVE
        - PAUSED
    SyntheticsStepType:
      description: Step type used in your Synthetic test.
      enum:
        - assertCurrentUrl
        - assertElementAttribute
        - assertElementContent
        - assertElementPresent
        - assertEmail
        - assertFileDownload
        - assertFromJavascript
        - assertPageContains
        - assertPageLacks
        - assertRequests
        - click
        - extractFromJavascript
        - extractVariable
        - goToEmailLink
        - goToUrl
        - goToUrlAndMeasureTti
        - hover
        - playSubTest
        - pressKey
        - refresh
        - runApiTest
        - scroll
        - selectOption
        - typeText
        - uploadFiles
        - wait
      example: assertElementContent
      type: string
      x-enum-varnames:
        - ASSERT_CURRENT_URL
        - ASSERT_ELEMENT_ATTRIBUTE
        - ASSERT_ELEMENT_CONTENT
        - ASSERT_ELEMENT_PRESENT
        - ASSERT_EMAIL
        - ASSERT_FILE_DOWNLOAD
        - ASSERT_FROM_JAVASCRIPT
        - ASSERT_PAGE_CONTAINS
        - ASSERT_PAGE_LACKS
        - ASSERT_REQUESTS
        - CLICK
        - EXTRACT_FROM_JAVASCRIPT
        - EXTRACT_VARIABLE
        - GO_TO_EMAIL_LINK
        - GO_TO_URL
        - GO_TO_URL_AND_MEASURE_TTI
        - HOVER
        - PLAY_SUB_TEST
        - PRESS_KEY
        - REFRESH
        - RUN_API_TEST
        - SCROLL
        - SELECT_OPTION
        - TYPE_TEXT
        - UPLOAD_FILES
        - WAIT
    SyntheticsStep:
      description: The steps used in a Synthetic browser test.
      properties:
        allowFailure:
          description: A boolean set to allow this step to fail.
          type: boolean
        alwaysExecute:
          description: >-
            A boolean set to always execute this step even if the previous step
            failed or was skipped.
          type: boolean
        exitIfSucceed:
          description: A boolean set to exit the test if the step succeeds.
          type: boolean
        isCritical:
          description: >-
            A boolean to use in addition to `allowFailure` to determine if the
            test should be marked as failed when the step fails.
          type: boolean
        name:
          description: The name of the step.
          type: string
        noScreenshot:
          description: A boolean set to skip taking a screenshot for the step.
          type: boolean
        params:
          description: The parameters of the step.
          type: object
        public_id:
          description: The public ID of the step.
          type: string
        timeout:
          description: The time before declaring a step failed.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/SyntheticsStepType'
      type: object
    SyntheticsTestDetailsSubType:
      description: |-
        The subtype of the Synthetic API test, `http`, `ssl`, `tcp`,
        `dns`, `icmp`, `udp`, `websocket`, `grpc` or `multi`.
      enum:
        - http
        - ssl
        - tcp
        - dns
        - multi
        - icmp
        - udp
        - websocket
        - grpc
      example: http
      type: string
      x-enum-varnames:
        - HTTP
        - SSL
        - TCP
        - DNS
        - MULTI
        - ICMP
        - UDP
        - WEBSOCKET
        - GRPC
    SyntheticsTestDetails:
      description: Object containing details about your Synthetic test.
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsTestConfig'
        creator:
          $ref: '#/components/schemas/Creatorv1'
        locations:
          description: Array of locations used to run the test.
          example:
            - aws:eu-west-3
          items:
            description: A location from which the test was run.
            type: string
          type: array
        message:
          description: Notification message associated with the test.
          type: string
        monitor_id:
          description: The associated monitor ID.
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of the test.
          type: string
        options:
          $ref: '#/components/schemas/SyntheticsTestOptions'
        public_id:
          description: The test public ID.
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
        steps:
          description: For browser test, the steps of the test.
          items:
            $ref: '#/components/schemas/SyntheticsStep'
          type: array
        subtype:
          $ref: '#/components/schemas/SyntheticsTestDetailsSubType'
        tags:
          description: Array of tags attached to the test.
          items:
            description: A tag attached to the test.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SyntheticsTestDetailsType'
      type: object
    SyntheticsListTestsResponse:
      description: Object containing an array of Synthetic tests configuration.
      properties:
        tests:
          description: Array of Synthetic tests configuration.
          items:
            $ref: '#/components/schemas/SyntheticsTestDetails'
          type: array
      type: object
    SyntheticsGlobalVariableParserType:
      description: Type of parser for a Synthetic global variable from a synthetics test.
      enum:
        - raw
        - json_path
        - regex
        - x_path
      example: raw
      type: string
      x-enum-varnames:
        - RAW
        - JSON_PATH
        - REGEX
        - X_PATH
    SyntheticsVariableParser:
      description: Details of the parser to use for the global variable.
      example:
        type: regex
        value: .*
      properties:
        type:
          $ref: '#/components/schemas/SyntheticsGlobalVariableParserType'
        value:
          description: Regex or JSON path used for the parser. Not used with type `raw`.
          type: string
      required:
        - type
      type: object
    SyntheticsLocalVariableParsingOptionsType:
      description: >-
        Property of the Synthetic Test Response to extract into a local
        variable.
      enum:
        - grpc_message
        - grpc_metadata
        - http_body
        - http_header
        - http_status_code
      example: http_body
      type: string
      x-enum-varnames:
        - GRPC_MESSAGE
        - GRPC_METADATA
        - HTTP_BODY
        - HTTP_HEADER
        - HTTP_STATUS_CODE
    SyntheticsParsingOptions:
      description: Parsing options for variables to extract.
      example: {}
      properties:
        field:
          description: >-
            When type is `http_header` or `grpc_metadata`, name of the header or
            metadatum to extract.
          example: content-type
          type: string
        name:
          description: Name of the variable to extract.
          type: string
        parser:
          $ref: '#/components/schemas/SyntheticsVariableParser'
        secure:
          description: Determines whether or not the extracted value will be obfuscated.
          type: boolean
        type:
          $ref: '#/components/schemas/SyntheticsLocalVariableParsingOptionsType'
      type: object
    SyntheticsAPITestStepSubtype:
      description: The subtype of the Synthetic multi-step API test step.
      enum:
        - http
        - grpc
      example: http
      type: string
      x-enum-varnames:
        - HTTP
        - GRPC
    SyntheticsAPITestStep:
      description: The Test step used in a Synthetic multi-step API test.
      properties:
        allowFailure:
          description: Determines whether or not to continue with test if this step fails.
          type: boolean
        assertions:
          default: []
          description: Array of assertions used for the test.
          example:
            - operator: lessThan
              target: 1000
              type: responseTime
          items:
            $ref: '#/components/schemas/SyntheticsAssertion'
          type: array
        exitIfSucceed:
          description: Determines whether or not to exit the test if the step succeeds.
          type: boolean
        extractedValues:
          description: Array of values to parse and save as variables from the response.
          items:
            $ref: '#/components/schemas/SyntheticsParsingOptions'
          type: array
        extractedValuesFromScript:
          description: Generate variables using JavaScript.
          type: string
        isCritical:
          description: >-
            Determines whether or not to consider the entire test as failed if
            this step fails.

            Can be used only if `allowFailure` is `true`.
          type: boolean
        name:
          description: The name of the step.
          example: Example step name
          type: string
        request:
          $ref: '#/components/schemas/SyntheticsTestRequest'
        retry:
          $ref: '#/components/schemas/SyntheticsTestOptionsRetry'
        subtype:
          $ref: '#/components/schemas/SyntheticsAPITestStepSubtype'
      required:
        - assertions
        - request
        - name
        - subtype
      type: object
    SyntheticsAPIWaitStepSubtype:
      description: The subtype of the Synthetic multi-step API wait step.
      enum:
        - wait
      example: wait
      type: string
      x-enum-varnames:
        - WAIT
    SyntheticsAPIWaitStep:
      description: The Wait step used in a Synthetic multi-step API test.
      properties:
        name:
          description: The name of the step.
          example: Example step name
          type: string
        subtype:
          $ref: '#/components/schemas/SyntheticsAPIWaitStepSubtype'
        value:
          description: 'The time to wait in seconds. Minimum value: 0. Maximum value: 180.'
          example: 5
          format: int32
          maximum: 180
          minimum: 0
          type: integer
      required:
        - name
        - subtype
        - value
      type: object
    SyntheticsAPIStep:
      description: The steps used in a Synthetic multi-step API test.
      oneOf:
        - $ref: '#/components/schemas/SyntheticsAPITestStep'
        - $ref: '#/components/schemas/SyntheticsAPIWaitStep'
    SyntheticsAPITestConfig:
      description: Configuration object for a Synthetic API test.
      example:
        assertions:
          - operator: lessThan
            target: 1000
            type: responseTime
        request:
          method: GET
          url: https://example.com
      properties:
        assertions:
          default: []
          description: >-
            Array of assertions used for the test. Required for single API
            tests.
          example:
            - operator: lessThan
              target: 1000
              type: responseTime
          items:
            $ref: '#/components/schemas/SyntheticsAssertion'
          type: array
        configVariables:
          description: Array of variables used for the test.
          items:
            $ref: '#/components/schemas/SyntheticsConfigVariable'
          type: array
        request:
          $ref: '#/components/schemas/SyntheticsTestRequest'
        steps:
          description: When the test subtype is `multi`, the steps of the test.
          items:
            $ref: '#/components/schemas/SyntheticsAPIStep'
          type: array
        variablesFromScript:
          description: Variables defined from JavaScript code.
          example: dd.variable.set("FOO", "foo")
          type: string
      type: object
    SyntheticsAPITestType:
      default: api
      description: Type of the Synthetic test, `api`.
      enum:
        - api
      example: api
      type: string
      x-enum-varnames:
        - API
    SyntheticsAPITest:
      description: Object containing details about a Synthetic API test.
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsAPITestConfig'
        locations:
          description: Array of locations used to run the test.
          example:
            - aws:eu-west-3
          items:
            description: A location from which the test was run.
            type: string
          type: array
        message:
          description: Notification message associated with the test.
          example: Notification message
          type: string
        monitor_id:
          description: The associated monitor ID.
          example: 12345678
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of the test.
          example: Example test name
          type: string
        options:
          $ref: '#/components/schemas/SyntheticsTestOptions'
        public_id:
          description: The public ID for the test.
          example: 123-abc-456
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
        subtype:
          $ref: '#/components/schemas/SyntheticsTestDetailsSubType'
        tags:
          description: Array of tags attached to the test.
          example:
            - env:production
          items:
            description: A tag attached to the test.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SyntheticsAPITestType'
      required:
        - name
        - config
        - locations
        - options
        - type
        - message
      type: object
    SyntheticsBrowserTestConfig:
      description: Configuration object for a Synthetic browser test.
      properties:
        assertions:
          default: []
          description: Array of assertions used for the test.
          example: []
          items:
            $ref: '#/components/schemas/SyntheticsAssertion'
          type: array
        configVariables:
          description: Array of variables used for the test.
          items:
            $ref: '#/components/schemas/SyntheticsConfigVariable'
          type: array
        request:
          $ref: '#/components/schemas/SyntheticsTestRequest'
        setCookie:
          description: >-
            Cookies to be used for the request, using the
            [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)
            syntax.
          type: string
        variables:
          description: Array of variables used for the test steps.
          items:
            $ref: '#/components/schemas/SyntheticsBrowserVariable'
          type: array
      required:
        - request
        - assertions
      type: object
    SyntheticsBrowserTestType:
      default: browser
      description: Type of the Synthetic test, `browser`.
      enum:
        - browser
      example: browser
      type: string
      x-enum-varnames:
        - BROWSER
    SyntheticsBrowserTest:
      description: Object containing details about a Synthetic browser test.
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsBrowserTestConfig'
        locations:
          description: Array of locations used to run the test.
          example:
            - aws:eu-west-3
          items:
            description: A location from which the test was run.
            type: string
          type: array
        message:
          description: >-
            Notification message associated with the test. Message can either be
            text or an empty string.
          example: ''
          type: string
        monitor_id:
          description: The associated monitor ID.
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of the test.
          example: Example test name
          type: string
        options:
          $ref: '#/components/schemas/SyntheticsTestOptions'
        public_id:
          description: The public ID of the test.
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
        steps:
          description: Array of steps for the test.
          items:
            $ref: '#/components/schemas/SyntheticsStep'
          type: array
        tags:
          description: Array of tags attached to the test.
          example:
            - env:prod
          items:
            description: A tag attached to the test.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SyntheticsBrowserTestType'
      required:
        - config
        - locations
        - name
        - options
        - type
        - message
      type: object
    SyntheticsDevice:
      description: Object describing the device used to perform the Synthetic test.
      properties:
        height:
          description: Screen height of the device.
          example: 0
          format: int64
          type: integer
        id:
          $ref: '#/components/schemas/SyntheticsDeviceID'
        isMobile:
          description: Whether or not the device is a mobile.
          type: boolean
        name:
          description: The device name.
          example: ''
          type: string
        width:
          description: Screen width of the device.
          example: 0
          format: int64
          type: integer
      required:
        - id
        - name
        - height
        - width
      type: object
    SyntheticsBrowserTestResultShortResult:
      description: Object with the result of the last browser test run.
      properties:
        device:
          $ref: '#/components/schemas/SyntheticsDevice'
        duration:
          description: Length in milliseconds of the browser test run.
          format: double
          type: number
        errorCount:
          description: Amount of errors collected for a single browser test run.
          format: int64
          type: integer
        stepCountCompleted:
          description: Amount of browser test steps completed before failing.
          format: int64
          type: integer
        stepCountTotal:
          description: Total amount of browser test steps.
          format: int64
          type: integer
      type: object
    SyntheticsTestMonitorStatus:
      description: |-
        The status of your Synthetic monitor.
        * `O` for not triggered
        * `1` for triggered
        * `2` for no data
      enum:
        - 0
        - 1
        - 2
      format: int64
      type: integer
      x-enum-varnames:
        - UNTRIGGERED
        - TRIGGERED
        - NO_DATA
    SyntheticsBrowserTestResultShort:
      description: Object with the results of a single Synthetic browser test.
      properties:
        check_time:
          description: Last time the browser test was performed.
          format: double
          type: number
        probe_dc:
          description: Location from which the Browser test was performed.
          type: string
        result:
          $ref: '#/components/schemas/SyntheticsBrowserTestResultShortResult'
        result_id:
          description: ID of the browser test result.
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestMonitorStatus'
      type: object
    SyntheticsGetBrowserTestLatestResultsResponse:
      description: Object with the latest Synthetic browser test run.
      properties:
        last_timestamp_fetched:
          description: Timestamp of the latest browser test run.
          format: int64
          type: integer
        results:
          description: Result of the latest browser test run.
          items:
            $ref: '#/components/schemas/SyntheticsBrowserTestResultShort'
          type: array
      type: object
    SyntheticsBrowserTestResultFullCheck:
      description: Object describing the browser test configuration.
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsTestConfig'
      required:
        - config
      type: object
    SyntheticsBrowserTestFailureCode:
      description: Error code that can be returned by a Synthetic test.
      enum:
        - API_REQUEST_FAILURE
        - ASSERTION_FAILURE
        - DOWNLOAD_FILE_TOO_LARGE
        - ELEMENT_NOT_INTERACTABLE
        - EMAIL_VARIABLE_NOT_DEFINED
        - EVALUATE_JAVASCRIPT
        - EVALUATE_JAVASCRIPT_CONTEXT
        - EXTRACT_VARIABLE
        - FORBIDDEN_URL
        - FRAME_DETACHED
        - INCONSISTENCIES
        - INTERNAL_ERROR
        - INVALID_TYPE_TEXT_DELAY
        - INVALID_URL
        - INVALID_VARIABLE_PATTERN
        - INVISIBLE_ELEMENT
        - LOCATE_ELEMENT
        - NAVIGATE_TO_LINK
        - OPEN_URL
        - PRESS_KEY
        - SERVER_CERTIFICATE
        - SELECT_OPTION
        - STEP_TIMEOUT
        - SUB_TEST_NOT_PASSED
        - TEST_TIMEOUT
        - TOO_MANY_HTTP_REQUESTS
        - UNAVAILABLE_BROWSER
        - UNKNOWN
        - UNSUPPORTED_AUTH_SCHEMA
        - UPLOAD_FILES_ELEMENT_TYPE
        - UPLOAD_FILES_DIALOG
        - UPLOAD_FILES_DYNAMIC_ELEMENT
        - UPLOAD_FILES_NAME
      type: string
      x-enum-varnames:
        - API_REQUEST_FAILURE
        - ASSERTION_FAILURE
        - DOWNLOAD_FILE_TOO_LARGE
        - ELEMENT_NOT_INTERACTABLE
        - EMAIL_VARIABLE_NOT_DEFINED
        - EVALUATE_JAVASCRIPT
        - EVALUATE_JAVASCRIPT_CONTEXT
        - EXTRACT_VARIABLE
        - FORBIDDEN_URL
        - FRAME_DETACHED
        - INCONSISTENCIES
        - INTERNAL_ERROR
        - INVALID_TYPE_TEXT_DELAY
        - INVALID_URL
        - INVALID_VARIABLE_PATTERN
        - INVISIBLE_ELEMENT
        - LOCATE_ELEMENT
        - NAVIGATE_TO_LINK
        - OPEN_URL
        - PRESS_KEY
        - SERVER_CERTIFICATE
        - SELECT_OPTION
        - STEP_TIMEOUT
        - SUB_TEST_NOT_PASSED
        - TEST_TIMEOUT
        - TOO_MANY_HTTP_REQUESTS
        - UNAVAILABLE_BROWSER
        - UNKNOWN
        - UNSUPPORTED_AUTH_SCHEMA
        - UPLOAD_FILES_ELEMENT_TYPE
        - UPLOAD_FILES_DIALOG
        - UPLOAD_FILES_DYNAMIC_ELEMENT
        - UPLOAD_FILES_NAME
    SyntheticsBrowserTestResultFailure:
      description: The browser test failure details.
      properties:
        code:
          $ref: '#/components/schemas/SyntheticsBrowserTestFailureCode'
        message:
          description: The browser test error message.
          example: Error during DNS resolution (ENOTFOUND).
          type: string
      type: object
    SyntheticsBrowserErrorType:
      description: Error type returned by a browser test.
      enum:
        - network
        - js
      example: network
      type: string
      x-enum-varnames:
        - NETWORK
        - JS
    SyntheticsBrowserError:
      description: Error response object for a browser test.
      properties:
        description:
          description: Description of the error.
          example: Example error message
          type: string
        name:
          description: Name of the error.
          example: Failed test
          type: string
        status:
          description: Status Code of the error.
          example: 500
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/SyntheticsBrowserErrorType'
      required:
        - description
        - name
        - type
      type: object
    SyntheticsCheckType:
      description: Type of assertion to apply in an API test.
      enum:
        - equals
        - notEquals
        - contains
        - notContains
        - startsWith
        - notStartsWith
        - greater
        - lower
        - greaterEquals
        - lowerEquals
        - matchRegex
        - between
        - isEmpty
        - notIsEmpty
      type: string
      x-enum-varnames:
        - EQUALS
        - NOT_EQUALS
        - CONTAINS
        - NOT_CONTAINS
        - STARTS_WITH
        - NOT_STARTS_WITH
        - GREATER
        - LOWER
        - GREATER_EQUALS
        - LOWER_EQUALS
        - MATCH_REGEX
        - BETWEEN
        - IS_EMPTY
        - NOT_IS_EMPTY
    SyntheticsPlayingTab:
      description: Navigate between different tabs for your browser test.
      enum:
        - -1
        - 0
        - 1
        - 2
        - 3
      format: int64
      type: integer
      x-enum-varnames:
        - MAIN_TAB
        - NEW_TAB
        - TAB_1
        - TAB_2
        - TAB_3
    SyntheticsStepDetail:
      description: Object describing a step for a Synthetic test.
      properties:
        allowFailure:
          description: Whether or not the step was allowed to fail.
          type: boolean
        browserErrors:
          description: Array of errors collected for a browser test.
          items:
            $ref: '#/components/schemas/SyntheticsBrowserError'
          type: array
        checkType:
          $ref: '#/components/schemas/SyntheticsCheckType'
        description:
          description: Description of the test.
          type: string
        duration:
          description: Total duration in millisecond of the test.
          format: double
          type: number
        error:
          description: Error returned by the test.
          type: string
        failure:
          $ref: '#/components/schemas/SyntheticsBrowserTestResultFailure'
        playingTab:
          $ref: '#/components/schemas/SyntheticsPlayingTab'
        screenshotBucketKey:
          description: Whether or not screenshots where collected by the test.
          type: boolean
        skipped:
          description: Whether or not to skip this step.
          type: boolean
        snapshotBucketKey:
          description: Whether or not snapshots where collected by the test.
          type: boolean
        stepId:
          description: The step ID.
          format: int64
          type: integer
        subTestStepDetails:
          description: >-
            If this step includes a sub-test.

            [Subtests
            documentation](https://docs.datadoghq.com/synthetics/browser_tests/advanced_options/#subtests).
          items:
            $ref: '#/components/schemas/SyntheticsStepDetail'
          type: array
        timeToInteractive:
          description: Time before starting the step.
          format: double
          type: number
        type:
          $ref: '#/components/schemas/SyntheticsStepType'
        url:
          description: URL to perform the step against.
          type: string
        value:
          description: Value for the step.
        vitalsMetrics:
          description: Array of Core Web Vitals metrics for the step.
          items:
            $ref: '#/components/schemas/SyntheticsCoreWebVitals'
          type: array
        warnings:
          description: Warning collected that didn't failed the step.
          items:
            $ref: '#/components/schemas/SyntheticsStepDetailWarning'
          type: array
      type: object
    SyntheticsCoreWebVitals:
      description: Core Web Vitals attached to a browser test step.
      properties:
        cls:
          description: Cumulative Layout Shift.
          format: double
          type: number
        lcp:
          description: Largest Contentful Paint in milliseconds.
          format: double
          type: number
        url:
          description: URL attached to the metrics.
          type: string
      type: object
    SyntheticsWarningType:
      description: User locator used.
      enum:
        - user_locator
      example: user_locator
      type: string
      x-enum-varnames:
        - USER_LOCATOR
    SyntheticsStepDetailWarning:
      description: Object collecting warnings for a given step.
      properties:
        message:
          description: Message for the warning.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsWarningType'
      required:
        - message
        - type
      type: object
    SyntheticsBrowserTestResultData:
      description: Object containing results for your Synthetic browser test.
      properties:
        browserType:
          description: Type of browser device used for the browser test.
          type: string
        browserVersion:
          description: Browser version used for the browser test.
          type: string
        device:
          $ref: '#/components/schemas/SyntheticsDevice'
        duration:
          description: Global duration in second of the browser test.
          format: double
          type: number
        error:
          description: Error returned for the browser test.
          type: string
        failure:
          $ref: '#/components/schemas/SyntheticsBrowserTestResultFailure'
        passed:
          description: Whether or not the browser test was conducted.
          type: boolean
        receivedEmailCount:
          description: The amount of email received during the browser test.
          format: int64
          type: integer
        startUrl:
          description: Starting URL for the browser test.
          type: string
        stepDetails:
          description: Array containing the different browser test steps.
          items:
            $ref: '#/components/schemas/SyntheticsStepDetail'
          type: array
        thumbnailsBucketKey:
          description: Whether or not a thumbnail is associated with the browser test.
          type: boolean
        timeToInteractive:
          description: |-
            Time in second to wait before the browser test starts after
            reaching the start URL.
          format: double
          type: number
      type: object
    SyntheticsBrowserTestResultFull:
      description: Object returned describing a browser test result.
      properties:
        check:
          $ref: '#/components/schemas/SyntheticsBrowserTestResultFullCheck'
        check_time:
          description: When the browser test was conducted.
          format: double
          type: number
        check_version:
          description: Version of the browser test used.
          format: int64
          type: integer
        probe_dc:
          description: Location from which the browser test was performed.
          type: string
        result:
          $ref: '#/components/schemas/SyntheticsBrowserTestResultData'
        result_id:
          description: ID of the browser test result.
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestMonitorStatus'
      type: object
    SyntheticsDeleteTestsPayload:
      description: |-
        A JSON list of the ID or IDs of the Synthetic tests that you want
        to delete.
      properties:
        force_delete_dependencies:
          description: |-
            Delete the Synthetic test even if it's referenced by other resources
            (for example, SLOs and composite monitors).
          example: false
          type: boolean
        public_ids:
          description: An array of Synthetic test IDs you want to delete.
          example: []
          items:
            description: A Synthetic test ID to delete.
            example: abc-def-123
            type: string
          type: array
      type: object
    SyntheticsDeletedTest:
      description: |-
        Object containing a deleted Synthetic test ID with the associated
        deletion timestamp.
      properties:
        deleted_at:
          description: Deletion timestamp of the Synthetic test ID.
          format: date-time
          type: string
        public_id:
          description: The Synthetic test ID deleted.
          type: string
      type: object
    SyntheticsDeleteTestsResponse:
      description: Response object for deleting Synthetic tests.
      properties:
        deleted_tests:
          description: |-
            Array of objects containing a deleted Synthetic test ID with
            the associated deletion timestamp.
          items:
            $ref: '#/components/schemas/SyntheticsDeletedTest'
          type: array
      type: object
    SyntheticsMobileTestInitialApplicationArguments:
      additionalProperties:
        description: A single application argument.
        type: string
      description: Initial application arguments for a mobile test.
      type: object
    SyntheticsMobileTestConfig:
      description: Configuration object for a Synthetic mobile test.
      properties:
        initialApplicationArguments:
          $ref: '#/components/schemas/SyntheticsMobileTestInitialApplicationArguments'
        variables:
          description: Array of variables used for the test steps.
          items:
            $ref: '#/components/schemas/SyntheticsConfigVariable'
          type: array
      type: object
    SyntheticsTestRestrictionPolicyBindingPrincipals:
      description: List of principals for a mobile test binding.
      items:
        description: A principal for a mobile test binding.
        maxLength: 1500
        type: string
      type: array
    SyntheticsTestRestrictionPolicyBindingRelation:
      description: The type of relation for the binding.
      enum:
        - editor
        - viewer
      type: string
      x-enum-varnames:
        - EDITOR
        - VIEWER
    SyntheticsTestRestrictionPolicyBinding:
      description: Objects describing the binding used for a mobile test.
      properties:
        principals:
          $ref: >-
            #/components/schemas/SyntheticsTestRestrictionPolicyBindingPrincipals
        relation:
          $ref: '#/components/schemas/SyntheticsTestRestrictionPolicyBindingRelation'
      type: object
    SyntheticsMobileTestsMobileApplicationReferenceType:
      description: Reference type for the mobile application for a mobile synthetics test.
      enum:
        - latest
        - version
      example: latest
      type: string
      x-enum-varnames:
        - LATEST
        - VERSION
    SyntheticsMobileTestsMobileApplication:
      description: Mobile application for mobile synthetics test.
      properties:
        applicationId:
          description: Application ID of the mobile application.
          example: 00000000-0000-0000-0000-aaaaaaaaaaaa
          maxLength: 1500
          type: string
        referenceId:
          description: Reference ID of the mobile application.
          example: 00000000-0000-0000-0000-aaaaaaaaaaab
          maxLength: 1500
          type: string
        referenceType:
          $ref: >-
            #/components/schemas/SyntheticsMobileTestsMobileApplicationReferenceType
      required:
        - applicationId
        - referenceId
        - referenceType
      type: object
    SyntheticsMobileTestOptions:
      description: Object describing the extra options for a Synthetic test.
      properties:
        allowApplicationCrash:
          description: >-
            A boolean to set if an application crash would mark the test as
            failed.
          type: boolean
        bindings:
          description: Array of bindings used for the mobile test.
          items:
            $ref: '#/components/schemas/SyntheticsTestRestrictionPolicyBinding'
          type: array
        ci:
          $ref: '#/components/schemas/SyntheticsTestCiOptions'
        defaultStepTimeout:
          description: The default timeout for steps in the test (in seconds).
          format: int32
          maximum: 300
          minimum: 1
          type: integer
        device_ids:
          description: >-
            For mobile test, array with the different device IDs used to run the
            test.
          example:
            - synthetics:mobile:device:apple_ipad_10th_gen_2022_ios_16
          items:
            $ref: '#/components/schemas/SyntheticsDeviceID'
          type: array
        disableAutoAcceptAlert:
          description: A boolean to disable auto accepting alerts.
          type: boolean
        min_failure_duration:
          description: Minimum amount of time in failure required to trigger an alert.
          format: int64
          maximum: 7200
          minimum: 0
          type: integer
        mobileApplication:
          $ref: '#/components/schemas/SyntheticsMobileTestsMobileApplication'
        monitor_name:
          description: >-
            The monitor name is used for the alert title as well as for all
            monitor dashboard widgets and SLOs.
          type: string
        monitor_options:
          $ref: '#/components/schemas/SyntheticsTestOptionsMonitorOptions'
        monitor_priority:
          description: Integer from 1 (high) to 5 (low) indicating alert severity.
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        noScreenshot:
          description: A boolean set to not take a screenshot for the step.
          type: boolean
        restricted_roles:
          $ref: '#/components/schemas/SyntheticsRestrictedRoles'
        retry:
          $ref: '#/components/schemas/SyntheticsTestOptionsRetry'
        scheduling:
          $ref: '#/components/schemas/SyntheticsTestOptionsScheduling'
        tick_every:
          description: The frequency at which to run the Synthetic test (in seconds).
          example: 300
          format: int64
          maximum: 604800
          minimum: 300
          type: integer
        verbosity:
          description: >-
            The level of verbosity for the mobile test. This field can not be
            set by a user.
          format: int32
          maximum: 5
          minimum: 0
          type: integer
      required:
        - device_ids
        - tick_every
        - mobileApplication
      type: object
    SyntheticsMobileStepParamsDirection:
      description: The direction of the scroll for a `scrollToElement` step type.
      enum:
        - up
        - down
        - left
        - right
      type: string
      x-enum-varnames:
        - UP
        - DOWN
        - LEFT
        - RIGHT
    SyntheticsMobileStepParamsElementContextType:
      description: Type of the context that the element is in.
      enum:
        - native
        - web
      type: string
      x-enum-varnames:
        - NATIVE
        - WEB
    SyntheticsMobileStepParamsElementRelativePosition:
      description: Position of the action relative to the element.
      properties:
        x:
          description: The `relativePosition` on the `x` axis for the element.
          format: double
          type: number
        'y':
          description: The `relativePosition` on the `y` axis for the element.
          format: double
          type: number
      type: object
    SyntheticsMobileStepParamsElementUserLocatorValuesItemsType:
      description: Type of a user locator.
      enum:
        - accessibility-id
        - id
        - ios-predicate-string
        - ios-class-chain
        - xpath
      type: string
      x-enum-varnames:
        - ACCESSIBILITY_ID
        - ID
        - IOS_PREDICATE_STRING
        - IOS_CLASS_CHAIN
        - XPATH
    SyntheticsMobileStepParamsElementUserLocatorValuesItems:
      description: A single user locator object.
      properties:
        type:
          $ref: >-
            #/components/schemas/SyntheticsMobileStepParamsElementUserLocatorValuesItemsType
        value:
          description: Value of a user locator.
          type: string
      type: object
    SyntheticsMobileStepParamsElementUserLocator:
      description: User locator to find the element.
      properties:
        failTestOnCannotLocate:
          description: Whether if the test should fail if the element cannot be found.
          type: boolean
        values:
          description: Values of the user locator.
          items:
            $ref: >-
              #/components/schemas/SyntheticsMobileStepParamsElementUserLocatorValuesItems
          type: array
      type: object
    SyntheticsMobileStepParamsElement:
      description: Information about the element used for a step.
      properties:
        context:
          description: Context of the element.
          type: string
        contextType:
          $ref: '#/components/schemas/SyntheticsMobileStepParamsElementContextType'
        elementDescription:
          description: Description of the element.
          type: string
        multiLocator:
          description: Multi-locator to find the element.
          type: object
        relativePosition:
          $ref: >-
            #/components/schemas/SyntheticsMobileStepParamsElementRelativePosition
        textContent:
          description: Text content of the element.
          type: string
        userLocator:
          $ref: '#/components/schemas/SyntheticsMobileStepParamsElementUserLocator'
        viewName:
          description: Name of the view of the element.
          type: string
      type: object
    SyntheticsMobileStepParamsPositionsItems:
      description: A description of a single position for a `flick` step type.
      properties:
        x:
          description: The `x` position for the flick.
          format: double
          type: number
        'y':
          description: The `y` position for the flick.
          format: double
          type: number
      type: object
    SyntheticsMobileStepParamsPositions:
      description: >-
        List of positions for the `flick` step type. The maximum is 10 flicks
        per step
      items:
        $ref: '#/components/schemas/SyntheticsMobileStepParamsPositionsItems'
      type: array
    SyntheticsMobileStepParamsValueString:
      description: Value used in the step for in multiple step types.
      type: string
    SyntheticsMobileStepParamsValueNumber:
      description: Value used in the step for in multiple step types.
      format: int64
      type: integer
    SyntheticsMobileStepParamsValue:
      description: Values used in the step for in multiple step types.
      oneOf:
        - $ref: '#/components/schemas/SyntheticsMobileStepParamsValueString'
        - $ref: '#/components/schemas/SyntheticsMobileStepParamsValueNumber'
    SyntheticsMobileStepParamsVariable:
      description: Variable object for `extractVariable` step type.
      properties:
        example:
          description: An example for the variable.
          example: ''
          type: string
        name:
          description: The variable name.
          example: VAR_NAME
          type: string
      required:
        - name
        - example
      type: object
    SyntheticsMobileStepParams:
      description: The parameters of a mobile step.
      properties:
        check:
          $ref: '#/components/schemas/SyntheticsCheckType'
        delay:
          description: >-
            Number of milliseconds to wait between inputs in a `typeText` step
            type.
          format: int64
          maximum: 5000
          minimum: 0
          type: integer
        direction:
          $ref: '#/components/schemas/SyntheticsMobileStepParamsDirection'
        element:
          $ref: '#/components/schemas/SyntheticsMobileStepParamsElement'
        enabled:
          description: >-
            Boolean to change the state of the wifi for a `toggleWiFi` step
            type.
          type: boolean
        maxScrolls:
          description: Maximum number of scrolls to do for a `scrollToElement` step type.
          format: int64
          type: integer
        positions:
          $ref: '#/components/schemas/SyntheticsMobileStepParamsPositions'
        subtestPublicId:
          description: >-
            Public ID of the test to be played as part of a `playSubTest` step
            type.
          type: string
        value:
          $ref: '#/components/schemas/SyntheticsMobileStepParamsValue'
        variable:
          $ref: '#/components/schemas/SyntheticsMobileStepParamsVariable'
        withEnter:
          description: >-
            Boolean to indicate if `Enter` should be pressed at the end of the
            `typeText` step type.
          type: boolean
        x:
          description: Amount to scroll by on the `x` axis for a `scroll` step type.
          format: double
          type: number
        'y':
          description: Amount to scroll by on the `y` axis for a `scroll` step type.
          format: double
          type: number
      type: object
    SyntheticsMobileStepType:
      description: Step type used in your mobile Synthetic test.
      enum:
        - assertElementContent
        - assertScreenContains
        - assertScreenLacks
        - doubleTap
        - extractVariable
        - flick
        - openDeeplink
        - playSubTest
        - pressBack
        - restartApplication
        - rotate
        - scroll
        - scrollToElement
        - tap
        - toggleWiFi
        - typeText
        - wait
      example: assertElementContent
      type: string
      x-enum-varnames:
        - ASSERTELEMENTCONTENT
        - ASSERTSCREENCONTAINS
        - ASSERTSCREENLACKS
        - DOUBLETAP
        - EXTRACTVARIABLE
        - FLICK
        - OPENDEEPLINK
        - PLAYSUBTEST
        - PRESSBACK
        - RESTARTAPPLICATION
        - ROTATE
        - SCROLL
        - SCROLLTOELEMENT
        - TAP
        - TOGGLEWIFI
        - TYPETEXT
        - WAIT
    SyntheticsMobileStep:
      description: The steps used in a Synthetic mobile test.
      properties:
        allowFailure:
          description: A boolean set to allow this step to fail.
          type: boolean
        hasNewStepElement:
          description: A boolean set to determine if the step has a new step element.
          type: boolean
        isCritical:
          description: >-
            A boolean to use in addition to `allowFailure` to determine if the
            test should be marked as failed when the step fails.
          type: boolean
        name:
          description: The name of the step.
          example: ''
          maxLength: 1500
          type: string
        noScreenshot:
          description: A boolean set to not take a screenshot for the step.
          type: boolean
        params:
          $ref: '#/components/schemas/SyntheticsMobileStepParams'
        publicId:
          description: The public ID of the step.
          example: pub-lic-id0
          type: string
        timeout:
          description: The time before declaring a step failed.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/SyntheticsMobileStepType'
      required:
        - name
        - params
        - type
      type: object
    SyntheticsMobileTestType:
      default: mobile
      description: Type of the Synthetic test, `mobile`.
      enum:
        - mobile
      example: mobile
      type: string
      x-enum-varnames:
        - MOBILE
    SyntheticsMobileTest:
      description: Object containing details about a Synthetic mobile test.
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsMobileTestConfig'
        device_ids:
          description: Array with the different device IDs used to run the test.
          items:
            $ref: '#/components/schemas/SyntheticsDeviceID'
          type: array
        message:
          description: Notification message associated with the test.
          example: Notification message
          type: string
        monitor_id:
          description: The associated monitor ID.
          example: 12345678
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of the test.
          example: Example test name
          type: string
        options:
          $ref: '#/components/schemas/SyntheticsMobileTestOptions'
        public_id:
          description: The public ID of the test.
          example: 123-abc-456
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
        steps:
          description: Array of steps for the test.
          items:
            $ref: '#/components/schemas/SyntheticsMobileStep'
          type: array
        tags:
          description: Array of tags attached to the test.
          example:
            - env:production
          items:
            description: A tag attached to the test.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SyntheticsMobileTestType'
      required:
        - config
        - name
        - options
        - type
      type: object
    SyntheticsTriggerTest:
      description: Test configuration for Synthetics
      properties:
        metadata:
          $ref: '#/components/schemas/SyntheticsCIBatchMetadata'
        public_id:
          description: The public ID of the Synthetic test to trigger.
          example: aaa-aaa-aaa
          type: string
      required:
        - public_id
      type: object
    SyntheticsTriggerBody:
      description: Object describing the Synthetic tests to trigger.
      properties:
        tests:
          description: List of Synthetic tests.
          items:
            $ref: '#/components/schemas/SyntheticsTriggerTest'
          type: array
      required:
        - tests
      type: object
    SyntheticsTriggerCITestLocation:
      description: Synthetic location.
      properties:
        id:
          description: Unique identifier of the location.
          format: int64
          type: integer
        name:
          description: Name of the location.
          type: string
      type: object
    SyntheticsTriggerCITestRunResult:
      description: Information about a single test run.
      properties:
        device:
          $ref: '#/components/schemas/SyntheticsDeviceID'
        location:
          description: The location ID of the test run.
          format: int64
          type: integer
        public_id:
          description: The public ID of the Synthetic test.
          type: string
        result_id:
          description: ID of the result.
          type: string
      type: object
    SyntheticsTriggerCITestsResponse:
      description: Object containing information about the tests triggered.
      properties:
        batch_id:
          description: The public ID of the batch triggered.
          nullable: true
          type: string
        locations:
          description: List of Synthetic locations.
          items:
            $ref: '#/components/schemas/SyntheticsTriggerCITestLocation'
          type: array
        results:
          description: Information about the tests runs.
          items:
            $ref: '#/components/schemas/SyntheticsTriggerCITestRunResult'
          type: array
        triggered_check_ids:
          description: The public IDs of the Synthetic test triggered.
          items:
            description: The public ID of the Synthetic test.
            type: string
          type: array
      type: object
    SyntheticsCITest:
      description: Configuration for Continuous Testing.
      properties:
        allowInsecureCertificates:
          description: Disable certificate checks in API tests.
          type: boolean
        basicAuth:
          $ref: '#/components/schemas/SyntheticsBasicAuth'
        body:
          description: Body to include in the test.
          type: string
        bodyType:
          description: Type of the data sent in a Synthetic API test.
          type: string
        cookies:
          description: Cookies for the request.
          type: string
        deviceIds:
          description: >-
            For browser test, array with the different device IDs used to run
            the test.
          items:
            $ref: '#/components/schemas/SyntheticsDeviceID'
          type: array
        followRedirects:
          description: For API HTTP test, whether or not the test should follow redirects.
          type: boolean
        headers:
          $ref: '#/components/schemas/SyntheticsTestHeaders'
        locations:
          description: Array of locations used to run the test.
          example:
            - aws:eu-west-3
          items:
            description: A location from which the test was run.
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/SyntheticsCIBatchMetadata'
        public_id:
          description: The public ID of the Synthetic test to trigger.
          example: aaa-aaa-aaa
          type: string
        retry:
          $ref: '#/components/schemas/SyntheticsTestOptionsRetry'
        startUrl:
          description: Starting URL for the browser test.
          type: string
        variables:
          additionalProperties:
            description: A single variable.
            type: string
          description: Variables to replace in the test.
          type: object
      required:
        - public_id
      type: object
    SyntheticsCITestBody:
      description: Object describing the synthetics tests to trigger.
      properties:
        tests:
          description: List of Synthetic tests with overrides.
          items:
            $ref: '#/components/schemas/SyntheticsCITest'
          type: array
      type: object
    SyntheticsFetchUptimesPayload:
      description: Object containing IDs of Synthetic tests and a timeframe.
      properties:
        from_ts:
          description: Timestamp in seconds (Unix epoch) for the start of uptime.
          example: 0
          format: int64
          type: integer
        public_ids:
          description: An array of Synthetic test IDs you want uptimes for.
          example: []
          items:
            description: A Synthetic test ID.
            example: abc-def-123
            type: string
          type: array
        to_ts:
          description: Timestamp in seconds (Unix epoch) for the end of uptime.
          example: 0
          format: int64
          type: integer
      required:
        - from_ts
        - to_ts
        - public_ids
      type: object
    SyntheticsUptime:
      description: Object containing the uptime information.
      properties:
        errors:
          description: >-
            An array of error objects returned while querying the history data
            for the service level objective.
          items:
            $ref: '#/components/schemas/SLOHistoryResponseErrorWithType'
          nullable: true
          type: array
        group:
          description: The location name
          example: name
          type: string
        history:
          description: >-
            The state transition history for the monitor, represented as an
            array of

            pairs. Each pair is an array where the first element is the
            transition timestamp

            in Unix epoch format (integer) and the second element is the state
            (integer).

            For the state, an integer value of `0` indicates uptime, `1`
            indicates downtime,

            and `2` indicates no data.
          example:
            - - 1579212382
              - 0
          items:
            description: An array of transitions
            example:
              - 1579212382
              - 0
            items:
              description: A timeseries data point which is a tuple of (timestamp, value).
              format: double
              type: number
            maxItems: 2
            minItems: 2
            type: array
          type: array
        span_precision:
          description: >-
            The number of decimal places to which the SLI value is accurate for
            the given from-to timestamps.
          example: 2
          format: double
          type: number
        uptime:
          description: The overall uptime.
          example: 99.99
          format: double
          type: number
      type: object
    SyntheticsTestUptime:
      description: Object containing the uptime for a Synthetic test ID.
      properties:
        from_ts:
          description: Timestamp in seconds for the start of uptime.
          format: int64
          type: integer
        overall:
          $ref: '#/components/schemas/SyntheticsUptime'
        public_id:
          description: A Synthetic test ID.
          example: abc-def-123
          type: string
        to_ts:
          description: Timestamp in seconds for the end of uptime.
          format: int64
          type: integer
      type: object
    SyntheticsPatchTestOperationName:
      description: The operation to perform
      enum:
        - add
        - remove
        - replace
        - move
        - copy
        - test
      example: replace
      type: string
      x-enum-varnames:
        - ADD
        - REMOVE
        - REPLACE
        - MOVE
        - COPY
        - TEST
    SyntheticsPatchTestOperation:
      description: >-
        A single [JSON Patch](https://jsonpatch.com) operation to perform on the
        test
      properties:
        op:
          $ref: '#/components/schemas/SyntheticsPatchTestOperationName'
        path:
          description: The path to the value to modify
          example: /name
          type: string
        value:
          description: A value to use in a [JSON Patch](https://jsonpatch.com) operation
          example: New Test Name
      type: object
    SyntheticsPatchTestBody:
      description: >-
        Wrapper around an array of [JSON Patch](https://jsonpatch.com)
        operations to perform on the test
      properties:
        data:
          description: >-
            Array of [JSON Patch](https://jsonpatch.com) operations to perform
            on the test
          example:
            - op: replace
              path: /name
              value: New test name
            - op: remove
              path: /config/assertions/0
          items:
            $ref: '#/components/schemas/SyntheticsPatchTestOperation'
          type: array
      type: object
    SyntheticsTiming:
      description: >-
        Object containing all metrics and their values collected for a Synthetic
        API test.

        See the [Synthetic Monitoring Metrics
        documentation](https://docs.datadoghq.com/synthetics/metrics/).
      properties:
        dns:
          description: The duration in millisecond of the DNS lookup.
          format: double
          type: number
        download:
          description: The time in millisecond to download the response.
          format: double
          type: number
        firstByte:
          description: The time in millisecond to first byte.
          format: double
          type: number
        handshake:
          description: The duration in millisecond of the TLS handshake.
          format: double
          type: number
        redirect:
          description: The time in millisecond spent during redirections.
          format: double
          type: number
        ssl:
          description: The duration in millisecond of the TLS handshake.
          format: double
          type: number
        tcp:
          description: Time in millisecond to establish the TCP connection.
          format: double
          type: number
        total:
          description: The overall time in millisecond the request took to be processed.
          format: double
          type: number
        wait:
          description: Time spent in millisecond waiting for a response.
          format: double
          type: number
      type: object
    SyntheticsAPITestResultShortResult:
      description: Result of the last API test run.
      properties:
        passed:
          description: Describes if the test run has passed or failed.
          type: boolean
        timings:
          $ref: '#/components/schemas/SyntheticsTiming'
      type: object
    SyntheticsAPITestResultShort:
      description: Object with the results of a single Synthetic API test.
      properties:
        check_time:
          description: Last time the API test was performed.
          format: double
          type: number
        probe_dc:
          description: Location from which the API test was performed.
          type: string
        result:
          $ref: '#/components/schemas/SyntheticsAPITestResultShortResult'
        result_id:
          description: ID of the API test result.
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestMonitorStatus'
      type: object
    SyntheticsGetAPITestLatestResultsResponse:
      description: Object with the latest Synthetic API test run.
      properties:
        last_timestamp_fetched:
          description: Timestamp of the latest API test run.
          format: int64
          type: integer
        results:
          description: Result of the latest API test run.
          items:
            $ref: '#/components/schemas/SyntheticsAPITestResultShort'
          type: array
      type: object
    SyntheticsAPITestResultFullCheck:
      description: Object describing the API test configuration.
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsTestConfig'
      required:
        - config
      type: object
    SyntheticsSSLCertificateIssuer:
      description: Object describing the issuer of a SSL certificate.
      properties:
        C:
          description: Country Name that issued the certificate.
          type: string
        CN:
          description: Common Name that issued certificate.
          type: string
        L:
          description: Locality that issued the certificate.
          type: string
        O:
          description: Organization that issued the certificate.
          type: string
        OU:
          description: Organizational Unit that issued the certificate.
          type: string
        ST:
          description: State Or Province Name that issued the certificate.
          type: string
      type: object
    SyntheticsSSLCertificateSubject:
      description: Object describing the SSL certificate used for the test.
      properties:
        C:
          description: Country Name associated with the certificate.
          type: string
        CN:
          description: Common Name that associated with the certificate.
          type: string
        L:
          description: Locality associated with the certificate.
          type: string
        O:
          description: Organization associated with the certificate.
          type: string
        OU:
          description: Organizational Unit associated with the certificate.
          type: string
        ST:
          description: State Or Province Name associated with the certificate.
          type: string
        altName:
          description: Subject Alternative Name associated with the certificate.
          type: string
      type: object
    SyntheticsSSLCertificate:
      description: Object describing the SSL certificate used for a Synthetic test.
      properties:
        cipher:
          description: Cipher used for the connection.
          type: string
        exponent:
          description: Exponent associated to the certificate.
          format: double
          type: number
        extKeyUsage:
          description: Array of extensions and details used for the certificate.
          items:
            description: An extension or detail used for the certificate.
            type: string
          type: array
        fingerprint:
          description: MD5 digest of the DER-encoded Certificate information.
          type: string
        fingerprint256:
          description: SHA-1 digest of the DER-encoded Certificate information.
          type: string
        issuer:
          $ref: '#/components/schemas/SyntheticsSSLCertificateIssuer'
        modulus:
          description: Modulus associated to the SSL certificate private key.
          type: string
        protocol:
          description: TLS protocol used for the test.
          type: string
        serialNumber:
          description: Serial Number assigned by Symantec to the SSL certificate.
          type: string
        subject:
          $ref: '#/components/schemas/SyntheticsSSLCertificateSubject'
        validFrom:
          description: Date from which the SSL certificate is valid.
          format: date-time
          type: string
        validTo:
          description: Date until which the SSL certificate is valid.
          format: date-time
          type: string
      type: object
    SyntheticsTestProcessStatus:
      description: Status of a Synthetic test.
      enum:
        - not_scheduled
        - scheduled
        - finished
        - finished_with_error
      type: string
      x-enum-varnames:
        - NOT_SCHEDULED
        - SCHEDULED
        - FINISHED
        - FINISHED_WITH_ERROR
    SyntheticsApiTestFailureCode:
      description: Error code that can be returned by a Synthetic test.
      enum:
        - BODY_TOO_LARGE
        - DENIED
        - TOO_MANY_REDIRECTS
        - AUTHENTICATION_ERROR
        - DECRYPTION
        - INVALID_CHAR_IN_HEADER
        - HEADER_TOO_LARGE
        - HEADERS_INCOMPATIBLE_CONTENT_LENGTH
        - INVALID_REQUEST
        - REQUIRES_UPDATE
        - UNESCAPED_CHARACTERS_IN_REQUEST_PATH
        - MALFORMED_RESPONSE
        - INCORRECT_ASSERTION
        - CONNREFUSED
        - CONNRESET
        - DNS
        - HOSTUNREACH
        - NETUNREACH
        - TIMEOUT
        - SSL
        - OCSP
        - INVALID_TEST
        - TUNNEL
        - WEBSOCKET
        - UNKNOWN
        - INTERNAL_ERROR
      type: string
      x-enum-varnames:
        - BODY_TOO_LARGE
        - DENIED
        - TOO_MANY_REDIRECTS
        - AUTHENTICATION_ERROR
        - DECRYPTION
        - INVALID_CHAR_IN_HEADER
        - HEADER_TOO_LARGE
        - HEADERS_INCOMPATIBLE_CONTENT_LENGTH
        - INVALID_REQUEST
        - REQUIRES_UPDATE
        - UNESCAPED_CHARACTERS_IN_REQUEST_PATH
        - MALFORMED_RESPONSE
        - INCORRECT_ASSERTION
        - CONNREFUSED
        - CONNRESET
        - DNS
        - HOSTUNREACH
        - NETUNREACH
        - TIMEOUT
        - SSL
        - OCSP
        - INVALID_TEST
        - TUNNEL
        - WEBSOCKET
        - UNKNOWN
        - INTERNAL_ERROR
    SyntheticsApiTestResultFailure:
      description: The API test failure details.
      properties:
        code:
          $ref: '#/components/schemas/SyntheticsApiTestFailureCode'
        message:
          description: The API test error message.
          example: Error during DNS resolution (ENOTFOUND).
          type: string
      type: object
    SyntheticsAPITestResultData:
      description: Object containing results for your Synthetic API test.
      properties:
        cert:
          $ref: '#/components/schemas/SyntheticsSSLCertificate'
        eventType:
          $ref: '#/components/schemas/SyntheticsTestProcessStatus'
        failure:
          $ref: '#/components/schemas/SyntheticsApiTestResultFailure'
        httpStatusCode:
          description: The API test HTTP status code.
          format: int64
          type: integer
        requestHeaders:
          additionalProperties:
            description: Requested request header.
            type: object
          description: Request header object used for the API test.
          type: object
        responseBody:
          description: Response body returned for the API test.
          type: string
        responseHeaders:
          additionalProperties:
            description: Returned request header.
          description: Response headers returned for the API test.
          type: object
        responseSize:
          description: Global size in byte of the API test response.
          format: int64
          type: integer
        timings:
          $ref: '#/components/schemas/SyntheticsTiming'
      type: object
    SyntheticsAPITestResultFull:
      description: Object returned describing a API test result.
      properties:
        check:
          $ref: '#/components/schemas/SyntheticsAPITestResultFullCheck'
        check_time:
          description: When the API test was conducted.
          format: double
          type: number
        check_version:
          description: Version of the API test used.
          format: int64
          type: integer
        probe_dc:
          description: Locations for which to query the API test results.
          type: string
        result:
          $ref: '#/components/schemas/SyntheticsAPITestResultData'
        result_id:
          description: ID of the API test result.
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestMonitorStatus'
      type: object
    SyntheticsUpdateTestPauseStatusPayload:
      description: Object to start or pause an existing Synthetic test.
      properties:
        new_status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
      type: object
    SyntheticsGlobalVariableAttributes:
      description: Attributes of the global variable.
      properties:
        restricted_roles:
          $ref: '#/components/schemas/SyntheticsRestrictedRoles'
      type: object
    SyntheticsGlobalVariableParseTestOptionsType:
      description: Type of value to extract from a test for a Synthetic global variable.
      enum:
        - http_body
        - http_header
        - http_status_code
        - local_variable
      example: http_body
      type: string
      x-enum-varnames:
        - HTTP_BODY
        - HTTP_HEADER
        - HTTP_STATUS_CODE
        - LOCAL_VARIABLE
    SyntheticsGlobalVariableParseTestOptions:
      description: >-
        Parser options to use for retrieving a Synthetic global variable from a
        Synthetic test. Used in conjunction with `parse_test_public_id`.
      properties:
        field:
          description: >-
            When type is `http_header`, name of the header to use to extract the
            value.
          example: content-type
          type: string
        localVariableName:
          description: >-
            When type is `local_variable`, name of the local variable to use to
            extract the value.
          example: LOCAL_VARIABLE
          type: string
        parser:
          $ref: '#/components/schemas/SyntheticsVariableParser'
        type:
          $ref: '#/components/schemas/SyntheticsGlobalVariableParseTestOptionsType'
      required:
        - type
      type: object
    SyntheticsGlobalVariableTOTPParameters:
      description: Parameters for the TOTP/MFA variable
      properties:
        digits:
          description: Number of digits for the OTP code.
          example: 6
          format: int32
          maximum: 10
          minimum: 4
          type: integer
        refresh_interval:
          description: Interval for which to refresh the token (in seconds).
          example: 30
          format: int32
          maximum: 999
          minimum: 0
          type: integer
      type: object
    SyntheticsGlobalVariableOptions:
      description: Options for the Global Variable for MFA.
      properties:
        totp_parameters:
          $ref: '#/components/schemas/SyntheticsGlobalVariableTOTPParameters'
      type: object
    SyntheticsGlobalVariableValue:
      description: Value of the global variable.
      example:
        secure: true
        value: value
      properties:
        options:
          $ref: '#/components/schemas/SyntheticsGlobalVariableOptions'
        secure:
          description: Determines if the value of the variable is hidden.
          type: boolean
        value:
          description: >-
            Value of the global variable. When reading a global variable,

            the value will not be present if the variable is hidden with the
            `secure` property.
          example: example-value
          type: string
      type: object
    SyntheticsGlobalVariable:
      description: Synthetic global variable.
      properties:
        attributes:
          $ref: '#/components/schemas/SyntheticsGlobalVariableAttributes'
        description:
          description: Description of the global variable.
          example: Example description
          type: string
        id:
          description: Unique identifier of the global variable.
          readOnly: true
          type: string
        is_fido:
          description: Determines if the global variable is a FIDO variable.
          type: boolean
        is_totp:
          description: Determines if the global variable is a TOTP/MFA variable.
          type: boolean
        name:
          description: >-
            Name of the global variable. Unique across Synthetic global
            variables.
          example: MY_VARIABLE
          type: string
        parse_test_options:
          $ref: '#/components/schemas/SyntheticsGlobalVariableParseTestOptions'
        parse_test_public_id:
          description: A Synthetic test ID to use as a test to generate the variable value.
          example: abc-def-123
          type: string
        tags:
          description: Tags of the global variable.
          example:
            - team:front
            - test:workflow-1
          items:
            description: Tag name.
            type: string
          type: array
        value:
          $ref: '#/components/schemas/SyntheticsGlobalVariableValue'
      required:
        - description
        - name
        - tags
        - value
      type: object
    SyntheticsListGlobalVariablesResponse:
      description: Object containing an array of Synthetic global variables.
      properties:
        variables:
          description: Array of Synthetic global variables.
          items:
            $ref: '#/components/schemas/SyntheticsGlobalVariable'
          type: array
      type: object
    SyntheticsGlobalVariableRequest:
      description: Details of the global variable to create.
      properties:
        attributes:
          $ref: '#/components/schemas/SyntheticsGlobalVariableAttributes'
        description:
          description: Description of the global variable.
          example: Example description
          type: string
        id:
          description: Unique identifier of the global variable.
          readOnly: true
          type: string
        is_fido:
          description: Determines if the global variable is a FIDO variable.
          type: boolean
        is_totp:
          description: Determines if the global variable is a TOTP/MFA variable.
          type: boolean
        name:
          description: >-
            Name of the global variable. Unique across Synthetic global
            variables.
          example: MY_VARIABLE
          type: string
        parse_test_options:
          $ref: '#/components/schemas/SyntheticsGlobalVariableParseTestOptions'
        parse_test_public_id:
          description: A Synthetic test ID to use as a test to generate the variable value.
          example: abc-def-123
          type: string
        tags:
          description: Tags of the global variable.
          example:
            - team:front
            - test:workflow-1
          items:
            description: Tag name.
            type: string
          type: array
        value:
          $ref: '#/components/schemas/SyntheticsGlobalVariableValue'
      required:
        - description
        - name
        - tags
      type: object
    TagToHosts:
      description: >-
        In this object, the key is the tag, the value is a list of host names
        that are reporting that tag.
      properties:
        tags:
          additionalProperties:
            description: A list of additional properties for tags.
            items:
              description: A given tag in a list.
              example: test.metric.host
              type: string
            type: array
          description: A list of tags to apply to the host.
          type: object
      type: object
    HostTags:
      description: Set of tags to associate with your host.
      properties:
        host:
          description: Your host name.
          example: test.host
          type: string
        tags:
          description: A list of tags to apply to the host.
          items:
            description: A given tag in a list.
            example: environment:production
            type: string
          type: array
      type: object
    UsageAnalyzedLogsHour:
      description: The number of analyzed logs for each hour for a given organization.
      properties:
        analyzed_logs:
          description: Contains the number of analyzed logs.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageAnalyzedLogsResponse:
      description: >-
        A response containing the number of analyzed logs for each hour for a
        given organization.
      properties:
        usage:
          description: Get hourly usage for analyzed logs.
          items:
            $ref: '#/components/schemas/UsageAnalyzedLogsHour'
          type: array
      type: object
    UsageAuditLogsHour:
      description: Audit logs usage for a given organization for a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        lines_indexed:
          description: The total number of audit logs lines indexed during a given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageAuditLogsResponse:
      description: >-
        Response containing the audit logs usage for each hour for a given
        organization.
      properties:
        usage:
          description: Get hourly usage for audit logs.
          items:
            $ref: '#/components/schemas/UsageAuditLogsHour'
          type: array
      type: object
    UsageLambdaHour:
      description: >-
        Number of Lambda functions and sum of the invocations of all Lambda
        functions

        for each hour for a given organization.
      properties:
        func_count:
          description: >-
            Contains the number of different functions for each region and AWS
            account.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        invocations_sum:
          description: Contains the sum of invocations of all functions.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageLambdaResponse:
      description: >-
        Response containing the number of Lambda functions and sum of the
        invocations of all Lambda functions

        for each hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for Lambda.
          items:
            $ref: '#/components/schemas/UsageLambdaHour'
          type: array
      type: object
    UsageBillableSummaryBody:
      description: Response with properties for each aggregated usage type.
      properties:
        account_billable_usage:
          description: The total account usage.
          format: int64
          type: integer
        elapsed_usage_hours:
          description: Elapsed usage hours for some billable product.
          format: int64
          type: integer
        first_billable_usage_hour:
          description: The first billable hour for the org.
          format: date-time
          type: string
        last_billable_usage_hour:
          description: The last billable hour for the org.
          format: date-time
          type: string
        org_billable_usage:
          description: The number of units used within the billable timeframe.
          format: int64
          type: integer
        percentage_in_account:
          description: The percentage of account usage the org represents.
          format: double
          type: number
        usage_unit:
          description: Units pertaining to the usage.
          type: string
      type: object
    UsageBillableSummaryKeys:
      description: Response with aggregated usage types.
      properties:
        apm_fargate_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_fargate_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_profiler_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_profiler_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_trace_search_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        application_security_fargate_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        application_security_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        application_security_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_pipeline_indexed_spans_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_pipeline_maximum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_pipeline_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_test_indexed_spans_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_testing_maximum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_testing_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cloud_cost_management_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cloud_cost_management_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cspm_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cspm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cspm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        custom_event_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cws_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cws_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cws_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        dbm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        dbm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        dbm_normalized_queries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        dbm_normalized_queries_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_apm_and_profiler_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_apm_and_profiler_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_profiler_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_profiler_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        incident_management_maximum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        incident_management_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_and_apm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_and_apm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ingested_spans_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ingested_timeseries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ingested_timeseries_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        iot_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        iot_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        lambda_function_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        lambda_function_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_forwarding_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_15day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_180day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_1day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_30day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_360day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_3day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_45day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_60day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_7day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_90day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_custom_retention_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_ingested_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        network_device_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        network_device_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_flow_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        observability_pipeline_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        online_archive_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        prof_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        prof_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        prof_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_lite_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_replay_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_units_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        sensitive_data_scanner_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_apm_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_infra_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_infra_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_invocation_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        siem_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        standard_timeseries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        synthetics_api_tests_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        synthetics_app_testing_maximum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        synthetics_browser_checks_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        timeseries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        timeseries_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
      type: object
    UsageBillableSummaryHour:
      description: Response with monthly summary of data billed by Datadog.
      properties:
        account_name:
          description: The account name.
          type: string
        account_public_id:
          description: The account public ID.
          type: string
        billing_plan:
          description: The billing plan.
          type: string
        end_date:
          description: Shows the last date of usage.
          format: date-time
          type: string
        num_orgs:
          description: The number of organizations.
          format: int64
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        ratio_in_month:
          description: Shows usage aggregation for a billing period.
          format: double
          type: number
        region:
          description: The region of the organization.
          type: string
        start_date:
          description: Shows the first date of usage.
          format: date-time
          type: string
        usage:
          $ref: '#/components/schemas/UsageBillableSummaryKeys'
      type: object
    UsageBillableSummaryResponse:
      description: Response with monthly summary of data billed by Datadog.
      properties:
        usage:
          description: An array of objects regarding usage of billable summary.
          items:
            $ref: '#/components/schemas/UsageBillableSummaryHour'
          type: array
      type: object
    UsageCIVisibilityHour:
      description: CI visibility usage in a given hour.
      properties:
        ci_pipeline_indexed_spans:
          description: The number of spans for pipelines in the queried hour.
          format: int64
          nullable: true
          type: integer
        ci_test_indexed_spans:
          description: The number of spans for tests in the queried hour.
          format: int64
          nullable: true
          type: integer
        ci_visibility_itr_committers:
          description: >-
            Shows the total count of all active Git committers for Intelligent
            Test Runner in the current month. A committer is active if they
            commit at least 3 times in a given month.
          format: int64
          nullable: true
          type: integer
        ci_visibility_pipeline_committers:
          description: >-
            Shows the total count of all active Git committers for Pipelines in
            the current month. A committer is active if they commit at least 3
            times in a given month.
          format: int64
          nullable: true
          type: integer
        ci_visibility_test_committers:
          description: >-
            The total count of all active Git committers for tests in the
            current month. A committer is active if they commit at least 3 times
            in a given month.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageCIVisibilityResponse:
      description: CI visibility usage response
      properties:
        usage:
          description: Response containing CI visibility usage.
          items:
            $ref: '#/components/schemas/UsageCIVisibilityHour'
          type: array
      type: object
    UsageCloudSecurityPostureManagementHour:
      description: >-
        Cloud Security Management Pro usage for a given organization for a given
        hour.
      properties:
        aas_host_count:
          description: >-
            The number of Cloud Security Management Pro Azure app services hosts
            during a given hour.
          format: double
          nullable: true
          type: number
        aws_host_count:
          description: >-
            The number of Cloud Security Management Pro AWS hosts during a given
            hour.
          format: double
          nullable: true
          type: number
        azure_host_count:
          description: >-
            The number of Cloud Security Management Pro Azure hosts during a
            given hour.
          format: double
          nullable: true
          type: number
        compliance_host_count:
          description: >-
            The number of Cloud Security Management Pro hosts during a given
            hour.
          format: double
          nullable: true
          type: number
        container_count:
          description: >-
            The total number of Cloud Security Management Pro containers during
            a given hour.
          format: double
          nullable: true
          type: number
        gcp_host_count:
          description: >-
            The number of Cloud Security Management Pro GCP hosts during a given
            hour.
          format: double
          nullable: true
          type: number
        host_count:
          description: >-
            The total number of Cloud Security Management Pro hosts during a
            given hour.
          format: double
          nullable: true
          type: number
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageCloudSecurityPostureManagementResponse:
      description: >-
        The response containing the Cloud Security Management Pro usage for each
        hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for Cloud Security Management Pro.
          items:
            $ref: '#/components/schemas/UsageCloudSecurityPostureManagementHour'
          type: array
      type: object
    UsageCWSHour:
      description: Cloud Workload Security usage for a given organization for a given hour.
      properties:
        cws_container_count:
          description: >-
            The total number of Cloud Workload Security container hours from the
            start of the given hour’s month until the given hour.
          format: int64
          nullable: true
          type: integer
        cws_host_count:
          description: >-
            The total number of Cloud Workload Security host hours from the
            start of the given hour’s month until the given hour.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageCWSResponse:
      description: >-
        Response containing the Cloud Workload Security usage for each hour for
        a given organization.
      properties:
        usage:
          description: Get hourly usage for Cloud Workload Security.
          items:
            $ref: '#/components/schemas/UsageCWSHour'
          type: array
      type: object
    UsageDBMHour:
      description: Database Monitoring usage for a given organization for a given hour.
      properties:
        dbm_host_count:
          description: >-
            The total number of Database Monitoring host hours from the start of
            the given hour’s month until the given hour.
          format: int64
          nullable: true
          type: integer
        dbm_queries_count:
          description: >-
            The total number of normalized Database Monitoring queries from the
            start of the given hour’s month until the given hour.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageDBMResponse:
      description: >-
        Response containing the Database Monitoring usage for each hour for a
        given organization.
      properties:
        usage:
          description: Get hourly usage for Database Monitoring
          items:
            $ref: '#/components/schemas/UsageDBMHour'
          type: array
      type: object
    UsageFargateHour:
      description: Number of Fargate tasks run and hourly usage.
      properties:
        apm_fargate_count:
          description: The high-water mark of APM ECS Fargate tasks during the given hour.
          format: int64
          nullable: true
          type: integer
        appsec_fargate_count:
          description: >-
            The Application Security Monitoring ECS Fargate tasks during the
            given hour.
          format: int64
          nullable: true
          type: integer
        avg_profiled_fargate_tasks:
          description: The average profiled task count for Fargate Profiling.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        tasks_count:
          description: The number of Fargate tasks run.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageFargateResponse:
      description: Response containing the number of Fargate tasks run and hourly usage.
      properties:
        usage:
          description: >-
            Array with the number of hourly Fargate tasks recorded for a given
            organization.
          items:
            $ref: '#/components/schemas/UsageFargateHour'
          type: array
      type: object
    UsageHostHour:
      description: >-
        Number of hosts/containers recorded for each hour for a given
        organization.
      properties:
        agent_host_count:
          description: |-
            Contains the total number of infrastructure hosts reporting
            during a given hour that were running the Datadog Agent.
          format: int64
          nullable: true
          type: integer
        alibaba_host_count:
          description: >-
            Contains the total number of hosts that reported through Alibaba
            integration

            (and were NOT running the Datadog Agent).
          format: int64
          nullable: true
          type: integer
        apm_azure_app_service_host_count:
          description: Contains the total number of Azure App Services hosts using APM.
          format: int64
          nullable: true
          type: integer
        apm_host_count:
          description: |-
            Shows the total number of hosts using APM during the hour,
            these are counted as billable (except during trial periods).
          format: int64
          nullable: true
          type: integer
        aws_host_count:
          description: >-
            Contains the total number of hosts that reported through the AWS
            integration

            (and were NOT running the Datadog Agent).
          format: int64
          nullable: true
          type: integer
        azure_host_count:
          description: >-
            Contains the total number of hosts that reported through Azure
            integration

            (and were NOT running the Datadog Agent).
          format: int64
          nullable: true
          type: integer
        container_count:
          description: >-
            Shows the total number of containers reported by the Docker
            integration during the hour.
          format: int64
          nullable: true
          type: integer
        gcp_host_count:
          description: >-
            Contains the total number of hosts that reported through the Google
            Cloud integration

            (and were NOT running the Datadog Agent).
          format: int64
          nullable: true
          type: integer
        heroku_host_count:
          description: >-
            Contains the total number of Heroku dynos reported by the Datadog
            Agent.
          format: int64
          nullable: true
          type: integer
        host_count:
          description: >-
            Contains the total number of billable infrastructure hosts reporting
            during a given hour.

            This is the sum of `agent_host_count`, `aws_host_count`, and
            `gcp_host_count`.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          nullable: true
          type: string
        infra_azure_app_service:
          description: >-
            Contains the total number of hosts that reported through the Azure
            App Services integration

            (and were NOT running the Datadog Agent).
          format: int64
          nullable: true
          type: integer
        opentelemetry_apm_host_count:
          description: >-
            Contains the total number of hosts using APM reported by Datadog
            exporter for the OpenTelemetry Collector.
          format: int64
          nullable: true
          type: integer
        opentelemetry_host_count:
          description: >-
            Contains the total number of hosts reported by Datadog exporter for
            the OpenTelemetry Collector.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        vsphere_host_count:
          description: >-
            Contains the total number of hosts that reported through vSphere
            integration

            (and were NOT running the Datadog Agent).
          format: int64
          nullable: true
          type: integer
      type: object
    UsageHostsResponse:
      description: Host usage response.
      properties:
        usage:
          description: An array of objects related to host usage.
          items:
            $ref: '#/components/schemas/UsageHostHour'
          type: array
      type: object
    HourlyUsageAttributionUsageType:
      description: Supported products for hourly usage attribution requests.
      enum:
        - api_usage
        - apm_fargate_usage
        - apm_host_usage
        - apm_usm_usage
        - appsec_fargate_usage
        - appsec_usage
        - asm_serverless_traced_invocations_usage
        - asm_serverless_traced_invocations_percentage
        - browser_usage
        - ci_pipeline_indexed_spans_usage
        - ci_test_indexed_spans_usage
        - ci_visibility_itr_usage
        - cloud_siem_usage
        - code_security_host_usage
        - container_excl_agent_usage
        - container_usage
        - cspm_containers_usage
        - cspm_hosts_usage
        - custom_event_usage
        - custom_ingested_timeseries_usage
        - custom_timeseries_usage
        - cws_containers_usage
        - cws_fargate_task_usage
        - cws_hosts_usage
        - data_jobs_monitoring_usage
        - data_stream_monitoring_usage
        - dbm_hosts_usage
        - dbm_queries_usage
        - error_tracking_usage
        - error_tracking_percentage
        - estimated_indexed_spans_usage
        - estimated_ingested_spans_usage
        - fargate_usage
        - functions_usage
        - incident_management_monthly_active_users_usage
        - indexed_spans_usage
        - infra_host_usage
        - ingested_logs_bytes_usage
        - ingested_spans_bytes_usage
        - invocations_usage
        - lambda_traced_invocations_usage
        - logs_indexed_15day_usage
        - logs_indexed_180day_usage
        - logs_indexed_1day_usage
        - logs_indexed_30day_usage
        - logs_indexed_360day_usage
        - logs_indexed_3day_usage
        - logs_indexed_45day_usage
        - logs_indexed_60day_usage
        - logs_indexed_7day_usage
        - logs_indexed_90day_usage
        - logs_indexed_custom_retention_usage
        - mobile_app_testing_usage
        - ndm_netflow_usage
        - npm_host_usage
        - obs_pipeline_bytes_usage
        - obs_pipelines_vcpu_usage
        - online_archive_usage
        - profiled_container_usage
        - profiled_fargate_usage
        - profiled_host_usage
        - rum_browser_mobile_sessions_usage
        - rum_replay_sessions_usage
        - sca_fargate_usage
        - sds_scanned_bytes_usage
        - serverless_apps_usage
        - siem_analyzed_logs_add_on_usage
        - siem_ingested_bytes_usage
        - snmp_usage
        - universal_service_monitoring_usage
        - vuln_management_hosts_usage
        - workflow_executions_usage
      type: string
      x-enum-varnames:
        - API_USAGE
        - APM_FARGATE_USAGE
        - APM_HOST_USAGE
        - APM_USM_USAGE
        - APPSEC_FARGATE_USAGE
        - APPSEC_USAGE
        - ASM_SERVERLESS_TRACED_INVOCATIONS_USAGE
        - ASM_SERVERLESS_TRACED_INVOCATIONS_PERCENTAGE
        - BROWSER_USAGE
        - CI_PIPELINE_INDEXED_SPANS_USAGE
        - CI_TEST_INDEXED_SPANS_USAGE
        - CI_VISIBILITY_ITR_USAGE
        - CLOUD_SIEM_USAGE
        - CODE_SECURITY_HOST_USAGE
        - CONTAINER_EXCL_AGENT_USAGE
        - CONTAINER_USAGE
        - CSPM_CONTAINERS_USAGE
        - CSPM_HOSTS_USAGE
        - CUSTOM_EVENT_USAGE
        - CUSTOM_INGESTED_TIMESERIES_USAGE
        - CUSTOM_TIMESERIES_USAGE
        - CWS_CONTAINERS_USAGE
        - CWS_FARGATE_TASK_USAGE
        - CWS_HOSTS_USAGE
        - DATA_JOBS_MONITORING_USAGE
        - DATA_STREAM_MONITORING_USAGE
        - DBM_HOSTS_USAGE
        - DBM_QUERIES_USAGE
        - ERROR_TRACKING_USAGE
        - ERROR_TRACKING_PERCENTAGE
        - ESTIMATED_INDEXED_SPANS_USAGE
        - ESTIMATED_INGESTED_SPANS_USAGE
        - FARGATE_USAGE
        - FUNCTIONS_USAGE
        - INCIDENT_MANAGEMENT_MONTHLY_ACTIVE_USERS_USAGE
        - INDEXED_SPANS_USAGE
        - INFRA_HOST_USAGE
        - INGESTED_LOGS_BYTES_USAGE
        - INGESTED_SPANS_BYTES_USAGE
        - INVOCATIONS_USAGE
        - LAMBDA_TRACED_INVOCATIONS_USAGE
        - LOGS_INDEXED_15DAY_USAGE
        - LOGS_INDEXED_180DAY_USAGE
        - LOGS_INDEXED_1DAY_USAGE
        - LOGS_INDEXED_30DAY_USAGE
        - LOGS_INDEXED_360DAY_USAGE
        - LOGS_INDEXED_3DAY_USAGE
        - LOGS_INDEXED_45DAY_USAGE
        - LOGS_INDEXED_60DAY_USAGE
        - LOGS_INDEXED_7DAY_USAGE
        - LOGS_INDEXED_90DAY_USAGE
        - LOGS_INDEXED_CUSTOM_RETENTION_USAGE
        - MOBILE_APP_TESTING_USAGE
        - NDM_NETFLOW_USAGE
        - NPM_HOST_USAGE
        - OBS_PIPELINE_BYTES_USAGE
        - OBS_PIPELINE_VCPU_USAGE
        - ONLINE_ARCHIVE_USAGE
        - PROFILED_CONTAINER_USAGE
        - PROFILED_FARGATE_USAGE
        - PROFILED_HOST_USAGE
        - RUM_BROWSER_MOBILE_SESSIONS_USAGE
        - RUM_REPLAY_SESSIONS_USAGE
        - SCA_FARGATE_USAGE
        - SDS_SCANNED_BYTES_USAGE
        - SERVERLESS_APPS_USAGE
        - SIEM_ANALYZED_LOGS_ADD_ON_USAGE
        - SIEM_INGESTED_BYTES_USAGE
        - SNMP_USAGE
        - UNIVERSAL_SERVICE_MONITORING_USAGE
        - VULN_MANAGEMENT_HOSTS_USAGE
        - WORKFLOW_EXECUTIONS_USAGE
    HourlyUsageAttributionPagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: >-
            The cursor to get the next results (if any). To make the next
            request, use the same parameters and add `next_record_id`.
          nullable: true
          type: string
      type: object
    HourlyUsageAttributionMetadata:
      description: The object containing document metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/HourlyUsageAttributionPagination'
      type: object
    UsageAttributionTagNames:
      additionalProperties:
        description: >-
          A list of values that are associated with each tag key.


          - An empty list means the resource use wasn't tagged with the
          respective tag.

          - Multiple values means the respective tag was applied multiple times
          on the resource.

          - An `<empty>` value means the resource was tagged with the respective
          tag but did not have a value.
        items:
          description: A given tag in a list.
          example: datadog-integrations-lab
          type: string
        type: array
      description: >-
        Tag keys and values.


        A `null` value here means that the requested tag breakdown cannot be
        applied because it does not match the [tags

        configured for usage
        attribution](https://docs.datadoghq.com/account_management/billing/usage_attribution/#getting-started).

        In this scenario the API returns the total usage, not broken down by
        tags.
      nullable: true
      type: object
    HourlyUsageAttributionBody:
      description: The usage for one set of tags for one hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The name of the organization.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        tag_config_source:
          description: >-
            The source of the usage attribution tag configuration and the
            selected tags in the format of `<source_org_name>:::<selected tag
            1>///<selected tag 2>///<selected tag 3>`.
          type: string
        tags:
          $ref: '#/components/schemas/UsageAttributionTagNames'
        total_usage_sum:
          description: Total product usage for the given tags within the hour.
          format: double
          type: number
        updated_at:
          description: >-
            Shows the most recent hour in the current month for all
            organizations where usages are calculated.
          type: string
        usage_type:
          $ref: '#/components/schemas/HourlyUsageAttributionUsageType'
      type: object
    HourlyUsageAttributionResponse:
      description: Response containing the hourly usage attribution by tag(s).
      properties:
        metadata:
          $ref: '#/components/schemas/HourlyUsageAttributionMetadata'
        usage:
          description: Get the hourly usage attribution by tag(s).
          items:
            $ref: '#/components/schemas/HourlyUsageAttributionBody'
          type: array
      type: object
    UsageIncidentManagementHour:
      description: Incident management usage for a given organization for a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        monthly_active_users:
          description: >-
            Contains the total number monthly active users from the start of the
            given hour's month until the given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageIncidentManagementResponse:
      description: >-
        Response containing the incident management usage for each hour for a
        given organization.
      properties:
        usage:
          description: Get hourly usage for incident management.
          items:
            $ref: '#/components/schemas/UsageIncidentManagementHour'
          type: array
      type: object
    UsageIndexedSpansHour:
      description: The hours of indexed spans usage.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_events_count:
          description: Contains the number of spans indexed.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageIndexedSpansResponse:
      description: A response containing indexed spans usage.
      properties:
        usage:
          description: >-
            Array with the number of hourly traces indexed for a given
            organization.
          items:
            $ref: '#/components/schemas/UsageIndexedSpansHour'
          type: array
      type: object
    UsageIngestedSpansHour:
      description: Ingested spans usage for a given organization for a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        ingested_events_bytes:
          description: >-
            Contains the total number of bytes ingested for APM spans during a
            given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageIngestedSpansResponse:
      description: >-
        Response containing the ingested spans usage for each hour for a given
        organization.
      properties:
        usage:
          description: Get hourly usage for ingested spans.
          items:
            $ref: '#/components/schemas/UsageIngestedSpansHour'
          type: array
      type: object
    UsageIoTHour:
      description: IoT usage for a given organization for a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        iot_device_count:
          description: The total number of IoT devices during a given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageIoTResponse:
      description: >-
        Response containing the IoT usage for each hour for a given
        organization.
      properties:
        usage:
          description: Get hourly usage for IoT.
          items:
            $ref: '#/components/schemas/UsageIoTHour'
          type: array
      type: object
    UsageLogsHour:
      description: Hour usage for logs.
      properties:
        billable_ingested_bytes:
          description: Contains the number of billable log bytes ingested.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_events_count:
          description: Contains the number of log events indexed.
          format: int64
          nullable: true
          type: integer
        ingested_events_bytes:
          description: Contains the number of log bytes ingested.
          format: int64
          nullable: true
          type: integer
        logs_forwarding_events_bytes:
          description: >-
            Contains the number of logs forwarded bytes (data available as of
            April 1st 2023)
          format: int64
          nullable: true
          type: integer
        logs_live_indexed_count:
          description: >-
            Contains the number of live log events indexed (data available as of
            December 1, 2020).
          format: int64
          nullable: true
          type: integer
        logs_live_ingested_bytes:
          description: >-
            Contains the number of live log bytes ingested (data available as of
            December 1, 2020).
          format: int64
          nullable: true
          type: integer
        logs_rehydrated_indexed_count:
          description: >-
            Contains the number of rehydrated log events indexed (data available
            as of December 1, 2020).
          format: int64
          nullable: true
          type: integer
        logs_rehydrated_ingested_bytes:
          description: >-
            Contains the number of rehydrated log bytes ingested (data available
            as of December 1, 2020).
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageLogsResponse:
      description: Response containing the number of logs for each hour.
      properties:
        usage:
          description: An array of objects regarding hourly usage of logs.
          items:
            $ref: '#/components/schemas/UsageLogsHour'
          type: array
      type: object
    UsageLogsByRetentionHour:
      description: >-
        The number of indexed logs for each hour for a given organization broken
        down by retention period.
      properties:
        indexed_events_count:
          description: Total logs indexed with this retention period during a given hour.
          format: int64
          nullable: true
          type: integer
        live_indexed_events_count:
          description: Live logs indexed with this retention period during a given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        rehydrated_indexed_events_count:
          description: >-
            Rehydrated logs indexed with this retention period during a given
            hour.
          format: int64
          nullable: true
          type: integer
        retention:
          description: >-
            The retention period in days or "custom" for all custom retention
            usage.
          nullable: true
          type: string
      type: object
    UsageLogsByRetentionResponse:
      description: >-
        Response containing the indexed logs usage broken down by retention
        period for an organization during a given hour.
      properties:
        usage:
          description: Get hourly usage for indexed logs by retention period.
          items:
            $ref: '#/components/schemas/UsageLogsByRetentionHour'
          type: array
      type: object
    UsageLogsByIndexHour:
      description: Number of indexed logs for each hour and index for a given organization.
      properties:
        event_count:
          description: The total number of indexed logs for the queried hour.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        index_id:
          description: The index ID for this usage.
          type: string
        index_name:
          description: The user specified name for this index ID.
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        retention:
          description: The retention period (in days) for this index ID.
          format: int64
          type: integer
      type: object
    UsageLogsByIndexResponse:
      description: >-
        Response containing the number of indexed logs for each hour and index
        for a given organization.
      properties:
        usage:
          description: >-
            An array of objects regarding hourly usage of logs by index
            response.
          items:
            $ref: '#/components/schemas/UsageLogsByIndexHour'
          type: array
      type: object
    MonthlyUsageAttributionSupportedMetrics:
      description: Supported metrics for monthly usage attribution requests.
      enum:
        - api_usage
        - api_percentage
        - apm_fargate_usage
        - apm_fargate_percentage
        - appsec_fargate_usage
        - appsec_fargate_percentage
        - apm_host_usage
        - apm_host_percentage
        - apm_usm_usage
        - apm_usm_percentage
        - appsec_usage
        - appsec_percentage
        - asm_serverless_traced_invocations_usage
        - asm_serverless_traced_invocations_percentage
        - browser_usage
        - browser_percentage
        - ci_visibility_itr_usage
        - ci_visibility_itr_percentage
        - cloud_siem_usage
        - cloud_siem_percentage
        - code_security_host_usage
        - code_security_host_percentage
        - container_excl_agent_usage
        - container_excl_agent_percentage
        - container_usage
        - container_percentage
        - cspm_containers_percentage
        - cspm_containers_usage
        - cspm_hosts_percentage
        - cspm_hosts_usage
        - custom_timeseries_usage
        - custom_timeseries_percentage
        - custom_ingested_timeseries_usage
        - custom_ingested_timeseries_percentage
        - cws_containers_percentage
        - cws_containers_usage
        - cws_fargate_task_percentage
        - cws_fargate_task_usage
        - cws_hosts_percentage
        - cws_hosts_usage
        - data_jobs_monitoring_usage
        - data_jobs_monitoring_percentage
        - data_stream_monitoring_usage
        - data_stream_monitoring_percentage
        - dbm_hosts_percentage
        - dbm_hosts_usage
        - dbm_queries_percentage
        - dbm_queries_usage
        - error_tracking_usage
        - error_tracking_percentage
        - estimated_indexed_spans_usage
        - estimated_indexed_spans_percentage
        - estimated_ingested_spans_usage
        - estimated_ingested_spans_percentage
        - fargate_usage
        - fargate_percentage
        - functions_usage
        - functions_percentage
        - incident_management_monthly_active_users_usage
        - incident_management_monthly_active_users_percentage
        - infra_host_usage
        - infra_host_percentage
        - invocations_usage
        - invocations_percentage
        - lambda_traced_invocations_usage
        - lambda_traced_invocations_percentage
        - mobile_app_testing_percentage
        - mobile_app_testing_usage
        - ndm_netflow_usage
        - ndm_netflow_percentage
        - npm_host_usage
        - npm_host_percentage
        - obs_pipeline_bytes_usage
        - obs_pipeline_bytes_percentage
        - obs_pipelines_vcpu_usage
        - obs_pipelines_vcpu_percentage
        - online_archive_usage
        - online_archive_percentage
        - profiled_container_usage
        - profiled_container_percentage
        - profiled_fargate_usage
        - profiled_fargate_percentage
        - profiled_host_usage
        - profiled_host_percentage
        - serverless_apps_usage
        - serverless_apps_percentage
        - snmp_usage
        - snmp_percentage
        - universal_service_monitoring_usage
        - universal_service_monitoring_percentage
        - vuln_management_hosts_usage
        - vuln_management_hosts_percentage
        - sds_scanned_bytes_usage
        - sds_scanned_bytes_percentage
        - ci_test_indexed_spans_usage
        - ci_test_indexed_spans_percentage
        - ingested_logs_bytes_usage
        - ingested_logs_bytes_percentage
        - ci_pipeline_indexed_spans_usage
        - ci_pipeline_indexed_spans_percentage
        - indexed_spans_usage
        - indexed_spans_percentage
        - custom_event_usage
        - custom_event_percentage
        - logs_indexed_custom_retention_usage
        - logs_indexed_custom_retention_percentage
        - logs_indexed_360day_usage
        - logs_indexed_360day_percentage
        - logs_indexed_180day_usage
        - logs_indexed_180day_percentage
        - logs_indexed_90day_usage
        - logs_indexed_90day_percentage
        - logs_indexed_60day_usage
        - logs_indexed_60day_percentage
        - logs_indexed_45day_usage
        - logs_indexed_45day_percentage
        - logs_indexed_30day_usage
        - logs_indexed_30day_percentage
        - logs_indexed_15day_usage
        - logs_indexed_15day_percentage
        - logs_indexed_7day_usage
        - logs_indexed_7day_percentage
        - logs_indexed_3day_usage
        - logs_indexed_3day_percentage
        - logs_indexed_1day_usage
        - logs_indexed_1day_percentage
        - rum_replay_sessions_usage
        - rum_replay_sessions_percentage
        - rum_browser_mobile_sessions_usage
        - rum_browser_mobile_sessions_percentage
        - ingested_spans_bytes_usage
        - ingested_spans_bytes_percentage
        - siem_analyzed_logs_add_on_usage
        - siem_analyzed_logs_add_on_percentage
        - siem_ingested_bytes_usage
        - siem_ingested_bytes_percentage
        - workflow_executions_usage
        - workflow_executions_percentage
        - sca_fargate_usage
        - sca_fargate_percentage
        - '*'
      type: string
      x-enum-varnames:
        - API_USAGE
        - API_PERCENTAGE
        - APM_FARGATE_USAGE
        - APM_FARGATE_PERCENTAGE
        - APPSEC_FARGATE_USAGE
        - APPSEC_FARGATE_PERCENTAGE
        - APM_HOST_USAGE
        - APM_HOST_PERCENTAGE
        - APM_USM_USAGE
        - APM_USM_PERCENTAGE
        - APPSEC_USAGE
        - APPSEC_PERCENTAGE
        - ASM_SERVERLESS_TRACED_INVOCATIONS_USAGE
        - ASM_SERVERLESS_TRACED_INVOCATIONS_PERCENTAGE
        - BROWSER_USAGE
        - BROWSER_PERCENTAGE
        - CI_VISIBILITY_ITR_USAGE
        - CI_VISIBILITY_ITR_PERCENTAGE
        - CLOUD_SIEM_USAGE
        - CLOUD_SIEM_PERCENTAGE
        - CODE_SECURITY_HOST_USAGE
        - CODE_SECURITY_HOST_PERCENTAGE
        - CONTAINER_EXCL_AGENT_USAGE
        - CONTAINER_EXCL_AGENT_PERCENTAGE
        - CONTAINER_USAGE
        - CONTAINER_PERCENTAGE
        - CSPM_CONTAINERS_PERCENTAGE
        - CSPM_CONTAINERS_USAGE
        - CSPM_HOSTS_PERCENTAGE
        - CSPM_HOSTS_USAGE
        - CUSTOM_TIMESERIES_USAGE
        - CUSTOM_TIMESERIES_PERCENTAGE
        - CUSTOM_INGESTED_TIMESERIES_USAGE
        - CUSTOM_INGESTED_TIMESERIES_PERCENTAGE
        - CWS_CONTAINERS_PERCENTAGE
        - CWS_CONTAINERS_USAGE
        - CWS_FARGATE_TASK_PERCENTAGE
        - CWS_FARGATE_TASK_USAGE
        - CWS_HOSTS_PERCENTAGE
        - CWS_HOSTS_USAGE
        - DATA_JOBS_MONITORING_USAGE
        - DATA_JOBS_MONITORING_PERCENTAGE
        - DATA_STREAM_MONITORING_USAGE
        - DATA_STREAM_MONITORING_PERCENTAGE
        - DBM_HOSTS_PERCENTAGE
        - DBM_HOSTS_USAGE
        - DBM_QUERIES_PERCENTAGE
        - DBM_QUERIES_USAGE
        - ERROR_TRACKING_USAGE
        - ERROR_TRACKING_PERCENTAGE
        - ESTIMATED_INDEXED_SPANS_USAGE
        - ESTIMATED_INDEXED_SPANS_PERCENTAGE
        - ESTIMATED_INGESTED_SPANS_USAGE
        - ESTIMATED_INGESTED_SPANS_PERCENTAGE
        - FARGATE_USAGE
        - FARGATE_PERCENTAGE
        - FUNCTIONS_USAGE
        - FUNCTIONS_PERCENTAGE
        - INCIDENT_MANAGEMENT_MONTHLY_ACTIVE_USERS_USAGE
        - INCIDENT_MANAGEMENT_MONTHLY_ACTIVE_USERS_PERCENTAGE
        - INFRA_HOST_USAGE
        - INFRA_HOST_PERCENTAGE
        - INVOCATIONS_USAGE
        - INVOCATIONS_PERCENTAGE
        - LAMBDA_TRACED_INVOCATIONS_USAGE
        - LAMBDA_TRACED_INVOCATIONS_PERCENTAGE
        - MOBILE_APP_TESTING_USAGE
        - MOBILE_APP_TESTING_PERCENTAGE
        - NDM_NETFLOW_USAGE
        - NDM_NETFLOW_PERCENTAGE
        - NPM_HOST_USAGE
        - NPM_HOST_PERCENTAGE
        - OBS_PIPELINE_BYTES_USAGE
        - OBS_PIPELINE_BYTES_PERCENTAGE
        - OBS_PIPELINES_VCPU_USAGE
        - OBS_PIPELINES_VCPU_PERCENTAGE
        - ONLINE_ARCHIVE_USAGE
        - ONLINE_ARCHIVE_PERCENTAGE
        - PROFILED_CONTAINER_USAGE
        - PROFILED_CONTAINER_PERCENTAGE
        - PROFILED_FARGATE_USAGE
        - PROFILED_FARGATE_PERCENTAGE
        - PROFILED_HOST_USAGE
        - PROFILED_HOST_PERCENTAGE
        - SERVERLESS_APPS_USAGE
        - SERVERLESS_APPS_PERCENTAGE
        - SNMP_USAGE
        - SNMP_PERCENTAGE
        - UNIVERSAL_SERVICE_MONITORING_USAGE
        - UNIVERSAL_SERVICE_MONITORING_PERCENTAGE
        - VULN_MANAGEMENT_HOSTS_USAGE
        - VULN_MANAGEMENT_HOSTS_PERCENTAGE
        - SDS_SCANNED_BYTES_USAGE
        - SDS_SCANNED_BYTES_PERCENTAGE
        - CI_TEST_INDEXED_SPANS_USAGE
        - CI_TEST_INDEXED_SPANS_PERCENTAGE
        - INGESTED_LOGS_BYTES_USAGE
        - INGESTED_LOGS_BYTES_PERCENTAGE
        - CI_PIPELINE_INDEXED_SPANS_USAGE
        - CI_PIPELINE_INDEXED_SPANS_PERCENTAGE
        - INDEXED_SPANS_USAGE
        - INDEXED_SPANS_PERCENTAGE
        - CUSTOM_EVENT_USAGE
        - CUSTOM_EVENT_PERCENTAGE
        - LOGS_INDEXED_CUSTOM_RETENTION_USAGE
        - LOGS_INDEXED_CUSTOM_RETENTION_PERCENTAGE
        - LOGS_INDEXED_360DAY_USAGE
        - LOGS_INDEXED_360DAY_PERCENTAGE
        - LOGS_INDEXED_180DAY_USAGE
        - LOGS_INDEXED_180DAY_PERCENTAGE
        - LOGS_INDEXED_90DAY_USAGE
        - LOGS_INDEXED_90DAY_PERCENTAGE
        - LOGS_INDEXED_60DAY_USAGE
        - LOGS_INDEXED_60DAY_PERCENTAGE
        - LOGS_INDEXED_45DAY_USAGE
        - LOGS_INDEXED_45DAY_PERCENTAGE
        - LOGS_INDEXED_30DAY_USAGE
        - LOGS_INDEXED_30DAY_PERCENTAGE
        - LOGS_INDEXED_15DAY_USAGE
        - LOGS_INDEXED_15DAY_PERCENTAGE
        - LOGS_INDEXED_7DAY_USAGE
        - LOGS_INDEXED_7DAY_PERCENTAGE
        - LOGS_INDEXED_3DAY_USAGE
        - LOGS_INDEXED_3DAY_PERCENTAGE
        - LOGS_INDEXED_1DAY_USAGE
        - LOGS_INDEXED_1DAY_PERCENTAGE
        - RUM_REPLAY_SESSIONS_USAGE
        - RUM_REPLAY_SESSIONS_PERCENTAGE
        - RUM_BROWSER_MOBILE_SESSIONS_USAGE
        - RUM_BROWSER_MOBILE_SESSIONS_PERCENTAGE
        - INGESTED_SPANS_BYTES_USAGE
        - INGESTED_SPANS_BYTES_PERCENTAGE
        - SIEM_ANALYZED_LOGS_ADD_ON_USAGE
        - SIEM_ANALYZED_LOGS_ADD_ON_PERCENTAGE
        - SIEM_INGESTED_BYTES_USAGE
        - SIEM_INGESTED_BYTES_PERCENTAGE
        - WORKFLOW_EXECUTIONS_USAGE
        - WORKFLOW_EXECUTIONS_PERCENTAGE
        - SCA_FARGATE_USAGE
        - SCA_FARGATE_PERCENTAGE
        - ALL
    UsageAttributionAggregatesBody:
      description: The object containing the aggregates.
      properties:
        agg_type:
          description: The aggregate type.
          example: sum
          type: string
        field:
          description: The field.
          example: custom_timeseries_usage
          type: string
        value:
          description: The value for a given field.
          format: double
          type: number
      type: object
    UsageAttributionAggregates:
      description: An array of available aggregates.
      items:
        $ref: '#/components/schemas/UsageAttributionAggregatesBody'
      type: array
    MonthlyUsageAttributionPagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same parameters with the addition of the
            `next_record_id`.
          nullable: true
          type: string
      type: object
    MonthlyUsageAttributionMetadata:
      description: The object containing document metadata.
      properties:
        aggregates:
          $ref: '#/components/schemas/UsageAttributionAggregates'
        pagination:
          $ref: '#/components/schemas/MonthlyUsageAttributionPagination'
      type: object
    MonthlyUsageAttributionValues:
      description: Fields in Usage Summary by tag(s).
      properties:
        api_percentage:
          description: The percentage of synthetic API test usage by tag(s).
          format: double
          type: number
        api_usage:
          description: The synthetic API test usage by tag(s).
          format: double
          type: number
        apm_fargate_percentage:
          description: The percentage of APM ECS Fargate task usage by tag(s).
          format: double
          type: number
        apm_fargate_usage:
          description: The APM ECS Fargate task usage by tag(s).
          format: double
          type: number
        apm_host_percentage:
          description: The percentage of APM host usage by tag(s).
          format: double
          type: number
        apm_host_usage:
          description: The APM host usage by tag(s).
          format: double
          type: number
        apm_usm_percentage:
          description: >-
            The percentage of APM and Universal Service Monitoring host usage by
            tag(s).
          format: double
          type: number
        apm_usm_usage:
          description: The APM and Universal Service Monitoring host usage by tag(s).
          format: double
          type: number
        appsec_fargate_percentage:
          description: >-
            The percentage of Application Security Monitoring ECS Fargate task
            usage by tag(s).
          format: double
          type: number
        appsec_fargate_usage:
          description: >-
            The Application Security Monitoring ECS Fargate task usage by
            tag(s).
          format: double
          type: number
        appsec_percentage:
          description: >-
            The percentage of Application Security Monitoring host usage by
            tag(s).
          format: double
          type: number
        appsec_usage:
          description: The Application Security Monitoring host usage by tag(s).
          format: double
          type: number
        asm_serverless_traced_invocations_percentage:
          description: >-
            The percentage of Application Security Monitoring Serverless traced
            invocations usage by tag(s).
          format: double
          type: number
        asm_serverless_traced_invocations_usage:
          description: >-
            The Application Security Monitoring Serverless traced invocations
            usage by tag(s).
          format: double
          type: number
        browser_percentage:
          description: The percentage of synthetic browser test usage by tag(s).
          format: double
          type: number
        browser_usage:
          description: The synthetic browser test usage by tag(s).
          format: double
          type: number
        ci_pipeline_indexed_spans_percentage:
          description: The percentage of CI Pipeline Indexed Spans usage by tag(s).
          format: double
          type: number
        ci_pipeline_indexed_spans_usage:
          description: The total CI Pipeline Indexed Spans usage by tag(s).
          format: double
          type: number
        ci_test_indexed_spans_percentage:
          description: The percentage of CI Test Indexed Spans usage by tag(s).
          format: double
          type: number
        ci_test_indexed_spans_usage:
          description: The total CI Test Indexed Spans usage by tag(s).
          format: double
          type: number
        ci_visibility_itr_percentage:
          description: >-
            The percentage of Git committers for Intelligent Test Runner usage
            by tag(s).
          format: double
          type: number
        ci_visibility_itr_usage:
          description: The Git committers for Intelligent Test Runner usage by tag(s).
          format: double
          type: number
        cloud_siem_percentage:
          description: >-
            The percentage of Cloud Security Information and Event Management
            usage by tag(s).
          format: double
          type: number
        cloud_siem_usage:
          description: The Cloud Security Information and Event Management usage by tag(s).
          format: double
          type: number
        code_security_host_percentage:
          description: The percentage of Code Security host usage by tags.
          format: double
          type: number
        code_security_host_usage:
          description: The Code Security host usage by tags.
          format: double
          type: number
        container_excl_agent_percentage:
          description: >-
            The percentage of container usage without the Datadog Agent by
            tag(s).
          format: double
          type: number
        container_excl_agent_usage:
          description: The container usage without the Datadog Agent by tag(s).
          format: double
          type: number
        container_percentage:
          description: The percentage of container usage by tag(s).
          format: double
          type: number
        container_usage:
          description: The container usage by tag(s).
          format: double
          type: number
        cspm_containers_percentage:
          description: >-
            The percentage of Cloud Security Management Pro container usage by
            tag(s).
          format: double
          type: number
        cspm_containers_usage:
          description: The Cloud Security Management Pro container usage by tag(s).
          format: double
          type: number
        cspm_hosts_percentage:
          description: >-
            The percentage of Cloud Security Management Pro host usage by
            tag(s).
          format: double
          type: number
        cspm_hosts_usage:
          description: The Cloud Security Management Pro host usage by tag(s).
          format: double
          type: number
        custom_event_percentage:
          description: The percentage of Custom Events usage by tag(s).
          format: double
          type: number
        custom_event_usage:
          description: The total Custom Events usage by tag(s).
          format: double
          type: number
        custom_ingested_timeseries_percentage:
          description: The percentage of ingested custom metrics usage by tag(s).
          format: double
          type: number
        custom_ingested_timeseries_usage:
          description: The ingested custom metrics usage by tag(s).
          format: double
          type: number
        custom_timeseries_percentage:
          description: The percentage of indexed custom metrics usage by tag(s).
          format: double
          type: number
        custom_timeseries_usage:
          description: The indexed custom metrics usage by tag(s).
          format: double
          type: number
        cws_containers_percentage:
          description: The percentage of Cloud Workload Security container usage by tag(s).
          format: double
          type: number
        cws_containers_usage:
          description: The Cloud Workload Security container usage by tag(s).
          format: double
          type: number
        cws_fargate_task_percentage:
          description: >-
            The percentage of Cloud Workload Security Fargate task usage by
            tag(s).
          format: double
          type: number
        cws_fargate_task_usage:
          description: The Cloud Workload Security Fargate task usage by tag(s).
          format: double
          type: number
        cws_hosts_percentage:
          description: The percentage of Cloud Workload Security host usage by tag(s).
          format: double
          type: number
        cws_hosts_usage:
          description: The Cloud Workload Security host usage by tag(s).
          format: double
          type: number
        data_jobs_monitoring_usage:
          description: The Data Jobs Monitoring usage by tag(s).
          format: double
          type: number
        data_stream_monitoring_usage:
          description: The Data Stream Monitoring usage by tag(s).
          format: double
          type: number
        dbm_hosts_percentage:
          description: The percentage of Database Monitoring host usage by tag(s).
          format: double
          type: number
        dbm_hosts_usage:
          description: The Database Monitoring host usage by tag(s).
          format: double
          type: number
        dbm_queries_percentage:
          description: The percentage of Database Monitoring queries usage by tag(s).
          format: double
          type: number
        dbm_queries_usage:
          description: The Database Monitoring queries usage by tag(s).
          format: double
          type: number
        error_tracking_percentage:
          description: The percentage of error tracking events usage by tag(s).
          format: double
          type: number
        error_tracking_usage:
          description: The error tracking events usage by tag(s).
          format: double
          type: number
        estimated_indexed_spans_percentage:
          description: The percentage of estimated indexed spans usage by tag(s).
          format: double
          type: number
        estimated_indexed_spans_usage:
          description: The estimated indexed spans usage by tag(s).
          format: double
          type: number
        estimated_ingested_spans_percentage:
          description: The percentage of estimated ingested spans usage by tag(s).
          format: double
          type: number
        estimated_ingested_spans_usage:
          description: The estimated ingested spans usage by tag(s).
          format: double
          type: number
        fargate_percentage:
          description: The percentage of Fargate usage by tags.
          format: double
          type: number
        fargate_usage:
          description: The Fargate usage by tags.
          format: double
          type: number
        functions_percentage:
          description: The percentage of Lambda function usage by tag(s).
          format: double
          type: number
        functions_usage:
          description: The Lambda function usage by tag(s).
          format: double
          type: number
        incident_management_monthly_active_users_percentage:
          description: >-
            The percentage of Incident Management monthly active users usage by
            tag(s).
          format: double
          type: number
        incident_management_monthly_active_users_usage:
          description: The Incident Management monthly active users usage by tag(s).
          format: double
          type: number
        indexed_spans_percentage:
          description: The percentage of APM Indexed Spans usage by tag(s).
          format: double
          type: number
        indexed_spans_usage:
          description: The total APM Indexed Spans usage by tag(s).
          format: double
          type: number
        infra_host_percentage:
          description: The percentage of infrastructure host usage by tag(s).
          format: double
          type: number
        infra_host_usage:
          description: The infrastructure host usage by tag(s).
          format: double
          type: number
        ingested_logs_bytes_percentage:
          description: The percentage of Ingested Logs usage by tag(s).
          format: double
          type: number
        ingested_logs_bytes_usage:
          description: The total Ingested Logs usage by tag(s).
          format: double
          type: number
        ingested_spans_bytes_percentage:
          description: The percentage of APM Ingested Spans usage by tag(s).
          format: double
          type: number
        ingested_spans_bytes_usage:
          description: The total APM Ingested Spans usage by tag(s).
          format: double
          type: number
        invocations_percentage:
          description: The percentage of Lambda invocation usage by tag(s).
          format: double
          type: number
        invocations_usage:
          description: The Lambda invocation usage by tag(s).
          format: double
          type: number
        lambda_traced_invocations_percentage:
          description: The percentage of Serverless APM usage by tag(s).
          format: double
          type: number
        lambda_traced_invocations_usage:
          description: The Serverless APM usage by tag(s).
          format: double
          type: number
        logs_indexed_15day_percentage:
          description: The percentage of Indexed Logs (15-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_15day_usage:
          description: The total Indexed Logs (15-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_180day_percentage:
          description: The percentage of Indexed Logs (180-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_180day_usage:
          description: The total Indexed Logs (180-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_1day_percentage:
          description: The percentage of Indexed Logs (1-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_1day_usage:
          description: The total Indexed Logs (1-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_30day_percentage:
          description: The percentage of Indexed Logs (30-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_30day_usage:
          description: The total Indexed Logs (30-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_360day_percentage:
          description: The percentage of Indexed Logs (360-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_360day_usage:
          description: The total Indexed Logs (360-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_3day_percentage:
          description: The percentage of Indexed Logs (3-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_3day_usage:
          description: The total Indexed Logs (3-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_45day_percentage:
          description: The percentage of Indexed Logs (45-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_45day_usage:
          description: The total Indexed Logs (45-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_60day_percentage:
          description: The percentage of Indexed Logs (60-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_60day_usage:
          description: The total Indexed Logs (60-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_7day_percentage:
          description: The percentage of Indexed Logs (7-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_7day_usage:
          description: The total Indexed Logs (7-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_90day_percentage:
          description: The percentage of Indexed Logs (90-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_90day_usage:
          description: The total Indexed Logs (90-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_custom_retention_percentage:
          description: The percentage of Indexed Logs (Custom Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_custom_retention_usage:
          description: The total Indexed Logs (Custom Retention) usage by tag(s).
          format: double
          type: number
        mobile_app_testing_percentage:
          description: The percentage of Synthetic mobile application test usage by tag(s).
          format: double
          type: number
        mobile_app_testing_usage:
          description: The Synthetic mobile application test usage by tag(s).
          format: double
          type: number
        ndm_netflow_percentage:
          description: The percentage of Network Device Monitoring NetFlow usage by tag(s).
          format: double
          type: number
        ndm_netflow_usage:
          description: The Network Device Monitoring NetFlow usage by tag(s).
          format: double
          type: number
        npm_host_percentage:
          description: The percentage of network host usage by tag(s).
          format: double
          type: number
        npm_host_usage:
          description: The network host usage by tag(s).
          format: double
          type: number
        obs_pipeline_bytes_percentage:
          description: The percentage of observability pipeline bytes usage by tag(s).
          format: double
          type: number
        obs_pipeline_bytes_usage:
          description: The observability pipeline bytes usage by tag(s).
          format: double
          type: number
        obs_pipelines_vcpu_percentage:
          description: The percentage of observability pipeline per core usage by tag(s).
          format: double
          type: number
        obs_pipelines_vcpu_usage:
          description: The observability pipeline per core usage by tag(s).
          format: double
          type: number
        online_archive_percentage:
          description: The percentage of online archive usage by tag(s).
          format: double
          type: number
        online_archive_usage:
          description: The online archive usage by tag(s).
          format: double
          type: number
        profiled_container_percentage:
          description: The percentage of profiled container usage by tag(s).
          format: double
          type: number
        profiled_container_usage:
          description: The profiled container usage by tag(s).
          format: double
          type: number
        profiled_fargate_percentage:
          description: The percentage of profiled Fargate task usage by tag(s).
          format: double
          type: number
        profiled_fargate_usage:
          description: The profiled Fargate task usage by tag(s).
          format: double
          type: number
        profiled_host_percentage:
          description: The percentage of profiled hosts usage by tag(s).
          format: double
          type: number
        profiled_host_usage:
          description: The profiled hosts usage by tag(s).
          format: double
          type: number
        rum_browser_mobile_sessions_percentage:
          description: The percentage of RUM Browser and Mobile usage by tag(s).
          format: double
          type: number
        rum_browser_mobile_sessions_usage:
          description: The total RUM Browser and Mobile usage by tag(s).
          format: double
          type: number
        rum_replay_sessions_percentage:
          description: The percentage of RUM Session Replay usage by tag(s).
          format: double
          type: number
        rum_replay_sessions_usage:
          description: The total RUM Session Replay usage by tag(s).
          format: double
          type: number
        sca_fargate_percentage:
          description: >-
            The percentage of Software Composition Analysis Fargate task usage
            by tag(s).
          format: double
          type: number
        sca_fargate_usage:
          description: >-
            The total Software Composition Analysis Fargate task usage by
            tag(s).
          format: double
          type: number
        sds_scanned_bytes_percentage:
          description: The percentage of Sensitive Data Scanner usage by tag(s).
          format: double
          type: number
        sds_scanned_bytes_usage:
          description: The total Sensitive Data Scanner usage by tag(s).
          format: double
          type: number
        serverless_apps_percentage:
          description: The percentage of Serverless Apps usage by tag(s).
          format: double
          type: number
        serverless_apps_usage:
          description: The total Serverless Apps usage by tag(s).
          format: double
          type: number
        siem_analyzed_logs_add_on_percentage:
          description: The percentage of log events analyzed by Cloud SIEM usage by tag(s).
          format: double
          type: number
        siem_analyzed_logs_add_on_usage:
          description: The log events analyzed by Cloud SIEM usage by tag(s).
          format: double
          type: number
        siem_ingested_bytes_percentage:
          description: The percentage of SIEM usage by tag(s).
          format: double
          type: number
        siem_ingested_bytes_usage:
          description: The total SIEM usage by tag(s).
          format: double
          type: number
        snmp_percentage:
          description: The percentage of network device usage by tag(s).
          format: double
          type: number
        snmp_usage:
          description: The network device usage by tag(s).
          format: double
          type: number
        universal_service_monitoring_percentage:
          description: The percentage of universal service monitoring usage by tag(s).
          format: double
          type: number
        universal_service_monitoring_usage:
          description: The universal service monitoring usage by tag(s).
          format: double
          type: number
        vuln_management_hosts_percentage:
          description: >-
            The percentage of Application Vulnerability Management usage by
            tag(s).
          format: double
          type: number
        vuln_management_hosts_usage:
          description: The Application Vulnerability Management usage by tag(s).
          format: double
          type: number
        workflow_executions_percentage:
          description: The percentage of workflow executions usage by tag(s).
          format: double
          type: number
        workflow_executions_usage:
          description: The total workflow executions usage by tag(s).
          format: double
          type: number
      type: object
    MonthlyUsageAttributionBody:
      description: Usage Summary by tag for a given organization.
      properties:
        month:
          description: 'Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM].'
          format: date-time
          type: string
        org_name:
          description: The name of the organization.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        tag_config_source:
          description: >-
            The source of the usage attribution tag configuration and the
            selected tags in the format `<source_org_name>:::<selected tag
            1>///<selected tag 2>///<selected tag 3>`.
          type: string
        tags:
          $ref: '#/components/schemas/UsageAttributionTagNames'
        updated_at:
          description: Datetime of the most recent update to the usage values.
          format: date-time
          type: string
        values:
          $ref: '#/components/schemas/MonthlyUsageAttributionValues'
      type: object
    MonthlyUsageAttributionResponse:
      description: Response containing the monthly Usage Summary by tag(s).
      properties:
        metadata:
          $ref: '#/components/schemas/MonthlyUsageAttributionMetadata'
        usage:
          description: Get usage summary by tag(s).
          items:
            $ref: '#/components/schemas/MonthlyUsageAttributionBody'
          type: array
      type: object
    UsageNetworkFlowsHour:
      description: Number of netflow events indexed for each hour for a given organization.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_events_count:
          description: Contains the number of netflow events indexed.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageNetworkFlowsResponse:
      description: >-
        Response containing the number of netflow events indexed for each hour
        for a given organization.
      properties:
        usage:
          description: Get hourly usage for Network Flows.
          items:
            $ref: '#/components/schemas/UsageNetworkFlowsHour'
          type: array
      type: object
    UsageNetworkHostsHour:
      description: Number of active NPM hosts for each hour for a given organization.
      properties:
        host_count:
          description: Contains the number of active NPM hosts.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageNetworkHostsResponse:
      description: >-
        Response containing the number of active NPM hosts for each hour for a
        given organization.
      properties:
        usage:
          description: Get hourly usage for NPM hosts.
          items:
            $ref: '#/components/schemas/UsageNetworkHostsHour'
          type: array
      type: object
    UsageOnlineArchiveHour:
      description: Online Archive usage in a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        online_archive_events_count:
          description: Total count of online archived events within the hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageOnlineArchiveResponse:
      description: Online Archive usage response.
      properties:
        usage:
          description: Response containing Online Archive usage.
          items:
            $ref: '#/components/schemas/UsageOnlineArchiveHour'
          type: array
      type: object
    UsageProfilingHour:
      description: The number of profiled hosts for each hour for a given organization.
      properties:
        aas_count:
          description: >-
            Contains the total number of profiled Azure app services reporting
            during a given hour.
          format: int64
          nullable: true
          type: integer
        avg_container_agent_count:
          description: Get average number of container agents for that hour.
          format: int64
          nullable: true
          type: integer
        host_count:
          description: >-
            Contains the total number of profiled hosts reporting during a given
            hour.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageProfilingResponse:
      description: >-
        Response containing the number of profiled hosts for each hour for a
        given organization.
      properties:
        usage:
          description: Get hourly usage for profiled hosts.
          items:
            $ref: '#/components/schemas/UsageProfilingHour'
          type: array
      type: object
    UsageRumUnitsHour:
      description: >-
        Number of RUM Units used for each hour for a given organization (data
        available as of November 1, 2021).
      properties:
        browser_rum_units:
          description: The number of browser RUM units.
          format: int64
          nullable: true
          type: integer
        mobile_rum_units:
          description: The number of mobile RUM units.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        rum_units:
          description: Total RUM units across mobile and browser RUM.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageRumUnitsResponse:
      description: >-
        Response containing the number of RUM Units for each hour for a given
        organization.
      properties:
        usage:
          description: Get hourly usage for RUM Units.
          items:
            $ref: '#/components/schemas/UsageRumUnitsHour'
          type: array
      type: object
    UsageRumSessionsHour:
      description: Number of RUM sessions recorded for each hour for a given organization.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        replay_session_count:
          description: >-
            Contains the number of RUM Session Replay counts (data available
            beginning November 1, 2021).
          format: int64
          type: integer
        session_count:
          description: Contains the number of browser RUM lite Sessions.
          format: int64
          nullable: true
          type: integer
        session_count_android:
          description: >-
            Contains the number of mobile RUM sessions on Android (data
            available beginning December 1, 2020).
          format: int64
          nullable: true
          type: integer
        session_count_flutter:
          description: >-
            Contains the number of mobile RUM sessions on Flutter (data
            available beginning March 1, 2023).
          format: int64
          nullable: true
          type: integer
        session_count_ios:
          description: >-
            Contains the number of mobile RUM sessions on iOS (data available
            beginning December 1, 2020).
          format: int64
          nullable: true
          type: integer
        session_count_reactnative:
          description: >-
            Contains the number of mobile RUM sessions on React Native (data
            available beginning May 1, 2022).
          format: int64
          nullable: true
          type: integer
      type: object
    UsageRumSessionsResponse:
      description: >-
        Response containing the number of RUM sessions for each hour for a given
        organization.
      properties:
        usage:
          description: Get hourly usage for RUM sessions.
          items:
            $ref: '#/components/schemas/UsageRumSessionsHour'
          type: array
      type: object
    UsageSDSHour:
      description: Sensitive Data Scanner usage for a given organization for a given hour.
      properties:
        apm_scanned_bytes:
          description: >-
            The total number of bytes scanned of APM usage across all usage
            types by the Sensitive Data Scanner from the start of the given
            hour’s month until the given hour.
          format: int64
          nullable: true
          type: integer
        events_scanned_bytes:
          description: >-
            The total number of bytes scanned of Events usage across all usage
            types by the Sensitive Data Scanner from the start of the given
            hour’s month until the given hour.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        logs_scanned_bytes:
          description: >-
            The total number of bytes scanned of logs usage by the Sensitive
            Data Scanner from the start of the given hour’s month until the
            given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        rum_scanned_bytes:
          description: >-
            The total number of bytes scanned of RUM usage across all usage
            types by the Sensitive Data Scanner from the start of the given
            hour’s month until the given hour.
          format: int64
          nullable: true
          type: integer
        total_scanned_bytes:
          description: >-
            The total number of bytes scanned across all usage types by the
            Sensitive Data Scanner from the start of the given hour’s month
            until the given hour.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageSDSResponse:
      description: >-
        Response containing the Sensitive Data Scanner usage for each hour for a
        given organization.
      properties:
        usage:
          description: Get hourly usage for Sensitive Data Scanner.
          items:
            $ref: '#/components/schemas/UsageSDSHour'
          type: array
      type: object
    UsageSNMPHour:
      description: The number of SNMP devices for each hour for a given organization.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        snmp_devices:
          description: Contains the number of SNMP devices.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageSNMPResponse:
      description: >-
        Response containing the number of SNMP devices for each hour for a given
        organization.
      properties:
        usage:
          description: Get hourly usage for SNMP devices.
          items:
            $ref: '#/components/schemas/UsageSNMPHour'
          type: array
      type: object
    LogsRetentionSumUsage:
      description: >-
        Object containing indexed logs usage grouped by retention period and
        summed.
      properties:
        logs_indexed_logs_usage_sum:
          description: Total indexed logs for this retention period.
          format: int64
          type: integer
        logs_live_indexed_logs_usage_sum:
          description: Live indexed logs for this retention period.
          format: int64
          type: integer
        logs_rehydrated_indexed_logs_usage_sum:
          description: Rehydrated indexed logs for this retention period.
          format: int64
          type: integer
        retention:
          description: >-
            The retention period in days or "custom" for all custom retention
            periods.
          type: string
      type: object
    LogsByRetentionOrgUsage:
      description: Indexed logs usage by retention for a single organization.
      properties:
        usage:
          description: Indexed logs usage for each active retention for the organization.
          items:
            $ref: '#/components/schemas/LogsRetentionSumUsage'
          type: array
      type: object
    LogsByRetentionOrgs:
      description: >-
        Indexed logs usage summary for each organization for each retention
        period with usage.
      properties:
        usage:
          description: Indexed logs usage summary for each organization.
          items:
            $ref: '#/components/schemas/LogsByRetentionOrgUsage'
          type: array
      type: object
    LogsRetentionAggSumUsage:
      description: >-
        Object containing indexed logs usage aggregated across organizations and
        months for a retention period.
      properties:
        logs_indexed_logs_usage_agg_sum:
          description: Total indexed logs for this retention period.
          format: int64
          type: integer
        logs_live_indexed_logs_usage_agg_sum:
          description: Live indexed logs for this retention period.
          format: int64
          type: integer
        logs_rehydrated_indexed_logs_usage_agg_sum:
          description: Rehydrated indexed logs for this retention period.
          format: int64
          type: integer
        retention:
          description: >-
            The retention period in days or "custom" for all custom retention
            periods.
          type: string
      type: object
    LogsByRetentionMonthlyUsage:
      description: >-
        Object containing a summary of indexed logs usage by retention period
        for a single month.
      properties:
        date:
          description: The month for the usage.
          format: date-time
          type: string
        usage:
          description: Indexed logs usage for each active retention for the month.
          items:
            $ref: '#/components/schemas/LogsRetentionSumUsage'
          type: array
      type: object
    LogsByRetention:
      description: Object containing logs usage data broken down by retention period.
      properties:
        orgs:
          $ref: '#/components/schemas/LogsByRetentionOrgs'
        usage:
          description: Aggregated index logs usage for each retention period with usage.
          items:
            $ref: '#/components/schemas/LogsRetentionAggSumUsage'
          type: array
        usage_by_month:
          $ref: '#/components/schemas/LogsByRetentionMonthlyUsage'
      type: object
    UsageSummaryDateOrg:
      description: >-
        Global hourly report of all data billed by Datadog for a given
        organization.
      properties:
        account_name:
          description: The account name.
          type: string
        account_public_id:
          description: The account public id.
          type: string
        agent_host_top99p:
          description: >-
            Shows the 99th percentile of all agent hosts over all hours in the
            current date for the given org.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p:
          description: >-
            Shows the 99th percentile of all Azure app services using APM over
            all hours in the current date for the given org.
          format: int64
          type: integer
        apm_devsecops_host_top99p:
          description: >-
            Shows the 99th percentile of all APM DevSecOps hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        apm_fargate_count_avg:
          description: >-
            Shows the average of all APM ECS Fargate tasks over all hours in the
            current month for the given org.
          format: int64
          type: integer
        apm_host_top99p:
          description: >-
            Shows the 99th percentile of all distinct APM hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        appsec_fargate_count_avg:
          description: >-
            Shows the average of all Application Security Monitoring ECS Fargate
            tasks over all hours in the current month for the given org.
          format: int64
          type: integer
        asm_serverless_sum:
          description: >-
            Shows the sum of all Application Security Monitoring Serverless
            invocations over all hours in the current month for the given org.
          format: int64
          type: integer
        audit_logs_lines_indexed_sum:
          deprecated: true
          description: >-
            Shows the sum of all audit logs lines indexed over all hours in the
            current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        audit_trail_enabled_hwm:
          description: >-
            Shows whether Audit Trail is enabled for the current date for the
            given org.
          format: int64
          type: integer
        avg_profiled_fargate_tasks:
          description: >-
            The average total count for Fargate Container Profiler over all
            hours in the current month for the given org.
          format: int64
          type: integer
        aws_host_top99p:
          description: >-
            Shows the 99th percentile of all AWS hosts over all hours in the
            current date for the given org.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: >-
            Shows the sum of all AWS Lambda invocations over all hours in the
            current date for the given org.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: >-
            Shows the sum of all AWS Lambda invocations over all hours in the
            current date for the given org.
          format: int64
          type: integer
        azure_app_service_top99p:
          description: >-
            Shows the 99th percentile of all Azure app services over all hours
            in the current date for the given org.
          format: int64
          type: integer
        billable_ingested_bytes_sum:
          description: >-
            Shows the sum of all log bytes ingested over all hours in the
            current date for the given org.
          format: int64
          type: integer
        browser_rum_lite_session_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser lite sessions over all hours in the
            current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        browser_rum_replay_session_count_sum:
          description: >-
            Shows the sum of all browser replay sessions over all hours in the
            current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        browser_rum_units_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser RUM units over all hours in the current
            date for the given org (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        ci_pipeline_indexed_spans_sum:
          description: >-
            Shows the sum of all CI pipeline indexed spans over all hours in the
            current date for the given org.
          format: int64
          type: integer
        ci_test_indexed_spans_sum:
          description: >-
            Shows the sum of all CI test indexed spans over all hours in the
            current date for the given org.
          format: int64
          type: integer
        ci_visibility_itr_committers_hwm:
          description: >-
            Shows the high-water mark of all CI visibility intelligent test
            runner committers over all hours in the current date for the given
            org.
          format: int64
          type: integer
        ci_visibility_pipeline_committers_hwm:
          description: >-
            Shows the high-water mark of all CI visibility pipeline committers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        ci_visibility_test_committers_hwm:
          description: >-
            Shows the high-water mark of all CI visibility test committers over
            all hours in the current date for the given org.
          format: int64
          type: integer
        cloud_cost_management_aws_host_count_avg:
          description: >-
            Host count average of Cloud Cost Management for AWS for the given
            date and given org.
          format: int64
          type: integer
        cloud_cost_management_azure_host_count_avg:
          description: >-
            Host count average of Cloud Cost Management for Azure for the given
            date and given org.
          format: int64
          type: integer
        cloud_cost_management_gcp_host_count_avg:
          description: >-
            Host count average of Cloud Cost Management for GCP for the given
            date and given org.
          format: int64
          type: integer
        cloud_cost_management_host_count_avg:
          description: >-
            Host count average of Cloud Cost Management for all cloud providers
            for the given date and given org.
          format: int64
          type: integer
        cloud_siem_events_sum:
          description: >-
            Shows the sum of all Cloud Security Information and Event Management
            events over all hours in the current date for the given org.
          format: int64
          type: integer
        code_analysis_sa_committers_hwm:
          description: >-
            Shows the high-water mark of all Static Analysis committers over all
            hours in the current date for the given org.
          format: int64
          type: integer
        code_analysis_sca_committers_hwm:
          description: >-
            Shows the high-water mark of all static Software Composition
            Analysis committers over all hours in the current date for the given
            org.
          format: int64
          type: integer
        code_security_host_top99p:
          description: >-
            Shows the 99th percentile of all Code Security hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        container_avg:
          description: >-
            Shows the average of all distinct containers over all hours in the
            current date for the given org.
          format: int64
          type: integer
        container_excl_agent_avg:
          description: >-
            Shows the average of containers without the Datadog Agent over all
            hours in the current date for the given organization.
          format: int64
          type: integer
        container_hwm:
          description: >-
            Shows the high-water mark of all distinct containers over all hours
            in the current date for the given org.
          format: int64
          type: integer
        csm_container_enterprise_compliance_count_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise compliance
            containers over all hours in the current date for the given org.
          format: int64
          type: integer
        csm_container_enterprise_cws_count_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise Cloud
            Workload Security containers over all hours in the current date for
            the given org.
          format: int64
          type: integer
        csm_container_enterprise_total_count_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_aas_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure app services hosts over all hours in the current
            date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_aws_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise AWS hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_host_enterprise_azure_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_host_enterprise_compliance_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise compliance hosts over all hours in the current date for
            the given org.
          format: int64
          type: integer
        csm_host_enterprise_cws_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Cloud Workload Security hosts over all hours in the
            current date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_gcp_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise GCP hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_host_enterprise_total_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        cspm_aas_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro Azure
            app services hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        cspm_aws_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro AWS
            hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_azure_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro Azure
            hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_container_avg:
          description: >-
            Shows the average number of Cloud Security Management Pro containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_container_hwm:
          description: >-
            Shows the high-water mark of Cloud Security Management Pro
            containers over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_gcp_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro GCP
            hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        custom_historical_ts_avg:
          description: >-
            Shows the average number of distinct historical custom metrics over
            all hours in the current date for the given org.
          format: int64
          type: integer
        custom_live_ts_avg:
          description: >-
            Shows the average number of distinct live custom metrics over all
            hours in the current date for the given org.
          format: int64
          type: integer
        custom_ts_avg:
          description: >-
            Shows the average number of distinct custom metrics over all hours
            in the current date for the given org.
          format: int64
          type: integer
        cws_container_count_avg:
          description: >-
            Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        cws_fargate_task_avg:
          description: >-
            Shows the average of all distinct Cloud Workload Security Fargate
            tasks over all hours in the current date for the given org.
          format: int64
          type: integer
        cws_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Workload Security hosts over
            all hours in the current date for the given org.
          format: int64
          type: integer
        data_jobs_monitoring_host_hr_sum:
          description: >-
            Shows the sum of all Data Jobs Monitoring hosts over all hours in
            the current date for the given org.
          format: int64
          type: integer
        dbm_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Database Monitoring hosts over all
            hours in the current month for the given org.
          format: int64
          type: integer
        dbm_queries_avg_sum:
          description: >-
            Shows the average of all distinct Database Monitoring normalized
            queries over all hours in the current month for the given org.
          format: int64
          type: integer
        eph_infra_host_agent_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with the Datadog
            Agent over all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_alibaba_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Alibaba over
            all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_aws_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on AWS over all
            hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_azure_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Azure over
            all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_ent_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Enterprise
            over all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_gcp_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on GCP over all
            hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_heroku_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Heroku over
            all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_only_aas_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with only Azure
            App Services over all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_only_vsphere_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with only
            vSphere over all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_opentelemetry_apm_sum:
          description: >-
            Shows the sum of all ephemeral APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current date for the given org.
          format: int64
          type: integer
        eph_infra_host_opentelemetry_sum:
          description: >-
            Shows the sum of all ephemeral hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current date for the given org.
          format: int64
          type: integer
        eph_infra_host_pro_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Pro over all
            hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_proplus_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Pro Plus
            over all hours in the current date for the given org.
          format: int64
          type: integer
        error_tracking_apm_error_events_sum:
          description: >-
            Shows the sum of all Error Tracking APM error events over all hours
            in the current date for the given org.
          format: int64
          type: integer
        error_tracking_error_events_sum:
          description: >-
            Shows the sum of all Error Tracking error events over all hours in
            the current date for the given org.
          format: int64
          type: integer
        error_tracking_events_sum:
          description: >-
            Shows the sum of all Error Tracking events over all hours in the
            current date for the given org.
          format: int64
          type: integer
        error_tracking_rum_error_events_sum:
          description: >-
            Shows the sum of all Error Tracking RUM error events over all hours
            in the current date for the given org.
          format: int64
          type: integer
        fargate_container_profiler_profiling_fargate_avg:
          description: >-
            The average number of Profiling Fargate tasks over all hours in the
            current month for the given org.
          format: int64
          type: integer
        fargate_container_profiler_profiling_fargate_eks_avg:
          description: >-
            The average number of Profiling Fargate Elastic Kubernetes Service
            tasks over all hours in the current month for the given org.
          format: int64
          type: integer
        fargate_tasks_count_avg:
          description: The average task count for Fargate.
          format: int64
          type: integer
        fargate_tasks_count_hwm:
          description: >-
            Shows the high-water mark of all Fargate tasks over all hours in the
            current date for the given org.
          format: int64
          type: integer
        flex_logs_compute_large_avg:
          description: >-
            Shows the average number of Flex Logs Compute Large Instances over
            all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_compute_medium_avg:
          description: >-
            Shows the average number of Flex Logs Compute Medium Instances over
            all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_compute_small_avg:
          description: >-
            Shows the average number of Flex Logs Compute Small Instances over
            all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_compute_xsmall_avg:
          description: >-
            Shows the average number of Flex Logs Compute Extra Small Instances
            over all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_starter_avg:
          description: >-
            Shows the average number of Flex Logs Starter Instances over all
            hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_starter_storage_index_avg:
          description: >-
            Shows the average number of Flex Logs Starter Storage Index
            Instances over all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_starter_storage_retention_adjustment_avg:
          description: >-
            Shows the average number of Flex Logs Starter Storage Retention
            Adjustment Instances over all hours in the current date for the
            given org.
          format: int64
          type: integer
        flex_stored_logs_avg:
          description: >-
            Shows the average of all Flex Stored Logs over all hours in the
            current date for the given org.
          format: int64
          type: integer
        forwarding_events_bytes_sum:
          description: >-
            Shows the sum of all log bytes forwarded over all hours in the
            current date for the given org.
          format: int64
          type: integer
        gcp_host_top99p:
          description: >-
            Shows the 99th percentile of all GCP hosts over all hours in the
            current date for the given org.
          format: int64
          type: integer
        heroku_host_top99p:
          description: >-
            Shows the 99th percentile of all Heroku dynos over all hours in the
            current date for the given org.
          format: int64
          type: integer
        id:
          description: The organization id.
          type: string
        incident_management_monthly_active_users_hwm:
          description: >-
            Shows the high-water mark of incident management monthly active
            users over all hours in the current date for the given org.
          format: int64
          type: integer
        indexed_events_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all log events indexed over all hours in the
            current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        infra_host_top99p:
          description: >-
            Shows the 99th percentile of all distinct infrastructure hosts over
            all hours in the current date for the given org.
          format: int64
          type: integer
        ingested_events_bytes_sum:
          description: >-
            Shows the sum of all log bytes ingested over all hours in the
            current date for the given org.
          format: int64
          type: integer
        iot_device_agg_sum:
          description: >-
            Shows the sum of all IoT devices over all hours in the current date
            for the given org.
          format: int64
          type: integer
        iot_device_top99p_sum:
          description: >-
            Shows the 99th percentile of all IoT devices over all hours in the
            current date for the given org.
          format: int64
          type: integer
        mobile_rum_lite_session_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile lite sessions over all hours in the
            current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        mobile_rum_session_count_android_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Android over all hours
            in the current date for the given org (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_flutter_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Flutter over all hours
            in the current date for the given org (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_ios_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on iOS over all hours in
            the current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        mobile_rum_session_count_reactnative_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on React Native over all
            hours in the current date for the given org (To be deprecated on
            October 1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_roku_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Roku over all hours in
            the current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        mobile_rum_session_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions over all hours in the
            current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        mobile_rum_units_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM units over all hours in the current
            date for the given org (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        name:
          description: The organization name.
          type: string
        ndm_netflow_events_sum:
          description: >-
            Shows the sum of all Network Device Monitoring NetFlow events over
            all hours in the current date for the given org.
          format: int64
          type: integer
        netflow_indexed_events_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all Network flows indexed over all hours in the
            current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        npm_host_top99p:
          description: >-
            Shows the 99th percentile of all distinct Cloud Network Monitoring
            hosts (formerly known as Network hosts) over all hours in the
            current date for the given org.
          format: int64
          type: integer
        observability_pipelines_bytes_processed_sum:
          description: >-
            Sum of all observability pipelines bytes processed over all hours in
            the current date for the given org.
          format: int64
          type: integer
        oci_host_sum:
          description: >-
            Shows the sum of all Oracle Cloud Infrastructure hosts over all
            hours in the current date for the given org.
          format: int64
          type: integer
        oci_host_top99p:
          description: >-
            Shows the 99th percentile of all Oracle Cloud Infrastructure hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        online_archive_events_count_sum:
          description: >-
            Sum of all online archived events over all hours in the current date
            for the given org.
          format: int64
          type: integer
        opentelemetry_apm_host_top99p:
          description: >-
            Shows the 99th percentile of APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current date for the given org.
          format: int64
          type: integer
        opentelemetry_host_top99p:
          description: >-
            Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current date for the given org.
          format: int64
          type: integer
        profiling_aas_count_top99p:
          description: >-
            Shows the 99th percentile of all profiled Azure app services over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        profiling_host_top99p:
          description: >-
            Shows the 99th percentile of all profiled hosts over all hours
            within the current date for the given org.
          format: int64
          type: integer
        public_id:
          description: The organization public id.
          type: string
        region:
          description: The region of the organization.
          type: string
        rum_browser_and_mobile_session_count:
          description: >-
            Shows the sum of all mobile sessions and all browser lite and legacy
            sessions over all hours in the current date for the given org (To be
            deprecated on October 1st, 2024).
          format: int64
          type: integer
        rum_browser_legacy_session_count_sum:
          description: >-
            Shows the sum of all browser RUM legacy sessions over all hours in
            the current date for the given org (To be introduced on October 1st,
            2024).
          format: int64
          type: integer
        rum_browser_lite_session_count_sum:
          description: >-
            Shows the sum of all browser RUM lite sessions over all hours in the
            current date for the given org (To be introduced on October 1st,
            2024).
          format: int64
          type: integer
        rum_browser_replay_session_count_sum:
          description: >-
            Shows the sum of all browser RUM Session Replay counts over all
            hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_lite_session_count_sum:
          description: >-
            Shows the sum of all RUM lite sessions (browser and mobile) over all
            hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_android_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on Android over all
            hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_flutter_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on Flutter over all
            hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_ios_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on iOS over all
            hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_reactnative_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on React Native over
            all hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_roku_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on Roku over all
            hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_android_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Android over all
            hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_flutter_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Flutter over all
            hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_ios_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on iOS over all hours
            in the current date for the given org (To be introduced on October
            1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_kotlinmultiplatform_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Kotlin
            Multiplatform over all hours within the current date for the given
            org.
          format: int64
          type: integer
        rum_mobile_lite_session_count_reactnative_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on React Native over
            all hours in the current date for the given org (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_roku_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Roku over all hours
            in the current date for the given org (To be introduced on October
            1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_unity_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Unity over all
            hours within the current date for the given org.
          format: int64
          type: integer
        rum_mobile_replay_session_count_android_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on Android over all
            hours within the current date for the given org.
          format: int64
          type: integer
        rum_mobile_replay_session_count_ios_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on iOS over all
            hours within the current date for the given org.
          format: int64
          type: integer
        rum_mobile_replay_session_count_kotlinmultiplatform_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on Kotlin
            Multiplatform over all hours within the current date for the given
            org.
          format: int64
          type: integer
        rum_mobile_replay_session_count_reactnative_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on React Native over
            all hours within the current date for the given org.
          format: int64
          type: integer
        rum_replay_session_count_sum:
          description: >-
            Shows the sum of all RUM Session Replay counts over all hours in the
            current date for the given org (To be introduced on October 1st,
            2024).
          format: int64
          type: integer
        rum_session_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser RUM lite sessions over all hours in the
            current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        rum_total_session_count_sum:
          description: >-
            Shows the sum of RUM sessions (browser and mobile) over all hours in
            the current date for the given org.
          format: int64
          type: integer
        rum_units_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser and mobile RUM units over all hours in
            the current date for the given org (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        sca_fargate_count_avg:
          description: >-
            Shows the average of all Software Composition Analysis Fargate tasks
            over all hours in the current date for the given org.
          format: int64
          type: integer
        sca_fargate_count_hwm:
          description: >-
            Shows the sum of the high-water marks of all Software Composition
            Analysis Fargate tasks over all hours in the current date for the
            given org.
          format: int64
          type: integer
        sds_apm_scanned_bytes_sum:
          description: >-
            Sum of all APM bytes scanned with sensitive data scanner over all
            hours in the current date for the given org.
          format: int64
          type: integer
        sds_events_scanned_bytes_sum:
          description: >-
            Sum of all event stream events bytes scanned with sensitive data
            scanner over all hours in the current date for the given org.
          format: int64
          type: integer
        sds_logs_scanned_bytes_sum:
          description: >-
            Shows the sum of all bytes scanned of logs usage by the Sensitive
            Data Scanner over all hours in the current month for the given org.
          format: int64
          type: integer
        sds_rum_scanned_bytes_sum:
          description: >-
            Sum of all RUM bytes scanned with sensitive data scanner over all
            hours in the current date for the given org.
          format: int64
          type: integer
        sds_total_scanned_bytes_sum:
          description: >-
            Shows the sum of all bytes scanned across all usage types by the
            Sensitive Data Scanner over all hours in the current month for the
            given org.
          format: int64
          type: integer
        serverless_apps_azure_count_avg:
          description: >-
            Shows the average of the number of Serverless Apps for Azure for the
            given date and given org.
          format: int64
          type: integer
        serverless_apps_google_count_avg:
          description: >-
            Shows the average of the number of Serverless Apps for Google Cloud
            for the given date and given org.
          format: int64
          type: integer
        serverless_apps_total_count_avg:
          description: >-
            Shows the average of the number of Serverless Apps for Azure and
            Google Cloud for the given date and given org.
          format: int64
          type: integer
        siem_analyzed_logs_add_on_count_sum:
          description: >-
            Shows the sum of all log events analyzed by Cloud SIEM over all
            hours in the current date for the given org.
          format: int64
          type: integer
        synthetics_browser_check_calls_count_sum:
          description: >-
            Shows the sum of all Synthetic browser tests over all hours in the
            current date for the given org.
          format: int64
          type: integer
        synthetics_check_calls_count_sum:
          description: >-
            Shows the sum of all Synthetic API tests over all hours in the
            current date for the given org.
          format: int64
          type: integer
        synthetics_mobile_test_runs_sum:
          description: >-
            Shows the sum of all Synthetic mobile application tests over all
            hours in the current date for the given org.
          format: int64
          type: integer
        synthetics_parallel_testing_max_slots_hwm:
          description: >-
            Shows the high-water mark of used synthetics parallel testing slots
            over all hours in the current date for the given org.
          format: int64
          type: integer
        trace_search_indexed_events_count_sum:
          description: >-
            Shows the sum of all Indexed Spans indexed over all hours in the
            current date for the given org.
          format: int64
          type: integer
        twol_ingested_events_bytes_sum:
          description: >-
            Shows the sum of all ingested APM span bytes over all hours in the
            current date for the given org.
          format: int64
          type: integer
        universal_service_monitoring_host_top99p:
          description: >-
            Shows the 99th percentile of all Universal Service Monitoring hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        vsphere_host_top99p:
          description: >-
            Shows the 99th percentile of all vSphere hosts over all hours in the
            current date for the given org.
          format: int64
          type: integer
        vuln_management_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Application Vulnerability
            Management hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        workflow_executions_usage_sum:
          description: >-
            Sum of all workflows executed over all hours in the current date for
            the given org.
          format: int64
          type: integer
      type: object
    UsageSummaryDate:
      description: >-
        Response with hourly report of all data billed by Datadog all
        organizations.
      properties:
        agent_host_top99p:
          description: >-
            Shows the 99th percentile of all agent hosts over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p:
          description: >-
            Shows the 99th percentile of all Azure app services using APM over
            all hours in the current date all organizations.
          format: int64
          type: integer
        apm_devsecops_host_top99p:
          description: >-
            Shows the 99th percentile of all APM DevSecOps hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        apm_fargate_count_avg:
          description: >-
            Shows the average of all APM ECS Fargate tasks over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        apm_host_top99p:
          description: >-
            Shows the 99th percentile of all distinct APM hosts over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        appsec_fargate_count_avg:
          description: >-
            Shows the average of all Application Security Monitoring ECS Fargate
            tasks over all hours in the current date for all organizations.
          format: int64
          type: integer
        asm_serverless_sum:
          description: >-
            Shows the sum of all Application Security Monitoring Serverless
            invocations over all hours in the current date for all
            organizations.
          format: int64
          type: integer
        audit_logs_lines_indexed_sum:
          deprecated: true
          description: >-
            Shows the sum of audit logs lines indexed over all hours in the
            current date for all organizations (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        audit_trail_enabled_hwm:
          description: >-
            Shows the number of organizations that had Audit Trail enabled in
            the current date.
          format: int64
          type: integer
        avg_profiled_fargate_tasks:
          description: >-
            The average total count for Fargate Container Profiler over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        aws_host_top99p:
          description: >-
            Shows the 99th percentile of all AWS hosts over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: >-
            Shows the average of the number of functions that executed 1 or more
            times each hour in the current date for all organizations.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: >-
            Shows the sum of all AWS Lambda invocations over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        azure_app_service_top99p:
          description: >-
            Shows the 99th percentile of all Azure app services over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        billable_ingested_bytes_sum:
          description: >-
            Shows the sum of all log bytes ingested over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        browser_rum_lite_session_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser lite sessions over all hours in the
            current date for all organizations (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        browser_rum_replay_session_count_sum:
          description: >-
            Shows the sum of all browser replay sessions over all hours in the
            current date for all organizations (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        browser_rum_units_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser RUM units over all hours in the current
            date for all organizations (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        ci_pipeline_indexed_spans_sum:
          description: >-
            Shows the sum of all CI pipeline indexed spans over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        ci_test_indexed_spans_sum:
          description: >-
            Shows the sum of all CI test indexed spans over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        ci_visibility_itr_committers_hwm:
          description: >-
            Shows the high-water mark of all CI visibility intelligent test
            runner committers over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        ci_visibility_pipeline_committers_hwm:
          description: >-
            Shows the high-water mark of all CI visibility pipeline committers
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        ci_visibility_test_committers_hwm:
          description: >-
            Shows the high-water mark of all CI visibility test committers over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        cloud_cost_management_aws_host_count_avg:
          description: >-
            Host count average of Cloud Cost Management for AWS for the given
            date and given organization.
          format: int64
          type: integer
        cloud_cost_management_azure_host_count_avg:
          description: >-
            Host count average of Cloud Cost Management for Azure for the given
            date and given organization.
          format: int64
          type: integer
        cloud_cost_management_gcp_host_count_avg:
          description: >-
            Host count average of Cloud Cost Management for GCP for the given
            date and given organization.
          format: int64
          type: integer
        cloud_cost_management_host_count_avg:
          description: >-
            Host count average of Cloud Cost Management for all cloud providers
            for the given date and given organization.
          format: int64
          type: integer
        cloud_siem_events_sum:
          description: >-
            Shows the sum of all Cloud Security Information and Event Management
            events over all hours in the current date for the given org.
          format: int64
          type: integer
        code_analysis_sa_committers_hwm:
          description: >-
            Shows the high-water mark of all Static Analysis committers over all
            hours in the current date for the given org.
          format: int64
          type: integer
        code_analysis_sca_committers_hwm:
          description: >-
            Shows the high-water mark of all static Software Composition
            Analysis committers over all hours in the current date for the given
            org.
          format: int64
          type: integer
        code_security_host_top99p:
          description: >-
            Shows the 99th percentile of all Code Security hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        container_avg:
          description: >-
            Shows the average of all distinct containers over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        container_excl_agent_avg:
          description: >-
            Shows the average of containers without the Datadog Agent over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        container_hwm:
          description: >-
            Shows the high-water mark of all distinct containers over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        csm_container_enterprise_compliance_count_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise compliance
            containers over all hours in the current date for the given org.
          format: int64
          type: integer
        csm_container_enterprise_cws_count_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise Cloud
            Workload Security containers over all hours in the current date for
            the given org.
          format: int64
          type: integer
        csm_container_enterprise_total_count_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_aas_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure app services hosts over all hours in the current
            date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_aws_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise AWS hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_host_enterprise_azure_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_host_enterprise_compliance_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise compliance hosts over all hours in the current date for
            the given org.
          format: int64
          type: integer
        csm_host_enterprise_cws_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Cloud Workload Security hosts over all hours in the
            current date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_gcp_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise GCP hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_host_enterprise_total_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        cspm_aas_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro Azure
            app services hosts over all hours in the current date for all
            organizations.
          format: int64
          type: integer
        cspm_aws_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro AWS
            hosts over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_azure_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro Azure
            hosts over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_container_avg:
          description: >-
            Shows the average number of Cloud Security Management Pro containers
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_container_hwm:
          description: >-
            Shows the high-water mark of Cloud Security Management Pro
            containers over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_gcp_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro GCP
            hosts over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro hosts
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        custom_ts_avg:
          description: >-
            Shows the average number of distinct custom metrics over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        cws_container_count_avg:
          description: >-
            Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        cws_fargate_task_avg:
          description: >-
            Shows the average of all distinct Cloud Workload Security Fargate
            tasks over all hours in the current date for all organizations.
          format: int64
          type: integer
        cws_host_top99p:
          description: >-
            Shows the 99th percentile of all Cloud Workload Security hosts over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        data_jobs_monitoring_host_hr_sum:
          description: >-
            Shows the sum of all Data Jobs Monitoring hosts over all hours in
            the current date for the given org.
          format: int64
          type: integer
        date:
          description: The date for the usage.
          format: date-time
          type: string
        dbm_host_top99p:
          description: >-
            Shows the 99th percentile of all Database Monitoring hosts over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        dbm_queries_count_avg:
          description: >-
            Shows the average of all normalized Database Monitoring queries over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        eph_infra_host_agent_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with the Datadog
            Agent over all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_alibaba_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Alibaba over
            all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_aws_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on AWS over all
            hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_azure_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Azure over
            all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_ent_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Enterprise
            over all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_gcp_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on GCP over all
            hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_heroku_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Heroku over
            all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_only_aas_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with only Azure
            App Services over all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_only_vsphere_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with only
            vSphere over all hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_opentelemetry_apm_sum:
          description: >-
            Shows the sum of all ephemeral APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current date for the given org.
          format: int64
          type: integer
        eph_infra_host_opentelemetry_sum:
          description: >-
            Shows the sum of all ephemeral hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current date for the given org.
          format: int64
          type: integer
        eph_infra_host_pro_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Pro over all
            hours in the current date for the given org.
          format: int64
          type: integer
        eph_infra_host_proplus_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Pro Plus
            over all hours in the current date for the given org.
          format: int64
          type: integer
        error_tracking_apm_error_events_sum:
          description: >-
            Shows the sum of all Error Tracking APM error events over all hours
            in the current date for the given org.
          format: int64
          type: integer
        error_tracking_error_events_sum:
          description: >-
            Shows the sum of all Error Tracking error events over all hours in
            the current date for the given org.
          format: int64
          type: integer
        error_tracking_events_sum:
          description: >-
            Shows the sum of all Error Tracking events over all hours in the
            current date for the given org.
          format: int64
          type: integer
        error_tracking_rum_error_events_sum:
          description: >-
            Shows the sum of all Error Tracking RUM error events over all hours
            in the current date for the given org.
          format: int64
          type: integer
        fargate_container_profiler_profiling_fargate_avg:
          description: >-
            The average number of Profiling Fargate tasks over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        fargate_container_profiler_profiling_fargate_eks_avg:
          description: >-
            The average number of Profiling Fargate Elastic Kubernetes Service
            tasks over all hours in the current date for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_avg:
          description: >-
            Shows the high-watermark of all Fargate tasks over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_hwm:
          description: >-
            Shows the average of all Fargate tasks over all hours in the current
            date for all organizations.
          format: int64
          type: integer
        flex_logs_compute_large_avg:
          description: >-
            Shows the average number of Flex Logs Compute Large Instances over
            all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_compute_medium_avg:
          description: >-
            Shows the average number of Flex Logs Compute Medium Instances over
            all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_compute_small_avg:
          description: >-
            Shows the average number of Flex Logs Compute Small Instances over
            all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_compute_xsmall_avg:
          description: >-
            Shows the average number of Flex Logs Compute Extra Small Instances
            over all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_starter_avg:
          description: >-
            Shows the average number of Flex Logs Starter Instances over all
            hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_starter_storage_index_avg:
          description: >-
            Shows the average number of Flex Logs Starter Storage Index
            Instances over all hours in the current date for the given org.
          format: int64
          type: integer
        flex_logs_starter_storage_retention_adjustment_avg:
          description: >-
            Shows the average number of Flex Logs Starter Storage Retention
            Adjustment Instances over all hours in the current date for the
            given org.
          format: int64
          type: integer
        flex_stored_logs_avg:
          description: >-
            Shows the average of all Flex Stored Logs over all hours in the
            current date for the given org.
          format: int64
          type: integer
        forwarding_events_bytes_sum:
          description: >-
            Shows the sum of all log bytes forwarded over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        gcp_host_top99p:
          description: >-
            Shows the 99th percentile of all GCP hosts over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        heroku_host_top99p:
          description: >-
            Shows the 99th percentile of all Heroku dynos over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        incident_management_monthly_active_users_hwm:
          description: >-
            Shows the high-water mark of incident management monthly active
            users over all hours in the current date for all organizations.
          format: int64
          type: integer
        indexed_events_count_sum:
          description: >-
            Shows the sum of all log events indexed over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        infra_host_top99p:
          description: >-
            Shows the 99th percentile of all distinct infrastructure hosts over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        ingested_events_bytes_sum:
          description: >-
            Shows the sum of all log bytes ingested over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        iot_device_sum:
          description: >-
            Shows the sum of all IoT devices over all hours in the current date
            for all organizations.
          format: int64
          type: integer
        iot_device_top99p:
          description: >-
            Shows the 99th percentile of all IoT devices over all hours in the
            current date all organizations.
          format: int64
          type: integer
        mobile_rum_lite_session_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile lite sessions over all hours in the
            current date for all organizations (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        mobile_rum_session_count_android_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Android over all hours
            in the current date for all organizations (To be deprecated on
            October 1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_flutter_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Flutter over all hours
            in the current date for all organizations (To be deprecated on
            October 1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_ios_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on iOS over all hours in
            the current date for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_reactnative_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on React Native over all
            hours in the current date for all organizations (To be deprecated on
            October 1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_roku_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Roku over all hours in
            the current date for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions over all hours in the
            current date for all organizations (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        mobile_rum_units_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM units over all hours in the current
            date for all organizations (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        ndm_netflow_events_sum:
          description: >-
            Shows the sum of all Network Device Monitoring NetFlow events over
            all hours in the current date for the given org.
          format: int64
          type: integer
        netflow_indexed_events_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all Network flows indexed over all hours in the
            current date for all organizations (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        npm_host_top99p:
          description: >-
            Shows the 99th percentile of all distinct Cloud Network Monitoring
            hosts (formerly known as Network hosts) over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        observability_pipelines_bytes_processed_sum:
          description: >-
            Sum of all observability pipelines bytes processed over all hours in
            the current date for the given org.
          format: int64
          type: integer
        oci_host_sum:
          description: >-
            Shows the sum of all Oracle Cloud Infrastructure hosts over all
            hours in the current date for the given org.
          format: int64
          type: integer
        oci_host_top99p:
          description: >-
            Shows the 99th percentile of all Oracle Cloud Infrastructure hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        online_archive_events_count_sum:
          description: >-
            Sum of all online archived events over all hours in the current date
            for all organizations.
          format: int64
          type: integer
        opentelemetry_apm_host_top99p:
          description: >-
            Shows the 99th percentile of APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        opentelemetry_host_top99p:
          description: >-
            Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        orgs:
          description: Organizations associated with a user.
          items:
            $ref: '#/components/schemas/UsageSummaryDateOrg'
          type: array
        profiling_aas_count_top99p:
          description: >-
            Shows the 99th percentile of all profiled Azure app services over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        profiling_host_top99p:
          description: >-
            Shows the 99th percentile of all profiled hosts over all hours
            within the current date for all organizations.
          format: int64
          type: integer
        rum_browser_and_mobile_session_count:
          description: >-
            Shows the sum of all mobile sessions and all browser lite and legacy
            sessions over all hours in the current month for all organizations
            (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        rum_browser_legacy_session_count_sum:
          description: >-
            Shows the sum of all browser RUM legacy sessions over all hours in
            the current date for all organizations (To be introduced on October
            1st, 2024).
          format: int64
          type: integer
        rum_browser_lite_session_count_sum:
          description: >-
            Shows the sum of all browser RUM lite sessions over all hours in the
            current date for all organizations (To be introduced on October 1st,
            2024).
          format: int64
          type: integer
        rum_browser_replay_session_count_sum:
          description: >-
            Shows the sum of all browser RUM Session Replay counts over all
            hours in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_lite_session_count_sum:
          description: >-
            Shows the sum of all RUM lite sessions (browser and mobile) over all
            hours in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_android_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on Android over all
            hours in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_flutter_sum:
          description: >-
            Shows the sum of all mobile RUM legacy Sessions on Flutter over all
            hours in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_ios_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on iOS over all
            hours in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_reactnative_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on React Native over
            all hours in the current date for all organizations (To be
            introduced on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_roku_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on Roku over all
            hours in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_android_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Android over all
            hours in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_flutter_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Flutter over all
            hours in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_ios_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on iOS over all hours
            in the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_kotlinmultiplatform_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Kotlin
            Multiplatform over all hours within the current date for all
            organizations.
          format: int64
          type: integer
        rum_mobile_lite_session_count_reactnative_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on React Native over
            all hours in the current date for all organizations (To be
            introduced on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_roku_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Roku over all hours
            within the current date for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_unity_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Unity over all
            hours within the current date for all organizations.
          format: int64
          type: integer
        rum_mobile_replay_session_count_android_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on Android over all
            hours within the current date for the given org.
          format: int64
          type: integer
        rum_mobile_replay_session_count_ios_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on iOS over all
            hours within the current date for the given org.
          format: int64
          type: integer
        rum_mobile_replay_session_count_kotlinmultiplatform_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on Kotlin
            Multiplatform over all hours within the current date for all
            organizations.
          format: int64
          type: integer
        rum_mobile_replay_session_count_reactnative_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on React Native over
            all hours within the current date for the given org.
          format: int64
          type: integer
        rum_replay_session_count_sum:
          description: >-
            Shows the sum of all RUM Session Replay counts over all hours in the
            current date for all organizations (To be introduced on October 1st,
            2024).
          format: int64
          type: integer
        rum_session_count_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser RUM lite sessions over all hours in the
            current date for all organizations (To be deprecated on October 1st,
            2024).
          format: int64
          type: integer
        rum_total_session_count_sum:
          description: >-
            Shows the sum of RUM sessions (browser and mobile) over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        rum_units_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser and mobile RUM units over all hours in
            the current date for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        sca_fargate_count_avg:
          description: >-
            Shows the average of all Software Composition Analysis Fargate tasks
            over all hours in the current date for the given org.
          format: int64
          type: integer
        sca_fargate_count_hwm:
          description: >-
            Shows the sum of the high-water marks of all Software Composition
            Analysis Fargate tasks over all hours in the current date for the
            given org.
          format: int64
          type: integer
        sds_apm_scanned_bytes_sum:
          description: >-
            Sum of all APM bytes scanned with sensitive data scanner over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        sds_events_scanned_bytes_sum:
          description: >-
            Sum of all event stream events bytes scanned with sensitive data
            scanner over all hours in the current date for all organizations.
          format: int64
          type: integer
        sds_logs_scanned_bytes_sum:
          description: >-
            Shows the sum of all bytes scanned of logs usage by the Sensitive
            Data Scanner over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        sds_rum_scanned_bytes_sum:
          description: >-
            Sum of all RUM bytes scanned with sensitive data scanner over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        sds_total_scanned_bytes_sum:
          description: >-
            Shows the sum of all bytes scanned across all usage types by the
            Sensitive Data Scanner over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        serverless_apps_azure_count_avg:
          description: >-
            Shows the average of the number of Serverless Apps for Azure for the
            given date and given org.
          format: int64
          type: integer
        serverless_apps_google_count_avg:
          description: >-
            Shows the average of the number of Serverless Apps for Google Cloud
            for the given date and given org.
          format: int64
          type: integer
        serverless_apps_total_count_avg:
          description: >-
            Shows the average of the number of Serverless Apps for Azure and
            Google Cloud for the given date and given org.
          format: int64
          type: integer
        siem_analyzed_logs_add_on_count_sum:
          description: >-
            Shows the sum of all log events analyzed by Cloud SIEM over all
            hours in the current date for the given org.
          format: int64
          type: integer
        synthetics_browser_check_calls_count_sum:
          description: >-
            Shows the sum of all Synthetic browser tests over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        synthetics_check_calls_count_sum:
          description: >-
            Shows the sum of all Synthetic API tests over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        synthetics_mobile_test_runs_sum:
          description: >-
            Shows the sum of all Synthetic mobile application tests over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        synthetics_parallel_testing_max_slots_hwm:
          description: >-
            Shows the high-water mark of used synthetics parallel testing slots
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        trace_search_indexed_events_count_sum:
          description: >-
            Shows the sum of all Indexed Spans indexed over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        twol_ingested_events_bytes_sum:
          description: >-
            Shows the sum of all ingested APM span bytes over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        universal_service_monitoring_host_top99p:
          description: >-
            Shows the 99th percentile of all universal service management hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        vsphere_host_top99p:
          description: >-
            Shows the 99th percentile of all vSphere hosts over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        vuln_management_host_count_top99p:
          description: >-
            Shows the 99th percentile of all Application Vulnerability
            Management hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        workflow_executions_usage_sum:
          description: >-
            Sum of all workflows executed over all hours in the current date for
            all organizations.
          format: int64
          type: integer
      type: object
    UsageSummaryResponse:
      description: >-
        Response summarizing all usage aggregated across the months in the
        request for all organizations, and broken down by month and by
        organization.
      properties:
        agent_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all agent hosts over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Azure app services using APM over
            all hours in the current month all organizations.
          format: int64
          type: integer
        apm_devsecops_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all APM DevSecOps hosts over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        apm_fargate_count_avg_sum:
          description: >-
            Shows the average of all APM ECS Fargate tasks over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        apm_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all distinct APM hosts over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        appsec_fargate_count_avg_sum:
          description: >-
            Shows the average of all Application Security Monitoring ECS Fargate
            tasks over all hours in the current month for all organizations.
          format: int64
          type: integer
        asm_serverless_agg_sum:
          description: >-
            Shows the sum of all Application Security Monitoring Serverless
            invocations over all hours in the current months for all
            organizations.
          format: int64
          type: integer
        audit_logs_lines_indexed_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all audit logs lines indexed over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        audit_trail_enabled_hwm_sum:
          description: >-
            Shows the total number of organizations that had Audit Trail enabled
            over a specific number of months.
          format: int64
          type: integer
        avg_profiled_fargate_tasks_sum:
          description: >-
            The average total count for Fargate Container Profiler over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        aws_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all AWS hosts over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: >-
            Shows the average of the number of functions that executed 1 or more
            times each hour in the current month for all organizations.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: >-
            Shows the sum of all AWS Lambda invocations over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        azure_app_service_top99p_sum:
          description: >-
            Shows the 99th percentile of all Azure app services over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        azure_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Azure hosts over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        billable_ingested_bytes_agg_sum:
          description: >-
            Shows the sum of all log bytes ingested over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        browser_rum_lite_session_count_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser lite sessions over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        browser_rum_replay_session_count_agg_sum:
          description: >-
            Shows the sum of all browser replay sessions over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        browser_rum_units_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser RUM units over all hours in the current
            month for all organizations (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        ci_pipeline_indexed_spans_agg_sum:
          description: >-
            Shows the sum of all CI pipeline indexed spans over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        ci_test_indexed_spans_agg_sum:
          description: >-
            Shows the sum of all CI test indexed spans over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        ci_visibility_itr_committers_hwm_sum:
          description: >-
            Shows the high-water mark of all CI visibility intelligent test
            runner committers over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        ci_visibility_pipeline_committers_hwm_sum:
          description: >-
            Shows the high-water mark of all CI visibility pipeline committers
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        ci_visibility_test_committers_hwm_sum:
          description: >-
            Shows the high-water mark of all CI visibility test committers over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        cloud_cost_management_aws_host_count_avg_sum:
          description: Sum of the host count average for Cloud Cost Management for AWS.
          format: int64
          type: integer
        cloud_cost_management_azure_host_count_avg_sum:
          description: Sum of the host count average for Cloud Cost Management for Azure.
          format: int64
          type: integer
        cloud_cost_management_gcp_host_count_avg_sum:
          description: Sum of the host count average for Cloud Cost Management for GCP.
          format: int64
          type: integer
        cloud_cost_management_host_count_avg_sum:
          description: >-
            Sum of the host count average for Cloud Cost Management for all
            cloud providers.
          format: int64
          type: integer
        cloud_siem_events_agg_sum:
          description: >-
            Shows the sum of all Cloud Security Information and Event Management
            events over all hours in the current month for all organizations.
          format: int64
          type: integer
        code_analysis_sa_committers_hwm_sum:
          description: >-
            Shows the high-water mark of all Static Analysis committers over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        code_analysis_sca_committers_hwm_sum:
          description: >-
            Shows the high-water mark of all static Software Composition
            Analysis committers over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        code_security_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Code Security hosts over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        container_avg_sum:
          description: >-
            Shows the average of all distinct containers over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        container_excl_agent_avg_sum:
          description: >-
            Shows the average of the containers without the Datadog Agent over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        container_hwm_sum:
          description: >-
            Shows the sum of the high-water marks of all distinct containers
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        csm_container_enterprise_compliance_count_agg_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise compliance
            containers over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        csm_container_enterprise_cws_count_agg_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise Cloud
            Workload Security containers over all hours in the current month for
            all organizations.
          format: int64
          type: integer
        csm_container_enterprise_total_count_agg_sum:
          description: >-
            Shows the sum of all Cloud Security Management Enterprise containers
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_aas_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure app services hosts over all hours in the current
            month for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_aws_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise AWS hosts over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        csm_host_enterprise_azure_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure hosts over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        csm_host_enterprise_compliance_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise compliance hosts over all hours in the current month for
            all organizations.
          format: int64
          type: integer
        csm_host_enterprise_cws_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise Cloud Workload Security hosts over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_gcp_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise GCP hosts over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        csm_host_enterprise_total_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management
            Enterprise hosts over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        cspm_aas_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro Azure
            app services hosts over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        cspm_aws_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro AWS
            hosts over all hours in the current month for all organizations.
          format: int64
          type: integer
        cspm_azure_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro Azure
            hosts over all hours in the current month for all organizations.
          format: int64
          type: integer
        cspm_container_avg_sum:
          description: >-
            Shows the average number of Cloud Security Management Pro containers
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        cspm_container_hwm_sum:
          description: >-
            Shows the sum of the high-water marks of Cloud Security Management
            Pro containers over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        cspm_gcp_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro GCP
            hosts over all hours in the current month for all organizations.
          format: int64
          type: integer
        cspm_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Security Management Pro hosts
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        custom_historical_ts_sum:
          description: >-
            Shows the average number of distinct historical custom metrics over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        custom_live_ts_sum:
          description: >-
            Shows the average number of distinct live custom metrics over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        custom_ts_sum:
          description: >-
            Shows the average number of distinct custom metrics over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        cws_container_avg_sum:
          description: >-
            Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        cws_fargate_task_avg_sum:
          description: >-
            Shows the average of all distinct Cloud Workload Security Fargate
            tasks over all hours in the current month for all organizations.
          format: int64
          type: integer
        cws_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Cloud Workload Security hosts over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        data_jobs_monitoring_host_hr_agg_sum:
          description: >-
            Shows the sum of Data Jobs Monitoring hosts over all hours in the
            current months for all organizations
          format: int64
          type: integer
        dbm_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Database Monitoring hosts over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        dbm_queries_avg_sum:
          description: >-
            Shows the average of all distinct Database Monitoring Normalized
            Queries over all hours in the current month for all organizations.
          format: int64
          type: integer
        end_date:
          description: >-
            Shows the last date of usage in the current month for all
            organizations.
          format: date-time
          type: string
        eph_infra_host_agent_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with the Datadog
            Agent over all hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_alibaba_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Alibaba over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_aws_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on AWS over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_azure_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Azure over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_ent_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Enterprise
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_gcp_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on GCP over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_heroku_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts on Heroku over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_only_aas_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with only Azure
            App Services over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        eph_infra_host_only_vsphere_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts with only
            vSphere over all hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_opentelemetry_agg_sum:
          description: >-
            Shows the sum of all ephemeral hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_opentelemetry_apm_agg_sum:
          description: >-
            Shows the sum of all ephemeral APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_pro_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Pro over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        eph_infra_host_proplus_agg_sum:
          description: >-
            Shows the sum of all ephemeral infrastructure hosts for Pro Plus
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        error_tracking_apm_error_events_agg_sum:
          description: >-
            Shows the sum of all Error Tracking APM error events over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        error_tracking_error_events_agg_sum:
          description: >-
            Shows the sum of all Error Tracking error events over all hours in
            the current month for all organizations.
          format: int64
          type: integer
        error_tracking_events_agg_sum:
          description: >-
            Shows the sum of all Error Tracking events over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        error_tracking_rum_error_events_agg_sum:
          description: >-
            Shows the sum of all Error Tracking RUM error events over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        fargate_container_profiler_profiling_fargate_avg_sum:
          description: >-
            The average number of Profiling Fargate tasks over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        fargate_container_profiler_profiling_fargate_eks_avg_sum:
          description: >-
            The average number of Profiling Fargate Elastic Kubernetes Service
            tasks over all hours in the current month for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_avg_sum:
          description: >-
            Shows the average of all Fargate tasks over all hours in the current
            month for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_hwm_sum:
          description: >-
            Shows the sum of the high-water marks of all Fargate tasks over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        flex_logs_compute_large_avg_sum:
          description: >-
            Shows the average number of Flex Logs Compute Large Instances over
            all hours in the current months for all organizations.
          format: int64
          type: integer
        flex_logs_compute_medium_avg_sum:
          description: >-
            Shows the average number of Flex Logs Compute Medium Instances over
            all hours in the current months for all organizations.
          format: int64
          type: integer
        flex_logs_compute_small_avg_sum:
          description: >-
            Shows the average number of Flex Logs Compute Small Instances over
            all hours in the current months for all organizations.
          format: int64
          type: integer
        flex_logs_compute_xsmall_avg_sum:
          description: >-
            Shows the average number of Flex Logs Compute Extra Small Instances
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        flex_logs_starter_avg_sum:
          description: >-
            Shows the average number of Flex Logs Starter Instances over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        flex_logs_starter_storage_index_avg_sum:
          description: >-
            Shows the average number of Flex Logs Starter Storage Index
            Instances over all hours in the current months for all
            organizations.
          format: int64
          type: integer
        flex_logs_starter_storage_retention_adjustment_avg_sum:
          description: >-
            Shows the average number of Flex Logs Starter Storage Retention
            Adjustment Instances over all hours in the current months for all
            organizations.
          format: int64
          type: integer
        flex_stored_logs_avg_sum:
          description: >-
            Shows the average of all Flex Stored Logs over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        forwarding_events_bytes_agg_sum:
          description: >-
            Shows the sum of all logs forwarding bytes over all hours in the
            current month for all organizations (data available as of April 1,
            2023)
          format: int64
          type: integer
        gcp_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all GCP hosts over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        heroku_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Heroku dynos over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        incident_management_monthly_active_users_hwm_sum:
          description: >-
            Shows sum of the high-water marks of incident management monthly
            active users in the current month for all organizations.
          format: int64
          type: integer
        indexed_events_count_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all log events indexed over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        infra_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all distinct infrastructure hosts over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        ingested_events_bytes_agg_sum:
          description: >-
            Shows the sum of all log bytes ingested over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        iot_device_agg_sum:
          description: >-
            Shows the sum of all IoT devices over all hours in the current month
            for all organizations.
          format: int64
          type: integer
        iot_device_top99p_sum:
          description: >-
            Shows the 99th percentile of all IoT devices over all hours in the
            current month of all organizations.
          format: int64
          type: integer
        last_updated:
          description: >-
            Shows the most recent hour in the current month for all
            organizations for which all usages were calculated.
          format: date-time
          type: string
        live_indexed_events_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all live logs indexed over all hours in the current
            month for all organization (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        live_ingested_bytes_agg_sum:
          description: >-
            Shows the sum of all live logs bytes ingested over all hours in the
            current month for all organizations (data available as of December
            1, 2020).
          format: int64
          type: integer
        logs_by_retention:
          $ref: '#/components/schemas/LogsByRetention'
        mobile_rum_lite_session_count_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile lite sessions over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_android_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Android over all hours
            in the current month for all organizations (To be deprecated on
            October 1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_flutter_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Flutter over all hours
            in the current month for all organizations (To be deprecated on
            October 1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_ios_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on iOS over all hours in
            the current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_reactnative_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on React Native over all
            hours in the current month for all organizations (To be deprecated
            on October 1st, 2024).
          format: int64
          type: integer
        mobile_rum_session_count_roku_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM sessions on Roku over all hours in
            the current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        mobile_rum_units_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all mobile RUM units over all hours in the current
            month for all organizations (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        ndm_netflow_events_agg_sum:
          description: >-
            Shows the sum of all Network Device Monitoring NetFlow events over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        netflow_indexed_events_count_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all Network flows indexed over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        npm_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all distinct Cloud Network Monitoring
            hosts (formerly known as Network hosts) over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        observability_pipelines_bytes_processed_agg_sum:
          description: >-
            Sum of all observability pipelines bytes processed over all hours in
            the current month for all organizations.
          format: int64
          type: integer
        oci_host_agg_sum:
          description: >-
            Shows the sum of Oracle Cloud Infrastructure hosts over all hours in
            the current months for all organizations
          format: int64
          type: integer
        oci_host_top99p_sum:
          description: >-
            Shows the 99th percentile of Oracle Cloud Infrastructure hosts over
            all hours in the current months for all organizations
          format: int64
          type: integer
        online_archive_events_count_agg_sum:
          description: >-
            Sum of all online archived events over all hours in the current
            month for all organizations.
          format: int64
          type: integer
        opentelemetry_apm_host_top99p_sum:
          description: >-
            Shows the 99th percentile of APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        opentelemetry_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        profiling_aas_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all profiled Azure app services over
            all hours in the current month for all organizations.
          format: int64
          type: integer
        profiling_container_agent_count_avg:
          description: >-
            Shows the average number of profiled containers over all hours in
            the current month for all organizations.
          format: int64
          type: integer
        profiling_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all profiled hosts over all hours in
            the current month for all organizations.
          format: int64
          type: integer
        rehydrated_indexed_events_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all rehydrated logs indexed over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        rehydrated_ingested_bytes_agg_sum:
          description: >-
            Shows the sum of all rehydrated logs bytes ingested over all hours
            in the current month for all organizations (data available as of
            December 1, 2020).
          format: int64
          type: integer
        rum_browser_and_mobile_session_count:
          description: >-
            Shows the sum of all mobile sessions and all browser lite and legacy
            sessions over all hours in the current month for all organizations
            (To be deprecated on October 1st, 2024).
          format: int64
          type: integer
        rum_browser_legacy_session_count_agg_sum:
          description: >-
            Shows the sum of all browser RUM legacy sessions over all hours in
            the current month for all organizations (To be introduced on October
            1st, 2024).
          format: int64
          type: integer
        rum_browser_lite_session_count_agg_sum:
          description: >-
            Shows the sum of all browser RUM lite sessions over all hours in the
            current month for all organizations (To be introduced on October
            1st, 2024).
          format: int64
          type: integer
        rum_browser_replay_session_count_agg_sum:
          description: >-
            Shows the sum of all browser RUM Session Replay counts over all
            hours in the current month for all organizations (To be introduced
            on October 1st, 2024).
          format: int64
          type: integer
        rum_lite_session_count_agg_sum:
          description: >-
            Shows the sum of all RUM lite sessions (browser and mobile) over all
            hours in the current month for all organizations (To be introduced
            on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_android_agg_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on Android over all
            hours in the current month for all organizations (To be introduced
            on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_flutter_agg_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on Flutter over all
            hours in the current month for all organizations (To be introduced
            on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_ios_agg_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on iOS over all
            hours in the current month for all organizations (To be introduced
            on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_reactnative_agg_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on React Native over
            all hours in the current month for all organizations (To be
            introduced on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_legacy_session_count_roku_agg_sum:
          description: >-
            Shows the sum of all mobile RUM legacy sessions on Roku over all
            hours in the current month for all organizations (To be introduced
            on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_android_agg_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Android over all
            hours in the current month for all organizations (To be introduced
            on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_flutter_agg_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Flutter over all
            hours in the current month for all organizations (To be introduced
            on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_ios_agg_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on iOS over all hours
            in the current month for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_kotlinmultiplatform_agg_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Kotlin
            Multiplatform over all hours within the current month for all
            organizations.
          format: int64
          type: integer
        rum_mobile_lite_session_count_reactnative_agg_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on React Native over
            all hours in the current month for all organizations (To be
            introduced on October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_roku_agg_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Roku over all hours
            within the current month for all organizations (To be introduced on
            October 1st, 2024).
          format: int64
          type: integer
        rum_mobile_lite_session_count_unity_agg_sum:
          description: >-
            Shows the sum of all mobile RUM lite sessions on Unity over all
            hours within the current month for all organizations.
          format: int64
          type: integer
        rum_mobile_replay_session_count_android_agg_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on Android over all
            hours within the current month for all organizations.
          format: int64
          type: integer
        rum_mobile_replay_session_count_ios_agg_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on iOS over all
            hours within the current month for all organizations.
          format: int64
          type: integer
        rum_mobile_replay_session_count_kotlinmultiplatform_agg_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on Kotlin
            Multiplatform over all hours within the current month for all
            organizations.
          format: int64
          type: integer
        rum_mobile_replay_session_count_reactnative_agg_sum:
          description: >-
            Shows the sum of all mobile RUM replay sessions on React Native over
            all hours within the current month for all organizations.
          format: int64
          type: integer
        rum_replay_session_count_agg_sum:
          description: >-
            Shows the sum of all RUM Session Replay counts over all hours in the
            current month for all organizations (To be introduced on October
            1st, 2024).
          format: int64
          type: integer
        rum_session_count_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser RUM lite sessions over all hours in the
            current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        rum_total_session_count_agg_sum:
          description: >-
            Shows the sum of RUM sessions (browser and mobile) over all hours in
            the current month for all organizations.
          format: int64
          type: integer
        rum_units_agg_sum:
          deprecated: true
          description: >-
            Shows the sum of all browser and mobile RUM units over all hours in
            the current month for all organizations (To be deprecated on October
            1st, 2024).
          format: int64
          type: integer
        sca_fargate_count_avg_sum:
          description: >-
            Shows the average of all Software Composition Analysis Fargate tasks
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        sca_fargate_count_hwm_sum:
          description: >-
            Shows the sum of the high-water marks of all Software Composition
            Analysis Fargate tasks over all hours in the current months for all
            organizations.
          format: int64
          type: integer
        sds_apm_scanned_bytes_sum:
          description: >-
            Sum of all APM bytes scanned with sensitive data scanner in the
            current month for all organizations.
          format: int64
          type: integer
        sds_events_scanned_bytes_sum:
          description: >-
            Sum of all event stream events bytes scanned with sensitive data
            scanner in the current month for all organizations.
          format: int64
          type: integer
        sds_logs_scanned_bytes_sum:
          description: >-
            Shows the sum of all bytes scanned of logs usage by the Sensitive
            Data Scanner over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        sds_rum_scanned_bytes_sum:
          description: >-
            Sum of all RUM bytes scanned with sensitive data scanner in the
            current month for all organizations.
          format: int64
          type: integer
        sds_total_scanned_bytes_sum:
          description: >-
            Shows the sum of all bytes scanned across all usage types by the
            Sensitive Data Scanner over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        serverless_apps_azure_count_avg_sum:
          description: >-
            Sum of the average number of Serverless Apps for Azure in the
            current month for all organizations.
          format: int64
          type: integer
        serverless_apps_google_count_avg_sum:
          description: >-
            Sum of the average number of Serverless Apps for Google Cloud in the
            current month for all organizations.
          format: int64
          type: integer
        serverless_apps_total_count_avg_sum:
          description: >-
            Sum of the average number of Serverless Apps for Azure and Google
            Cloud in the current month for all organizations.
          format: int64
          type: integer
        siem_analyzed_logs_add_on_count_agg_sum:
          description: >-
            Shows the sum of all log events analyzed by Cloud SIEM over all
            hours in the current month for all organizations.
          format: int64
          type: integer
        start_date:
          description: >-
            Shows the first date of usage in the current month for all
            organizations.
          format: date-time
          type: string
        synthetics_browser_check_calls_count_agg_sum:
          description: >-
            Shows the sum of all Synthetic browser tests over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        synthetics_check_calls_count_agg_sum:
          description: >-
            Shows the sum of all Synthetic API tests over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        synthetics_mobile_test_runs_agg_sum:
          description: >-
            Shows the sum of Synthetic mobile application tests over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        synthetics_parallel_testing_max_slots_hwm_sum:
          description: >-
            Shows the sum of the high-water marks of used synthetics parallel
            testing slots over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        trace_search_indexed_events_count_agg_sum:
          description: >-
            Shows the sum of all Indexed Spans indexed over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        twol_ingested_events_bytes_agg_sum:
          description: >-
            Shows the sum of all ingested APM span bytes over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        universal_service_monitoring_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all Universal Service Monitoring hosts
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        usage:
          description: An array of objects regarding hourly usage.
          items:
            $ref: '#/components/schemas/UsageSummaryDate'
          type: array
        vsphere_host_top99p_sum:
          description: >-
            Shows the 99th percentile of all vSphere hosts over all hours in the
            current month for all organizations.
          format: int64
          type: integer
        vuln_management_host_count_top99p_sum:
          description: >-
            Shows the 99th percentile of all Application Vulnerability
            Management hosts over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        workflow_executions_usage_agg_sum:
          description: >-
            Sum of all workflows executed over all hours in the current month
            for all organizations.
          format: int64
          type: integer
      type: object
    UsageSyntheticsHour:
      description: >-
        The number of synthetics tests run for each hour for a given
        organization.
      properties:
        check_calls_count:
          description: Contains the number of Synthetics API tests run.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageSyntheticsResponse:
      description: >-
        Response containing the number of Synthetics API tests run for each hour
        for a given organization.
      properties:
        usage:
          description: >-
            Array with the number of hourly Synthetics test run for a given
            organization.
          items:
            $ref: '#/components/schemas/UsageSyntheticsHour'
          type: array
      type: object
    UsageSyntheticsAPIHour:
      description: >-
        Number of Synthetics API tests run for each hour for a given
        organization.
      properties:
        check_calls_count:
          description: Contains the number of Synthetics API tests run.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageSyntheticsAPIResponse:
      description: >-
        Response containing the number of Synthetics API tests run for each hour
        for a given organization.
      properties:
        usage:
          description: Get hourly usage for Synthetics API tests.
          items:
            $ref: '#/components/schemas/UsageSyntheticsAPIHour'
          type: array
      type: object
    UsageSyntheticsBrowserHour:
      description: >-
        Number of Synthetics Browser tests run for each hour for a given
        organization.
      properties:
        browser_check_calls_count:
          description: Contains the number of Synthetics Browser tests run.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageSyntheticsBrowserResponse:
      description: >-
        Response containing the number of Synthetics Browser tests run for each
        hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for Synthetics Browser tests.
          items:
            $ref: '#/components/schemas/UsageSyntheticsBrowserHour'
          type: array
      type: object
    UsageTimeseriesHour:
      description: The hourly usage of timeseries.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        num_custom_input_timeseries:
          description: >-
            Contains the number of custom metrics that are inputs for
            aggregations (metric configured is custom).
          format: int64
          type: integer
        num_custom_output_timeseries:
          description: >-
            Contains the number of custom metrics that are outputs for
            aggregations (metric configured is custom).
          format: int64
          type: integer
        num_custom_timeseries:
          description: >-
            Contains sum of non-aggregation custom metrics and custom metrics
            that are outputs for aggregations.
          format: int64
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageTimeseriesResponse:
      description: Response containing hourly usage of timeseries.
      properties:
        usage:
          description: An array of objects regarding hourly usage of timeseries.
          items:
            $ref: '#/components/schemas/UsageTimeseriesHour'
          type: array
      type: object
    UsageTopAvgMetricsPagination:
      description: The metadata for the current pagination.
      properties:
        limit:
          description: Maximum amount of records to be returned.
          format: int64
          type: integer
        next_record_id:
          description: >-
            The cursor to get the next results (if any). To make the next
            request, use the same parameters and add `next_record_id`.
          nullable: true
          type: string
        total_number_of_records:
          description: Total number of records.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageTopAvgMetricsMetadata:
      description: The object containing document metadata.
      properties:
        day:
          description: >-
            The day value from the user request that contains the returned usage
            data. (If day was used the request)
          format: date-time
          type: string
        month:
          description: >-
            The month value from the user request that contains the returned
            usage data. (If month was used the request)
          format: date-time
          type: string
        pagination:
          $ref: '#/components/schemas/UsageTopAvgMetricsPagination'
      type: object
    UsageMetricCategory:
      description: Contains the metric category.
      enum:
        - standard
        - custom
      type: string
      x-enum-varnames:
        - STANDARD
        - CUSTOM
    UsageTopAvgMetricsHour:
      description: Number of hourly recorded custom metrics for a given organization.
      properties:
        avg_metric_hour:
          description: Average number of timeseries per hour in which the metric occurs.
          format: int64
          type: integer
        max_metric_hour:
          description: Maximum number of timeseries per hour in which the metric occurs.
          format: int64
          type: integer
        metric_category:
          $ref: '#/components/schemas/UsageMetricCategory'
        metric_name:
          description: Contains the custom metric name.
          type: string
      type: object
    UsageTopAvgMetricsResponse:
      description: >-
        Response containing the number of hourly recorded custom metrics for a
        given organization.
      properties:
        metadata:
          $ref: '#/components/schemas/UsageTopAvgMetricsMetadata'
        usage:
          description: Number of hourly recorded custom metrics for a given organization.
          items:
            $ref: '#/components/schemas/UsageTopAvgMetricsHour'
          type: array
      type: object
    UserListResponse:
      description: Array of Datadog users for a given organization.
      properties:
        users:
          description: Array of users.
          items:
            $ref: '#/components/schemas/Userv1'
          type: array
      type: object
    UserResponsev1:
      description: A Datadog User.
      properties:
        user:
          $ref: '#/components/schemas/Userv1'
      type: object
    UserDisableResponse:
      description: Array of user disabled for a given organization.
      properties:
        message:
          description: Information pertaining to a user disabled for a given organization.
          type: string
      type: object
    AuthenticationValidationResponse:
      description: Represent validation endpoint responses.
      properties:
        valid:
          description: Return `true` if the authentication response is valid.
          example: true
          readOnly: true
          type: boolean
      type: object
    ContentEncodingv1:
      description: HTTP header used to compress the media-type.
      enum:
        - gzip
        - deflate
      type: string
      x-enum-varnames:
        - GZIP
        - DEFLATE
    HTTPLogItemv1:
      additionalProperties:
        description: Additional log attributes.
        type: string
      description: Logs that are sent over HTTP.
      properties:
        ddsource:
          description: >-
            The integration name associated with your log: the technology from
            which the log originated.

            When it matches an integration name, Datadog automatically installs
            the corresponding parsers and facets.

            See [reserved
            attributes](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes).
          example: nginx
          type: string
        ddtags:
          description: Tags associated with your logs.
          example: env:staging,version:5.1
          type: string
        hostname:
          description: The name of the originating host of the log.
          example: i-012345678
          type: string
        message:
          description: >-
            The message [reserved
            attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message
            attribute as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where
            it is indexed for full text search.
          example: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
          type: string
        service:
          description: >-
            The name of the application or service generating the log events.

            It is used to switch from Logs to APM, so make sure you define the
            same value when you use both products.

            See [reserved
            attributes](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes).
          example: payment
          type: string
      required:
        - message
      type: object
    HTTPLogv1:
      description: Structured log message.
      items:
        $ref: '#/components/schemas/HTTPLogItemv1'
      type: array
    HTTPLogErrorv1:
      description: Invalid query performed.
      properties:
        code:
          description: Error code.
          example: 0
          format: int32
          maximum: 2147483647
          type: integer
        message:
          description: Error message.
          example: Your browser sent an invalid request.
          type: string
      required:
        - code
        - message
      type: object
    AWSAssumeRoleType:
      description: The definition of `AWSAssumeRoleType` object.
      enum:
        - AWSAssumeRole
      example: AWSAssumeRole
      type: string
      x-enum-varnames:
        - AWSASSUMEROLE
    AWSAssumeRole:
      description: The definition of `AWSAssumeRole` object.
      properties:
        account_id:
          description: AWS account the connection is created for
          example: '111222333444'
          pattern: ^\d{12}$
          type: string
        external_id:
          description: >-
            External ID used to scope which connection can be used to assume the
            role
          example: 33a1011635c44b38a064cf14e82e1d8f
          readOnly: true
          type: string
        principal_id:
          description: AWS account that will assume the role
          example: '123456789012'
          readOnly: true
          type: string
        role:
          description: Role to assume
          example: my-role
          type: string
        type:
          $ref: '#/components/schemas/AWSAssumeRoleType'
      required:
        - type
        - account_id
        - role
      type: object
    AWSCredentials:
      description: The definition of `AWSCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/AWSAssumeRole'
    AWSIntegrationType:
      description: The definition of `AWSIntegrationType` object.
      enum:
        - AWS
      example: AWS
      type: string
      x-enum-varnames:
        - AWS
    AWSIntegration:
      description: The definition of `AWSIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AWSCredentials'
        type:
          $ref: '#/components/schemas/AWSIntegrationType'
      required:
        - type
        - credentials
      type: object
    HTTPBody:
      description: The definition of `HTTPBody` object.
      properties:
        content:
          description: Serialized body content
          example: '{"some-json": "with-value"}'
          type: string
        content_type:
          description: Content type of the body
          example: application/json
          type: string
      type: object
    HTTPHeader:
      description: The definition of `HTTPHeader` object.
      properties:
        name:
          description: The `HTTPHeader` `name`.
          example: MyHttpHeader
          pattern: ^[A-Za-z][A-Za-z\\d\\-\\_]*$
          type: string
        value:
          description: The `HTTPHeader` `value`.
          example: Some header value
          type: string
      required:
        - name
        - value
      type: object
    TokenType:
      description: The definition of `TokenType` object.
      enum:
        - SECRET
      example: SECRET
      type: string
      x-enum-varnames:
        - SECRET
    HTTPToken:
      description: The definition of `HTTPToken` object.
      properties:
        name:
          description: The `HTTPToken` `name`.
          example: MyToken
          pattern: ^[A-Za-z][A-Za-z\\d]*$
          type: string
        type:
          $ref: '#/components/schemas/TokenType'
        value:
          description: The `HTTPToken` `value`.
          example: Some Token Value
          type: string
      required:
        - name
        - value
        - type
      type: object
    HTTPTokenAuthType:
      description: The definition of `HTTPTokenAuthType` object.
      enum:
        - HTTPTokenAuth
      example: HTTPTokenAuth
      type: string
      x-enum-varnames:
        - HTTPTOKENAUTH
    TokenName:
      description: Name for tokens.
      example: MyTokenName
      pattern: ^[A-Za-z][A-Za-z\\d]*$
      type: string
    UrlParam:
      description: The definition of `UrlParam` object.
      properties:
        name:
          $ref: '#/components/schemas/TokenName'
          example: MyUrlParameter
        value:
          description: The `UrlParam` `value`.
          example: Some Url Parameter value
          type: string
      required:
        - name
        - value
      type: object
    HTTPTokenAuth:
      description: The definition of `HTTPTokenAuth` object.
      properties:
        body:
          $ref: '#/components/schemas/HTTPBody'
        headers:
          description: The `HTTPTokenAuth` `headers`.
          items:
            $ref: '#/components/schemas/HTTPHeader'
          type: array
        tokens:
          description: The `HTTPTokenAuth` `tokens`.
          items:
            $ref: '#/components/schemas/HTTPToken'
          type: array
        type:
          $ref: '#/components/schemas/HTTPTokenAuthType'
        url_parameters:
          description: The `HTTPTokenAuth` `url_parameters`.
          items:
            $ref: '#/components/schemas/UrlParam'
          type: array
      required:
        - type
      type: object
    HTTPCredentials:
      description: The definition of `HTTPCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/HTTPTokenAuth'
    HTTPIntegrationType:
      description: The definition of `HTTPIntegrationType` object.
      enum:
        - HTTP
      example: HTTP
      type: string
      x-enum-varnames:
        - HTTP
    HTTPIntegration:
      description: The definition of `HTTPIntegration` object.
      properties:
        base_url:
          description: Base HTTP url for the integration
          example: http://datadoghq.com
          pattern: url
          type: string
        credentials:
          $ref: '#/components/schemas/HTTPCredentials'
        type:
          $ref: '#/components/schemas/HTTPIntegrationType'
      required:
        - type
        - base_url
        - credentials
      type: object
    ActionConnectionIntegration:
      description: The definition of `ActionConnectionIntegration` object.
      oneOf:
        - $ref: '#/components/schemas/AWSIntegration'
        - $ref: '#/components/schemas/HTTPIntegration'
    ActionConnectionAttributes:
      description: The definition of `ActionConnectionAttributes` object.
      properties:
        integration:
          $ref: '#/components/schemas/ActionConnectionIntegration'
        name:
          description: Name of the connection
          example: My AWS Connection
          type: string
      required:
        - name
        - integration
      type: object
    ActionConnectionDataType:
      description: The definition of `ActionConnectionDataType` object.
      enum:
        - action_connection
      example: action_connection
      type: string
      x-enum-varnames:
        - ACTION_CONNECTION
    ActionConnectionData:
      description: Data related to the connection.
      properties:
        attributes:
          $ref: '#/components/schemas/ActionConnectionAttributes'
        id:
          description: The connection identifier
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/ActionConnectionDataType'
      required:
        - type
        - attributes
      type: object
    CreateActionConnectionRequest:
      description: Request used to create an action connection.
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionData'
      required:
        - data
      type: object
    CreateActionConnectionResponse:
      description: The response for a created connection
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionData'
      type: object
    JSONAPIErrorItemSource:
      description: References to the source of the error.
      properties:
        header:
          description: >-
            A string indicating the name of a single request header which caused
            the error.
          example: Authorization
          type: string
        parameter:
          description: A string indicating which URI query parameter caused the error.
          example: limit
          type: string
        pointer:
          description: >-
            A JSON pointer to the value in the request document that caused the
            error.
          example: /data/attributes/title
          type: string
      type: object
    JSONAPIErrorItem:
      description: API error response body
      properties:
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the
            error.
          example: Missing required attribute in body
          type: string
        meta:
          additionalProperties: {}
          description: Non-standard meta-information about the error
          type: object
        source:
          $ref: '#/components/schemas/JSONAPIErrorItemSource'
        status:
          description: Status code of the response.
          example: '400'
          type: string
        title:
          description: Short human-readable summary of the error.
          example: Bad Request
          type: string
      type: object
    JSONAPIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            $ref: '#/components/schemas/JSONAPIErrorItem'
          type: array
      required:
        - errors
      type: object
    GetActionConnectionResponse:
      description: The response for found connection
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionData'
      type: object
    AWSAssumeRoleUpdate:
      description: The definition of `AWSAssumeRoleUpdate` object.
      properties:
        account_id:
          description: AWS account the connection is created for
          example: '111222333444'
          pattern: ^\d{12}$
          type: string
        generate_new_external_id:
          description: The `AWSAssumeRoleUpdate` `generate_new_external_id`.
          type: boolean
        role:
          description: Role to assume
          example: my-role
          type: string
        type:
          $ref: '#/components/schemas/AWSAssumeRoleType'
      required:
        - type
      type: object
    AWSCredentialsUpdate:
      description: The definition of `AWSCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/AWSAssumeRoleUpdate'
    AWSIntegrationUpdate:
      description: The definition of `AWSIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AWSCredentialsUpdate'
        type:
          $ref: '#/components/schemas/AWSIntegrationType'
      required:
        - type
      type: object
    HTTPHeaderUpdate:
      description: The definition of `HTTPHeaderUpdate` object.
      properties:
        deleted:
          description: Should the header be deleted.
          type: boolean
        name:
          description: The `HTTPHeaderUpdate` `name`.
          example: MyHttpHeader
          pattern: ^[A-Za-z][A-Za-z\\d\\-\\_]*$
          type: string
        value:
          description: The `HTTPHeaderUpdate` `value`.
          example: Updated Header Value
          type: string
      required:
        - name
      type: object
    HTTPTokenUpdate:
      description: The definition of `HTTPTokenUpdate` object.
      properties:
        deleted:
          description: Should the header be deleted.
          type: boolean
        name:
          description: The `HTTPToken` `name`.
          example: MyToken
          pattern: ^[A-Za-z][A-Za-z\\d]*$
          type: string
        type:
          $ref: '#/components/schemas/TokenType'
        value:
          description: The `HTTPToken` `value`.
          example: Some Token Value
          type: string
      required:
        - name
        - type
        - value
      type: object
    UrlParamUpdate:
      description: The definition of `UrlParamUpdate` object.
      properties:
        deleted:
          description: Should the header be deleted.
          type: boolean
        name:
          $ref: '#/components/schemas/TokenName'
          example: MyUrlParameter
        value:
          description: The `UrlParamUpdate` `value`.
          example: Some Url Parameter value
          type: string
      required:
        - name
      type: object
    HTTPTokenAuthUpdate:
      description: The definition of `HTTPTokenAuthUpdate` object.
      properties:
        body:
          $ref: '#/components/schemas/HTTPBody'
        headers:
          description: The `HTTPTokenAuthUpdate` `headers`.
          items:
            $ref: '#/components/schemas/HTTPHeaderUpdate'
          type: array
        tokens:
          description: The `HTTPTokenAuthUpdate` `tokens`.
          items:
            $ref: '#/components/schemas/HTTPTokenUpdate'
          type: array
        type:
          $ref: '#/components/schemas/HTTPTokenAuthType'
        url_parameters:
          description: The `HTTPTokenAuthUpdate` `url_parameters`.
          items:
            $ref: '#/components/schemas/UrlParamUpdate'
          type: array
      required:
        - type
      type: object
    HTTPCredentialsUpdate:
      description: The definition of `HTTPCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/HTTPTokenAuthUpdate'
    HTTPIntegrationUpdate:
      description: The definition of `HTTPIntegrationUpdate` object.
      properties:
        base_url:
          description: Base HTTP url for the integration
          example: http://datadoghq.com
          pattern: url
          type: string
        credentials:
          $ref: '#/components/schemas/HTTPCredentialsUpdate'
        type:
          $ref: '#/components/schemas/HTTPIntegrationType'
      required:
        - type
      type: object
    ActionConnectionIntegrationUpdate:
      description: The definition of `ActionConnectionIntegrationUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/AWSIntegrationUpdate'
        - $ref: '#/components/schemas/HTTPIntegrationUpdate'
    ActionConnectionAttributesUpdate:
      description: The definition of `ActionConnectionAttributesUpdate` object.
      properties:
        integration:
          $ref: '#/components/schemas/ActionConnectionIntegrationUpdate'
        name:
          description: Name of the connection
          example: My AWS Connection
          type: string
      type: object
    ActionConnectionDataUpdate:
      description: Data related to the connection update.
      properties:
        attributes:
          $ref: '#/components/schemas/ActionConnectionAttributesUpdate'
        type:
          $ref: '#/components/schemas/ActionConnectionDataType'
      required:
        - type
        - attributes
      type: object
    UpdateActionConnectionRequest:
      description: Request used to update an action connection.
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionDataUpdate'
      required:
        - data
      type: object
    UpdateActionConnectionResponse:
      description: The response for an updated connection.
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionData'
      type: object
    AwsScanOptionsAttributes:
      description: Attributes for the AWS scan options.
      properties:
        lambda:
          description: Indicates if scanning of Lambda functions is enabled.
          example: true
          type: boolean
        sensitive_data:
          description: Indicates if scanning for sensitive data is enabled.
          example: false
          type: boolean
        vuln_containers_os:
          description: Indicates if scanning for vulnerabilities in containers is enabled.
          example: true
          type: boolean
        vuln_host_os:
          description: Indicates if scanning for vulnerabilities in hosts is enabled.
          example: true
          type: boolean
      type: object
    AwsScanOptionsType:
      default: aws_scan_options
      description: The type of the resource. The value should always be `aws_scan_options`.
      enum:
        - aws_scan_options
      example: aws_scan_options
      type: string
      x-enum-varnames:
        - AWS_SCAN_OPTIONS
    AwsScanOptionsData:
      description: Single AWS Scan Options entry.
      properties:
        attributes:
          $ref: '#/components/schemas/AwsScanOptionsAttributes'
        id:
          description: The ID of the AWS account.
          example: '184366314700'
          type: string
        type:
          $ref: '#/components/schemas/AwsScanOptionsType'
      type: object
    AwsScanOptionsListResponse:
      description: Response object that includes a list of AWS scan options.
      properties:
        data:
          description: A list of AWS scan options.
          items:
            $ref: '#/components/schemas/AwsScanOptionsData'
          type: array
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          example:
            - Bad Request
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    AwsScanOptionsCreateAttributes:
      description: Attributes for the AWS scan options to create.
      properties:
        lambda:
          description: Indicates if scanning of Lambda functions is enabled.
          example: true
          type: boolean
        sensitive_data:
          description: Indicates if scanning for sensitive data is enabled.
          example: false
          type: boolean
        vuln_containers_os:
          description: Indicates if scanning for vulnerabilities in containers is enabled.
          example: true
          type: boolean
        vuln_host_os:
          description: Indicates if scanning for vulnerabilities in hosts is enabled.
          example: true
          type: boolean
      required:
        - lambda
        - sensitive_data
        - vuln_containers_os
        - vuln_host_os
      type: object
    AwsAccountId:
      description: AWS Account ID.
      example: '123456789012'
      type: string
    AwsScanOptionsCreateData:
      description: Object for the scan options of a single AWS account.
      properties:
        attributes:
          $ref: '#/components/schemas/AwsScanOptionsCreateAttributes'
        id:
          $ref: '#/components/schemas/AwsAccountId'
        type:
          $ref: '#/components/schemas/AwsScanOptionsType'
      required:
        - id
        - type
        - attributes
      type: object
    AwsScanOptionsCreateRequest:
      description: Request object that includes the scan options to create.
      properties:
        data:
          $ref: '#/components/schemas/AwsScanOptionsCreateData'
      required:
        - data
      type: object
    AwsScanOptionsResponse:
      description: Response object that includes the scan options of an AWS account.
      properties:
        data:
          $ref: '#/components/schemas/AwsScanOptionsData'
      type: object
    AwsScanOptionsUpdateAttributes:
      description: Attributes for the AWS scan options to update.
      properties:
        lambda:
          description: Indicates if scanning of Lambda functions is enabled.
          example: true
          type: boolean
        sensitive_data:
          description: Indicates if scanning for sensitive data is enabled.
          example: false
          type: boolean
        vuln_containers_os:
          description: Indicates if scanning for vulnerabilities in containers is enabled.
          example: true
          type: boolean
        vuln_host_os:
          description: Indicates if scanning for vulnerabilities in hosts is enabled.
          example: true
          type: boolean
      type: object
    AwsScanOptionsUpdateData:
      description: Object for the scan options of a single AWS account.
      properties:
        attributes:
          $ref: '#/components/schemas/AwsScanOptionsUpdateAttributes'
        id:
          $ref: '#/components/schemas/AwsAccountId'
        type:
          $ref: '#/components/schemas/AwsScanOptionsType'
      required:
        - id
        - type
        - attributes
      type: object
    AwsScanOptionsUpdateRequest:
      description: Request object that includes the scan options to update.
      properties:
        data:
          $ref: '#/components/schemas/AwsScanOptionsUpdateData'
      required:
        - data
      type: object
    AwsOnDemandAttributes:
      description: Attributes for the AWS on demand task.
      properties:
        arn:
          description: The arn of the resource to scan.
          example: arn:aws:ec2:us-east-1:727000456123:instance/i-0eabb50529b67a1ba
          type: string
        assigned_at:
          description: >-
            Specifies the assignment timestamp if the task has been already
            assigned to a scanner.
          example: '2025-02-11T18:25:04.550564Z'
          type: string
        created_at:
          description: The task submission timestamp.
          example: '2025-02-11T18:13:24.576915Z'
          type: string
        status:
          description: >-
            Indicates the status of the task.

            QUEUED: the task has been submitted successfully and the resource
            has not been assigned to a scanner yet.

            ASSIGNED: the task has been assigned.

            ABORTED: the scan has been aborted after a period of time due to
            technical reasons, such as resource not found, insufficient
            permissions, or the absence of a configured scanner.
          example: QUEUED
          type: string
      type: object
    AwsOnDemandType:
      default: aws_resource
      description: >-
        The type of the on demand task. The value should always be
        `aws_resource`.
      enum:
        - aws_resource
      example: aws_resource
      type: string
      x-enum-varnames:
        - AWS_RESOURCE
    AwsOnDemandData:
      description: Single AWS on demand task.
      properties:
        attributes:
          $ref: '#/components/schemas/AwsOnDemandAttributes'
        id:
          description: The UUID of the task.
          example: 6d09294c-9ad9-42fd-a759-a0c1599b4828
          type: string
        type:
          $ref: '#/components/schemas/AwsOnDemandType'
      type: object
    AwsOnDemandListResponse:
      description: Response object that includes a list of AWS on demand tasks.
      properties:
        data:
          description: A list of on demand tasks.
          items:
            $ref: '#/components/schemas/AwsOnDemandData'
          type: array
      type: object
    AwsOnDemandCreateAttributes:
      description: Attributes for the AWS on demand task.
      properties:
        arn:
          description: >-
            The arn of the resource to scan. Agentless supports the scan of EC2
            instances, lambda functions, AMI, ECR, RDS and S3 buckets.
          example: arn:aws:ec2:us-east-1:727000456123:instance/i-0eabb50529b67a1ba
          type: string
      required:
        - arn
      type: object
    AwsOnDemandCreateData:
      description: Object for a single AWS on demand task.
      properties:
        attributes:
          $ref: '#/components/schemas/AwsOnDemandCreateAttributes'
        type:
          $ref: '#/components/schemas/AwsOnDemandType'
      required:
        - type
        - attributes
      type: object
    AwsOnDemandCreateRequest:
      description: Request object that includes the on demand task to submit.
      properties:
        data:
          $ref: '#/components/schemas/AwsOnDemandCreateData'
      required:
        - data
      type: object
    AwsOnDemandResponse:
      description: Response object that includes an AWS on demand task.
      properties:
        data:
          $ref: '#/components/schemas/AwsOnDemandData'
      type: object
    APIKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - modified_at
        - '-modified_at'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    PartialAPIKeyAttributes:
      description: Attributes of a partial API key.
      properties:
        category:
          description: The category of the API key.
          type: string
        created_at:
          description: Creation date of the API key.
          example: '2020-11-23T10:00:00.000Z'
          readOnly: true
          type: string
        last4:
          description: The last four characters of the API key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        modified_at:
          description: Date the API key was last modified.
          example: '2020-11-23T10:00:00.000Z'
          readOnly: true
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
        remote_config_read_enabled:
          description: The remote config read enabled status.
          type: boolean
      type: object
    UsersType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    RelationshipToUserData:
      description: Relationship to user object.
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    RelationshipToUser:
      description: Relationship to user.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserData'
      required:
        - data
      type: object
    NullableRelationshipToUserData:
      description: Relationship to user object.
      nullable: true
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    NullableRelationshipToUser:
      description: Relationship to user.
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/NullableRelationshipToUserData'
      required:
        - data
      type: object
    APIKeyRelationships:
      description: Resources related to the API key.
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        modified_by:
          $ref: '#/components/schemas/NullableRelationshipToUser'
      type: object
    APIKeysType:
      default: api_keys
      description: API Keys resource type.
      enum:
        - api_keys
      example: api_keys
      type: string
      x-enum-varnames:
        - API_KEYS
    PartialAPIKey:
      description: Partial Datadog API key.
      properties:
        attributes:
          $ref: '#/components/schemas/PartialAPIKeyAttributes'
        id:
          description: ID of the API key.
          type: string
        relationships:
          $ref: '#/components/schemas/APIKeyRelationships'
        type:
          $ref: '#/components/schemas/APIKeysType'
      type: object
    UserAttributes:
      description: Attributes of user object returned by the API.
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        mfa_enabled:
          description: If user has MFA enabled.
          readOnly: true
          type: boolean
        modified_at:
          description: Time that the user was last modified.
          format: date-time
          type: string
        name:
          description: Name of the user.
          nullable: true
          type: string
        service_account:
          description: Whether the user is a service account.
          type: boolean
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          nullable: true
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    OrganizationsType:
      default: orgs
      description: Organizations resource type.
      enum:
        - orgs
      example: orgs
      type: string
      x-enum-varnames:
        - ORGS
    RelationshipToOrganizationData:
      description: Relationship to organization object.
      properties:
        id:
          description: ID of the organization.
          example: 00000000-0000-beef-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - id
        - type
      type: object
    RelationshipToOrganization:
      description: Relationship to an organization.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOrganizationData'
      required:
        - data
      type: object
    RelationshipToOrganizations:
      description: Relationship to organizations.
      properties:
        data:
          description: Relationships to organization objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToOrganizationData'
          type: array
      required:
        - data
      type: object
    RelationshipToUsers:
      description: Relationship to users.
      properties:
        data:
          description: Relationships to user objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToUserData'
          type: array
      required:
        - data
      type: object
    RolesType:
      default: roles
      description: Roles type.
      enum:
        - roles
      example: roles
      type: string
      x-enum-varnames:
        - ROLES
    RelationshipToRoleData:
      description: Relationship to role object.
      properties:
        id:
          description: The unique identifier of the role.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      type: object
    RelationshipToRoles:
      description: Relationship to roles.
      properties:
        data:
          description: An array containing type and the unique identifier of a role.
          items:
            $ref: '#/components/schemas/RelationshipToRoleData'
          type: array
      type: object
    UserResponseRelationships:
      description: Relationships of the user object returned by the API.
      properties:
        org:
          $ref: '#/components/schemas/RelationshipToOrganization'
        other_orgs:
          $ref: '#/components/schemas/RelationshipToOrganizations'
        other_users:
          $ref: '#/components/schemas/RelationshipToUsers'
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    User:
      description: User object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        id:
          description: ID of the user.
          type: string
        relationships:
          $ref: '#/components/schemas/UserResponseRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    LeakedKeyAttributes:
      description: The definition of LeakedKeyAttributes object.
      properties:
        date:
          description: The LeakedKeyAttributes date.
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        leak_source:
          description: The LeakedKeyAttributes leak_source.
          type: string
      required:
        - date
      type: object
    LeakedKeyType:
      default: leaked_keys
      description: The definition of LeakedKeyType object.
      enum:
        - leaked_keys
      example: leaked_keys
      type: string
      x-enum-varnames:
        - LEAKED_KEYS
    LeakedKey:
      description: The definition of LeakedKey object.
      properties:
        attributes:
          $ref: '#/components/schemas/LeakedKeyAttributes'
        id:
          description: The LeakedKey id.
          example: id
          type: string
        type:
          $ref: '#/components/schemas/LeakedKeyType'
      required:
        - attributes
        - id
        - type
      type: object
    APIKeyResponseIncludedItem:
      description: An object related to an API key.
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/LeakedKey'
    APIKeysResponseMetaPage:
      description: Additional information related to the API keys response.
      properties:
        total_filtered_count:
          description: Total filtered application key count.
          format: int64
          type: integer
      type: object
    APIKeysResponseMeta:
      description: Additional information related to api keys response.
      properties:
        max_allowed:
          description: Max allowed number of API keys.
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/APIKeysResponseMetaPage'
      type: object
    APIKeysResponse:
      description: Response for a list of API keys.
      properties:
        data:
          description: Array of API keys.
          items:
            $ref: '#/components/schemas/PartialAPIKey'
          type: array
        included:
          description: Array of objects related to the API key.
          items:
            $ref: '#/components/schemas/APIKeyResponseIncludedItem'
          type: array
        meta:
          $ref: '#/components/schemas/APIKeysResponseMeta'
      type: object
    APIKeyCreateAttributes:
      description: Attributes used to create an API Key.
      properties:
        category:
          description: The APIKeyCreateAttributes category.
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
        remote_config_read_enabled:
          description: The APIKeyCreateAttributes remote_config_read_enabled.
          type: boolean
      required:
        - name
      type: object
    APIKeyCreateData:
      description: Object used to create an API key.
      properties:
        attributes:
          $ref: '#/components/schemas/APIKeyCreateAttributes'
        type:
          $ref: '#/components/schemas/APIKeysType'
      required:
        - attributes
        - type
      type: object
    APIKeyCreateRequest:
      description: Request used to create an API key.
      properties:
        data:
          $ref: '#/components/schemas/APIKeyCreateData'
      required:
        - data
      type: object
    FullAPIKeyAttributes:
      description: Attributes of a full API key.
      properties:
        category:
          description: The category of the API key.
          type: string
        created_at:
          description: Creation date of the API key.
          example: '2020-11-23T10:00:00.000Z'
          format: date-time
          readOnly: true
          type: string
        key:
          description: The API key.
          readOnly: true
          type: string
        last4:
          description: The last four characters of the API key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        modified_at:
          description: Date the API key was last modified.
          example: '2020-11-23T10:00:00.000Z'
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
        remote_config_read_enabled:
          description: The remote config read enabled status.
          type: boolean
      type: object
    FullAPIKey:
      description: Datadog API key.
      properties:
        attributes:
          $ref: '#/components/schemas/FullAPIKeyAttributes'
        id:
          description: ID of the API key.
          type: string
        relationships:
          $ref: '#/components/schemas/APIKeyRelationships'
        type:
          $ref: '#/components/schemas/APIKeysType'
      type: object
    APIKeyResponse:
      description: Response for retrieving an API key.
      properties:
        data:
          $ref: '#/components/schemas/FullAPIKey'
        included:
          description: Array of objects related to the API key.
          items:
            $ref: '#/components/schemas/APIKeyResponseIncludedItem'
          type: array
      type: object
    APIKeyUpdateAttributes:
      description: Attributes used to update an API Key.
      properties:
        category:
          description: The APIKeyUpdateAttributes category.
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
        remote_config_read_enabled:
          description: The APIKeyUpdateAttributes remote_config_read_enabled.
          type: boolean
      required:
        - name
      type: object
    APIKeyUpdateData:
      description: Object used to update an API key.
      properties:
        attributes:
          $ref: '#/components/schemas/APIKeyUpdateAttributes'
        id:
          description: ID of the API key.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        type:
          $ref: '#/components/schemas/APIKeysType'
      required:
        - attributes
        - id
        - type
      type: object
    APIKeyUpdateRequest:
      description: Request used to update an API key.
      properties:
        data:
          $ref: '#/components/schemas/APIKeyUpdateData'
      required:
        - data
      type: object
    ListAPIsResponseDataAttributes:
      description: Attributes for `ListAPIsResponseData`.
      properties:
        name:
          description: API name.
          example: Payments API
          type: string
      type: object
    ApiID:
      description: API identifier.
      example: 90646597-5fdb-4a17-a240-647003f8c028
      format: uuid
      type: string
    ListAPIsResponseData:
      description: Data envelope for `ListAPIsResponse`.
      properties:
        attributes:
          $ref: '#/components/schemas/ListAPIsResponseDataAttributes'
        id:
          $ref: '#/components/schemas/ApiID'
      type: object
    ListAPIsResponseMetaPagination:
      description: Pagination metadata information for `ListAPIsResponse`.
      properties:
        limit:
          description: Number of items in the current page.
          example: 20
          format: int64
          type: integer
        offset:
          description: Offset for pagination.
          example: 0
          format: int64
          type: integer
        total_count:
          description: Total number of items.
          example: 35
          format: int64
          type: integer
      type: object
    ListAPIsResponseMeta:
      description: Metadata for `ListAPIsResponse`.
      properties:
        pagination:
          $ref: '#/components/schemas/ListAPIsResponseMetaPagination'
      type: object
    ListAPIsResponse:
      description: Response for `ListAPIs`.
      properties:
        data:
          description: List of API items.
          items:
            $ref: '#/components/schemas/ListAPIsResponseData'
          type: array
        meta:
          $ref: '#/components/schemas/ListAPIsResponseMeta'
      type: object
    OpenAPIFile:
      description: Object for API data in an `OpenAPI` format as a file.
      properties:
        openapi_spec_file:
          description: Binary `OpenAPI` spec file
          format: binary
          type: string
      type: object
    OpenAPIEndpoint:
      description: Endpoint info extracted from an `OpenAPI` specification.
      properties:
        method:
          description: The endpoint method.
          type: string
        path:
          description: The endpoint path.
          type: string
      type: object
    UpdateOpenAPIResponseAttributes:
      description: Attributes for `UpdateOpenAPI`.
      properties:
        failed_endpoints:
          description: List of endpoints which couldn't be parsed.
          items:
            $ref: '#/components/schemas/OpenAPIEndpoint'
          type: array
      type: object
    UpdateOpenAPIResponseData:
      description: Data envelope for `UpdateOpenAPIResponse`.
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateOpenAPIResponseAttributes'
        id:
          $ref: '#/components/schemas/ApiID'
      type: object
    UpdateOpenAPIResponse:
      description: Response for `UpdateOpenAPI`.
      properties:
        data:
          $ref: '#/components/schemas/UpdateOpenAPIResponseData'
      type: object
    CreateOpenAPIResponseAttributes:
      description: Attributes for `CreateOpenAPI`.
      properties:
        failed_endpoints:
          description: List of endpoints which couldn't be parsed.
          items:
            $ref: '#/components/schemas/OpenAPIEndpoint'
          type: array
      type: object
    CreateOpenAPIResponseData:
      description: Data envelope for `CreateOpenAPIResponse`.
      properties:
        attributes:
          $ref: '#/components/schemas/CreateOpenAPIResponseAttributes'
        id:
          $ref: '#/components/schemas/ApiID'
      type: object
    CreateOpenAPIResponse:
      description: Response for `CreateOpenAPI` operation.
      properties:
        data:
          $ref: '#/components/schemas/CreateOpenAPIResponseData'
      type: object
    SpansMetricComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    SpansMetricComputeIncludePercentiles:
      description: >-
        Toggle to include or exclude percentile aggregations for distribution
        metrics.

        Only present when the `aggregation_type` is `distribution`.
      example: false
      type: boolean
    SpansMetricResponseCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/SpansMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
        path:
          description: >-
            The path to the value the span-based metric will aggregate on (only
            used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      type: object
    SpansMetricResponseFilter:
      description: >-
        The span-based metric filter. Spans matching this filter will be
        aggregated in this metric.
      properties:
        query:
          description: The search query - following the span search syntax.
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    SpansMetricResponseGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the span-based metric will be aggregated over.
          example: resource_name
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, the path
            attribute is used as the tag name.
          example: resource_name
          type: string
      type: object
    SpansMetricResponseAttributes:
      description: The object describing a Datadog span-based metric.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricResponseCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricResponseFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricResponseGroupBy'
          type: array
      type: object
    SpansMetricID:
      description: The name of the span-based metric.
      example: my.metric
      type: string
    SpansMetricType:
      default: spans_metrics
      description: The type of resource. The value should always be spans_metrics.
      enum:
        - spans_metrics
      example: spans_metrics
      type: string
      x-enum-varnames:
        - SPANS_METRICS
    SpansMetricResponseData:
      description: The span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricResponseAttributes'
        id:
          $ref: '#/components/schemas/SpansMetricID'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      type: object
    SpansMetricsResponse:
      description: All the available span-based metric objects.
      properties:
        data:
          description: A list of span-based metric objects.
          items:
            $ref: '#/components/schemas/SpansMetricResponseData'
          type: array
      type: object
    SpansMetricCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/SpansMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
        path:
          description: >-
            The path to the value the span-based metric will aggregate on (only
            used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      required:
        - aggregation_type
      type: object
    SpansMetricFilter:
      description: >-
        The span-based metric filter. Spans matching this filter will be
        aggregated in this metric.
      properties:
        query:
          default: '*'
          description: The search query - following the span search syntax.
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    SpansMetricGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the span-based metric will be aggregated over.
          example: resource_name
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, the path
            attribute is used as the tag name.
          example: resource_name
          type: string
      required:
        - path
      type: object
    SpansMetricCreateAttributes:
      description: The object describing the Datadog span-based metric to create.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricGroupBy'
          type: array
      required:
        - compute
      type: object
    SpansMetricCreateData:
      description: The new span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricCreateAttributes'
        id:
          $ref: '#/components/schemas/SpansMetricID'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      required:
        - id
        - type
        - attributes
      type: object
    SpansMetricCreateRequest:
      description: The new span-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricCreateData'
      required:
        - data
      type: object
    SpansMetricResponse:
      description: The span-based metric object.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricResponseData'
      type: object
    SpansMetricUpdateCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
      type: object
    SpansMetricUpdateAttributes:
      description: The span-based metric properties that will be updated.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricUpdateCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricGroupBy'
          type: array
      type: object
    SpansMetricUpdateData:
      description: The new span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricUpdateAttributes'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      required:
        - type
        - attributes
      type: object
    SpansMetricUpdateRequest:
      description: The new span-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricUpdateData'
      required:
        - data
      type: object
    SpansFilter:
      description: The spans filter used to index spans.
      properties:
        query:
          description: >-
            The search query - following the [span search
            syntax](https://docs.datadoghq.com/tracing/trace_explorer/query_syntax/).
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    RetentionFilterAllType:
      default: spans-sampling-processor
      description: The type of retention filter.
      enum:
        - spans-sampling-processor
        - spans-errors-sampling-processor
        - spans-appsec-sampling-processor
      example: spans-sampling-processor
      type: string
      x-enum-varnames:
        - SPANS_SAMPLING_PROCESSOR
        - SPANS_ERRORS_SAMPLING_PROCESSOR
        - SPANS_APPSEC_SAMPLING_PROCESSOR
    RetentionFilterAllAttributes:
      description: The attributes of the retention filter.
      properties:
        created_at:
          description: The creation timestamp of the retention filter.
          format: int64
          type: integer
        created_by:
          description: The creator of the retention filter.
          type: string
        editable:
          description: Shows whether the filter can be edited.
          example: true
          type: boolean
        enabled:
          description: The status of the retention filter (Enabled/Disabled).
          example: true
          type: boolean
        execution_order:
          description: The execution order of the retention filter.
          format: int64
          type: integer
        filter:
          $ref: '#/components/schemas/SpansFilter'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterAllType'
        modified_at:
          description: The modification timestamp of the retention filter.
          format: int64
          type: integer
        modified_by:
          description: The modifier of the retention filter.
          type: string
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: |-
            Sample rate to apply to spans going through this retention filter.
            A value of 1.0 keeps all spans matching the query.
          example: 1
          format: double
          type: number
        trace_rate:
          description: >-
            Sample rate to apply to traces containing spans going through this
            retention filter.

            A value of 1.0 keeps all traces with spans matching the query.
          example: 1
          format: double
          type: number
      type: object
    ApmRetentionFilterType:
      default: apm_retention_filter
      description: The type of the resource.
      enum:
        - apm_retention_filter
      example: apm_retention_filter
      type: string
      x-enum-varnames:
        - apm_retention_filter
    RetentionFilterAll:
      description: The definition of the retention filter.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterAllAttributes'
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - id
        - type
        - attributes
      type: object
    RetentionFiltersResponse:
      description: An ordered list of retention filters.
      properties:
        data:
          description: A list of retention filters objects.
          items:
            $ref: '#/components/schemas/RetentionFilterAll'
          type: array
      required:
        - data
      type: object
    SpansFilterCreate:
      description: The spans filter. Spans matching this filter will be indexed and stored.
      properties:
        query:
          description: >-
            The search query - following the [span search
            syntax](https://docs.datadoghq.com/tracing/trace_explorer/query_syntax/).
          example: '@http.status_code:200 service:my-service'
          type: string
      required:
        - query
      type: object
    RetentionFilterType:
      default: spans-sampling-processor
      description: >-
        The type of retention filter. The value should always be
        spans-sampling-processor.
      enum:
        - spans-sampling-processor
      example: spans-sampling-processor
      type: string
      x-enum-varnames:
        - SPANS_SAMPLING_PROCESSOR
    RetentionFilterCreateAttributes:
      description: >-
        The object describing the configuration of the retention filter to
        create/update.
      properties:
        enabled:
          description: Enable/Disable the retention filter.
          example: true
          type: boolean
        filter:
          $ref: '#/components/schemas/SpansFilterCreate'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterType'
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: |-
            Sample rate to apply to spans going through this retention filter.
            A value of 1.0 keeps all spans matching the query.
          example: 1
          format: double
          type: number
        trace_rate:
          description: >-
            Sample rate to apply to traces containing spans going through this
            retention filter.

            A value of 1.0 keeps all traces with spans matching the query.
          example: 1
          format: double
          type: number
      required:
        - name
        - filter
        - enabled
        - filter_type
        - rate
      type: object
    RetentionFilterCreateData:
      description: The body of the retention filter to be created.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterCreateAttributes'
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - attributes
        - type
      type: object
    RetentionFilterCreateRequest:
      description: The body of the retention filter to be created.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilterCreateData'
      required:
        - data
      type: object
    RetentionFilterAttributes:
      description: The attributes of the retention filter.
      properties:
        created_at:
          description: The creation timestamp of the retention filter.
          format: int64
          type: integer
        created_by:
          description: The creator of the retention filter.
          type: string
        editable:
          description: Shows whether the filter can be edited.
          example: true
          type: boolean
        enabled:
          description: The status of the retention filter (Enabled/Disabled).
          example: true
          type: boolean
        execution_order:
          description: The execution order of the retention filter.
          format: int64
          type: integer
        filter:
          $ref: '#/components/schemas/SpansFilter'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterType'
        modified_at:
          description: The modification timestamp of the retention filter.
          format: int64
          type: integer
        modified_by:
          description: The modifier of the retention filter.
          type: string
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: |-
            Sample rate to apply to spans going through this retention filter.
            A value of 1.0 keeps all spans matching the query.
          example: 1
          format: double
          type: number
        trace_rate:
          description: >-
            Sample rate to apply to traces containing spans going through this
            retention filter.

            A value of 1.0 keeps all traces with spans matching the query.
          example: 1
          format: double
          type: number
      type: object
    RetentionFilter:
      description: The definition of the retention filter.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterAttributes'
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - id
        - type
        - attributes
      type: object
    RetentionFilterCreateResponse:
      description: The retention filters definition.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilter'
      type: object
    RetentionFilterWithoutAttributes:
      description: The retention filter object .
      properties:
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - id
        - type
      type: object
    ReorderRetentionFiltersRequest:
      description: A list of retention filters to reorder.
      properties:
        data:
          description: A list of retention filters objects.
          items:
            $ref: '#/components/schemas/RetentionFilterWithoutAttributes'
          type: array
      required:
        - data
      type: object
    RetentionFilterResponse:
      description: The retention filters definition.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilterAll'
      type: object
    RetentionFilterUpdateAttributes:
      description: >-
        The object describing the configuration of the retention filter to
        create/update.
      properties:
        enabled:
          description: Enable/Disable the retention filter.
          example: true
          type: boolean
        filter:
          $ref: '#/components/schemas/SpansFilterCreate'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterAllType'
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: |-
            Sample rate to apply to spans going through this retention filter.
            A value of 1.0 keeps all spans matching the query.
          example: 1
          format: double
          type: number
        trace_rate:
          description: >-
            Sample rate to apply to traces containing spans going through this
            retention filter.

            A value of 1.0 keeps all traces with spans matching the query.
          example: 1
          format: double
          type: number
      required:
        - name
        - filter
        - enabled
        - filter_type
        - rate
      type: object
    RetentionFilterUpdateData:
      description: The body of the retention filter to be updated.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterUpdateAttributes'
        id:
          description: The ID of the retention filter.
          example: retention-filter-id
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
        - id
        - attributes
        - type
      type: object
    RetentionFilterUpdateRequest:
      description: The body of the retention filter to be updated.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilterUpdateData'
      required:
        - data
      type: object
    AppsSortField:
      description: The field and direction to sort apps by
      enum:
        - name
        - created_at
        - updated_at
        - user_name
        - '-name'
        - '-created_at'
        - '-updated_at'
        - '-user_name'
      example: '-created_at'
      type: string
      x-enum-varnames:
        - NAME
        - CREATED_AT
        - UPDATED_AT
        - USER_NAME
        - NAME_DESC
        - CREATED_AT_DESC
        - UPDATED_AT_DESC
        - USER_NAME_DESC
    ListAppsResponseDataItemsAttributes:
      description: Basic information about the app such as name, description, and tags.
      properties:
        description:
          description: A human-readable description for the app.
          type: string
        favorite:
          description: Whether the app is marked as a favorite by the current user.
          type: boolean
        name:
          description: The name of the app.
          type: string
        selfService:
          description: Whether the app is enabled for use in the Datadog self-service hub.
          type: boolean
        tags:
          description: A list of tags for the app, which can be used to filter apps.
          example:
            - service:webshop-backend
            - team:webshop
          items:
            description: An individual tag for the app.
            type: string
          type: array
      type: object
    AppMeta:
      description: Metadata of an app.
      properties:
        created_at:
          description: Timestamp of when the app was created.
          format: date-time
          type: string
        deleted_at:
          description: Timestamp of when the app was deleted.
          format: date-time
          type: string
        org_id:
          description: The Datadog organization ID that owns the app.
          format: int64
          type: integer
        updated_at:
          description: Timestamp of when the app was last updated.
          format: date-time
          type: string
        updated_since_deployment:
          description: >-
            Whether the app was updated since it was last published. Published
            apps are pinned to a specific version and do not automatically
            update when the app is updated.
          type: boolean
        user_id:
          description: The ID of the user who created the app.
          format: int64
          type: integer
        user_name:
          description: The name (or email address) of the user who created the app.
          type: string
        user_uuid:
          description: The UUID of the user who created the app.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        version:
          description: >-
            The version number of the app. This starts at 1 and increments with
            each update.
          format: int64
          type: integer
      type: object
    AppDeploymentType:
      default: deployment
      description: The deployment type.
      enum:
        - deployment
      example: deployment
      type: string
      x-enum-varnames:
        - DEPLOYMENT
    DeploymentRelationshipData:
      description: Data object containing the deployment ID.
      properties:
        id:
          description: The deployment ID.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/AppDeploymentType'
      type: object
    DeploymentMetadata:
      description: Metadata object containing the publication creation information.
      properties:
        created_at:
          description: Timestamp of when the app was published.
          format: date-time
          type: string
        user_id:
          description: The ID of the user who published the app.
          format: int64
          type: integer
        user_name:
          description: The name (or email address) of the user who published the app.
          type: string
        user_uuid:
          description: The UUID of the user who published the app.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
      type: object
    DeploymentRelationship:
      description: Information pointing to the app's publication status.
      properties:
        data:
          $ref: '#/components/schemas/DeploymentRelationshipData'
        meta:
          $ref: '#/components/schemas/DeploymentMetadata'
      type: object
    ListAppsResponseDataItemsRelationships:
      description: The app's publication information.
      properties:
        deployment:
          $ref: '#/components/schemas/DeploymentRelationship'
      type: object
    AppDefinitionType:
      default: appDefinitions
      description: The app definition type.
      enum:
        - appDefinitions
      example: appDefinitions
      type: string
      x-enum-varnames:
        - APPDEFINITIONS
    ListAppsResponseDataItems:
      description: >-
        An app definition object. This contains only basic information about the
        app such as ID, name, and tags.
      properties:
        attributes:
          $ref: '#/components/schemas/ListAppsResponseDataItemsAttributes'
        id:
          description: The ID of the app.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/AppMeta'
        relationships:
          $ref: '#/components/schemas/ListAppsResponseDataItemsRelationships'
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - id
        - type
        - attributes
      type: object
    DeploymentAttributes:
      description: The attributes object containing the version ID of the published app.
      properties:
        app_version_id:
          description: >-
            The version ID of the app that was published. For an unpublished
            app, this is always the nil UUID
            (`00000000-0000-0000-0000-000000000000`).
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
      type: object
    Deployment:
      description: The version of the app that was published.
      properties:
        attributes:
          $ref: '#/components/schemas/DeploymentAttributes'
        id:
          description: The deployment ID.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        meta:
          $ref: '#/components/schemas/DeploymentMetadata'
        type:
          $ref: '#/components/schemas/AppDeploymentType'
      type: object
    ListAppsResponseMetaPage:
      description: Information on the total number of apps, to be used for pagination.
      properties:
        totalCount:
          description: >-
            The total number of apps under the Datadog organization,
            disregarding any filters applied.
          format: int64
          type: integer
        totalFilteredCount:
          description: The total number of apps that match the specified filters.
          format: int64
          type: integer
      type: object
    ListAppsResponseMeta:
      description: Pagination metadata.
      properties:
        page:
          $ref: '#/components/schemas/ListAppsResponseMetaPage'
      type: object
    ListAppsResponse:
      description: A paginated list of apps matching the specified filters and sorting.
      properties:
        data:
          description: An array of app definitions.
          items:
            $ref: '#/components/schemas/ListAppsResponseDataItems'
          type: array
        included:
          description: Data on the version of the app that was published.
          items:
            $ref: '#/components/schemas/Deployment'
          type: array
        meta:
          $ref: '#/components/schemas/ListAppsResponseMeta'
      type: object
    AppBuilderEventName:
      description: The triggering action for the event.
      enum:
        - pageChange
        - tableRowClick
        - _tableRowButtonClick
        - change
        - submit
        - click
        - toggleOpen
        - close
        - open
        - executionFinished
      example: click
      type: string
      x-enum-varnames:
        - PAGECHANGE
        - TABLEROWCLICK
        - TABLEROWBUTTONCLICK
        - CHANGE
        - SUBMIT
        - CLICK
        - TOGGLEOPEN
        - CLOSE
        - OPEN
        - EXECUTIONFINISHED
    AppBuilderEventType:
      description: The response to the event.
      enum:
        - custom
        - setComponentState
        - triggerQuery
        - openModal
        - closeModal
        - openUrl
        - downloadFile
        - setStateVariableValue
      example: triggerQuery
      type: string
      x-enum-varnames:
        - CUSTOM
        - SETCOMPONENTSTATE
        - TRIGGERQUERY
        - OPENMODAL
        - CLOSEMODAL
        - OPENURL
        - DOWNLOADFILE
        - SETSTATEVARIABLEVALUE
    AppBuilderEvent:
      additionalProperties: {}
      description: An event on a UI component that triggers a response or action in an app.
      properties:
        name:
          $ref: '#/components/schemas/AppBuilderEventName'
        type:
          $ref: '#/components/schemas/AppBuilderEventType'
      type: object
    Component:
      description: >-
        [Definition of a UI component in the
        app](https://docs.datadoghq.com/service_management/app_builder/components/)
      properties:
        events:
          description: Events to listen for on the UI component.
          items:
            $ref: '#/components/schemas/AppBuilderEvent'
          type: array
        id:
          description: >-
            The ID of the UI component. This property is deprecated; use `name`
            to identify individual components instead.
          nullable: true
          type: string
        name:
          description: >-
            A unique identifier for this UI component. This name is also visible
            in the app editor.
          example: ''
          type: string
        properties:
          $ref: '#/components/schemas/ComponentProperties'
        type:
          $ref: '#/components/schemas/ComponentType'
      required:
        - name
        - type
        - properties
      type: object
    ComponentPropertiesIsVisible:
      description: >-
        Whether the UI component is visible. If this is a string, it must be a
        valid JavaScript expression that evaluates to a boolean.
      oneOf:
        - type: boolean
        - description: >-
            If this is a string, it must be a valid JavaScript expression that
            evaluates to a boolean.
          example: ${true}
          type: string
    ComponentProperties:
      additionalProperties: {}
      description: >-
        Properties of a UI component. Different component types can have their
        own additional unique properties. See the [components
        documentation](https://docs.datadoghq.com/service_management/app_builder/components/)
        for more detail on each component type and its properties.
      properties:
        children:
          description: The child components of the UI component.
          items:
            $ref: '#/components/schemas/Component'
          type: array
        isVisible:
          $ref: '#/components/schemas/ComponentPropertiesIsVisible'
      type: object
    ComponentType:
      description: The UI component type.
      enum:
        - table
        - textInput
        - textArea
        - button
        - text
        - select
        - modal
        - schemaForm
        - checkbox
        - tabs
        - vegaChart
        - radioButtons
        - numberInput
        - fileInput
        - jsonInput
        - gridCell
        - dateRangePicker
        - search
        - container
        - calloutValue
      example: text
      type: string
      x-enum-varnames:
        - TABLE
        - TEXTINPUT
        - TEXTAREA
        - BUTTON
        - TEXT
        - SELECT
        - MODAL
        - SCHEMAFORM
        - CHECKBOX
        - TABS
        - VEGACHART
        - RADIOBUTTONS
        - NUMBERINPUT
        - FILEINPUT
        - JSONINPUT
        - GRIDCELL
        - DATERANGEPICKER
        - SEARCH
        - CONTAINER
        - CALLOUTVALUE
    ComponentGridPropertiesIsVisible:
      description: >-
        Whether the grid component and its children are visible. If a string, it
        must be a valid JavaScript expression that evaluates to a boolean.
      oneOf:
        - type: string
        - default: true
          type: boolean
    ComponentGridProperties:
      description: Properties of a grid component.
      properties:
        backgroundColor:
          default: default
          description: The background color of the grid.
          type: string
        children:
          description: The child components of the grid.
          items:
            $ref: '#/components/schemas/Component'
          type: array
        isVisible:
          $ref: '#/components/schemas/ComponentGridPropertiesIsVisible'
      type: object
    ComponentGridType:
      default: grid
      description: The grid component type.
      enum:
        - grid
      example: grid
      type: string
      x-enum-varnames:
        - GRID
    ComponentGrid:
      description: >-
        A grid component. The grid component is the root canvas for an app and
        contains all other components.
      properties:
        events:
          description: Events to listen for on the grid component.
          items:
            $ref: '#/components/schemas/AppBuilderEvent'
          type: array
        id:
          description: >-
            The ID of the grid component. This property is deprecated; use
            `name` to identify individual components instead.
          type: string
        name:
          description: >-
            A unique identifier for this grid component. This name is also
            visible in the app editor.
          example: ''
          type: string
        properties:
          $ref: '#/components/schemas/ComponentGridProperties'
        type:
          $ref: '#/components/schemas/ComponentGridType'
      required:
        - name
        - type
        - properties
      type: object
    ActionQueryCondition:
      description: >-
        Whether to run this query. If specified, the query will only run if this
        condition evaluates to `true` in JavaScript and all other conditions are
        also met.
      oneOf:
        - type: boolean
        - example: ${true}
          type: string
    ActionQueryDebounceInMs:
      description: >-
        The minimum time in milliseconds that must pass before the query can be
        triggered again. This is useful for preventing accidental double-clicks
        from triggering the query multiple times.
      oneOf:
        - example: 310.5
          format: double
          type: number
        - description: >-
            If this is a string, it must be a valid JavaScript expression that
            evaluates to a number.
          example: ${1000}
          type: string
    ActionQueryMockedOutputsEnabled:
      description: Whether to enable the mocked outputs for testing.
      oneOf:
        - type: boolean
        - description: >-
            If this is a string, it must be a valid JavaScript expression that
            evaluates to a boolean.
          example: ${true}
          type: string
    ActionQueryMockedOutputsObject:
      description: The mocked outputs of the action query.
      properties:
        enabled:
          $ref: '#/components/schemas/ActionQueryMockedOutputsEnabled'
        outputs:
          description: The mocked outputs of the action query, serialized as JSON.
          example: '{"status": "success"}'
          type: string
      required:
        - enabled
      type: object
    ActionQueryMockedOutputs:
      description: >-
        The mocked outputs of the action query. This is useful for testing the
        app without actually running the action.
      oneOf:
        - type: string
        - $ref: '#/components/schemas/ActionQueryMockedOutputsObject'
    ActionQueryOnlyTriggerManually:
      description: >-
        Determines when this query is executed. If set to `false`, the query
        will run when the app loads and whenever any query arguments change. If
        set to `true`, the query will only run when manually triggered from
        elsewhere in the app.
      oneOf:
        - type: boolean
        - description: >-
            If this is a string, it must be a valid JavaScript expression that
            evaluates to a boolean.
          example: ${true}
          type: string
    ActionQueryPollingIntervalInMs:
      description: >-
        If specified, the app will poll the query at the specified interval in
        milliseconds. The minimum polling interval is 15 seconds. The query will
        only poll when the app's browser tab is active.
      oneOf:
        - example: 30000
          format: double
          minimum: 15000
          type: number
        - description: >-
            If this is a string, it must be a valid JavaScript expression that
            evaluates to a number.
          example: ${15000}
          type: string
    ActionQueryRequiresConfirmation:
      description: Whether to prompt the user to confirm this query before it runs.
      oneOf:
        - type: boolean
        - description: >-
            If this is a string, it must be a valid JavaScript expression that
            evaluates to a boolean.
          example: ${true}
          type: string
    ActionQueryShowToastOnError:
      description: Whether to display a toast to the user when the query returns an error.
      oneOf:
        - type: boolean
        - description: >-
            If this is a string, it must be a valid JavaScript expression that
            evaluates to a boolean.
          example: ${true}
          type: string
    ActionQuerySpecConnectionGroup:
      description: The connection group to use for an action query.
      properties:
        id:
          description: The ID of the connection group.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        tags:
          description: The tags of the connection group.
          items:
            type: string
          type: array
      type: object
    ActionQuerySpecInput:
      additionalProperties: {}
      description: >-
        The inputs to the action query. See the [Actions
        Catalog](https://docs.datadoghq.com/actions/actions_catalog/) for more
        detail on each action and its inputs.
      type: object
    ActionQuerySpecInputs:
      description: >-
        The inputs to the action query. These are the values that are passed to
        the action when it is triggered.
      oneOf:
        - type: string
        - $ref: '#/components/schemas/ActionQuerySpecInput'
    ActionQuerySpecObject:
      description: The action query spec object.
      properties:
        connectionGroup:
          $ref: '#/components/schemas/ActionQuerySpecConnectionGroup'
        connectionId:
          description: The ID of the custom connection to use for this action query.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          type: string
        fqn:
          description: The fully qualified name of the action type.
          example: com.datadoghq.http.request
          type: string
        inputs:
          $ref: '#/components/schemas/ActionQuerySpecInputs'
      required:
        - fqn
      type: object
    ActionQuerySpec:
      description: The definition of the action query.
      oneOf:
        - type: string
        - $ref: '#/components/schemas/ActionQuerySpecObject'
    ActionQueryProperties:
      description: The properties of the action query.
      properties:
        condition:
          $ref: '#/components/schemas/ActionQueryCondition'
        debounceInMs:
          $ref: '#/components/schemas/ActionQueryDebounceInMs'
        mockedOutputs:
          $ref: '#/components/schemas/ActionQueryMockedOutputs'
        onlyTriggerManually:
          $ref: '#/components/schemas/ActionQueryOnlyTriggerManually'
        outputs:
          description: >-
            The post-query transformation function, which is a JavaScript
            function that changes the query's `.outputs` property after the
            query's execution.
          example: ${((outputs) => {return outputs.body.data})(self.rawOutputs)}
          type: string
        pollingIntervalInMs:
          $ref: '#/components/schemas/ActionQueryPollingIntervalInMs'
        requiresConfirmation:
          $ref: '#/components/schemas/ActionQueryRequiresConfirmation'
        showToastOnError:
          $ref: '#/components/schemas/ActionQueryShowToastOnError'
        spec:
          $ref: '#/components/schemas/ActionQuerySpec'
      required:
        - spec
      type: object
    ActionQueryType:
      default: action
      description: The action query type.
      enum:
        - action
      example: action
      type: string
      x-enum-varnames:
        - ACTION
    ActionQuery:
      description: >-
        An action query. This query type is used to trigger an action, such as
        sending a HTTP request.
      properties:
        events:
          description: Events to listen for downstream of the action query.
          items:
            $ref: '#/components/schemas/AppBuilderEvent'
          type: array
        id:
          description: The ID of the action query.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        name:
          description: >-
            A unique identifier for this action query. This name is also used to
            access the query's result throughout the app.
          example: fetchPendingOrders
          type: string
        properties:
          $ref: '#/components/schemas/ActionQueryProperties'
        type:
          $ref: '#/components/schemas/ActionQueryType'
      required:
        - id
        - name
        - type
        - properties
      type: object
    DataTransformProperties:
      description: The properties of the data transformer.
      properties:
        outputs:
          description: A JavaScript function that returns the transformed data.
          example: |-
            ${(() => {return {
                allItems: [...fetchOrder1.outputs.items, ...fetchOrder2.outputs.items],
            }})()}
          type: string
      type: object
    DataTransformType:
      default: dataTransform
      description: The data transform type.
      enum:
        - dataTransform
      example: dataTransform
      type: string
      x-enum-varnames:
        - DATATRANSFORM
    DataTransform:
      description: >-
        A data transformer, which is custom JavaScript code that executes and
        transforms data when its inputs change.
      properties:
        id:
          description: The ID of the data transformer.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        name:
          description: >-
            A unique identifier for this data transformer. This name is also
            used to access the transformer's result throughout the app.
          example: combineTwoOrders
          type: string
        properties:
          $ref: '#/components/schemas/DataTransformProperties'
        type:
          $ref: '#/components/schemas/DataTransformType'
      required:
        - id
        - name
        - type
        - properties
      type: object
    StateVariableProperties:
      description: The properties of the state variable.
      properties:
        defaultValue:
          description: The default value of the state variable.
          example: ${['order_3145', 'order_4920']}
      type: object
    StateVariableType:
      default: stateVariable
      description: The state variable type.
      enum:
        - stateVariable
      example: stateVariable
      type: string
      x-enum-varnames:
        - STATEVARIABLE
    StateVariable:
      description: A variable, which can be set and read by other components in the app.
      properties:
        id:
          description: The ID of the state variable.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        name:
          description: >-
            A unique identifier for this state variable. This name is also used
            to access the variable's value throughout the app.
          example: ordersToSubmit
          type: string
        properties:
          $ref: '#/components/schemas/StateVariableProperties'
        type:
          $ref: '#/components/schemas/StateVariableType'
      required:
        - id
        - name
        - type
        - properties
      type: object
    Query:
      description: >-
        A data query used by an app. This can take the form of an external
        action, a data transformation, or a state variable.
      oneOf:
        - $ref: '#/components/schemas/ActionQuery'
        - $ref: '#/components/schemas/DataTransform'
        - $ref: '#/components/schemas/StateVariable'
    CreateAppRequestDataAttributes:
      description: App definition attributes such as name, description, and components.
      properties:
        components:
          description: The UI components that make up the app.
          items:
            $ref: '#/components/schemas/ComponentGrid'
          type: array
        description:
          description: A human-readable description for the app.
          type: string
        name:
          description: The name of the app.
          type: string
        queries:
          description: >-
            An array of queries, such as external actions and state variables,
            that the app uses.
          items:
            $ref: '#/components/schemas/Query'
          type: array
        rootInstanceName:
          description: >-
            The name of the root component of the app. This must be a `grid`
            component that contains all other components.
          type: string
        tags:
          description: A list of tags for the app, which can be used to filter apps.
          example:
            - service:webshop-backend
            - team:webshop
          items:
            description: An individual tag for the app.
            type: string
          type: array
      type: object
    CreateAppRequestData:
      description: The data object containing the app definition.
      properties:
        attributes:
          $ref: '#/components/schemas/CreateAppRequestDataAttributes'
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - type
      type: object
    CreateAppRequest:
      description: A request object for creating a new app.
      example:
        data:
          attributes:
            components:
              - events: []
                name: grid0
                properties:
                  children:
                    - events: []
                      name: gridCell0
                      properties:
                        children:
                          - events: []
                            name: calloutValue0
                            properties:
                              isDisabled: false
                              isLoading: false
                              isVisible: true
                              label: CPU Usage
                              size: sm
                              style: vivid_yellow
                              unit: kB
                              value: '42'
                            type: calloutValue
                        isVisible: 'true'
                        layout:
                          default:
                            height: 8
                            width: 2
                            x: 0
                            'y': 0
                      type: gridCell
                type: grid
            description: This is a simple example app
            name: Example App
            queries: []
            rootInstanceName: grid0
          type: appDefinitions
      properties:
        data:
          $ref: '#/components/schemas/CreateAppRequestData'
      type: object
    CreateAppResponseData:
      description: The data object containing the app ID.
      properties:
        id:
          description: The ID of the created app.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - id
        - type
      type: object
    CreateAppResponse:
      description: >-
        The response object after a new app is successfully created, with the
        app ID.
      properties:
        data:
          $ref: '#/components/schemas/CreateAppResponseData'
      type: object
    DeleteAppsRequestDataItems:
      description: An object containing the ID of an app to delete.
      properties:
        id:
          description: The ID of the app to delete.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - id
        - type
      type: object
    DeleteAppsRequest:
      description: A request object for deleting multiple apps by ID.
      example:
        data:
          - id: aea2ed17-b45f-40d0-ba59-c86b7972c901
            type: appDefinitions
          - id: f69bb8be-6168-4fe7-a30d-370256b6504a
            type: appDefinitions
          - id: ab1ed73e-13ad-4426-b0df-a0ff8876a088
            type: appDefinitions
      properties:
        data:
          description: An array of objects containing the IDs of the apps to delete.
          items:
            $ref: '#/components/schemas/DeleteAppsRequestDataItems'
          type: array
      type: object
    DeleteAppsResponseDataItems:
      description: An object containing the ID of a deleted app.
      properties:
        id:
          description: The ID of the deleted app.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - id
        - type
      type: object
    DeleteAppsResponse:
      description: The response object after multiple apps are successfully deleted.
      properties:
        data:
          description: An array of objects containing the IDs of the deleted apps.
          items:
            $ref: '#/components/schemas/DeleteAppsResponseDataItems'
          type: array
      type: object
    GetAppResponseDataAttributes:
      description: >-
        The app definition attributes, such as name, description, and
        components.
      properties:
        components:
          description: The UI components that make up the app.
          items:
            $ref: '#/components/schemas/ComponentGrid'
          type: array
        description:
          description: A human-readable description for the app.
          type: string
        favorite:
          description: Whether the app is marked as a favorite by the current user.
          type: boolean
        name:
          description: The name of the app.
          type: string
        queries:
          description: >-
            An array of queries, such as external actions and state variables,
            that the app uses.
          items:
            $ref: '#/components/schemas/Query'
          type: array
        rootInstanceName:
          description: >-
            The name of the root component of the app. This must be a `grid`
            component that contains all other components.
          type: string
        tags:
          description: A list of tags for the app, which can be used to filter apps.
          example:
            - service:webshop-backend
            - team:webshop
          items:
            description: An individual tag for the app.
            type: string
          type: array
      type: object
    GetAppResponseData:
      description: The data object containing the app definition.
      properties:
        attributes:
          $ref: '#/components/schemas/GetAppResponseDataAttributes'
        id:
          description: The ID of the app.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - id
        - type
        - attributes
      type: object
    CustomConnectionAttributesOnPremRunner:
      description: >-
        Information about the Private Action Runner used by the custom
        connection, if the custom connection is associated with a Private Action
        Runner.
      properties:
        id:
          description: The Private Action Runner ID.
          type: string
        url:
          description: The URL of the Private Action Runner.
          type: string
      type: object
    CustomConnectionAttributes:
      description: The custom connection attributes.
      properties:
        name:
          description: The name of the custom connection.
          type: string
        onPremRunner:
          $ref: '#/components/schemas/CustomConnectionAttributesOnPremRunner'
      type: object
    CustomConnectionType:
      default: custom_connections
      description: The custom connection type.
      enum:
        - custom_connections
      example: custom_connections
      type: string
      x-enum-varnames:
        - CUSTOM_CONNECTIONS
    CustomConnection:
      description: A custom connection used by an app.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomConnectionAttributes'
        id:
          description: The ID of the custom connection.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/CustomConnectionType'
      type: object
    AppRelationship:
      description: The app's publication relationship and custom connections.
      properties:
        connections:
          description: Array of custom connections used by the app.
          items:
            $ref: '#/components/schemas/CustomConnection'
          type: array
        deployment:
          $ref: '#/components/schemas/DeploymentRelationship'
      type: object
    GetAppResponse:
      description: The full app definition response object.
      properties:
        data:
          $ref: '#/components/schemas/GetAppResponseData'
        included:
          description: Data on the version of the app that was published.
          items:
            $ref: '#/components/schemas/Deployment'
          type: array
        meta:
          $ref: '#/components/schemas/AppMeta'
        relationship:
          $ref: '#/components/schemas/AppRelationship'
      type: object
    DeleteAppResponseData:
      description: The definition of `DeleteAppResponseData` object.
      properties:
        id:
          description: The ID of the deleted app.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - id
        - type
      type: object
    DeleteAppResponse:
      description: The response object after an app is successfully deleted.
      properties:
        data:
          $ref: '#/components/schemas/DeleteAppResponseData'
      type: object
    UpdateAppRequestDataAttributes:
      description: >-
        App definition attributes to be updated, such as name, description, and
        components.
      properties:
        components:
          description: >-
            The new UI components that make up the app. If this field is set,
            all existing components are replaced with the new components under
            this field.
          items:
            $ref: '#/components/schemas/ComponentGrid'
          type: array
        description:
          description: The new human-readable description for the app.
          type: string
        name:
          description: The new name of the app.
          type: string
        queries:
          description: >-
            The new array of queries, such as external actions and state
            variables, that the app uses. If this field is set, all existing
            queries are replaced with the new queries under this field.
          items:
            $ref: '#/components/schemas/Query'
          type: array
        rootInstanceName:
          description: >-
            The new name of the root component of the app. This must be a `grid`
            component that contains all other components.
          type: string
        tags:
          description: >-
            The new list of tags for the app, which can be used to filter apps.
            If this field is set, any existing tags not included in the request
            are removed.
          example:
            - service:webshop-backend
            - team:webshop
          items:
            description: An individual tag for the app.
            type: string
          type: array
      type: object
    UpdateAppRequestData:
      description: >-
        The data object containing the new app definition. Any fields not
        included in the request remain unchanged.
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateAppRequestDataAttributes'
        id:
          description: >-
            The ID of the app to update. The app ID must match the ID in the URL
            path.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - type
      type: object
    UpdateAppRequest:
      description: A request object for updating an existing app.
      example:
        data:
          attributes:
            components:
              - events: []
                name: grid0
                properties:
                  children:
                    - events: []
                      name: gridCell0
                      properties:
                        children:
                          - events: []
                            name: calloutValue0
                            properties:
                              isDisabled: false
                              isLoading: false
                              isVisible: true
                              label: CPU Usage
                              size: sm
                              style: vivid_yellow
                              unit: kB
                              value: '42'
                            type: calloutValue
                        isVisible: 'true'
                        layout:
                          default:
                            height: 8
                            width: 2
                            x: 0
                            'y': 0
                      type: gridCell
                type: grid
            description: This is a simple example app
            name: Example App
            queries: []
            rootInstanceName: grid0
          id: 9e20cbaf-68da-45a6-9ccf-54193ac29fa5
          type: appDefinitions
      properties:
        data:
          $ref: '#/components/schemas/UpdateAppRequestData'
      type: object
    UpdateAppResponseDataAttributes:
      description: >-
        The updated app definition attributes, such as name, description, and
        components.
      properties:
        components:
          description: The UI components that make up the app.
          items:
            $ref: '#/components/schemas/ComponentGrid'
          type: array
        description:
          description: The human-readable description for the app.
          type: string
        favorite:
          description: Whether the app is marked as a favorite by the current user.
          type: boolean
        name:
          description: The name of the app.
          type: string
        queries:
          description: >-
            An array of queries, such as external actions and state variables,
            that the app uses.
          items:
            $ref: '#/components/schemas/Query'
          type: array
        rootInstanceName:
          description: >-
            The name of the root component of the app. This must be a `grid`
            component that contains all other components.
          type: string
        tags:
          description: A list of tags for the app, which can be used to filter apps.
          example:
            - service:webshop-backend
            - team:webshop
          items:
            description: An individual tag for the app.
            type: string
          type: array
      type: object
    UpdateAppResponseData:
      description: The data object containing the updated app definition.
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateAppResponseDataAttributes'
        id:
          description: The ID of the updated app.
          example: 65bb1f25-52e1-4510-9f8d-22d1516ed693
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/AppDefinitionType'
      required:
        - id
        - type
        - attributes
      type: object
    UpdateAppResponse:
      description: The response object after an app is successfully updated.
      properties:
        data:
          $ref: '#/components/schemas/UpdateAppResponseData'
        included:
          description: Data on the version of the app that was published.
          items:
            $ref: '#/components/schemas/Deployment'
          type: array
        meta:
          $ref: '#/components/schemas/AppMeta'
        relationship:
          $ref: '#/components/schemas/AppRelationship'
      type: object
    PublishAppResponse:
      description: The response object after an app is successfully published.
      properties:
        data:
          $ref: '#/components/schemas/Deployment'
      type: object
    UnpublishAppResponse:
      description: The response object after an app is successfully unpublished.
      properties:
        data:
          $ref: '#/components/schemas/Deployment'
      type: object
    ApplicationKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    PartialApplicationKeyAttributes:
      description: Attributes of a partial application key.
      properties:
        created_at:
          description: Creation date of the application key.
          example: '2020-11-23T10:00:00.000Z'
          readOnly: true
          type: string
        last4:
          description: The last four characters of the application key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        name:
          description: Name of the application key.
          example: Application Key for managing dashboards
          type: string
        scopes:
          description: Array of scopes to grant the application key.
          example:
            - dashboards_read
            - dashboards_write
            - dashboards_public_share
          items:
            description: Name of scope.
            type: string
          nullable: true
          type: array
      type: object
    ApplicationKeyRelationships:
      description: Resources related to the application key.
      properties:
        owned_by:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    ApplicationKeysType:
      default: application_keys
      description: Application Keys resource type.
      enum:
        - application_keys
      example: application_keys
      type: string
      x-enum-varnames:
        - APPLICATION_KEYS
    PartialApplicationKey:
      description: Partial Datadog application key.
      properties:
        attributes:
          $ref: '#/components/schemas/PartialApplicationKeyAttributes'
        id:
          description: ID of the application key.
          type: string
        relationships:
          $ref: '#/components/schemas/ApplicationKeyRelationships'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      type: object
    RoleAttributes:
      description: Attributes of the role.
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: >-
            The name of the role. The name is neither unique nor a stable
            identifier of the role.
          type: string
        user_count:
          description: Number of users with that role.
          format: int64
          readOnly: true
          type: integer
      type: object
    PermissionsType:
      default: permissions
      description: Permissions resource type.
      enum:
        - permissions
      example: permissions
      type: string
      x-enum-varnames:
        - PERMISSIONS
    RelationshipToPermissionData:
      description: Relationship to permission object.
      properties:
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      type: object
    RelationshipToPermissions:
      description: Relationship to multiple permissions objects.
      properties:
        data:
          description: Relationships to permission objects.
          items:
            $ref: '#/components/schemas/RelationshipToPermissionData'
          type: array
      type: object
    RoleResponseRelationships:
      description: Relationships of the role object returned by the API.
      properties:
        permissions:
          $ref: '#/components/schemas/RelationshipToPermissions'
      type: object
    Role:
      description: Role object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleAttributes'
        id:
          description: The unique identifier of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    ApplicationKeyResponseIncludedItem:
      description: An object related to an application key.
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Role'
        - $ref: '#/components/schemas/LeakedKey'
    ApplicationKeyResponseMetaPage:
      description: Additional information related to the application key response.
      properties:
        total_filtered_count:
          description: Total filtered application key count.
          format: int64
          type: integer
      type: object
    ApplicationKeyResponseMeta:
      description: Additional information related to the application key response.
      properties:
        max_allowed_per_user:
          description: Max allowed number of application keys per user.
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/ApplicationKeyResponseMetaPage'
      type: object
    ListApplicationKeysResponse:
      description: Response for a list of application keys.
      properties:
        data:
          description: Array of application keys.
          items:
            $ref: '#/components/schemas/PartialApplicationKey'
          type: array
        included:
          description: Array of objects related to the application key.
          items:
            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'
          type: array
        meta:
          $ref: '#/components/schemas/ApplicationKeyResponseMeta'
      type: object
    FullApplicationKeyAttributes:
      description: Attributes of a full application key.
      properties:
        created_at:
          description: Creation date of the application key.
          example: '2020-11-23T10:00:00.000Z'
          format: date-time
          readOnly: true
          type: string
        key:
          description: The application key.
          readOnly: true
          type: string
        last4:
          description: The last four characters of the application key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        name:
          description: Name of the application key.
          example: Application Key for managing dashboards
          type: string
        scopes:
          description: Array of scopes to grant the application key.
          example:
            - dashboards_read
            - dashboards_write
            - dashboards_public_share
          items:
            description: Name of scope.
            type: string
          nullable: true
          type: array
      type: object
    FullApplicationKey:
      description: Datadog application key.
      properties:
        attributes:
          $ref: '#/components/schemas/FullApplicationKeyAttributes'
        id:
          description: ID of the application key.
          type: string
        relationships:
          $ref: '#/components/schemas/ApplicationKeyRelationships'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      type: object
    ApplicationKeyResponse:
      description: Response for retrieving an application key.
      properties:
        data:
          $ref: '#/components/schemas/FullApplicationKey'
        included:
          description: Array of objects related to the application key.
          items:
            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'
          type: array
      type: object
    ApplicationKeyUpdateAttributes:
      description: Attributes used to update an application Key.
      properties:
        name:
          description: Name of the application key.
          example: Application Key for managing dashboards
          type: string
        scopes:
          description: Array of scopes to grant the application key.
          example:
            - dashboards_read
            - dashboards_write
            - dashboards_public_share
          items:
            description: Name of scope.
            type: string
          nullable: true
          type: array
      type: object
    ApplicationKeyUpdateData:
      description: Object used to update an application key.
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationKeyUpdateAttributes'
        id:
          description: ID of the application key.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      required:
        - attributes
        - id
        - type
      type: object
    ApplicationKeyUpdateRequest:
      description: Request used to update an application key.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationKeyUpdateData'
      required:
        - data
      type: object
    AuditLogsSort:
      description: Sort parameters when querying events.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    AuditLogsEventAttributes:
      description: JSON object containing all event attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from Audit Logs events.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        message:
          description: Message of the event.
          type: string
        service:
          description: >-
            Name of the application or service generating Audit Logs events.

            This name is used to correlate Audit Logs to APM, so make sure you
            specify the same

            value when you use both products.
          example: web-app
          type: string
        tags:
          description: Array of tags associated with your event.
          example:
            - team:A
          items:
            description: Tag associated with your event.
            type: string
          type: array
        timestamp:
          description: Timestamp of your event.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    AuditLogsEventType:
      default: audit
      description: Type of the event.
      enum:
        - audit
      example: audit
      type: string
      x-enum-varnames:
        - Audit
    AuditLogsEvent:
      description: >-
        Object description of an Audit Logs event after it is processed and
        stored by Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/AuditLogsEventAttributes'
        id:
          description: Unique ID of the event.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/AuditLogsEventType'
      type: object
    AuditLogsResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            Link for the next set of results. Note that the request can also be
            made using the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/audit/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    AuditLogsResponsePage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same parameters with the addition of
            `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    AuditLogsResponseStatus:
      description: The status of the response.
      enum:
        - done
        - timeout
      example: done
      type: string
      x-enum-varnames:
        - DONE
        - TIMEOUT
    AuditLogsWarning:
      description: Warning message indicating something that went wrong with the query.
      properties:
        code:
          description: Unique code for this type of warning.
          example: unknown_index
          type: string
        detail:
          description: Detailed explanation of this specific warning.
          example: 'indexes: foo, bar'
          type: string
        title:
          description: Short human-readable summary of the warning.
          example: >-
            One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    AuditLogsResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: Time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/AuditLogsResponsePage'
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/AuditLogsResponseStatus'
        warnings:
          description: >-
            A list of warnings (non-fatal errors) encountered. Partial results
            may return if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/AuditLogsWarning'
          type: array
      type: object
    AuditLogsEventsResponse:
      description: >-
        Response object with all events matching the request and pagination
        information.
      properties:
        data:
          description: Array of events matching the request.
          items:
            $ref: '#/components/schemas/AuditLogsEvent'
          type: array
        links:
          $ref: '#/components/schemas/AuditLogsResponseLinks'
        meta:
          $ref: '#/components/schemas/AuditLogsResponseMetadata'
      type: object
    AuditLogsQueryFilter:
      description: Search and filter query settings.
      properties:
        from:
          default: now-15m
          description: >-
            Minimum time for the requested events. Supports date, math, and
            regular timestamps (in milliseconds).
          example: now-15m
          type: string
        query:
          default: '*'
          description: Search query following the Audit Logs search syntax.
          example: '@type:session AND @session.type:user'
          type: string
        to:
          default: now
          description: >-
            Maximum time for the requested events. Supports date, math, and
            regular timestamps (in milliseconds).
          example: now
          type: string
      type: object
    AuditLogsQueryOptions:
      description: >-
        Global query options that are used during the query.

        Note: Specify either timezone or time offset, not both. Otherwise, the
        query fails.
      properties:
        time_offset:
          description: Time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: >-
            The timezone can be specified as GMT, UTC, an offset from UTC (like
            UTC+1), or as a Timezone Database identifier (like
            America/New_York).
          example: GMT
          type: string
      type: object
    AuditLogsQueryPageOptions:
      description: Paging attributes for listing events.
      properties:
        cursor:
          description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of events in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    AuditLogsSearchEventsRequest:
      description: The request for a Audit Logs events list.
      properties:
        filter:
          $ref: '#/components/schemas/AuditLogsQueryFilter'
        options:
          $ref: '#/components/schemas/AuditLogsQueryOptions'
        page:
          $ref: '#/components/schemas/AuditLogsQueryPageOptions'
        sort:
          $ref: '#/components/schemas/AuditLogsSort'
      type: object
    AuthNMappingsSort:
      description: Sorting options for AuthN Mappings.
      enum:
        - created_at
        - '-created_at'
        - role_id
        - '-role_id'
        - saml_assertion_attribute_id
        - '-saml_assertion_attribute_id'
        - role.name
        - '-role.name'
        - saml_assertion_attribute.attribute_key
        - '-saml_assertion_attribute.attribute_key'
        - saml_assertion_attribute.attribute_value
        - '-saml_assertion_attribute.attribute_value'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - ROLE_ID_ASCENDING
        - ROLE_ID_DESCENDING
        - SAML_ASSERTION_ATTRIBUTE_ID_ASCENDING
        - SAML_ASSERTION_ATTRIBUTE_ID_DESCENDING
        - ROLE_NAME_ASCENDING
        - ROLE_NAME_DESCENDING
        - SAML_ASSERTION_ATTRIBUTE_KEY_ASCENDING
        - SAML_ASSERTION_ATTRIBUTE_KEY_DESCENDING
        - SAML_ASSERTION_ATTRIBUTE_VALUE_ASCENDING
        - SAML_ASSERTION_ATTRIBUTE_VALUE_DESCENDING
    AuthNMappingResourceType:
      description: The type of resource being mapped to.
      enum:
        - role
        - team
      type: string
      x-enum-varnames:
        - ROLE
        - TEAM
    AuthNMappingAttributes:
      description: Attributes of AuthN Mapping.
      properties:
        attribute_key:
          description: >-
            Key portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: member-of
          type: string
        attribute_value:
          description: >-
            Value portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: Development
          type: string
        created_at:
          description: Creation time of the AuthN Mapping.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last AuthN Mapping modification.
          format: date-time
          readOnly: true
          type: string
        saml_assertion_attribute_id:
          description: The ID of the SAML assertion attribute.
          example: '0'
          type: string
      type: object
    RelationshipToRole:
      description: Relationship to role.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToRoleData'
      type: object
    SAMLAssertionAttributesType:
      default: saml_assertion_attributes
      description: SAML assertion attributes resource type.
      enum:
        - saml_assertion_attributes
      example: saml_assertion_attributes
      type: string
      x-enum-varnames:
        - SAML_ASSERTION_ATTRIBUTES
    RelationshipToSAMLAssertionAttributeData:
      description: Data of AuthN Mapping relationship to SAML Assertion Attribute.
      properties:
        id:
          description: The ID of the SAML assertion attribute.
          example: '0'
          type: string
        type:
          $ref: '#/components/schemas/SAMLAssertionAttributesType'
      required:
        - id
        - type
      type: object
    RelationshipToSAMLAssertionAttribute:
      description: AuthN Mapping relationship to SAML Assertion Attribute.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToSAMLAssertionAttributeData'
      required:
        - data
      type: object
    TeamType:
      default: team
      description: Team type
      enum:
        - team
      example: team
      type: string
      x-enum-varnames:
        - TEAM
    RelationshipToTeamData:
      description: Relationship to Team object.
      properties:
        id:
          description: The unique identifier of the team.
          example: f9bb8444-af7f-11ec-ac2c-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamType'
      type: object
    RelationshipToTeam:
      description: Relationship to team.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToTeamData'
      type: object
    AuthNMappingRelationships:
      description: All relationships associated with AuthN Mapping.
      properties:
        role:
          $ref: '#/components/schemas/RelationshipToRole'
        saml_assertion_attribute:
          $ref: '#/components/schemas/RelationshipToSAMLAssertionAttribute'
        team:
          $ref: '#/components/schemas/RelationshipToTeam'
      type: object
    AuthNMappingsType:
      default: authn_mappings
      description: AuthN Mappings resource type.
      enum:
        - authn_mappings
      example: authn_mappings
      type: string
      x-enum-varnames:
        - AUTHN_MAPPINGS
    AuthNMapping:
      description: The AuthN Mapping object returned by API.
      properties:
        attributes:
          $ref: '#/components/schemas/AuthNMappingAttributes'
        id:
          description: ID of the AuthN Mapping.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        relationships:
          $ref: '#/components/schemas/AuthNMappingRelationships'
        type:
          $ref: '#/components/schemas/AuthNMappingsType'
      required:
        - id
        - type
      type: object
    SAMLAssertionAttributeAttributes:
      description: Key/Value pair of attributes used in SAML assertion attributes.
      properties:
        attribute_key:
          description: >-
            Key portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: member-of
          type: string
        attribute_value:
          description: >-
            Value portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: Development
          type: string
      type: object
    SAMLAssertionAttribute:
      description: SAML assertion attribute.
      properties:
        attributes:
          $ref: '#/components/schemas/SAMLAssertionAttributeAttributes'
        id:
          description: The ID of the SAML assertion attribute.
          example: '0'
          type: string
        type:
          $ref: '#/components/schemas/SAMLAssertionAttributesType'
      required:
        - id
        - type
      type: object
    AuthNMappingTeamAttributes:
      description: Team attributes.
      properties:
        avatar:
          description: >-
            Unicode representation of the avatar for the team, limited to a
            single grapheme
          example: 🥑
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        link_count:
          description: The number of links belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        summary:
          description: A brief summary of the team, derived from the `description`
          maxLength: 120
          nullable: true
          type: string
        user_count:
          description: The number of users belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
      type: object
    AuthNMappingTeam:
      description: Team.
      properties:
        attributes:
          $ref: '#/components/schemas/AuthNMappingTeamAttributes'
        id:
          description: The ID of the Team.
          example: f9bb8444-af7f-11ec-ac2c-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamType'
      type: object
    AuthNMappingIncluded:
      description: Included data in the AuthN Mapping response.
      oneOf:
        - $ref: '#/components/schemas/SAMLAssertionAttribute'
        - $ref: '#/components/schemas/Role'
        - $ref: '#/components/schemas/AuthNMappingTeam'
    AuthNMappingsResponse:
      description: Array of AuthN Mappings response.
      properties:
        data:
          description: Array of returned AuthN Mappings.
          items:
            $ref: '#/components/schemas/AuthNMapping'
          type: array
        included:
          description: Included data in the AuthN Mapping response.
          items:
            $ref: '#/components/schemas/AuthNMappingIncluded'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    AuthNMappingCreateAttributes:
      description: Key/Value pair of attributes used for create request.
      properties:
        attribute_key:
          description: >-
            Key portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: member-of
          type: string
        attribute_value:
          description: >-
            Value portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: Development
          type: string
      type: object
    AuthNMappingRelationshipToRole:
      description: Relationship of AuthN Mapping to a Role.
      properties:
        role:
          $ref: '#/components/schemas/RelationshipToRole'
      required:
        - role
      type: object
    AuthNMappingRelationshipToTeam:
      description: Relationship of AuthN Mapping to a Team.
      properties:
        team:
          $ref: '#/components/schemas/RelationshipToTeam'
      required:
        - team
      type: object
    AuthNMappingCreateRelationships:
      description: Relationship of AuthN Mapping create object to a Role or Team.
      oneOf:
        - $ref: '#/components/schemas/AuthNMappingRelationshipToRole'
        - $ref: '#/components/schemas/AuthNMappingRelationshipToTeam'
    AuthNMappingCreateData:
      description: Data for creating an AuthN Mapping.
      properties:
        attributes:
          $ref: '#/components/schemas/AuthNMappingCreateAttributes'
        relationships:
          $ref: '#/components/schemas/AuthNMappingCreateRelationships'
        type:
          $ref: '#/components/schemas/AuthNMappingsType'
      required:
        - type
      type: object
    AuthNMappingCreateRequest:
      description: Request for creating an AuthN Mapping.
      properties:
        data:
          $ref: '#/components/schemas/AuthNMappingCreateData'
      required:
        - data
      type: object
    AuthNMappingResponse:
      description: AuthN Mapping response from the API.
      properties:
        data:
          $ref: '#/components/schemas/AuthNMapping'
        included:
          description: Included data in the AuthN Mapping response.
          items:
            $ref: '#/components/schemas/AuthNMappingIncluded'
          type: array
      type: object
    AuthNMappingUpdateAttributes:
      description: Key/Value pair of attributes used for update request.
      properties:
        attribute_key:
          description: >-
            Key portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: member-of
          type: string
        attribute_value:
          description: >-
            Value portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: Development
          type: string
      type: object
    AuthNMappingUpdateRelationships:
      description: Relationship of AuthN Mapping update object to a Role or Team.
      oneOf:
        - $ref: '#/components/schemas/AuthNMappingRelationshipToRole'
        - $ref: '#/components/schemas/AuthNMappingRelationshipToTeam'
    AuthNMappingUpdateData:
      description: Data for updating an AuthN Mapping.
      properties:
        attributes:
          $ref: '#/components/schemas/AuthNMappingUpdateAttributes'
        id:
          description: ID of the AuthN Mapping.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        relationships:
          $ref: '#/components/schemas/AuthNMappingUpdateRelationships'
        type:
          $ref: '#/components/schemas/AuthNMappingsType'
      required:
        - id
        - type
      type: object
    AuthNMappingUpdateRequest:
      description: Request to update an AuthN Mapping.
      properties:
        data:
          $ref: '#/components/schemas/AuthNMappingUpdateData'
      required:
        - data
      type: object
    CaseSortableField:
      description: Case field that can be sorted on
      enum:
        - created_at
        - priority
        - status
      example: created_at
      type: string
      x-enum-varnames:
        - CREATED_AT
        - PRIORITY
        - STATUS
    JiraIssueResult:
      description: Jira issue information
      properties:
        issue_id:
          description: Jira issue ID
          type: string
        issue_key:
          description: Jira issue key
          type: string
        issue_url:
          description: Jira issue URL
          type: string
        project_key:
          description: Jira project key
          type: string
      type: object
    Case3rdPartyTicketStatus:
      default: IN_PROGRESS
      description: Case status
      enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
      example: COMPLETED
      readOnly: true
      type: string
      x-enum-varnames:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
    JiraIssue:
      description: Jira issue attached to case
      nullable: true
      properties:
        result:
          $ref: '#/components/schemas/JiraIssueResult'
        status:
          $ref: '#/components/schemas/Case3rdPartyTicketStatus'
      readOnly: true
      type: object
    CasePriority:
      default: NOT_DEFINED
      description: Case priority
      enum:
        - NOT_DEFINED
        - P1
        - P2
        - P3
        - P4
        - P5
      example: NOT_DEFINED
      type: string
      x-enum-varnames:
        - NOT_DEFINED
        - P1
        - P2
        - P3
        - P4
        - P5
    ServiceNowTicketResult:
      description: ServiceNow ticket information
      properties:
        sys_target_link:
          description: Link to the Incident created on ServiceNow
          type: string
      type: object
    ServiceNowTicket:
      description: ServiceNow ticket attached to case
      nullable: true
      properties:
        result:
          $ref: '#/components/schemas/ServiceNowTicketResult'
        status:
          $ref: '#/components/schemas/Case3rdPartyTicketStatus'
      readOnly: true
      type: object
    CaseStatus:
      description: Case status
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
      example: OPEN
      type: string
      x-enum-varnames:
        - OPEN
        - IN_PROGRESS
        - CLOSED
    CaseType:
      description: Case type
      enum:
        - STANDARD
      example: STANDARD
      type: string
      x-enum-varnames:
        - STANDARD
    CaseAttributes:
      description: Case attributes
      properties:
        archived_at:
          description: Timestamp of when the case was archived
          format: date-time
          nullable: true
          readOnly: true
          type: string
        closed_at:
          description: Timestamp of when the case was closed
          format: date-time
          nullable: true
          readOnly: true
          type: string
        created_at:
          description: Timestamp of when the case was created
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description
          type: string
        jira_issue:
          $ref: '#/components/schemas/JiraIssue'
        key:
          description: Key
          example: CASEM-4523
          type: string
        modified_at:
          description: Timestamp of when the case was last modified
          format: date-time
          nullable: true
          readOnly: true
          type: string
        priority:
          $ref: '#/components/schemas/CasePriority'
        service_now_ticket:
          $ref: '#/components/schemas/ServiceNowTicket'
        status:
          $ref: '#/components/schemas/CaseStatus'
        title:
          description: Title
          example: Memory leak investigation on API
          type: string
        type:
          $ref: '#/components/schemas/CaseType'
      type: object
    UserResourceType:
      default: user
      description: User resource type.
      enum:
        - user
      example: user
      type: string
      x-enum-varnames:
        - USER
    NullableUserRelationshipData:
      description: Relationship to user object.
      nullable: true
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UserResourceType'
      required:
        - id
        - type
      type: object
    NullableUserRelationship:
      description: Relationship to user.
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/NullableUserRelationshipData'
      required:
        - data
      type: object
    ProjectResourceType:
      default: project
      description: Project resource type
      enum:
        - project
      example: project
      type: string
      x-enum-varnames:
        - PROJECT
    ProjectRelationshipData:
      description: Relationship to project object
      properties:
        id:
          description: A unique identifier that represents the project
          example: e555e290-ed65-49bd-ae18-8acbfcf18db7
          type: string
        type:
          $ref: '#/components/schemas/ProjectResourceType'
      required:
        - id
        - type
      type: object
    ProjectRelationship:
      description: Relationship to project
      properties:
        data:
          $ref: '#/components/schemas/ProjectRelationshipData'
      required:
        - data
      type: object
    CaseRelationships:
      description: Resources related to a case
      properties:
        assignee:
          $ref: '#/components/schemas/NullableUserRelationship'
        created_by:
          $ref: '#/components/schemas/NullableUserRelationship'
        modified_by:
          $ref: '#/components/schemas/NullableUserRelationship'
        project:
          $ref: '#/components/schemas/ProjectRelationship'
      type: object
    CaseResourceType:
      default: case
      description: Case resource type
      enum:
        - case
      example: case
      type: string
      x-enum-varnames:
        - CASE
    Case:
      description: A case
      properties:
        attributes:
          $ref: '#/components/schemas/CaseAttributes'
        id:
          description: Case's identifier
          example: aeadc05e-98a8-11ec-ac2c-da7ad0900001
          type: string
        relationships:
          $ref: '#/components/schemas/CaseRelationships'
        type:
          $ref: '#/components/schemas/CaseResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    CasesResponseMetaPagination:
      description: Pagination metadata
      properties:
        current:
          description: Current page number
          format: int64
          type: integer
        size:
          description: Number of cases in current page
          format: int64
          type: integer
        total:
          description: Total number of pages
          format: int64
          type: integer
      type: object
    CasesResponseMeta:
      description: Cases response metadata
      properties:
        page:
          $ref: '#/components/schemas/CasesResponseMetaPagination'
      type: object
    CasesResponse:
      description: Response with cases
      properties:
        data:
          description: Cases response data
          items:
            $ref: '#/components/schemas/Case'
          type: array
        meta:
          $ref: '#/components/schemas/CasesResponseMeta'
      type: object
    CaseCreateAttributes:
      description: Case creation attributes
      properties:
        description:
          description: Description
          type: string
        priority:
          $ref: '#/components/schemas/CasePriority'
        title:
          description: Title
          example: Security breach investigation
          type: string
        type:
          $ref: '#/components/schemas/CaseType'
      required:
        - title
        - type
      type: object
    CaseCreateRelationships:
      description: Relationships formed with the case on creation
      properties:
        assignee:
          $ref: '#/components/schemas/NullableUserRelationship'
        project:
          $ref: '#/components/schemas/ProjectRelationship'
      required:
        - project
      type: object
    CaseCreate:
      description: Case creation data
      properties:
        attributes:
          $ref: '#/components/schemas/CaseCreateAttributes'
        relationships:
          $ref: '#/components/schemas/CaseCreateRelationships'
        type:
          $ref: '#/components/schemas/CaseResourceType'
      required:
        - attributes
        - type
      type: object
    CaseCreateRequest:
      description: Case create request
      properties:
        data:
          $ref: '#/components/schemas/CaseCreate'
      required:
        - data
      type: object
    CaseResponse:
      description: Case response
      properties:
        data:
          $ref: '#/components/schemas/Case'
      type: object
    ProjectAttributes:
      description: Project attributes
      properties:
        key:
          description: The project's key
          example: CASEM
          type: string
        name:
          description: Project's name
          type: string
      type: object
    TeamLinkType:
      default: team_links
      description: Team link type
      enum:
        - team_links
      example: team_links
      type: string
      x-enum-varnames:
        - TEAM_LINKS
    RelationshipToTeamLinkData:
      description: Relationship between a link and a team
      properties:
        id:
          description: The team link's identifier
          example: f9bb8444-af7f-11ec-ac2c-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - id
        - type
      type: object
    TeamRelationshipsLinks:
      description: Links attributes.
      properties:
        related:
          description: Related link.
          example: /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
          type: string
      type: object
    RelationshipToTeamLinks:
      description: Relationship between a team and a team link
      properties:
        data:
          description: Related team links
          items:
            $ref: '#/components/schemas/RelationshipToTeamLinkData'
          type: array
        links:
          $ref: '#/components/schemas/TeamRelationshipsLinks'
      type: object
    UserRelationshipData:
      description: Relationship to user object.
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UserResourceType'
      required:
        - id
        - type
      type: object
    UsersRelationship:
      description: Relationship to users.
      properties:
        data:
          description: Relationships to user objects.
          example: []
          items:
            $ref: '#/components/schemas/UserRelationshipData'
          type: array
      required:
        - data
      type: object
    ProjectRelationships:
      description: Project relationships
      properties:
        member_team:
          $ref: '#/components/schemas/RelationshipToTeamLinks'
        member_user:
          $ref: '#/components/schemas/UsersRelationship'
      type: object
    Project:
      description: A Project
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectAttributes'
        id:
          description: The Project's identifier
          example: aeadc05e-98a8-11ec-ac2c-da7ad0900001
          type: string
        relationships:
          $ref: '#/components/schemas/ProjectRelationships'
        type:
          $ref: '#/components/schemas/ProjectResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    ProjectsResponse:
      description: Response with projects
      properties:
        data:
          description: Projects response data
          items:
            $ref: '#/components/schemas/Project'
          type: array
      type: object
    ProjectCreateAttributes:
      description: Project creation attributes
      properties:
        key:
          description: Project's key. Cannot be "CASE"
          example: SEC
          type: string
        name:
          description: name
          example: Security Investigation
          type: string
      required:
        - name
        - key
      type: object
    ProjectCreate:
      description: Project create
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectCreateAttributes'
        type:
          $ref: '#/components/schemas/ProjectResourceType'
      required:
        - attributes
        - type
      type: object
    ProjectCreateRequest:
      description: Project create request
      properties:
        data:
          $ref: '#/components/schemas/ProjectCreate'
      required:
        - data
      type: object
    ProjectResponse:
      description: Project response
      properties:
        data:
          $ref: '#/components/schemas/Project'
      type: object
    CaseEmpty:
      description: Case empty request data
      properties:
        type:
          $ref: '#/components/schemas/CaseResourceType'
      required:
        - type
      type: object
    CaseEmptyRequest:
      description: Case empty request
      properties:
        data:
          $ref: '#/components/schemas/CaseEmpty'
      required:
        - data
      type: object
    CaseAssignAttributes:
      description: Case assign attributes
      properties:
        assignee_id:
          description: Assignee's UUID
          example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
          type: string
      required:
        - assignee_id
      type: object
    CaseAssign:
      description: Case assign
      properties:
        attributes:
          $ref: '#/components/schemas/CaseAssignAttributes'
        type:
          $ref: '#/components/schemas/CaseResourceType'
      required:
        - attributes
        - type
      type: object
    CaseAssignRequest:
      description: Case assign request
      properties:
        data:
          $ref: '#/components/schemas/CaseAssign'
      required:
        - data
      type: object
    CaseUpdatePriorityAttributes:
      description: Case update priority attributes
      properties:
        priority:
          $ref: '#/components/schemas/CasePriority'
      required:
        - priority
      type: object
    CaseUpdatePriority:
      description: Case priority status
      properties:
        attributes:
          $ref: '#/components/schemas/CaseUpdatePriorityAttributes'
        type:
          $ref: '#/components/schemas/CaseResourceType'
      required:
        - attributes
        - type
      type: object
    CaseUpdatePriorityRequest:
      description: Case update priority request
      properties:
        data:
          $ref: '#/components/schemas/CaseUpdatePriority'
      required:
        - data
      type: object
    CaseUpdateStatusAttributes:
      description: Case update status attributes
      properties:
        status:
          $ref: '#/components/schemas/CaseStatus'
      required:
        - status
      type: object
    CaseUpdateStatus:
      description: Case update status
      properties:
        attributes:
          $ref: '#/components/schemas/CaseUpdateStatusAttributes'
        type:
          $ref: '#/components/schemas/CaseResourceType'
      required:
        - attributes
        - type
      type: object
    CaseUpdateStatusRequest:
      description: Case update status request
      properties:
        data:
          $ref: '#/components/schemas/CaseUpdateStatus'
      required:
        - data
      type: object
    RelationType:
      description: Supported relation types.
      enum:
        - RelationTypeOwns
        - RelationTypeOwnedBy
        - RelationTypeDependsOn
        - RelationTypeDependencyOf
        - RelationTypePartsOf
        - RelationTypeHasPart
        - RelationTypeOtherOwns
        - RelationTypeOtherOwnedBy
        - RelationTypeImplementedBy
        - RelationTypeImplements
      type: string
      x-enum-varnames:
        - RELATIONTYPEOWNS
        - RELATIONTYPEOWNEDBY
        - RELATIONTYPEDEPENDSON
        - RELATIONTYPEDEPENDENCYOF
        - RELATIONTYPEPARTSOF
        - RELATIONTYPEHASPART
        - RELATIONTYPEOTHEROWNS
        - RELATIONTYPEOTHEROWNEDBY
        - RELATIONTYPEIMPLEMENTEDBY
        - RELATIONTYPEIMPLEMENTS
    IncludeType:
      description: Supported include types.
      enum:
        - schema
        - raw_schema
        - oncall
        - incident
        - relation
      type: string
      x-enum-varnames:
        - SCHEMA
        - RAW_SCHEMA
        - ONCALL
        - INCIDENT
        - RELATION
    EntityAttributes:
      description: Entity attributes.
      properties:
        apiVersion:
          description: The API version.
          type: string
        description:
          description: The description.
          type: string
        displayName:
          description: The display name.
          type: string
        kind:
          description: The kind.
          type: string
        name:
          description: The name.
          type: string
        namespace:
          description: The namespace.
          type: string
        owner:
          description: The owner.
          type: string
        tags:
          description: The tags.
          items:
            type: string
          type: array
      type: object
    EntityMeta:
      description: Entity metadata.
      properties:
        createdAt:
          description: The creation time.
          type: string
        ingestionSource:
          description: The ingestion source.
          type: string
        modifiedAt:
          description: The modification time.
          type: string
        origin:
          description: The origin.
          type: string
      type: object
    RelationshipItem:
      description: Relationship entry.
      properties:
        id:
          description: Associated data ID.
          type: string
        type:
          description: Relationship type.
          type: string
      type: object
    RelationshipArray:
      description: Relationships.
      items:
        $ref: '#/components/schemas/RelationshipItem'
      type: array
    EntityToIncidents:
      description: Entity to incidents relationship.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipArray'
      type: object
    EntityToOncalls:
      description: Entity to oncalls relationship.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipArray'
      type: object
    EntityToRawSchema:
      description: Entity to raw schema relationship.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipItem'
      type: object
    EntityToRelatedEntities:
      description: Entity to related entities relationship.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipArray'
      type: object
    EntityToSchema:
      description: Entity to detail schema relationship.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipItem'
      type: object
    EntityRelationships:
      description: Entity relationships.
      properties:
        incidents:
          $ref: '#/components/schemas/EntityToIncidents'
        oncall:
          $ref: '#/components/schemas/EntityToOncalls'
        rawSchema:
          $ref: '#/components/schemas/EntityToRawSchema'
        relatedEntities:
          $ref: '#/components/schemas/EntityToRelatedEntities'
        schema:
          $ref: '#/components/schemas/EntityToSchema'
      type: object
    EntityData:
      description: Entity data.
      properties:
        attributes:
          $ref: '#/components/schemas/EntityAttributes'
        id:
          description: Entity ID.
          type: string
        meta:
          $ref: '#/components/schemas/EntityMeta'
        relationships:
          $ref: '#/components/schemas/EntityRelationships'
        type:
          description: Entity.
          type: string
      type: object
    EntityResponseData:
      description: List of entity data.
      items:
        $ref: '#/components/schemas/EntityData'
      type: array
    EntityV3APIVersion:
      description: >-
        The schema version of entity type. The field is known as schema-version
        in the previous version.
      enum:
        - v3
      example: v3
      type: string
      x-enum-varnames:
        - V3
    EntityV3DatadogCodeLocationItem:
      additionalProperties: false
      description: Code location item.
      properties:
        paths:
          description: The paths (glob) to the source code of the service.
          items:
            type: string
          type: array
        repositoryURL:
          description: The repository path of the source code of the entity.
          pattern: url
          type: string
      type: object
    EntityV3DatadogCodeLocations:
      additionalProperties: false
      description: Schema for mapping source code locations to an entity.
      items:
        $ref: '#/components/schemas/EntityV3DatadogCodeLocationItem'
      type: array
    EntityV3DatadogEventItem:
      additionalProperties: false
      description: Events association item.
      properties:
        name:
          description: The name of the query.
          type: string
        query:
          description: The query to run.
          type: string
      type: object
    EntityV3DatadogEvents:
      additionalProperties: false
      description: Events associations.
      items:
        $ref: '#/components/schemas/EntityV3DatadogEventItem'
      type: array
    EntityV3DatadogLogItem:
      additionalProperties: false
      description: Log association item.
      properties:
        name:
          description: The name of the query.
          type: string
        query:
          description: The query to run.
          type: string
      type: object
    EntityV3DatadogLogs:
      additionalProperties: false
      description: Logs association.
      items:
        $ref: '#/components/schemas/EntityV3DatadogLogItem'
      type: array
    EntityV3DatadogPerformance:
      additionalProperties: false
      description: Performance stats association.
      properties:
        tags:
          description: >-
            A list of APM entity tags that associates the APM Stats data with
            the entity.
          items:
            type: string
          type: array
      type: object
    EntityV3DatadogPipelines:
      additionalProperties: false
      description: CI Pipelines association.
      properties:
        fingerprints:
          description: >-
            A list of CI Fingerprints that associate CI Pipelines with the
            entity.
          items:
            type: string
          type: array
      type: object
    EntityV3ServiceDatadog:
      additionalProperties: false
      description: Datadog product integrations for the service entity.
      properties:
        codeLocations:
          $ref: '#/components/schemas/EntityV3DatadogCodeLocations'
        events:
          $ref: '#/components/schemas/EntityV3DatadogEvents'
        logs:
          $ref: '#/components/schemas/EntityV3DatadogLogs'
        performanceData:
          $ref: '#/components/schemas/EntityV3DatadogPerformance'
        pipelines:
          $ref: '#/components/schemas/EntityV3DatadogPipelines'
      type: object
    EntityV3DatadogIntegrationOpsgenie:
      additionalProperties: false
      description: An Opsgenie integration schema.
      properties:
        region:
          description: The region for the Opsgenie integration.
          minLength: 1
          type: string
        serviceURL:
          description: The service URL for the Opsgenie integration.
          example: https://www.opsgenie.com/service/shopping-cart
          minLength: 1
          type: string
      required:
        - serviceURL
      type: object
    EntityV3DatadogIntegrationPagerduty:
      additionalProperties: false
      description: A PagerDuty integration schema.
      properties:
        serviceURL:
          description: The service URL for the PagerDuty integration.
          example: https://www.pagerduty.com/service-directory/Pshopping-cart
          minLength: 1
          type: string
      required:
        - serviceURL
      type: object
    EntityV3Integrations:
      additionalProperties: false
      description: A base schema for defining third-party integrations.
      properties:
        opsgenie:
          $ref: '#/components/schemas/EntityV3DatadogIntegrationOpsgenie'
        pagerduty:
          $ref: '#/components/schemas/EntityV3DatadogIntegrationPagerduty'
      type: object
    EntityV3ServiceKind:
      description: The definition of Entity V3 Service Kind object.
      enum:
        - service
      example: service
      type: string
      x-enum-varnames:
        - SERVICE
    EntityV3MetadataAdditionalOwnersItems:
      description: The definition of Entity V3 Metadata Additional Owners Items object.
      properties:
        name:
          description: Team name.
          example: ''
          type: string
        type:
          description: Team type.
          type: string
      required:
        - name
      type: object
    EntityV3MetadataContactsItems:
      additionalProperties: false
      description: The definition of Entity V3 Metadata Contacts Items object.
      properties:
        contact:
          description: Contact value.
          example: https://slack/
          type: string
        name:
          description: Contact name.
          minLength: 2
          type: string
        type:
          description: Contact type.
          example: slack
          type: string
      required:
        - type
        - contact
      type: object
    EntityV3MetadataLinksItems:
      additionalProperties: false
      description: The definition of Entity V3 Metadata Links Items object.
      properties:
        name:
          description: Link name.
          example: mylink
          type: string
        provider:
          description: Link provider.
          type: string
        type:
          default: other
          description: Link type.
          example: link
          type: string
        url:
          description: Link URL.
          example: https://mylink
          type: string
      required:
        - name
        - type
        - url
      type: object
    EntityV3Metadata:
      additionalProperties: false
      description: The definition of Entity V3 Metadata object.
      properties:
        additionalOwners:
          additionalProperties: false
          description: The additional owners of the entity, usually a team.
          items:
            $ref: '#/components/schemas/EntityV3MetadataAdditionalOwnersItems'
          type: array
        contacts:
          additionalProperties: false
          description: A list of contacts for the entity.
          items:
            $ref: '#/components/schemas/EntityV3MetadataContactsItems'
          type: array
        description:
          description: >-
            Short description of the entity. The UI can leverage the description
            for display.
          type: string
        displayName:
          description: >-
            User friendly name of the entity. The UI can leverage the display
            name for display.
          type: string
        id:
          description: >-
            A read-only globally unique identifier for the entity generated by
            Datadog.  User supplied values are ignored.
          example: 4b163705-23c0-4573-b2fb-f6cea2163fcb
          minLength: 1
          type: string
        inheritFrom:
          description: The entity reference from which to inherit metadata
          example: application:default/myapp
          type: string
        links:
          additionalProperties: false
          description: A list of links for the entity.
          items:
            $ref: '#/components/schemas/EntityV3MetadataLinksItems'
          type: array
        managed:
          additionalProperties: {}
          description: >-
            A read-only set of Datadog managed attributes generated by Datadog. 
            User supplied values are ignored.
          type: object
        name:
          description: Unique name given to an entity under the kind/namespace.
          example: myService
          minLength: 1
          type: string
        namespace:
          description: >-
            Namespace is a part of unique identifier. It has a default value of
            'default'.
          example: default
          minLength: 1
          type: string
        owner:
          description: The owner of the entity, usually a team.
          type: string
        tags:
          description: A set of custom tags.
          example:
            - this:tag
            - that:tag
          items:
            type: string
          type: array
      required:
        - name
      type: object
    EntityV3ServiceSpec:
      additionalProperties: false
      description: The definition of Entity V3 Service Spec object.
      properties:
        componentOf:
          description: A list of components the service is a part of
          items:
            type: string
          type: array
        dependsOn:
          description: A list of components the service depends on.
          items:
            type: string
          type: array
        languages:
          description: The service's programming language.
          items:
            type: string
          type: array
        lifecycle:
          description: The lifecycle state of the component.
          minLength: 1
          type: string
        tier:
          description: The importance of the component.
          minLength: 1
          type: string
        type:
          description: The type of service.
          type: string
      type: object
    EntityV3Service:
      additionalProperties: false
      description: Schema for service entities.
      properties:
        apiVersion:
          $ref: '#/components/schemas/EntityV3APIVersion'
        datadog:
          $ref: '#/components/schemas/EntityV3ServiceDatadog'
        extensions:
          additionalProperties: {}
          description: >-
            Custom extensions. This is the free-formed field to send client-side
            metadata. No Datadog features are affected by this field.
          type: object
        integrations:
          $ref: '#/components/schemas/EntityV3Integrations'
        kind:
          $ref: '#/components/schemas/EntityV3ServiceKind'
        metadata:
          $ref: '#/components/schemas/EntityV3Metadata'
        spec:
          $ref: '#/components/schemas/EntityV3ServiceSpec'
      required:
        - apiVersion
        - kind
        - metadata
      type: object
    EntityV3DatastoreDatadog:
      additionalProperties: false
      description: Datadog product integrations for the datastore entity.
      properties:
        events:
          $ref: '#/components/schemas/EntityV3DatadogEvents'
        logs:
          $ref: '#/components/schemas/EntityV3DatadogLogs'
        performanceData:
          $ref: '#/components/schemas/EntityV3DatadogPerformance'
      type: object
    EntityV3DatastoreKind:
      description: The definition of Entity V3 Datastore Kind object.
      enum:
        - datastore
      example: datastore
      type: string
      x-enum-varnames:
        - DATASTORE
    EntityV3DatastoreSpec:
      additionalProperties: false
      description: The definition of Entity V3 Datastore Spec object.
      properties:
        componentOf:
          description: A list of components the datastore is a part of
          items:
            type: string
          type: array
        lifecycle:
          description: The lifecycle state of the datastore.
          minLength: 1
          type: string
        tier:
          description: The importance of the datastore.
          minLength: 1
          type: string
        type:
          description: The type of datastore.
          type: string
      type: object
    EntityV3Datastore:
      additionalProperties: false
      description: Schema for datastore entities.
      properties:
        apiVersion:
          $ref: '#/components/schemas/EntityV3APIVersion'
        datadog:
          $ref: '#/components/schemas/EntityV3DatastoreDatadog'
        extensions:
          additionalProperties: {}
          description: >-
            Custom extensions. This is the free-formed field to send client side
            metadata. No Datadog features are affected by this field.
          type: object
        integrations:
          $ref: '#/components/schemas/EntityV3Integrations'
        kind:
          $ref: '#/components/schemas/EntityV3DatastoreKind'
        metadata:
          $ref: '#/components/schemas/EntityV3Metadata'
        spec:
          $ref: '#/components/schemas/EntityV3DatastoreSpec'
      required:
        - apiVersion
        - kind
        - metadata
      type: object
    EntityV3QueueDatadog:
      additionalProperties: false
      description: Datadog product integrations for the datastore entity.
      properties:
        events:
          $ref: '#/components/schemas/EntityV3DatadogEvents'
        logs:
          $ref: '#/components/schemas/EntityV3DatadogLogs'
        performanceData:
          $ref: '#/components/schemas/EntityV3DatadogPerformance'
      type: object
    EntityV3QueueKind:
      description: The definition of Entity V3 Queue Kind object.
      enum:
        - queue
      example: queue
      type: string
      x-enum-varnames:
        - QUEUE
    EntityV3QueueSpec:
      additionalProperties: false
      description: The definition of Entity V3 Queue Spec object.
      properties:
        componentOf:
          description: A list of components the queue is a part of
          items:
            type: string
          type: array
        lifecycle:
          description: The lifecycle state of the queue.
          minLength: 1
          type: string
        tier:
          description: The importance of the queue.
          minLength: 1
          type: string
        type:
          description: The type of queue.
          type: string
      type: object
    EntityV3Queue:
      additionalProperties: false
      description: Schema for queue entities.
      properties:
        apiVersion:
          $ref: '#/components/schemas/EntityV3APIVersion'
        datadog:
          $ref: '#/components/schemas/EntityV3QueueDatadog'
        extensions:
          additionalProperties: {}
          description: >-
            Custom extensions. This is the free-formed field to send client-side
            metadata. No Datadog features are affected by this field.
          type: object
        integrations:
          $ref: '#/components/schemas/EntityV3Integrations'
        kind:
          $ref: '#/components/schemas/EntityV3QueueKind'
        metadata:
          $ref: '#/components/schemas/EntityV3Metadata'
        spec:
          $ref: '#/components/schemas/EntityV3QueueSpec'
      required:
        - apiVersion
        - kind
        - metadata
      type: object
    EntityV3SystemDatadog:
      additionalProperties: false
      description: Datadog product integrations for the service entity.
      properties:
        events:
          $ref: '#/components/schemas/EntityV3DatadogEvents'
        logs:
          $ref: '#/components/schemas/EntityV3DatadogLogs'
        performanceData:
          $ref: '#/components/schemas/EntityV3DatadogPerformance'
        pipelines:
          $ref: '#/components/schemas/EntityV3DatadogPipelines'
      type: object
    EntityV3SystemKind:
      description: The definition of Entity V3 System Kind object.
      enum:
        - system
      example: system
      type: string
      x-enum-varnames:
        - SYSTEM
    EntityV3SystemSpec:
      additionalProperties: false
      description: The definition of Entity V3 System Spec object.
      properties:
        components:
          description: A list of components belongs to the system.
          items:
            type: string
          type: array
        lifecycle:
          description: The lifecycle state of the component.
          minLength: 1
          type: string
        tier:
          description: An entity reference to the owner of the component.
          minLength: 1
          type: string
      type: object
    EntityV3System:
      additionalProperties: false
      description: Schema for system entities.
      properties:
        apiVersion:
          $ref: '#/components/schemas/EntityV3APIVersion'
        datadog:
          $ref: '#/components/schemas/EntityV3SystemDatadog'
        extensions:
          additionalProperties: {}
          description: >-
            Custom extensions. This is the free-formed field to send client-side
            metadata. No Datadog features are affected by this field.
          type: object
        integrations:
          $ref: '#/components/schemas/EntityV3Integrations'
        kind:
          $ref: '#/components/schemas/EntityV3SystemKind'
        metadata:
          $ref: '#/components/schemas/EntityV3Metadata'
        spec:
          $ref: '#/components/schemas/EntityV3SystemSpec'
      required:
        - apiVersion
        - kind
        - metadata
      type: object
    EntityV3APIDatadog:
      additionalProperties: false
      description: Datadog product integrations for the API entity.
      properties:
        codeLocations:
          $ref: '#/components/schemas/EntityV3DatadogCodeLocations'
        events:
          $ref: '#/components/schemas/EntityV3DatadogEvents'
        logs:
          $ref: '#/components/schemas/EntityV3DatadogLogs'
        performanceData:
          $ref: '#/components/schemas/EntityV3DatadogPerformance'
        pipelines:
          $ref: '#/components/schemas/EntityV3DatadogPipelines'
      type: object
    EntityV3APIKind:
      description: The definition of Entity V3 API Kind object.
      enum:
        - api
      example: api
      type: string
      x-enum-varnames:
        - API
    EntityV3APISpecInterfaceFileRef:
      additionalProperties: false
      description: The definition of `EntityV3APISpecInterfaceFileRef` object.
      properties:
        fileRef:
          description: The reference to the API definition file.
          type: string
      type: object
    EntityV3APISpecInterfaceDefinition:
      additionalProperties: false
      description: The definition of `EntityV3APISpecInterfaceDefinition` object.
      properties:
        definition:
          description: The API definition.
          type: object
      type: object
    EntityV3APISpecInterface:
      additionalProperties: false
      description: The API definition.
      oneOf:
        - $ref: '#/components/schemas/EntityV3APISpecInterfaceFileRef'
        - $ref: '#/components/schemas/EntityV3APISpecInterfaceDefinition'
    EntityV3APISpec:
      additionalProperties: false
      description: The definition of Entity V3 API Spec object.
      properties:
        implementedBy:
          description: Services which implemented the API.
          items:
            type: string
          type: array
        interface:
          $ref: '#/components/schemas/EntityV3APISpecInterface'
        lifecycle:
          description: The lifecycle state of the component.
          minLength: 1
          type: string
        tier:
          description: The importance of the component.
          minLength: 1
          type: string
        type:
          description: The type of API.
          type: string
      type: object
    EntityV3API:
      additionalProperties: false
      description: Schema for API entities.
      properties:
        apiVersion:
          $ref: '#/components/schemas/EntityV3APIVersion'
        datadog:
          $ref: '#/components/schemas/EntityV3APIDatadog'
        extensions:
          additionalProperties: {}
          description: >-
            Custom extensions. This is the free-formed field to send client-side
            metadata. No Datadog features are affected by this field.
          type: object
        integrations:
          $ref: '#/components/schemas/EntityV3Integrations'
        kind:
          $ref: '#/components/schemas/EntityV3APIKind'
        metadata:
          $ref: '#/components/schemas/EntityV3Metadata'
        spec:
          $ref: '#/components/schemas/EntityV3APISpec'
      required:
        - apiVersion
        - kind
        - metadata
      type: object
    EntityV3:
      description: Entity schema v3.
      oneOf:
        - $ref: '#/components/schemas/EntityV3Service'
        - $ref: '#/components/schemas/EntityV3Datastore'
        - $ref: '#/components/schemas/EntityV3Queue'
        - $ref: '#/components/schemas/EntityV3System'
        - $ref: '#/components/schemas/EntityV3API'
    EntityResponseIncludedSchemaAttributes:
      description: Included schema.
      properties:
        schema:
          $ref: '#/components/schemas/EntityV3'
      type: object
    EntityResponseIncludedSchemaType:
      description: Schema type.
      enum:
        - schema
      type: string
      x-enum-varnames:
        - SCHEMA
    EntityResponseIncludedSchema:
      description: Included detail entity schema.
      properties:
        attributes:
          $ref: '#/components/schemas/EntityResponseIncludedSchemaAttributes'
        id:
          description: Entity ID.
          type: string
        type:
          $ref: '#/components/schemas/EntityResponseIncludedSchemaType'
      type: object
    EntityResponseIncludedRawSchemaAttributes:
      description: Included raw schema attributes.
      properties:
        rawSchema:
          description: Schema from user input in base64 encoding.
          type: string
      type: object
    EntityResponseIncludedRawSchemaType:
      description: Raw schema type.
      enum:
        - rawSchema
      type: string
      x-enum-varnames:
        - RAW_SCHEMA
    EntityResponseIncludedRawSchema:
      description: Included raw schema.
      properties:
        attributes:
          $ref: '#/components/schemas/EntityResponseIncludedRawSchemaAttributes'
        id:
          description: Raw schema ID.
          type: string
        type:
          $ref: '#/components/schemas/EntityResponseIncludedRawSchemaType'
      type: object
    EntityResponseIncludedRelatedEntityAttributes:
      description: Related entity attributes.
      properties:
        kind:
          description: Entity kind.
          type: string
        name:
          description: Entity name.
          type: string
        namespace:
          description: Entity namespace.
          type: string
        type:
          description: Entity relation type to the associated entity.
          type: string
      type: object
    EntityResponseIncludedRelatedEntityMeta:
      description: Included related entity meta.
      properties:
        createdAt:
          description: Entity creation time.
          format: date-time
          type: string
        defined_by:
          description: Entity relation defined by.
          type: string
        modifiedAt:
          description: Entity modification time.
          format: date-time
          type: string
        source:
          description: Entity relation source.
          type: string
      type: object
    EntityResponseIncludedRelatedEntityType:
      description: Related entity.
      enum:
        - relatedEntity
      type: string
      x-enum-varnames:
        - RELATED_ENTITY
    EntityResponseIncludedRelatedEntity:
      description: Included related entity.
      properties:
        attributes:
          $ref: '#/components/schemas/EntityResponseIncludedRelatedEntityAttributes'
        id:
          description: Entity UUID.
          type: string
        meta:
          $ref: '#/components/schemas/EntityResponseIncludedRelatedEntityMeta'
        type:
          $ref: '#/components/schemas/EntityResponseIncludedRelatedEntityType'
      type: object
    EntityResponseIncludedRelatedOncallEscalationItem:
      description: Oncall escalation.
      properties:
        email:
          description: Oncall email.
          type: string
        escalationLevel:
          description: Oncall level.
          format: int64
          type: integer
        name:
          description: Oncall name.
          type: string
      type: object
    EntityResponseIncludedRelatedOncallEscalations:
      description: Oncall escalations.
      items:
        $ref: '#/components/schemas/EntityResponseIncludedRelatedOncallEscalationItem'
      type: array
    EntityResponseIncludedRelatedOncallAttributes:
      description: Included related oncall attributes.
      properties:
        escalations:
          $ref: '#/components/schemas/EntityResponseIncludedRelatedOncallEscalations'
        provider:
          description: Oncall provider.
          type: string
      type: object
    EntityResponseIncludedOncallType:
      description: Oncall type.
      enum:
        - oncall
      type: string
      x-enum-varnames:
        - ONCALL
    EntityResponseIncludedOncall:
      description: Included oncall.
      properties:
        attributes:
          $ref: '#/components/schemas/EntityResponseIncludedRelatedOncallAttributes'
        id:
          description: Oncall ID.
          type: string
        type:
          $ref: '#/components/schemas/EntityResponseIncludedOncallType'
      type: object
    EntityResponseIncludedRelatedIncidentAttributes:
      description: Incident attributes.
      properties:
        createdAt:
          description: Incident creation time.
          format: date-time
          type: string
        htmlURL:
          description: Incident URL.
          type: string
        provider:
          description: Incident provider.
          type: string
        status:
          description: Incident status.
          type: string
        title:
          description: Incident title.
          type: string
      type: object
    EntityResponseIncludedIncidentType:
      description: Incident description.
      enum:
        - incident
      type: string
      x-enum-varnames:
        - INCIDENT
    EntityResponseIncludedIncident:
      description: Included incident.
      properties:
        attributes:
          $ref: '#/components/schemas/EntityResponseIncludedRelatedIncidentAttributes'
        id:
          description: Incident ID.
          type: string
        type:
          $ref: '#/components/schemas/EntityResponseIncludedIncidentType'
      type: object
    ListEntityCatalogResponseIncludedItem:
      description: List entity response included item.
      oneOf:
        - $ref: '#/components/schemas/EntityResponseIncludedSchema'
        - $ref: '#/components/schemas/EntityResponseIncludedRawSchema'
        - $ref: '#/components/schemas/EntityResponseIncludedRelatedEntity'
        - $ref: '#/components/schemas/EntityResponseIncludedOncall'
        - $ref: '#/components/schemas/EntityResponseIncludedIncident'
    ListEntityCatalogResponseIncluded:
      description: List entity response included.
      items:
        $ref: '#/components/schemas/ListEntityCatalogResponseIncludedItem'
      type: array
    ListEntityCatalogResponseLinks:
      description: List entity response links.
      properties:
        next:
          description: Next link.
          type: string
        previous:
          description: Previous link.
          type: string
        self:
          description: Current link.
          type: string
      type: object
    EntityResponseMeta:
      description: Entity metadata.
      properties:
        count:
          description: Total entities count.
          format: int64
          type: integer
        includeCount:
          description: Total included data count.
          format: int64
          type: integer
      type: object
    ListEntityCatalogResponse:
      description: List entity response.
      properties:
        data:
          $ref: '#/components/schemas/EntityResponseData'
        included:
          $ref: '#/components/schemas/ListEntityCatalogResponseIncluded'
        links:
          $ref: '#/components/schemas/ListEntityCatalogResponseLinks'
        meta:
          $ref: '#/components/schemas/EntityResponseMeta'
      type: object
    EntityRaw:
      description: Entity definition in raw JSON or YAML representation.
      example: |
        apiVersion: v3
        kind: service
        metadata:
          name: myservice
      type: string
    UpsertCatalogEntityRequest:
      description: Create or update entity request.
      oneOf:
        - $ref: '#/components/schemas/EntityV3'
        - $ref: '#/components/schemas/EntityRaw'
    UpsertCatalogEntityResponseIncludedItem:
      description: Upsert entity response included item.
      oneOf:
        - $ref: '#/components/schemas/EntityResponseIncludedSchema'
    UpsertCatalogEntityResponseIncluded:
      description: Upsert entity response included.
      items:
        $ref: '#/components/schemas/UpsertCatalogEntityResponseIncludedItem'
      type: array
    UpsertCatalogEntityResponse:
      description: Upsert entity response.
      properties:
        data:
          $ref: '#/components/schemas/EntityResponseData'
        included:
          $ref: '#/components/schemas/UpsertCatalogEntityResponseIncluded'
        meta:
          $ref: '#/components/schemas/EntityResponseMeta'
      type: object
    CIAppCIErrorDomain:
      description: >-
        Error category used to differentiate between issues related to the
        developer or provider environments.
      enum:
        - provider
        - user
        - unknown
      type: string
      x-enum-varnames:
        - PROVIDER
        - USER
        - UNKNOWN
    CIAppCIError:
      description: Contains information of the CI error.
      nullable: true
      properties:
        domain:
          $ref: '#/components/schemas/CIAppCIErrorDomain'
        message:
          description: Error message.
          maxLength: 5000
          nullable: true
          type: string
        stack:
          description: The stack trace of the reported errors.
          nullable: true
          type: string
        type:
          description: Short description of the error type.
          maxLength: 100
          nullable: true
          type: string
      type: object
    CIAppGitInfo:
      description: >-
        If pipelines are triggered due to actions to a Git repository, then all
        payloads must contain this.

        Note that either `tag` or `branch` has to be provided, but not both.
      nullable: true
      properties:
        author_email:
          description: The commit author email.
          example: author@example.com
          type: string
        author_name:
          description: The commit author name.
          example: John Doe
          nullable: true
          type: string
        author_time:
          description: The commit author timestamp in RFC3339 format.
          example: '2023-05-31T15:30:00Z'
          nullable: true
          type: string
        branch:
          description: The branch name (if a tag use the tag parameter).
          example: feature-1
          nullable: true
          type: string
        commit_time:
          description: The commit timestamp in RFC3339 format.
          example: '2023-05-31T15:30:00Z'
          nullable: true
          type: string
        committer_email:
          description: The committer email.
          example: committer@example.com
          nullable: true
          type: string
        committer_name:
          description: The committer name.
          nullable: true
          type: string
        default_branch:
          description: The Git repository's default branch.
          example: main
          nullable: true
          type: string
        message:
          description: The commit message.
          example: Instrumenting tests with CI Visibility.
          nullable: true
          type: string
        repository_url:
          description: The URL of the repository.
          example: https://github.com/username/repository
          type: string
        sha:
          description: The git commit SHA.
          example: da39a3ee5e6b4b0d3255bfef95601890afd80709
          pattern: ^[a-fA-F0-9]{40}$
          type: string
        tag:
          description: The tag name (if a branch use the branch parameter).
          example: v1.0.0
          nullable: true
          type: string
      required:
        - repository_url
        - sha
        - author_email
      type: object
    CIAppPipelineEventPipelineLevel:
      default: pipeline
      description: Used to distinguish between pipelines, stages, jobs, and steps.
      enum:
        - pipeline
      example: pipeline
      type: string
      x-enum-varnames:
        - PIPELINE
    CIAppPipelineEventMetrics:
      description: >-
        A list of user-defined metrics. The metrics must follow the `key:value`
        pattern and the value must be numeric.
      example:
        - bundle_size:370
        - build_time:50021
      items:
        description: Metrics in the form of `key:value`. The value needs to be numeric.
        type: string
      nullable: true
      type: array
    CIAppHostInfo:
      description: >-
        Contains information of the host running the pipeline, stage, job, or
        step.
      nullable: true
      properties:
        hostname:
          description: FQDN of the host.
          example: www.example.com
          type: string
        labels:
          description: A list of labels used to select or identify the node.
          example:
            - ubuntu-18.04
            - n2.large
          items:
            type: string
          type: array
        name:
          description: Name for the host.
          type: string
        workspace:
          description: The path where the code is checked out.
          example: /home/workspace/code/my-repo
          type: string
      type: object
    CIAppPipelineEventParameters:
      additionalProperties:
        type: string
      description: >-
        A map of key-value parameters or environment variables that were defined
        for the pipeline.
      example:
        LOG_LEVEL: debug
      nullable: true
      type: object
    CIAppPipelineEventParentPipeline:
      description: >-
        If the pipeline is triggered as child of another pipeline, this should
        contain the details of the parent pipeline.
      nullable: true
      properties:
        id:
          description: UUID of a pipeline.
          example: 93bfeb70-af47-424d-908a-948d3f08e37f
          type: string
        url:
          description: The URL to look at the pipeline in the CI provider UI.
          example: https://ci-platform.com/pipelines/123456789
          type: string
      required:
        - id
      type: object
    CIAppPipelineEventPreviousPipeline:
      description: >-
        If the pipeline is a retry, this should contain the details of the
        previous attempt.
      nullable: true
      properties:
        id:
          description: UUID of a pipeline.
          example: 93bfeb70-af47-424d-908a-948d3f08e37f
          type: string
        url:
          description: The URL to look at the pipeline in the CI provider UI.
          example: https://ci-platform.com/pipelines/123456789
          type: string
      required:
        - id
      type: object
    CIAppPipelineEventPipelineStatus:
      description: The final status of the pipeline.
      enum:
        - success
        - error
        - canceled
        - skipped
        - blocked
      example: success
      type: string
      x-enum-varnames:
        - SUCCESS
        - ERROR
        - CANCELED
        - SKIPPED
        - BLOCKED
    CIAppPipelineEventTags:
      description: >-
        A list of user-defined tags. The tags must follow the `key:value`
        pattern.
      example:
        - team:backend
        - type:deployment
      items:
        description: Tags in the form of `key:value`.
        type: string
      nullable: true
      type: array
    CIAppPipelineEventFinishedPipeline:
      description: Details of a finished pipeline.
      properties:
        end:
          description: >-
            Time when the pipeline run finished. It cannot be older than 18
            hours in the past from the current time. The time format must be
            RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/CIAppCIError'
        git:
          $ref: '#/components/schemas/CIAppGitInfo'
        is_manual:
          description: Whether or not the pipeline was triggered manually by the user.
          example: false
          nullable: true
          type: boolean
        is_resumed:
          description: Whether or not the pipeline was resumed after being blocked.
          example: false
          nullable: true
          type: boolean
        level:
          $ref: '#/components/schemas/CIAppPipelineEventPipelineLevel'
        metrics:
          $ref: '#/components/schemas/CIAppPipelineEventMetrics'
        name:
          description: >-
            Name of the pipeline. All pipeline runs for the builds should have
            the same name.
          example: Deploy to AWS
          type: string
        node:
          $ref: '#/components/schemas/CIAppHostInfo'
        parameters:
          $ref: '#/components/schemas/CIAppPipelineEventParameters'
        parent_pipeline:
          $ref: '#/components/schemas/CIAppPipelineEventParentPipeline'
        partial_retry:
          description: >-
            Whether or not the pipeline was a partial retry of a previous
            attempt. A partial retry is one

            which only runs a subset of the original jobs.
          example: false
          type: boolean
        pipeline_id:
          description: >-
            Any ID used in the provider to identify the pipeline run even if it
            is not unique across retries.

            If the `pipeline_id` is unique, then both `unique_id` and
            `pipeline_id` can be set to the same value.
          example: '#023'
          type: string
        previous_attempt:
          $ref: '#/components/schemas/CIAppPipelineEventPreviousPipeline'
        queue_time:
          description: The queue time in milliseconds, if applicable.
          example: 1004
          format: int64
          minimum: 0
          nullable: true
          type: integer
        start:
          description: >-
            Time when the pipeline run started (it should not include any queue
            time). The time format must be RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/CIAppPipelineEventPipelineStatus'
        tags:
          $ref: '#/components/schemas/CIAppPipelineEventTags'
        unique_id:
          description: >-
            UUID of the pipeline run. The ID has to be unique across retries and
            pipelines,

            including partial retries.
          example: 3eacb6f3-ff04-4e10-8a9c-46e6d054024a
          type: string
        url:
          description: The URL to look at the pipeline in the CI provider UI.
          example: https://my-ci-provider.example/pipelines/my-pipeline/run/1
          type: string
      required:
        - level
        - unique_id
        - name
        - url
        - start
        - end
        - status
        - partial_retry
      type: object
    CIAppPipelineEventPipelineInProgressStatus:
      description: The in progress status of the pipeline.
      enum:
        - running
      example: running
      type: string
      x-enum-varnames:
        - RUNNING
    CIAppPipelineEventInProgressPipeline:
      description: Details of a running pipeline.
      properties:
        error:
          $ref: '#/components/schemas/CIAppCIError'
        git:
          $ref: '#/components/schemas/CIAppGitInfo'
        is_manual:
          description: Whether or not the pipeline was triggered manually by the user.
          example: false
          nullable: true
          type: boolean
        is_resumed:
          description: Whether or not the pipeline was resumed after being blocked.
          example: false
          nullable: true
          type: boolean
        level:
          $ref: '#/components/schemas/CIAppPipelineEventPipelineLevel'
        metrics:
          $ref: '#/components/schemas/CIAppPipelineEventMetrics'
        name:
          description: >-
            Name of the pipeline. All pipeline runs for the builds should have
            the same name.
          example: Deploy to AWS
          type: string
        node:
          $ref: '#/components/schemas/CIAppHostInfo'
        parameters:
          $ref: '#/components/schemas/CIAppPipelineEventParameters'
        parent_pipeline:
          $ref: '#/components/schemas/CIAppPipelineEventParentPipeline'
        partial_retry:
          description: >-
            Whether or not the pipeline was a partial retry of a previous
            attempt. A partial retry is one

            which only runs a subset of the original jobs.
          example: false
          type: boolean
        pipeline_id:
          description: >-
            Any ID used in the provider to identify the pipeline run even if it
            is not unique across retries.

            If the `pipeline_id` is unique, then both `unique_id` and
            `pipeline_id` can be set to the same value.
          example: '#023'
          type: string
        previous_attempt:
          $ref: '#/components/schemas/CIAppPipelineEventPreviousPipeline'
        queue_time:
          description: The queue time in milliseconds, if applicable.
          example: 1004
          format: int64
          minimum: 0
          nullable: true
          type: integer
        start:
          description: >-
            Time when the pipeline run started (it should not include any queue
            time). The time format must be RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/CIAppPipelineEventPipelineInProgressStatus'
        tags:
          $ref: '#/components/schemas/CIAppPipelineEventTags'
        unique_id:
          description: >-
            UUID of the pipeline run. The ID has to be the same as the finished
            pipeline.
          example: 3eacb6f3-ff04-4e10-8a9c-46e6d054024a
          type: string
        url:
          description: The URL to look at the pipeline in the CI provider UI.
          example: https://my-ci-provider.example/pipelines/my-pipeline/run/1
          type: string
      required:
        - level
        - unique_id
        - name
        - url
        - start
        - status
        - partial_retry
      type: object
    CIAppPipelineEventPipeline:
      description: Details of the top level pipeline, build, or workflow of your CI.
      oneOf:
        - $ref: '#/components/schemas/CIAppPipelineEventFinishedPipeline'
        - $ref: '#/components/schemas/CIAppPipelineEventInProgressPipeline'
    CIAppPipelineEventStageLevel:
      default: stage
      description: Used to distinguish between pipelines, stages, jobs and steps.
      enum:
        - stage
      example: stage
      type: string
      x-enum-varnames:
        - STAGE
    CIAppPipelineEventStageStatus:
      description: The final status of the stage.
      enum:
        - success
        - error
        - canceled
        - skipped
      example: success
      type: string
      x-enum-varnames:
        - SUCCESS
        - ERROR
        - CANCELED
        - SKIPPED
    CIAppPipelineEventStage:
      description: Details of a CI stage.
      properties:
        dependencies:
          description: A list of stage IDs that this stage depends on.
          example:
            - f7e6a006-a029-46c3-b0cc-742c9d7d363b
            - c8a69849-3c3b-4721-8b33-3e8ec2df1ebe
          items:
            description: A list of stage IDs.
            type: string
          nullable: true
          type: array
        end:
          description: Time when the stage run finished. The time format must be RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/CIAppCIError'
        git:
          $ref: '#/components/schemas/CIAppGitInfo'
        id:
          description: >-
            UUID for the stage. It has to be unique at least in the pipeline
            scope.
          example: 562bdbbb-7cab-48c8-851c-b24ca14628bf
          type: string
        level:
          $ref: '#/components/schemas/CIAppPipelineEventStageLevel'
        metrics:
          $ref: '#/components/schemas/CIAppPipelineEventMetrics'
        name:
          description: The name for the stage.
          example: build
          type: string
        node:
          $ref: '#/components/schemas/CIAppHostInfo'
        parameters:
          $ref: '#/components/schemas/CIAppPipelineEventParameters'
        pipeline_name:
          description: The parent pipeline name.
          example: Build
          type: string
        pipeline_unique_id:
          description: The parent pipeline UUID.
          example: 76b572af-a078-42b2-a08a-cc28f98b944f
          type: string
        queue_time:
          description: The queue time in milliseconds, if applicable.
          example: 1004
          format: int64
          minimum: 0
          nullable: true
          type: integer
        start:
          description: >-
            Time when the stage run started (it should not include any queue
            time). The time format must be RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/CIAppPipelineEventStageStatus'
        tags:
          $ref: '#/components/schemas/CIAppPipelineEventTags'
      required:
        - level
        - id
        - name
        - pipeline_unique_id
        - pipeline_name
        - start
        - end
        - status
      type: object
    CIAppPipelineEventJobLevel:
      default: job
      description: Used to distinguish between pipelines, stages, jobs, and steps.
      enum:
        - job
      example: job
      type: string
      x-enum-varnames:
        - JOB
    CIAppPipelineEventJobStatus:
      description: The final status of the job.
      enum:
        - success
        - error
        - canceled
        - skipped
      example: success
      type: string
      x-enum-varnames:
        - SUCCESS
        - ERROR
        - CANCELED
        - SKIPPED
    CIAppPipelineEventJob:
      description: Details of a CI job.
      properties:
        dependencies:
          description: A list of job IDs that this job depends on.
          example:
            - f7e6a006-a029-46c3-b0cc-742c9d7d363b
            - c8a69849-3c3b-4721-8b33-3e8ec2df1ebe
          items:
            description: A list of job IDs.
            type: string
          nullable: true
          type: array
        end:
          description: Time when the job run finished. The time format must be RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/CIAppCIError'
        git:
          $ref: '#/components/schemas/CIAppGitInfo'
        id:
          description: >-
            The UUID for the job. It has to be unique within each pipeline
            execution.
          example: c865bad4-de82-44b8-ade7-2c987528eb54
          type: string
        level:
          $ref: '#/components/schemas/CIAppPipelineEventJobLevel'
        metrics:
          $ref: '#/components/schemas/CIAppPipelineEventMetrics'
        name:
          description: The name for the job.
          example: test
          type: string
        node:
          $ref: '#/components/schemas/CIAppHostInfo'
        parameters:
          $ref: '#/components/schemas/CIAppPipelineEventParameters'
        pipeline_name:
          description: The parent pipeline name.
          example: Build
          type: string
        pipeline_unique_id:
          description: The parent pipeline UUID.
          example: 76b572af-a078-42b2-a08a-cc28f98b944f
          type: string
        queue_time:
          description: The queue time in milliseconds, if applicable.
          example: 1004
          format: int64
          minimum: 0
          nullable: true
          type: integer
        stage_id:
          description: The parent stage UUID (if applicable).
          nullable: true
          type: string
        stage_name:
          description: The parent stage name (if applicable).
          nullable: true
          type: string
        start:
          description: >-
            Time when the job run instance started (it should not include any
            queue time). The time format must be RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/CIAppPipelineEventJobStatus'
        tags:
          $ref: '#/components/schemas/CIAppPipelineEventTags'
        url:
          description: The URL to look at the job in the CI provider UI.
          example: https://ci-platform.com/job/your-job-name/build/123
          type: string
      required:
        - level
        - id
        - name
        - pipeline_unique_id
        - pipeline_name
        - start
        - end
        - status
        - url
      type: object
    CIAppPipelineEventStepLevel:
      default: step
      description: Used to distinguish between pipelines, stages, jobs and steps.
      enum:
        - step
      example: step
      type: string
      x-enum-varnames:
        - STEP
    CIAppPipelineEventStepStatus:
      description: The final status of the step.
      enum:
        - success
        - error
      example: success
      type: string
      x-enum-varnames:
        - SUCCESS
        - ERROR
    CIAppPipelineEventStep:
      description: Details of a CI step.
      properties:
        end:
          description: Time when the step run finished. The time format must be RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/CIAppCIError'
        git:
          $ref: '#/components/schemas/CIAppGitInfo'
        id:
          description: >-
            UUID for the step. It has to be unique within each pipeline
            execution.
          example: c2d517a8-4f3a-4b41-b4ae-69df0c864c79
          type: string
        job_id:
          description: The parent job UUID (if applicable).
          nullable: true
          type: string
        job_name:
          description: The parent job name (if applicable).
          nullable: true
          type: string
        level:
          $ref: '#/components/schemas/CIAppPipelineEventStepLevel'
        metrics:
          $ref: '#/components/schemas/CIAppPipelineEventMetrics'
        name:
          description: The name for the step.
          example: test-server
          type: string
        node:
          $ref: '#/components/schemas/CIAppHostInfo'
        parameters:
          $ref: '#/components/schemas/CIAppPipelineEventParameters'
        pipeline_name:
          description: The parent pipeline name.
          example: Build
          type: string
        pipeline_unique_id:
          description: The parent pipeline UUID.
          example: 76b572af-a078-42b2-a08a-cc28f98b944f
          type: string
        stage_id:
          description: The parent stage UUID (if applicable).
          nullable: true
          type: string
        stage_name:
          description: The parent stage name (if applicable).
          nullable: true
          type: string
        start:
          description: Time when the step run started. The time format must be RFC3339.
          example: '2023-05-31T15:30:00Z'
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/CIAppPipelineEventStepStatus'
        tags:
          $ref: '#/components/schemas/CIAppPipelineEventTags'
        url:
          description: The URL to look at the step in the CI provider UI.
          nullable: true
          type: string
      required:
        - level
        - id
        - name
        - pipeline_unique_id
        - pipeline_name
        - start
        - end
        - status
      type: object
    CIAppCreatePipelineEventRequestAttributesResource:
      description: Details of the CI pipeline event.
      example: Details TBD
      oneOf:
        - $ref: '#/components/schemas/CIAppPipelineEventPipeline'
        - $ref: '#/components/schemas/CIAppPipelineEventStage'
        - $ref: '#/components/schemas/CIAppPipelineEventJob'
        - $ref: '#/components/schemas/CIAppPipelineEventStep'
    CIAppCreatePipelineEventRequestAttributes:
      description: Attributes of the pipeline event to create.
      properties:
        env:
          description: The Datadog environment.
          type: string
        provider_name:
          description: The name of the CI provider. By default, this is "custom".
          type: string
        resource:
          $ref: >-
            #/components/schemas/CIAppCreatePipelineEventRequestAttributesResource
        service:
          description: >-
            If the CI provider is SaaS, use this to differentiate between
            instances.
          type: string
      required:
        - resource
      type: object
    CIAppCreatePipelineEventRequestDataType:
      default: cipipeline_resource_request
      description: Type of the event.
      enum:
        - cipipeline_resource_request
      example: cipipeline_resource_request
      type: string
      x-enum-varnames:
        - CIPIPELINE_RESOURCE_REQUEST
    CIAppCreatePipelineEventRequestData:
      description: Data of the pipeline event to create.
      properties:
        attributes:
          $ref: '#/components/schemas/CIAppCreatePipelineEventRequestAttributes'
        type:
          $ref: '#/components/schemas/CIAppCreatePipelineEventRequestDataType'
      type: object
    CIAppCreatePipelineEventRequest:
      description: Request object.
      properties:
        data:
          $ref: '#/components/schemas/CIAppCreatePipelineEventRequestData'
      type: object
    HTTPCIAppError:
      description: List of errors.
      properties:
        detail:
          description: Error message.
          example: Malformed payload
          type: string
        status:
          description: Error code.
          example: '400'
          type: string
        title:
          description: Error title.
          example: Bad Request
          type: string
      type: object
    HTTPCIAppErrors:
      description: Errors occurred.
      properties:
        errors:
          description: Structured errors.
          items:
            $ref: '#/components/schemas/HTTPCIAppError'
          type: array
      type: object
    CIAppAggregationFunction:
      description: An aggregation function.
      enum:
        - count
        - cardinality
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
        - median
        - latest
        - earliest
        - most_frequent
        - delta
      example: pc90
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - PERCENTILE_75
        - PERCENTILE_90
        - PERCENTILE_95
        - PERCENTILE_98
        - PERCENTILE_99
        - SUM
        - MIN
        - MAX
        - AVG
        - MEDIAN
        - LATEST
        - EARLIEST
        - MOST_FREQUENT
        - DELTA
    CIAppComputeType:
      default: total
      description: The type of compute.
      enum:
        - timeseries
        - total
      type: string
      x-enum-varnames:
        - TIMESERIES
        - TOTAL
    CIAppCompute:
      description: A compute rule to compute metrics or timeseries.
      properties:
        aggregation:
          $ref: '#/components/schemas/CIAppAggregationFunction'
        interval:
          description: |-
            The time buckets' size (only used for type=timeseries)
            Defaults to a resolution of 150 points.
          example: 5m
          type: string
        metric:
          description: The metric to use.
          example: '@duration'
          type: string
        type:
          $ref: '#/components/schemas/CIAppComputeType'
      required:
        - aggregation
      type: object
    CIAppPipelinesQueryFilter:
      description: The search and filter query settings.
      properties:
        from:
          default: now-15m
          description: >-
            The minimum time for the requested events; supports date, math, and
            regular timestamps (in milliseconds).
          example: now-15m
          type: string
        query:
          default: '*'
          description: The search query following the CI Visibility Explorer search syntax.
          example: '@ci.provider.name:github AND @ci.status:error'
          type: string
        to:
          default: now
          description: >-
            The maximum time for the requested events, supports date, math, and
            regular timestamps (in milliseconds).
          example: now
          type: string
      type: object
    CIAppGroupByHistogram:
      description: >-
        Used to perform a histogram computation (only for measure facets).

        At most, 100 buckets are allowed, the number of buckets is `(max -
        min)/interval`.
      properties:
        interval:
          description: The bin size of the histogram buckets.
          example: 10
          format: double
          type: number
        max:
          description: |-
            The maximum value for the measure used in the histogram
            (values greater than this one are filtered out).
          example: 100
          format: double
          type: number
        min:
          description: |-
            The minimum value for the measure used in the histogram
            (values smaller than this one are filtered out).
          example: 50
          format: double
          type: number
      required:
        - interval
        - min
        - max
      type: object
    CIAppGroupByMissingString:
      description: The missing value to use if there is a string valued facet.
      type: string
    CIAppGroupByMissingNumber:
      description: The missing value to use if there is a number valued facet.
      format: double
      type: number
    CIAppGroupByMissing:
      description: The value to use for logs that don't have the facet used to group-by.
      oneOf:
        - $ref: '#/components/schemas/CIAppGroupByMissingString'
        - $ref: '#/components/schemas/CIAppGroupByMissingNumber'
    CIAppSortOrder:
      description: The order to use, ascending or descending.
      enum:
        - asc
        - desc
      example: asc
      type: string
      x-enum-varnames:
        - ASCENDING
        - DESCENDING
    CIAppAggregateSortType:
      default: alphabetical
      description: The type of sorting algorithm.
      enum:
        - alphabetical
        - measure
      type: string
      x-enum-varnames:
        - ALPHABETICAL
        - MEASURE
    CIAppAggregateSort:
      description: >-
        A sort rule. The `aggregation` field is required when `type` is
        `measure`.
      example:
        aggregation: count
        order: asc
      properties:
        aggregation:
          $ref: '#/components/schemas/CIAppAggregationFunction'
        metric:
          description: The metric to sort by (only used for `type=measure`).
          example: '@duration'
          type: string
        order:
          $ref: '#/components/schemas/CIAppSortOrder'
        type:
          $ref: '#/components/schemas/CIAppAggregateSortType'
      type: object
    CIAppGroupByTotalBoolean:
      description: If set to true, creates an additional bucket labeled "$facet_total".
      type: boolean
    CIAppGroupByTotalString:
      description: A string to use as the key value for the total bucket.
      type: string
    CIAppGroupByTotalNumber:
      description: A number to use as the key value for the total bucket.
      format: double
      type: number
    CIAppGroupByTotal:
      default: false
      description: >-
        A resulting object to put the given computes in over all the matching
        records.
      oneOf:
        - $ref: '#/components/schemas/CIAppGroupByTotalBoolean'
        - $ref: '#/components/schemas/CIAppGroupByTotalString'
        - $ref: '#/components/schemas/CIAppGroupByTotalNumber'
    CIAppPipelinesGroupBy:
      description: A group-by rule.
      properties:
        facet:
          description: The name of the facet to use (required).
          example: '@ci.status'
          type: string
        histogram:
          $ref: '#/components/schemas/CIAppGroupByHistogram'
        limit:
          default: 10
          description: The maximum buckets to return for this group-by.
          format: int64
          type: integer
        missing:
          $ref: '#/components/schemas/CIAppGroupByMissing'
        sort:
          $ref: '#/components/schemas/CIAppAggregateSort'
        total:
          $ref: '#/components/schemas/CIAppGroupByTotal'
      required:
        - facet
      type: object
    CIAppQueryOptions:
      description: >-
        Global query options that are used during the query.

        Only supply timezone or time offset, not both. Otherwise, the query
        fails.
      properties:
        time_offset:
          description: The time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: >-
            The timezone can be specified as GMT, UTC, an offset from UTC (like
            UTC+1), or as a Timezone Database identifier (like
            America/New_York).
          example: GMT
          type: string
      type: object
    CIAppPipelinesAggregateRequest:
      description: >-
        The object sent with the request to retrieve aggregation buckets of
        pipeline events from your organization.
      properties:
        compute:
          description: >-
            The list of metrics or timeseries to compute for the retrieved
            buckets.
          items:
            $ref: '#/components/schemas/CIAppCompute'
          type: array
        filter:
          $ref: '#/components/schemas/CIAppPipelinesQueryFilter'
        group_by:
          description: The rules for the group-by.
          items:
            $ref: '#/components/schemas/CIAppPipelinesGroupBy'
          type: array
        options:
          $ref: '#/components/schemas/CIAppQueryOptions'
      type: object
    CIAppAggregateBucketValueSingleString:
      description: A single string value.
      type: string
    CIAppAggregateBucketValueSingleNumber:
      description: A single number value.
      format: double
      type: number
    CIAppAggregateBucketValueTimeseriesPoint:
      description: A timeseries point.
      properties:
        time:
          description: The time value for this point.
          example: '2020-06-08T11:55:00.123Z'
          format: date-time
          type: string
        value:
          description: The value for this point.
          example: 19
          format: double
          type: number
      type: object
    CIAppAggregateBucketValueTimeseries:
      description: A timeseries array.
      items:
        $ref: '#/components/schemas/CIAppAggregateBucketValueTimeseriesPoint'
      type: array
      x-generate-alias-as-model: true
    CIAppAggregateBucketValue:
      description: A bucket value, can either be a timeseries or a single value.
      oneOf:
        - $ref: '#/components/schemas/CIAppAggregateBucketValueSingleString'
        - $ref: '#/components/schemas/CIAppAggregateBucketValueSingleNumber'
        - $ref: '#/components/schemas/CIAppAggregateBucketValueTimeseries'
    CIAppComputes:
      additionalProperties:
        $ref: '#/components/schemas/CIAppAggregateBucketValue'
      description: >-
        A map of the metric name to value for regular compute, or a list of
        values for a timeseries.
      type: object
    CIAppPipelinesBucketResponse:
      description: Bucket values.
      properties:
        by:
          additionalProperties:
            description: The values for each group-by.
          description: The key-value pairs for each group-by.
          example:
            '@ci.provider.name': gitlab
            '@ci.status': success
          type: object
        computes:
          $ref: '#/components/schemas/CIAppComputes'
      type: object
    CIAppPipelinesAggregationBucketsResponse:
      description: The query results.
      properties:
        buckets:
          description: The list of matching buckets, one item per bucket.
          items:
            $ref: '#/components/schemas/CIAppPipelinesBucketResponse'
          type: array
      type: object
    CIAppResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            Link for the next set of results. The request can also be made using
            the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/ci/tests/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    CIAppResponseStatus:
      description: The status of the response.
      enum:
        - done
        - timeout
      example: done
      type: string
      x-enum-varnames:
        - DONE
        - TIMEOUT
    CIAppWarning:
      description: A warning message indicating something that went wrong with the query.
      properties:
        code:
          description: A unique code for this type of warning.
          example: unknown_index
          type: string
        detail:
          description: A detailed explanation of this specific warning.
          example: 'indexes: foo, bar'
          type: string
        title:
          description: A short human-readable summary of the warning.
          example: >-
            One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    CIAppResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: The time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/CIAppResponseStatus'
        warnings:
          description: >-
            A list of warnings (non-fatal errors) encountered. Partial results
            may return if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/CIAppWarning'
          type: array
      type: object
    CIAppPipelinesAnalyticsAggregateResponse:
      description: The response object for the pipeline events aggregate API endpoint.
      properties:
        data:
          $ref: '#/components/schemas/CIAppPipelinesAggregationBucketsResponse'
        links:
          $ref: '#/components/schemas/CIAppResponseLinks'
        meta:
          $ref: '#/components/schemas/CIAppResponseMetadata'
      type: object
    CIAppSort:
      description: Sort parameters when querying events.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    CIAppPipelineLevel:
      description: Pipeline execution level.
      enum:
        - pipeline
        - stage
        - job
        - step
        - custom
      example: pipeline
      type: string
      x-enum-varnames:
        - PIPELINE
        - STAGE
        - JOB
        - STEP
        - CUSTOM
    TagsEventAttribute:
      description: Array of tags associated with your event.
      example:
        - team:A
      items:
        description: Tag associated with your event.
        type: string
      type: array
    CIAppPipelineEventAttributes:
      description: JSON object containing all event attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from CI Visibility pipeline events.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        ci_level:
          $ref: '#/components/schemas/CIAppPipelineLevel'
        tags:
          $ref: '#/components/schemas/TagsEventAttribute'
      type: object
    CIAppPipelineEventTypeName:
      description: Type of the event.
      enum:
        - cipipeline
      example: cipipeline
      type: string
      x-enum-varnames:
        - CIPIPELINE
    CIAppPipelineEvent:
      description: >-
        Object description of a pipeline event after being processed and stored
        by Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/CIAppPipelineEventAttributes'
        id:
          description: Unique ID of the event.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/CIAppPipelineEventTypeName'
      type: object
    CIAppResponsePage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same parameters with the addition of
            `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    CIAppResponseMetadataWithPagination:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: The time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/CIAppResponsePage'
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/CIAppResponseStatus'
        warnings:
          description: >-
            A list of warnings (non-fatal errors) encountered. Partial results
            may return if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/CIAppWarning'
          type: array
      type: object
    CIAppPipelineEventsResponse:
      description: >-
        Response object with all pipeline events matching the request and
        pagination information.
      properties:
        data:
          description: Array of events matching the request.
          items:
            $ref: '#/components/schemas/CIAppPipelineEvent'
          type: array
        links:
          $ref: '#/components/schemas/CIAppResponseLinks'
        meta:
          $ref: '#/components/schemas/CIAppResponseMetadataWithPagination'
      type: object
    CIAppQueryPageOptions:
      description: Paging attributes for listing events.
      properties:
        cursor:
          description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of events in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    CIAppPipelineEventsRequest:
      description: The request for a pipelines search.
      properties:
        filter:
          $ref: '#/components/schemas/CIAppPipelinesQueryFilter'
        options:
          $ref: '#/components/schemas/CIAppQueryOptions'
        page:
          $ref: '#/components/schemas/CIAppQueryPageOptions'
        sort:
          $ref: '#/components/schemas/CIAppSort'
      type: object
    CIAppTestsQueryFilter:
      description: The search and filter query settings.
      properties:
        from:
          default: now-15m
          description: >-
            The minimum time for the requested events; supports date, math, and
            regular timestamps (in milliseconds).
          example: now-15m
          type: string
        query:
          default: '*'
          description: The search query following the CI Visibility Explorer search syntax.
          example: '@test.service:web-ui-tests AND @test.status:fail'
          type: string
        to:
          default: now
          description: >-
            The maximum time for the requested events, supports date, math, and
            regular timestamps (in milliseconds).
          example: now
          type: string
      type: object
    CIAppTestsGroupBy:
      description: A group-by rule.
      properties:
        facet:
          description: The name of the facet to use (required).
          example: '@test.service'
          type: string
        histogram:
          $ref: '#/components/schemas/CIAppGroupByHistogram'
        limit:
          default: 10
          description: The maximum buckets to return for this group-by.
          format: int64
          type: integer
        missing:
          $ref: '#/components/schemas/CIAppGroupByMissing'
        sort:
          $ref: '#/components/schemas/CIAppAggregateSort'
        total:
          $ref: '#/components/schemas/CIAppGroupByTotal'
      required:
        - facet
      type: object
    CIAppTestsAggregateRequest:
      description: >-
        The object sent with the request to retrieve aggregation buckets of test
        events from your organization.
      properties:
        compute:
          description: >-
            The list of metrics or timeseries to compute for the retrieved
            buckets.
          items:
            $ref: '#/components/schemas/CIAppCompute'
          type: array
        filter:
          $ref: '#/components/schemas/CIAppTestsQueryFilter'
        group_by:
          description: The rules for the group-by.
          items:
            $ref: '#/components/schemas/CIAppTestsGroupBy'
          type: array
        options:
          $ref: '#/components/schemas/CIAppQueryOptions'
      type: object
    CIAppTestsBucketResponse:
      description: Bucket values.
      properties:
        by:
          additionalProperties:
            description: The values for each group-by.
          description: The key-value pairs for each group-by.
          example:
            '@test.service': web-ui-tests
            '@test.status': skip
          type: object
        computes:
          $ref: '#/components/schemas/CIAppComputes'
      type: object
    CIAppTestsAggregationBucketsResponse:
      description: The query results.
      properties:
        buckets:
          description: The list of matching buckets, one item per bucket.
          items:
            $ref: '#/components/schemas/CIAppTestsBucketResponse'
          type: array
      type: object
    CIAppTestsAnalyticsAggregateResponse:
      description: The response object for the test events aggregate API endpoint.
      properties:
        data:
          $ref: '#/components/schemas/CIAppTestsAggregationBucketsResponse'
        links:
          $ref: '#/components/schemas/CIAppResponseLinks'
        meta:
          $ref: '#/components/schemas/CIAppResponseMetadataWithPagination'
      type: object
    CIAppTestLevel:
      description: Test run level.
      enum:
        - session
        - module
        - suite
        - test
      example: test
      type: string
      x-enum-varnames:
        - SESSION
        - MODULE
        - SUITE
        - TEST
    CIAppEventAttributes:
      description: JSON object containing all event attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from CI Visibility test events.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        tags:
          $ref: '#/components/schemas/TagsEventAttribute'
        test_level:
          $ref: '#/components/schemas/CIAppTestLevel'
      type: object
    CIAppTestEventTypeName:
      description: Type of the event.
      enum:
        - citest
      example: citest
      type: string
      x-enum-varnames:
        - CITEST
    CIAppTestEvent:
      description: >-
        Object description of test event after being processed and stored by
        Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/CIAppEventAttributes'
        id:
          description: Unique ID of the event.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/CIAppTestEventTypeName'
      type: object
    CIAppTestEventsResponse:
      description: >-
        Response object with all test events matching the request and pagination
        information.
      properties:
        data:
          description: Array of events matching the request.
          items:
            $ref: '#/components/schemas/CIAppTestEvent'
          type: array
        links:
          $ref: '#/components/schemas/CIAppResponseLinks'
        meta:
          $ref: '#/components/schemas/CIAppResponseMetadataWithPagination'
      type: object
    CIAppTestEventsRequest:
      description: The request for a tests search.
      properties:
        filter:
          $ref: '#/components/schemas/CIAppTestsQueryFilter'
        options:
          $ref: '#/components/schemas/CIAppQueryOptions'
        page:
          $ref: '#/components/schemas/CIAppQueryPageOptions'
        sort:
          $ref: '#/components/schemas/CIAppSort'
      type: object
    ContainerImageFlavor:
      description: Container Image breakdown by supported platform.
      properties:
        built_at:
          description: Time the platform-specific Container Image was built.
          type: string
        os_architecture:
          description: Operating System architecture supported by the Container Image.
          type: string
        os_name:
          description: Operating System name supported by the Container Image.
          type: string
        os_version:
          description: Operating System version supported by the Container Image.
          type: string
        size:
          description: Size of the platform-specific Container Image.
          format: int64
          type: integer
      type: object
    ContainerImageVulnerabilities:
      description: Vulnerability counts associated with the Container Image.
      properties:
        asset_id:
          description: ID of the Container Image.
          type: string
        critical:
          description: Number of vulnerabilities with CVSS Critical severity.
          format: int64
          type: integer
        high:
          description: Number of vulnerabilities with CVSS High severity.
          format: int64
          type: integer
        low:
          description: Number of vulnerabilities with CVSS Low severity.
          format: int64
          type: integer
        medium:
          description: Number of vulnerabilities with CVSS Medium severity.
          format: int64
          type: integer
        none:
          description: Number of vulnerabilities with CVSS None severity.
          format: int64
          type: integer
        unknown:
          description: Number of vulnerabilities with an unknown CVSS severity.
          format: int64
          type: integer
      type: object
    ContainerImageAttributes:
      description: Attributes for a Container Image.
      properties:
        container_count:
          description: Number of containers running the image.
          format: int64
          type: integer
        image_flavors:
          description: |-
            List of platform-specific images associated with the image record.
            The list contains more than 1 entry for multi-architecture images.
          items:
            $ref: '#/components/schemas/ContainerImageFlavor'
          type: array
        image_tags:
          description: List of image tags associated with the Container Image.
          items:
            description: An image tag associated with the Container Image.
            type: string
          type: array
        images_built_at:
          description: |-
            List of build times associated with the Container Image.
            The list contains more than 1 entry for multi-architecture images.
          items:
            description: Time the platform-specific Container Image was built.
            type: string
          type: array
        name:
          description: Name of the Container Image.
          type: string
        os_architectures:
          description: >-
            List of Operating System architectures supported by the Container
            Image.
          items:
            description: Operating System architecture supported by the Container Image.
            example: amd64
            type: string
          type: array
        os_names:
          description: List of Operating System names supported by the Container Image.
          items:
            description: Operating System supported by the Container Image.
            example: linux
            type: string
          type: array
        os_versions:
          description: List of Operating System versions supported by the Container Image.
          items:
            description: Operating System version supported by the Container Image.
            type: string
          type: array
        published_at:
          description: Time the image was pushed to the container registry.
          type: string
        registry:
          description: Registry the Container Image was pushed to.
          type: string
        repo_digest:
          description: Digest of the compressed image manifest.
          type: string
        repository:
          description: Repository where the Container Image is stored in.
          type: string
        short_image:
          description: Short version of the Container Image name.
          type: string
        sizes:
          description: >-
            List of size for each platform-specific image associated with the
            image record.

            The list contains more than 1 entry for multi-architecture images.
          items:
            description: Size of the platform-specific Container Image.
            format: int64
            type: integer
          type: array
        sources:
          description: List of sources where the Container Image was collected from.
          items:
            description: Source where the Container Image was collected from.
            type: string
          type: array
        tags:
          description: List of tags associated with the Container Image.
          items:
            description: A tag associated with the Container Image.
            type: string
          type: array
        vulnerability_count:
          $ref: '#/components/schemas/ContainerImageVulnerabilities'
      type: object
    ContainerImageType:
      default: container_image
      description: Type of Container Image.
      enum:
        - container_image
      example: container_image
      type: string
      x-enum-varnames:
        - CONTAINER_IMAGE
    ContainerImage:
      description: Container Image object.
      properties:
        attributes:
          $ref: '#/components/schemas/ContainerImageAttributes'
        id:
          description: Container Image ID.
          type: string
        type:
          $ref: '#/components/schemas/ContainerImageType'
      type: object
    ContainerImageGroupAttributes:
      description: Attributes for a Container Image Group.
      properties:
        count:
          description: Number of Container Images in the group.
          format: int64
          type: integer
        name:
          description: Name of the Container Image group.
          type: string
        tags:
          description: Tags from the group name parsed in key/value format.
          type: object
      type: object
    ContainerImageGroupRelationshipsData:
      description: Links data.
      items:
        description: A link data.
        type: string
      type: array
    ContainerImageGroupRelationshipsLinks:
      description: Links attributes.
      properties:
        related:
          description: Link to related Container Images.
          type: string
      type: object
    ContainerImageGroupImagesRelationshipsLink:
      description: Relationships to Container Images inside a Container Image Group.
      properties:
        data:
          $ref: '#/components/schemas/ContainerImageGroupRelationshipsData'
        links:
          $ref: '#/components/schemas/ContainerImageGroupRelationshipsLinks'
      type: object
    ContainerImageGroupRelationships:
      description: Relationships inside a Container Image Group.
      properties:
        container_images:
          $ref: '#/components/schemas/ContainerImageGroupImagesRelationshipsLink'
      type: object
    ContainerImageGroupType:
      default: container_image_group
      description: Type of Container Image Group.
      enum:
        - container_image_group
      example: container_image_group
      type: string
      x-enum-varnames:
        - CONTAINER_IMAGE_GROUP
    ContainerImageGroup:
      description: Container Image Group object.
      properties:
        attributes:
          $ref: '#/components/schemas/ContainerImageGroupAttributes'
        id:
          description: Container Image Group ID.
          type: string
        relationships:
          $ref: '#/components/schemas/ContainerImageGroupRelationships'
        type:
          $ref: '#/components/schemas/ContainerImageGroupType'
      type: object
    ContainerImageItem:
      description: Possible Container Image models.
      oneOf:
        - $ref: '#/components/schemas/ContainerImage'
        - $ref: '#/components/schemas/ContainerImageGroup'
    ContainerImagesResponseLinks:
      description: Pagination links.
      properties:
        first:
          description: Link to the first page.
          type: string
        last:
          description: Link to the last page.
          nullable: true
          type: string
        next:
          description: Link to the next page.
          nullable: true
          type: string
        prev:
          description: Link to previous page.
          nullable: true
          type: string
        self:
          description: Link to current page.
          type: string
      type: object
    ContainerImageMetaPageType:
      default: cursor_limit
      description: Type of Container Image pagination.
      enum:
        - cursor_limit
      example: cursor_limit
      type: string
      x-enum-varnames:
        - CURSOR_LIMIT
    ContainerImageMetaPage:
      description: Paging attributes.
      properties:
        cursor:
          description: The cursor used to get the current results, if any.
          type: string
        limit:
          description: Number of results returned
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        next_cursor:
          description: The cursor used to get the next results, if any.
          type: string
        prev_cursor:
          description: The cursor used to get the previous results, if any.
          nullable: true
          type: string
        total:
          description: Total number of records that match the query.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/ContainerImageMetaPageType'
      type: object
    ContainerImageMeta:
      description: Response metadata object.
      properties:
        pagination:
          $ref: '#/components/schemas/ContainerImageMetaPage'
      type: object
    ContainerImagesResponse:
      description: List of Container Images.
      properties:
        data:
          description: Array of Container Image objects.
          items:
            $ref: '#/components/schemas/ContainerImageItem'
          type: array
        links:
          $ref: '#/components/schemas/ContainerImagesResponseLinks'
        meta:
          $ref: '#/components/schemas/ContainerImageMeta'
      type: object
    ContainerAttributes:
      description: Attributes for a container.
      properties:
        container_id:
          description: The ID of the container.
          type: string
        created_at:
          description: Time the container was created.
          type: string
        host:
          description: Hostname of the host running the container.
          type: string
        image_digest:
          description: Digest of the compressed image manifest.
          nullable: true
          type: string
        image_name:
          description: Name of the associated container image.
          type: string
        image_tags:
          description: List of image tags associated with the container image.
          items:
            type: string
          nullable: true
          type: array
        name:
          description: Name of the container.
          type: string
        started_at:
          description: Time the container was started.
          type: string
        state:
          description: State of the container. This depends on the container runtime.
          type: string
        tags:
          description: List of tags associated with the container.
          items:
            type: string
          type: array
      type: object
    ContainerType:
      default: container
      description: Type of container.
      enum:
        - container
      example: container
      type: string
      x-enum-varnames:
        - CONTAINER
    Container:
      description: Container object.
      properties:
        attributes:
          $ref: '#/components/schemas/ContainerAttributes'
        id:
          description: Container ID.
          type: string
        type:
          $ref: '#/components/schemas/ContainerType'
      type: object
    ContainerGroupAttributes:
      description: Attributes for a container group.
      properties:
        count:
          description: Number of containers in the group.
          format: int64
          type: integer
        tags:
          description: Tags from the group name parsed in key/value format.
          type: object
      type: object
    ContainerGroupRelationshipsData:
      description: Links data.
      items:
        description: A link data.
        type: string
      type: array
    ContainerGroupRelationshipsLinks:
      description: Links attributes.
      properties:
        related:
          description: Link to related containers.
          type: string
      type: object
    ContainerGroupRelationshipsLink:
      description: Relationships to Containers inside a Container Group.
      properties:
        data:
          $ref: '#/components/schemas/ContainerGroupRelationshipsData'
        links:
          $ref: '#/components/schemas/ContainerGroupRelationshipsLinks'
      type: object
    ContainerGroupRelationships:
      description: Relationships to containers inside a container group.
      properties:
        containers:
          $ref: '#/components/schemas/ContainerGroupRelationshipsLink'
      type: object
    ContainerGroupType:
      default: container_group
      description: Type of container group.
      enum:
        - container_group
      example: container_group
      type: string
      x-enum-varnames:
        - CONTAINER_GROUP
    ContainerGroup:
      description: Container group object.
      properties:
        attributes:
          $ref: '#/components/schemas/ContainerGroupAttributes'
        id:
          description: Container Group ID.
          type: string
        relationships:
          $ref: '#/components/schemas/ContainerGroupRelationships'
        type:
          $ref: '#/components/schemas/ContainerGroupType'
      type: object
    ContainerItem:
      description: Possible Container models.
      oneOf:
        - $ref: '#/components/schemas/Container'
        - $ref: '#/components/schemas/ContainerGroup'
    ContainersResponseLinks:
      description: Pagination links.
      properties:
        first:
          description: Link to the first page.
          type: string
        last:
          description: Link to the last page.
          nullable: true
          type: string
        next:
          description: Link to the next page.
          nullable: true
          type: string
        prev:
          description: Link to previous page.
          nullable: true
          type: string
        self:
          description: Link to current page.
          type: string
      type: object
    ContainerMetaPageType:
      default: cursor_limit
      description: Type of Container pagination.
      enum:
        - cursor_limit
      example: cursor_limit
      type: string
      x-enum-varnames:
        - CURSOR_LIMIT
    ContainerMetaPage:
      description: Paging attributes.
      properties:
        cursor:
          description: The cursor used to get the current results, if any.
          type: string
        limit:
          description: Number of results returned
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        next_cursor:
          description: The cursor used to get the next results, if any.
          type: string
        prev_cursor:
          description: The cursor used to get the previous results, if any.
          nullable: true
          type: string
        total:
          description: Total number of records that match the query.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/ContainerMetaPageType'
      type: object
    ContainerMeta:
      description: Response metadata object.
      properties:
        pagination:
          $ref: '#/components/schemas/ContainerMetaPage'
      type: object
    ContainersResponse:
      description: List of containers.
      properties:
        data:
          description: Array of Container objects.
          items:
            $ref: '#/components/schemas/ContainerItem'
          type: array
        links:
          $ref: '#/components/schemas/ContainersResponseLinks'
        meta:
          $ref: '#/components/schemas/ContainerMeta'
      type: object
    AccountFilteringConfig:
      description: The account filtering configuration.
      properties:
        excluded_accounts:
          description: >-
            The AWS account IDs to be excluded from your billing dataset. This
            field is used when `include_new_accounts` is `true`.
          example:
            - '123456789123'
            - '123456789143'
          items:
            type: string
          type: array
        include_new_accounts:
          description: >-
            Whether or not to automatically include new member accounts by
            default in your billing dataset.
          example: true
          type: boolean
        included_accounts:
          description: >-
            The AWS account IDs to be included in your billing dataset. This
            field is used when `include_new_accounts` is `false`.
          example:
            - '123456789123'
            - '123456789143'
          items:
            type: string
          type: array
      type: object
    AwsCURConfigAttributes:
      description: Attributes for An AWS CUR config.
      properties:
        account_filters:
          $ref: '#/components/schemas/AccountFilteringConfig'
        account_id:
          description: The AWS account ID.
          example: '123456789123'
          type: string
        bucket_name:
          description: The AWS bucket name used to store the Cost and Usage Report.
          example: dd-cost-bucket
          type: string
        bucket_region:
          description: The region the bucket is located in.
          example: us-east-1
          type: string
        created_at:
          description: The timestamp when the AWS CUR config was created.
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}$
          type: string
        error_messages:
          description: The error messages for the AWS CUR config.
          items:
            type: string
          type: array
        months:
          deprecated: true
          description: The number of months the report has been backfilled.
          format: int32
          maximum: 36
          type: integer
        report_name:
          description: The name of the Cost and Usage Report.
          example: dd-report-name
          type: string
        report_prefix:
          description: The report prefix used for the Cost and Usage Report.
          example: dd-report-prefix
          type: string
        status:
          description: The status of the AWS CUR.
          example: active
          type: string
        status_updated_at:
          description: The timestamp when the AWS CUR config status was updated.
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}$
          type: string
        updated_at:
          description: The timestamp when the AWS CUR config status was updated.
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}$
          type: string
      required:
        - account_id
        - bucket_name
        - bucket_region
        - report_name
        - report_prefix
        - status
      type: object
    AwsCURConfigType:
      default: aws_cur_config
      description: Type of AWS CUR config.
      enum:
        - aws_cur_config
      example: aws_cur_config
      type: string
      x-enum-varnames:
        - AWS_CUR_CONFIG
    AwsCURConfig:
      description: AWS CUR config.
      properties:
        attributes:
          $ref: '#/components/schemas/AwsCURConfigAttributes'
        id:
          description: The ID of the AWS CUR config.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/AwsCURConfigType'
      required:
        - attributes
        - type
      type: object
    AwsCURConfigsResponse:
      description: List of AWS CUR configs.
      properties:
        data:
          description: An AWS CUR config.
          items:
            $ref: '#/components/schemas/AwsCURConfig'
          type: array
      type: object
    AwsCURConfigPostRequestAttributes:
      description: Attributes for AWS CUR config Post Request.
      properties:
        account_filters:
          $ref: '#/components/schemas/AccountFilteringConfig'
        account_id:
          description: The AWS account ID.
          example: '123456789123'
          type: string
        bucket_name:
          description: The AWS bucket name used to store the Cost and Usage Report.
          example: dd-cost-bucket
          type: string
        bucket_region:
          description: The region the bucket is located in.
          example: us-east-1
          type: string
        is_enabled:
          description: Whether or not the Cloud Cost Management account is enabled.
          type: boolean
        months:
          description: The month of the report.
          format: int32
          maximum: 36
          type: integer
        report_name:
          description: The name of the Cost and Usage Report.
          example: dd-report-name
          type: string
        report_prefix:
          description: The report prefix used for the Cost and Usage Report.
          example: dd-report-prefix
          type: string
      required:
        - account_id
        - bucket_name
        - report_name
        - report_prefix
      type: object
    AwsCURConfigPostRequestType:
      default: aws_cur_config_post_request
      description: Type of AWS CUR config Post Request.
      enum:
        - aws_cur_config_post_request
      example: aws_cur_config_post_request
      type: string
      x-enum-varnames:
        - AWS_CUR_CONFIG_POST_REQUEST
    AwsCURConfigPostData:
      description: AWS CUR config Post data.
      properties:
        attributes:
          $ref: '#/components/schemas/AwsCURConfigPostRequestAttributes'
        type:
          $ref: '#/components/schemas/AwsCURConfigPostRequestType'
      required:
        - attributes
        - type
      type: object
    AwsCURConfigPostRequest:
      description: AWS CUR config Post Request.
      properties:
        data:
          $ref: '#/components/schemas/AwsCURConfigPostData'
      required:
        - data
      type: object
    AwsCURConfigResponse:
      description: Response of AWS CUR config.
      properties:
        data:
          $ref: '#/components/schemas/AwsCURConfig'
      type: object
    AwsCURConfigPatchRequestAttributes:
      description: Attributes for AWS CUR config Patch Request.
      properties:
        account_filters:
          $ref: '#/components/schemas/AccountFilteringConfig'
        is_enabled:
          description: Whether or not the Cloud Cost Management account is enabled.
          example: true
          type: boolean
      type: object
    AwsCURConfigPatchRequestType:
      default: aws_cur_config_patch_request
      description: Type of AWS CUR config Patch Request.
      enum:
        - aws_cur_config_patch_request
      example: aws_cur_config_patch_request
      type: string
      x-enum-varnames:
        - AWS_CUR_CONFIG_PATCH_REQUEST
    AwsCURConfigPatchData:
      description: AWS CUR config Patch data.
      properties:
        attributes:
          $ref: '#/components/schemas/AwsCURConfigPatchRequestAttributes'
        type:
          $ref: '#/components/schemas/AwsCURConfigPatchRequestType'
      required:
        - attributes
        - type
      type: object
    AwsCURConfigPatchRequest:
      description: AWS CUR config Patch Request.
      properties:
        data:
          $ref: '#/components/schemas/AwsCURConfigPatchData'
      required:
        - data
      type: object
    AzureUCConfig:
      description: Azure config.
      properties:
        account_id:
          description: The tenant ID of the azure account.
          example: 1234abcd-1234-abcd-1234-1234abcd1234
          type: string
        client_id:
          description: The client ID of the Azure account.
          example: 1234abcd-1234-abcd-1234-1234abcd1234
          type: string
        created_at:
          description: The timestamp when the Azure config was created.
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}$
          type: string
        dataset_type:
          description: The dataset type of the Azure config.
          example: actual
          type: string
        error_messages:
          description: The error messages for the Azure config.
          items:
            type: string
          type: array
        export_name:
          description: The name of the configured Azure Export.
          example: dd-actual-export
          type: string
        export_path:
          description: The path where the Azure Export is saved.
          example: dd-export-path
          type: string
        id:
          description: The ID of the Azure config.
          format: int64
          type: integer
        months:
          deprecated: true
          description: The number of months the report has been backfilled.
          format: int32
          maximum: 36
          type: integer
        scope:
          description: The scope of your observed subscription.
          example: /subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
          type: string
        status:
          description: The status of the Azure config.
          example: active
          type: string
        status_updated_at:
          description: The timestamp when the Azure config status was last updated.
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}$
          type: string
        storage_account:
          description: The name of the storage account where the Azure Export is saved.
          example: dd-storage-account
          type: string
        storage_container:
          description: The name of the storage container where the Azure Export is saved.
          example: dd-storage-container
          type: string
        updated_at:
          description: The timestamp when the Azure config was last updated.
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}$
          type: string
      required:
        - account_id
        - client_id
        - dataset_type
        - export_name
        - export_path
        - scope
        - status
        - storage_account
        - storage_container
      type: object
    AzureUCConfigPairAttributes:
      description: Attributes for Azure config pair.
      properties:
        configs:
          description: An Azure config.
          items:
            $ref: '#/components/schemas/AzureUCConfig'
          type: array
        id:
          description: The ID of the Azure config pair.
          format: int64
          type: integer
      required:
        - configs
      type: object
    AzureUCConfigPairType:
      default: azure_uc_configs
      description: Type of Azure config pair.
      enum:
        - azure_uc_configs
      example: azure_uc_configs
      type: string
      x-enum-varnames:
        - AZURE_UC_CONFIGS
    AzureUCConfigPair:
      description: Azure config pair.
      properties:
        attributes:
          $ref: '#/components/schemas/AzureUCConfigPairAttributes'
        id:
          description: The ID of Cloud Cost Management account.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/AzureUCConfigPairType'
      required:
        - attributes
        - type
      type: object
    AzureUCConfigsResponse:
      description: List of Azure accounts with configs.
      properties:
        data:
          description: An Azure config pair.
          items:
            $ref: '#/components/schemas/AzureUCConfigPair'
          type: array
      type: object
    BillConfig:
      description: Bill config.
      properties:
        export_name:
          description: The name of the configured Azure Export.
          example: dd-actual-export
          type: string
        export_path:
          description: The path where the Azure Export is saved.
          example: dd-export-path
          type: string
        storage_account:
          description: The name of the storage account where the Azure Export is saved.
          example: dd-storage-account
          type: string
        storage_container:
          description: The name of the storage container where the Azure Export is saved.
          example: dd-storage-container
          type: string
      required:
        - export_name
        - export_path
        - storage_account
        - storage_container
      type: object
    AzureUCConfigPostRequestAttributes:
      description: Attributes for Azure config Post Request.
      properties:
        account_id:
          description: The tenant ID of the azure account.
          example: 1234abcd-1234-abcd-1234-1234abcd1234
          type: string
        actual_bill_config:
          $ref: '#/components/schemas/BillConfig'
        amortized_bill_config:
          $ref: '#/components/schemas/BillConfig'
        client_id:
          description: The client ID of the azure account.
          example: 1234abcd-1234-abcd-1234-1234abcd1234
          type: string
        is_enabled:
          description: Whether or not the Cloud Cost Management account is enabled.
          type: boolean
        scope:
          description: The scope of your observed subscription.
          example: /subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
          type: string
      required:
        - account_id
        - actual_bill_config
        - amortized_bill_config
        - client_id
        - scope
      type: object
    AzureUCConfigPostRequestType:
      default: azure_uc_config_post_request
      description: Type of Azure config Post Request.
      enum:
        - azure_uc_config_post_request
      example: azure_uc_config_post_request
      type: string
      x-enum-varnames:
        - AZURE_UC_CONFIG_POST_REQUEST
    AzureUCConfigPostData:
      description: Azure config Post data.
      properties:
        attributes:
          $ref: '#/components/schemas/AzureUCConfigPostRequestAttributes'
        type:
          $ref: '#/components/schemas/AzureUCConfigPostRequestType'
      required:
        - attributes
        - type
      type: object
    AzureUCConfigPostRequest:
      description: Azure config Post Request.
      properties:
        data:
          $ref: '#/components/schemas/AzureUCConfigPostData'
      required:
        - data
      type: object
    AzureUCConfigPairsResponse:
      description: Response of Azure config pair.
      properties:
        data:
          $ref: '#/components/schemas/AzureUCConfigPair'
      type: object
    AzureUCConfigPatchRequestAttributes:
      description: Attributes for Azure config Patch Request.
      properties:
        is_enabled:
          description: Whether or not the Cloud Cost Management account is enabled.
          example: true
          type: boolean
      required:
        - is_enabled
      type: object
    AzureUCConfigPatchRequestType:
      default: azure_uc_config_patch_request
      description: Type of Azure config Patch Request.
      enum:
        - azure_uc_config_patch_request
      example: azure_uc_config_patch_request
      type: string
      x-enum-varnames:
        - AZURE_UC_CONFIG_PATCH_REQUEST
    AzureUCConfigPatchData:
      description: Azure config Patch data.
      properties:
        attributes:
          $ref: '#/components/schemas/AzureUCConfigPatchRequestAttributes'
        type:
          $ref: '#/components/schemas/AzureUCConfigPatchRequestType'
      required:
        - attributes
        - type
      type: object
    AzureUCConfigPatchRequest:
      description: Azure config Patch Request.
      properties:
        data:
          $ref: '#/components/schemas/AzureUCConfigPatchData'
      required:
        - data
      type: object
    CustomCostsFileUsageChargePeriod:
      description: Usage charge period of a Custom Costs file.
      properties:
        end:
          description: End of the usage of the Custom Costs file.
          example: 1706745600000
          format: double
          type: number
        start:
          description: Start of the usage of the Custom Costs file.
          example: 1704067200000
          format: double
          type: number
      type: object
    CustomCostsUser:
      description: Metadata of the user that has uploaded the Custom Costs file.
      properties:
        email:
          description: The name of the Custom Costs file.
          example: email.test@datadohq.com
          type: string
        icon:
          description: The name of the Custom Costs file.
          example: icon.png
          type: string
        name:
          description: Name of the user.
          example: Test User
          type: string
      type: object
    CustomCostsFileMetadata:
      description: Schema of a Custom Costs metadata.
      properties:
        billed_cost:
          description: Total cost in the cost file.
          example: 100.5
          format: double
          type: number
        billing_currency:
          description: Currency used in the Custom Costs file.
          example: USD
          type: string
        charge_period:
          $ref: '#/components/schemas/CustomCostsFileUsageChargePeriod'
        name:
          description: Name of the Custom Costs file.
          example: my_file.json
          type: string
        provider_names:
          description: Providers contained in the Custom Costs file.
          items:
            description: Name of the provider.
            example: my_provider
            type: string
          type: array
        status:
          description: Status of the Custom Costs file.
          example: active
          type: string
        uploaded_at:
          description: >-
            Timestamp, in millisecond, of the upload time of the Custom Costs
            file.
          example: 1704067200000
          format: double
          type: number
        uploaded_by:
          $ref: '#/components/schemas/CustomCostsUser'
      type: object
    CustomCostsFileMetadataHighLevel:
      description: JSON API format for a Custom Costs file.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomCostsFileMetadata'
        id:
          description: ID of the Custom Costs metadata.
          type: string
        type:
          description: Type of the Custom Costs file metadata.
          type: string
      type: object
    CustomCostListResponseMeta:
      description: Meta for the response from the List Custom Costs endpoints.
      properties:
        total_filtered_count:
          description: >-
            Number of Custom Costs files returned by the List Custom Costs
            endpoint
          format: int64
          type: integer
        version:
          description: Version of Custom Costs file
          type: string
      type: object
    CustomCostsFileListResponse:
      description: Response for List Custom Costs files.
      properties:
        data:
          description: List of Custom Costs files.
          items:
            $ref: '#/components/schemas/CustomCostsFileMetadataHighLevel'
          type: array
        meta:
          $ref: '#/components/schemas/CustomCostListResponseMeta'
      type: object
    CustomCostsFileLineItem:
      description: Line item details from a Custom Costs file.
      properties:
        BilledCost:
          description: Total cost in the cost file.
          example: 100.5
          format: double
          type: number
        BillingCurrency:
          description: Currency used in the Custom Costs file.
          example: USD
          type: string
        ChargeDescription:
          description: Description for the line item cost.
          example: Monthly usage charge for my service
          type: string
        ChargePeriodEnd:
          description: End date of the usage charge.
          example: '2023-02-28'
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
        ChargePeriodStart:
          description: Start date of the usage charge.
          example: '2023-02-01'
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
        ProviderName:
          description: Name of the provider for the line item.
          type: string
        Tags:
          additionalProperties:
            type: string
          description: Additional tags for the line item.
          type: object
      type: object
    CustomCostsFileUploadRequest:
      description: Request for uploading a Custom Costs file.
      items:
        $ref: '#/components/schemas/CustomCostsFileLineItem'
      type: array
    CustomCostUploadResponseMeta:
      description: Meta for the response from the Upload Custom Costs endpoints.
      properties:
        version:
          description: Version of Custom Costs file
          type: string
      type: object
    CustomCostsFileUploadResponse:
      description: Response for Uploaded Custom Costs files.
      properties:
        data:
          $ref: '#/components/schemas/CustomCostsFileMetadataHighLevel'
        meta:
          $ref: '#/components/schemas/CustomCostUploadResponseMeta'
      type: object
    CustomCostsFileMetadataWithContent:
      description: Schema of a cost file's metadata.
      properties:
        billed_cost:
          description: Total cost in the cost file.
          example: 100.5
          format: double
          type: number
        billing_currency:
          description: Currency used in the Custom Costs file.
          example: USD
          type: string
        charge_period:
          $ref: '#/components/schemas/CustomCostsFileUsageChargePeriod'
        content:
          description: Detail of the line items from the Custom Costs file.
          items:
            $ref: '#/components/schemas/CustomCostsFileLineItem'
          type: array
        name:
          description: Name of the Custom Costs file.
          example: my_file.json
          type: string
        provider_names:
          description: Providers contained in the Custom Costs file.
          items:
            description: Name of a provider.
            example: my_provider
            type: string
          type: array
        status:
          description: Status of the Custom Costs file.
          example: active
          type: string
        uploaded_at:
          description: >-
            Timestamp in millisecond of the upload time of the Custom Costs
            file.
          example: 1704067200000
          format: double
          type: number
        uploaded_by:
          $ref: '#/components/schemas/CustomCostsUser'
      type: object
    CustomCostsFileMetadataWithContentHighLevel:
      description: JSON API format of for a Custom Costs file with content.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomCostsFileMetadataWithContent'
        id:
          description: ID of the Custom Costs metadata.
          type: string
        type:
          description: Type of the Custom Costs file metadata.
          type: string
      type: object
    CustomCostGetResponseMeta:
      description: Meta for the response from the Get Custom Costs endpoints.
      properties:
        version:
          description: Version of Custom Costs file
          type: string
      type: object
    CustomCostsFileGetResponse:
      description: Response for Get Custom Costs files.
      properties:
        data:
          $ref: '#/components/schemas/CustomCostsFileMetadataWithContentHighLevel'
        meta:
          $ref: '#/components/schemas/CustomCostGetResponseMeta'
      type: object
    ActiveBillingDimensionsAttributes:
      description: List of active billing dimensions.
      properties:
        month:
          description: >-
            Datetime in ISO-8601 format, UTC, precise to hour:
            `[YYYY-MM-DDThh]`.
          format: date-time
          type: string
        values:
          description: >-
            List of active billing dimensions. Example: `[infra_host, apm_host,
            serverless_infra]`.
          items:
            description: A given billing dimension in a list.
            example: infra_host
            type: string
          type: array
      type: object
    ActiveBillingDimensionsType:
      default: billing_dimensions
      description: Type of active billing dimensions data.
      enum:
        - billing_dimensions
      type: string
      x-enum-varnames:
        - BILLING_DIMENSIONS
    ActiveBillingDimensionsBody:
      description: Active billing dimensions data.
      properties:
        attributes:
          $ref: '#/components/schemas/ActiveBillingDimensionsAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/ActiveBillingDimensionsType'
      type: object
    ActiveBillingDimensionsResponse:
      description: Active billing dimensions response.
      properties:
        data:
          $ref: '#/components/schemas/ActiveBillingDimensionsBody'
      type: object
    SortDirection:
      default: desc
      description: The direction to sort by.
      enum:
        - desc
        - asc
      type: string
      x-enum-varnames:
        - DESC
        - ASC
    CostAttributionTagNames:
      additionalProperties:
        description: >-
          A list of values that are associated with each tag key.

          - An empty list means the resource use wasn't tagged with the
          respective tag.

          - Multiple values means the respective tag was applied multiple times
          on the resource.

          - An `<empty>` value means the resource was tagged with the respective
          tag but did not have a value.
        items:
          description: A given tag in a list.
          example: datadog-integrations-lab
          type: string
        type: array
      description: >-
        Tag keys and values.

        A `null` value here means that the requested tag breakdown cannot be
        applied because it does not match the [tags

        configured for usage
        attribution](https://docs.datadoghq.com/account_management/billing/usage_attribution/#getting-started).

        In this scenario the API returns the total cost, not broken down by
        tags.
      nullable: true
      type: object
    MonthlyCostAttributionAttributes:
      description: Cost Attribution by Tag for a given organization.
      properties:
        month:
          description: >-
            Datetime in ISO-8601 format, UTC, precise to hour:
            `[YYYY-MM-DDThh]`.
          format: date-time
          type: string
        org_name:
          description: The name of the organization.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        tag_config_source:
          description: >-
            The source of the cost attribution tag configuration and the
            selected tags in the format `<source_org_name>:::<selected tag
            1>///<selected tag 2>///<selected tag 3>`.
          type: string
        tags:
          $ref: '#/components/schemas/CostAttributionTagNames'
        updated_at:
          description: >-
            Shows the most recent hour in the current months for all
            organizations for which all costs were calculated.
          type: string
        values:
          description: >-
            Fields in Cost Attribution by tag(s). Example:
            `infra_host_on_demand_cost`, `infra_host_committed_cost`,
            `infra_host_total_cost`, `infra_host_percentage_in_org`,
            `infra_host_percentage_in_account`.
          type: object
      type: object
    CostAttributionType:
      default: cost_by_tag
      description: Type of cost attribution data.
      enum:
        - cost_by_tag
      example: cost_by_tag
      type: string
      x-enum-varnames:
        - COST_BY_TAG
    MonthlyCostAttributionBody:
      description: Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonthlyCostAttributionAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/CostAttributionType'
      type: object
    CostAttributionAggregatesBody:
      description: The object containing the aggregates.
      properties:
        agg_type:
          description: The aggregate type.
          example: sum
          type: string
        field:
          description: The field.
          example: infra_host_committed_cost
          type: string
        value:
          description: The value for a given field.
          format: double
          type: number
      type: object
    CostAttributionAggregates:
      description: An array of available aggregates.
      items:
        $ref: '#/components/schemas/CostAttributionAggregatesBody'
      type: array
    MonthlyCostAttributionPagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same parameters with the addition of the
            `next_record_id`.
          nullable: true
          type: string
      type: object
    MonthlyCostAttributionMeta:
      description: The object containing document metadata.
      properties:
        aggregates:
          $ref: '#/components/schemas/CostAttributionAggregates'
        pagination:
          $ref: '#/components/schemas/MonthlyCostAttributionPagination'
      type: object
    MonthlyCostAttributionResponse:
      description: Response containing the monthly cost attribution by tag(s).
      properties:
        data:
          description: Response containing cost attribution.
          items:
            $ref: '#/components/schemas/MonthlyCostAttributionBody'
          type: array
        meta:
          $ref: '#/components/schemas/MonthlyCostAttributionMeta'
      type: object
    OrderDirection:
      description: The sort direction for results.
      enum:
        - asc
        - desc
      example: asc
      type: string
      x-enum-varnames:
        - ASC
        - DESC
    CsmAgentsAttributes:
      description: A CSM Agent returned by the API.
      properties:
        agent_version:
          description: Version of the Datadog Agent.
          type: string
        aws_fargate:
          description: AWS Fargate details.
          type: string
        cluster_name:
          description: List of cluster names associated with the Agent.
          items:
            type: string
          type: array
        datadog_agent:
          description: Unique identifier for the Datadog Agent.
          type: string
        ecs_fargate_task_arn:
          description: ARN of the ECS Fargate task.
          type: string
        envs:
          description: List of environments associated with the Agent.
          items:
            type: string
          nullable: true
          type: array
        host_id:
          description: ID of the host.
          format: int64
          type: integer
        hostname:
          description: Name of the host.
          type: string
        install_method_installer_version:
          description: Version of the installer used for installing the Datadog Agent.
          type: string
        install_method_tool:
          description: Tool used for installing the Datadog Agent.
          type: string
        is_csm_vm_containers_enabled:
          description: Indicates if CSM VM Containers is enabled.
          nullable: true
          type: boolean
        is_csm_vm_hosts_enabled:
          description: Indicates if CSM VM Hosts is enabled.
          nullable: true
          type: boolean
        is_cspm_enabled:
          description: Indicates if CSPM is enabled.
          nullable: true
          type: boolean
        is_cws_enabled:
          description: Indicates if CWS is enabled.
          nullable: true
          type: boolean
        is_cws_remote_configuration_enabled:
          description: Indicates if CWS Remote Configuration is enabled.
          nullable: true
          type: boolean
        is_remote_configuration_enabled:
          description: Indicates if Remote Configuration is enabled.
          nullable: true
          type: boolean
        os:
          description: Operating system of the host.
          type: string
      type: object
    CSMAgentsType:
      default: datadog_agent
      description: The type of the resource. The value should always be `datadog_agent`.
      enum:
        - datadog_agent
      example: datadog_agent
      type: string
      x-enum-varnames:
        - DATADOG_AGENT
    CsmAgentData:
      description: Single Agent Data.
      properties:
        attributes:
          $ref: '#/components/schemas/CsmAgentsAttributes'
        id:
          description: The ID of the Agent.
          example: fffffc5505f6a006fdf7cf5aae053653
          type: string
        type:
          $ref: '#/components/schemas/CSMAgentsType'
      type: object
    CSMAgentsMetadata:
      description: Metadata related to the paginated response.
      properties:
        page_index:
          description: The index of the current page in the paginated results.
          example: 0
          format: int64
          type: integer
        page_size:
          description: The number of items per page in the paginated results.
          example: 10
          format: int64
          type: integer
        total_filtered:
          description: Total number of items that match the filter criteria.
          example: 128697
          format: int64
          type: integer
      type: object
    CsmAgentsResponse:
      description: Response object that includes a list of CSM Agents.
      properties:
        data:
          description: A list of Agents.
          items:
            $ref: '#/components/schemas/CsmAgentData'
          type: array
        meta:
          $ref: '#/components/schemas/CSMAgentsMetadata'
      type: object
    CsmCoverageAnalysis:
      description: CSM Coverage Analysis.
      properties:
        configured_resources_count:
          description: The number of fully configured resources.
          example: 8
          format: int64
          type: integer
        coverage:
          description: The coverage percentage.
          example: 0.8
          format: double
          type: number
        partially_configured_resources_count:
          description: The number of partially configured resources.
          example: 0
          format: int64
          type: integer
        total_resources_count:
          description: The total number of resources.
          example: 10
          format: int64
          type: integer
      type: object
    CsmCloudAccountsCoverageAnalysisAttributes:
      description: CSM Cloud Accounts Coverage Analysis attributes.
      properties:
        aws_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
        azure_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
        gcp_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
        org_id:
          description: The ID of your organization.
          example: 123456
          format: int64
          type: integer
        total_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
      type: object
    CsmCloudAccountsCoverageAnalysisData:
      description: CSM Cloud Accounts Coverage Analysis data.
      properties:
        attributes:
          $ref: '#/components/schemas/CsmCloudAccountsCoverageAnalysisAttributes'
        id:
          description: The ID of your organization.
          example: 66b3c6b5-5c9a-457e-b1c3-f247ca23afa3
          type: string
        type:
          default: get_cloud_accounts_coverage_analysis_response_public_v0
          description: >-
            The type of the resource. The value should always be
            `get_cloud_accounts_coverage_analysis_response_public_v0`.
          example: get_cloud_accounts_coverage_analysis_response_public_v0
          type: string
      type: object
    CsmCloudAccountsCoverageAnalysisResponse:
      description: CSM Cloud Accounts Coverage Analysis response.
      properties:
        data:
          $ref: '#/components/schemas/CsmCloudAccountsCoverageAnalysisData'
      type: object
    CsmHostsAndContainersCoverageAnalysisAttributes:
      description: CSM Hosts and Containers Coverage Analysis attributes.
      properties:
        cspm_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
        cws_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
        org_id:
          description: The ID of your organization.
          example: 123456
          format: int64
          type: integer
        total_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
        vm_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
      type: object
    CsmHostsAndContainersCoverageAnalysisData:
      description: CSM Hosts and Containers Coverage Analysis data.
      properties:
        attributes:
          $ref: '#/components/schemas/CsmHostsAndContainersCoverageAnalysisAttributes'
        id:
          description: The ID of your organization.
          example: 66b3c6b5-5c9a-457e-b1c3-f247ca23afa3
          type: string
        type:
          default: get_hosts_and_containers_coverage_analysis_response_public_v0
          description: >-
            The type of the resource. The value should always be
            `get_hosts_and_containers_coverage_analysis_response_public_v0`.
          example: get_hosts_and_containers_coverage_analysis_response_public_v0
          type: string
      type: object
    CsmHostsAndContainersCoverageAnalysisResponse:
      description: CSM Hosts and Containers Coverage Analysis response.
      properties:
        data:
          $ref: '#/components/schemas/CsmHostsAndContainersCoverageAnalysisData'
      type: object
    CsmServerlessCoverageAnalysisAttributes:
      description: CSM Serverless Resources Coverage Analysis attributes.
      properties:
        cws_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
        org_id:
          description: The ID of your organization.
          example: 123456
          format: int64
          type: integer
        total_coverage:
          $ref: '#/components/schemas/CsmCoverageAnalysis'
      type: object
    CsmServerlessCoverageAnalysisData:
      description: CSM Serverless Resources Coverage Analysis data.
      properties:
        attributes:
          $ref: '#/components/schemas/CsmServerlessCoverageAnalysisAttributes'
        id:
          description: The ID of your organization.
          example: 66b3c6b5-5c9a-457e-b1c3-f247ca23afa3
          type: string
        type:
          default: get_serverless_coverage_analysis_response_public_v0
          description: >-
            The type of the resource. The value should always be
            `get_serverless_coverage_analysis_response_public_v0`.
          example: get_serverless_coverage_analysis_response_public_v0
          type: string
      type: object
    CsmServerlessCoverageAnalysisResponse:
      description: CSM Serverless Resources Coverage Analysis response.
      properties:
        data:
          $ref: '#/components/schemas/CsmServerlessCoverageAnalysisData'
      type: object
    ApplicationKeyCreateAttributes:
      description: Attributes used to create an application Key.
      properties:
        name:
          description: Name of the application key.
          example: Application Key for managing dashboards
          type: string
        scopes:
          description: Array of scopes to grant the application key.
          example:
            - dashboards_read
            - dashboards_write
            - dashboards_public_share
          items:
            description: Name of scope.
            type: string
          nullable: true
          type: array
      required:
        - name
      type: object
    ApplicationKeyCreateData:
      description: Object used to create an application key.
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationKeyCreateAttributes'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      required:
        - attributes
        - type
      type: object
    ApplicationKeyCreateRequest:
      description: Request used to create an application key.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationKeyCreateData'
      required:
        - data
      type: object
    Creator:
      description: Creator of the object.
      properties:
        email:
          description: Email of the creator.
          type: string
        handle:
          description: Handle of the creator.
          type: string
        name:
          description: Name of the creator.
          nullable: true
          type: string
      type: object
    DashboardType:
      description: The type of the dashboard.
      enum:
        - custom_timeboard
        - custom_screenboard
        - integration_screenboard
        - integration_timeboard
        - host_timeboard
      example: host_timeboard
      type: string
      x-enum-varnames:
        - CUSTOM_TIMEBOARD
        - CUSTOM_SCREENBOARD
        - INTEGRATION_SCREENBOARD
        - INTEGRATION_TIMEBOARD
        - HOST_TIMEBOARD
    DashboardListItem:
      description: A dashboard within a list.
      properties:
        author:
          $ref: '#/components/schemas/Creator'
        created:
          description: Date of creation of the dashboard.
          format: date-time
          readOnly: true
          type: string
        icon:
          description: URL to the icon of the dashboard.
          nullable: true
          readOnly: true
          type: string
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          type: string
        integration_id:
          description: The short name of the integration.
          nullable: true
          readOnly: true
          type: string
        is_favorite:
          description: Whether or not the dashboard is in the favorites.
          readOnly: true
          type: boolean
        is_read_only:
          description: Whether or not the dashboard is read only.
          readOnly: true
          type: boolean
        is_shared:
          description: Whether the dashboard is publicly shared or not.
          readOnly: true
          type: boolean
        modified:
          description: Date of last edition of the dashboard.
          format: date-time
          readOnly: true
          type: string
        popularity:
          description: Popularity of the dashboard.
          format: int32
          maximum: 5
          readOnly: true
          type: integer
        tags:
          description: List of team names representing ownership of a dashboard.
          items:
            description: The name of a Datadog team, formatted as `team:<name>`
            type: string
          maxItems: 5
          nullable: true
          readOnly: true
          type: array
        title:
          description: Title of the dashboard.
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
        url:
          description: URL path to the dashboard.
          readOnly: true
          type: string
      required:
        - type
        - id
      type: object
    DashboardListItems:
      description: Dashboards within a list.
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          example: []
          items:
            $ref: '#/components/schemas/DashboardListItem'
          type: array
        total:
          description: Number of dashboards in the dashboard list.
          format: int64
          readOnly: true
          type: integer
      required:
        - dashboards
      type: object
    DashboardListItemRequest:
      description: A dashboard within a list.
      properties:
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
      required:
        - type
        - id
      type: object
    DashboardListUpdateItemsRequest:
      description: Request containing the list of dashboards to update to.
      properties:
        dashboards:
          description: List of dashboards to update the dashboard list to.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListItemResponse:
      description: A dashboard within a list.
      properties:
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
      required:
        - type
        - id
      type: object
    DashboardListUpdateItemsResponse:
      description: Response containing a list of updated dashboards.
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardListAddItemsRequest:
      description: Request containing a list of dashboards to add.
      properties:
        dashboards:
          description: List of dashboards to add the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListAddItemsResponse:
      description: Response containing a list of added dashboards.
      properties:
        added_dashboards_to_list:
          description: List of dashboards added to the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardListDeleteItemsRequest:
      description: Request containing a list of dashboards to delete.
      properties:
        dashboards:
          description: List of dashboards to delete from the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListDeleteItemsResponse:
      description: Response containing a list of deleted dashboards.
      properties:
        deleted_dashboards_from_list:
          description: List of dashboards deleted from the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    CreateDataDeletionRequestBodyAttributes:
      description: Attributes for creating a data deletion request.
      properties:
        from:
          description: Start of requested time window, milliseconds since Unix epoch.
          example: 1672527600000
          format: int64
          type: integer
        indexes:
          description: >-
            List of indexes for the search. If not provided, the search is
            performed in all indexes.
          example:
            - test-index
            - test-index-2
          items:
            description: Individual index.
            type: string
          type: array
        query:
          additionalProperties:
            type: string
          description: Query for creating a data deletion request.
          example:
            host: abc
            service: xyz
          type: object
        to:
          description: End of requested time window, milliseconds since Unix epoch.
          example: 1704063600000
          format: int64
          type: integer
      required:
        - query
        - from
        - to
      type: object
    CreateDataDeletionRequestBodyDataType:
      description: The deletion request type.
      enum:
        - create_deletion_req
      example: create_deletion_req
      type: string
      x-enum-varnames:
        - CREATE_DELETION_REQ
    CreateDataDeletionRequestBodyData:
      description: Data needed to create a data deletion request.
      properties:
        attributes:
          $ref: '#/components/schemas/CreateDataDeletionRequestBodyAttributes'
        type:
          $ref: '#/components/schemas/CreateDataDeletionRequestBodyDataType'
      required:
        - attributes
        - type
      type: object
    CreateDataDeletionRequestBody:
      description: Object needed to create a data deletion request.
      properties:
        data:
          $ref: '#/components/schemas/CreateDataDeletionRequestBodyData'
      required:
        - data
      type: object
    DataDeletionResponseItemAttributes:
      description: Deletion attribute for data deletion response.
      properties:
        created_at:
          description: Creation time of the deletion request.
          example: '2024-01-01T00:00:00.000000Z'
          type: string
        created_by:
          description: User who created the deletion request.
          example: test.user@datadoghq.com
          type: string
        from_time:
          description: Start of requested time window, milliseconds since Unix epoch.
          example: 1672527600000
          format: int64
          type: integer
        indexes:
          description: >-
            List of indexes for the search. If not provided, the search is
            performed in all indexes.
          example:
            - test-index
            - test-index-2
          items:
            description: Individual index.
            type: string
          type: array
        is_created:
          description: >-
            Whether the deletion request is fully created or not. It can take
            several minutes to fully create a deletion request depending on the
            target query and timeframe.
          example: true
          type: boolean
        org_id:
          description: Organization ID.
          example: 321813
          format: int64
          type: integer
        product:
          description: Product name.
          example: logs
          type: string
        query:
          description: Query for creating a data deletion request.
          example: service:xyz host:abc
          type: string
        starting_at:
          description: Starting time of the process to delete the requested data.
          example: '2024-01-01T02:00:00.000000Z'
          type: string
        status:
          description: Status of the deletion request.
          example: pending
          type: string
        to_time:
          description: End of requested time window, milliseconds since Unix epoch.
          example: 1704063600000
          format: int64
          type: integer
        total_unrestricted:
          description: >-
            Total number of elements to be deleted. Only the data accessible to
            the current user that matches the query and timeframe provided will
            be deleted.
          example: 100
          format: int64
          type: integer
        updated_at:
          description: Update time of the deletion request.
          example: '2024-01-01T00:00:00.000000Z'
          type: string
      required:
        - created_at
        - created_by
        - from_time
        - is_created
        - org_id
        - product
        - query
        - starting_at
        - status
        - to_time
        - total_unrestricted
        - updated_at
      type: object
    DataDeletionResponseItem:
      description: The created data deletion request information.
      properties:
        attributes:
          $ref: '#/components/schemas/DataDeletionResponseItemAttributes'
        id:
          description: The ID of the created data deletion request.
          example: '1'
          type: string
        type:
          description: The type of the request created.
          example: deletion_request
          type: string
      required:
        - id
        - type
        - attributes
      type: object
    DataDeletionResponseMeta:
      description: The metadata of the data deletion response.
      properties:
        count_product:
          additionalProperties:
            format: int64
            type: integer
          description: The total deletion requests created by product.
          example:
            logs: 8
            rum: 7
          type: object
        count_status:
          additionalProperties:
            format: int64
            type: integer
          description: The total deletion requests created by status.
          example:
            completed: 10
            pending: 5
          type: object
        next_page:
          description: >-
            The next page when searching deletion requests created in the
            current organization.
          example: cGFnZTI=
          type: string
        product:
          description: The product of the deletion request.
          example: logs
          type: string
        request_status:
          description: The status of the executed request.
          example: canceled
          type: string
      type: object
    CreateDataDeletionResponseBody:
      description: The response from the create data deletion request endpoint.
      properties:
        data:
          $ref: '#/components/schemas/DataDeletionResponseItem'
        meta:
          $ref: '#/components/schemas/DataDeletionResponseMeta'
      type: object
    GetDataDeletionsResponseBody:
      description: The response from the get data deletion requests endpoint.
      properties:
        data:
          description: The list of data deletion requests that matches the query.
          items:
            $ref: '#/components/schemas/DataDeletionResponseItem'
          type: array
        meta:
          $ref: '#/components/schemas/DataDeletionResponseMeta'
      type: object
    CancelDataDeletionResponseBody:
      description: The response from the cancel data deletion request endpoint.
      properties:
        data:
          $ref: '#/components/schemas/DataDeletionResponseItem'
        meta:
          $ref: '#/components/schemas/DataDeletionResponseMeta'
      type: object
    DomainAllowlistResponseDataAttributes:
      description: The details of the email domain allowlist.
      properties:
        domains:
          description: The list of domains in the email domain allowlist.
          items:
            type: string
          type: array
        enabled:
          description: Whether the email domain allowlist is enabled for the org.
          type: boolean
      type: object
    DomainAllowlistType:
      default: domain_allowlist
      description: Email domain allowlist allowlist type.
      enum:
        - domain_allowlist
      example: domain_allowlist
      type: string
      x-enum-varnames:
        - DOMAIN_ALLOWLIST
    DomainAllowlistResponseData:
      description: The email domain allowlist response for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/DomainAllowlistResponseDataAttributes'
        id:
          description: The unique identifier of the org.
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/DomainAllowlistType'
      required:
        - type
      type: object
    DomainAllowlistResponse:
      description: Response containing information about the email domain allowlist.
      properties:
        data:
          $ref: '#/components/schemas/DomainAllowlistResponseData'
      type: object
    DomainAllowlistAttributes:
      description: The details of the email domain allowlist.
      properties:
        domains:
          description: The list of domains in the email domain allowlist.
          items:
            type: string
          type: array
        enabled:
          description: Whether the email domain allowlist is enabled for the org.
          type: boolean
      type: object
    DomainAllowlist:
      description: The email domain allowlist for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/DomainAllowlistAttributes'
        id:
          description: The unique identifier of the org.
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/DomainAllowlistType'
      required:
        - type
      type: object
    DomainAllowlistRequest:
      description: Request containing the desired email domain allowlist configuration.
      properties:
        data:
          $ref: '#/components/schemas/DomainAllowlist'
      required:
        - data
      type: object
    GitCommitSHA:
      description: Git Commit SHA.
      example: 66adc9350f2cc9b250b69abddab733dd55e1a588
      pattern: ^[a-fA-F0-9]{40,}$
      type: string
    GitRepositoryURL:
      description: Git Repository URL
      example: https://github.com/organization/example-repository
      type: string
    DORAGitInfo:
      description: Git info for DORA Metrics events.
      properties:
        commit_sha:
          $ref: '#/components/schemas/GitCommitSHA'
        repository_url:
          $ref: '#/components/schemas/GitRepositoryURL'
      required:
        - repository_url
        - commit_sha
      type: object
    DORADeploymentRequestAttributes:
      description: Attributes to create a DORA deployment event.
      properties:
        env:
          description: Environment name to where the service was deployed.
          example: staging
          type: string
        finished_at:
          description: >-
            Unix timestamp when the deployment finished. It must be in
            nanoseconds, milliseconds, or seconds, and it should not be older
            than 1 hour.
          example: 1693491984000000000
          format: int64
          type: integer
        git:
          $ref: '#/components/schemas/DORAGitInfo'
        id:
          description: Deployment ID.
          type: string
        service:
          description: Service name.
          example: shopist
          type: string
        started_at:
          description: >-
            Unix timestamp when the deployment started. It must be in
            nanoseconds, milliseconds, or seconds.
          example: 1693491974000000000
          format: int64
          type: integer
        team:
          description: >-
            Name of the team owning the deployed service. If not provided, this
            is automatically populated with the team associated with the service
            in the Service Catalog.
          example: backend
          type: string
        version:
          description: >-
            Version to correlate with [APM Deployment
            Tracking](https://docs.datadoghq.com/tracing/services/deployment_tracking/).
          example: v1.12.07
          type: string
      required:
        - service
        - started_at
        - finished_at
      type: object
    DORADeploymentRequestData:
      description: The JSON:API data.
      properties:
        attributes:
          $ref: '#/components/schemas/DORADeploymentRequestAttributes'
      required:
        - attributes
      type: object
    DORADeploymentRequest:
      description: Request to create a DORA deployment event.
      properties:
        data:
          $ref: '#/components/schemas/DORADeploymentRequestData'
      required:
        - data
      type: object
    DORADeploymentType:
      default: dora_deployment
      description: JSON:API type for DORA deployment events.
      enum:
        - dora_deployment
      example: dora_deployment
      type: string
      x-enum-varnames:
        - DORA_DEPLOYMENT
    DORADeploymentResponseData:
      description: The JSON:API data.
      properties:
        id:
          description: The ID of the received DORA deployment event.
          example: 4242fcdd31586083
          type: string
        type:
          $ref: '#/components/schemas/DORADeploymentType'
      required:
        - id
      type: object
    DORADeploymentResponse:
      description: Response after receiving a DORA deployment event.
      properties:
        data:
          $ref: '#/components/schemas/DORADeploymentResponseData'
      required:
        - data
      type: object
    DORAIncidentRequestAttributes:
      description: Attributes to create a DORA incident event.
      properties:
        env:
          description: Environment name that was impacted by the incident.
          example: staging
          type: string
        finished_at:
          description: >-
            Unix timestamp when the incident finished. It must be in
            nanoseconds, milliseconds, or seconds, and it should not be older
            than 1 hour.
          example: 1693491984000000000
          format: int64
          type: integer
        git:
          $ref: '#/components/schemas/DORAGitInfo'
        id:
          description: Incident ID. Required to update a previously sent incident.
          type: string
        name:
          description: Incident name.
          example: Webserver is down failing all requests.
          type: string
        services:
          description: >-
            Service names impacted by the incident. If possible, use names
            registered in the Service Catalog. Required when the team field is
            not provided.
          example:
            - shopist
          items:
            type: string
          type: array
        severity:
          description: Incident severity.
          example: High
          type: string
        started_at:
          description: >-
            Unix timestamp when the incident started. It must be in nanoseconds,
            milliseconds, or seconds.
          example: 1693491974000000000
          format: int64
          type: integer
        team:
          description: >-
            Name of the team owning the services impacted. If possible, use team
            handles registered in Datadog. Required when the services field is
            not provided.
          example: backend
          type: string
        version:
          description: >-
            Version to correlate with [APM Deployment
            Tracking](https://docs.datadoghq.com/tracing/services/deployment_tracking/).
          example: v1.12.07
          type: string
      required:
        - started_at
      type: object
    DORAIncidentRequestData:
      description: The JSON:API data.
      properties:
        attributes:
          $ref: '#/components/schemas/DORAIncidentRequestAttributes'
      required:
        - attributes
      type: object
    DORAIncidentRequest:
      description: Request to create a DORA incident event.
      properties:
        data:
          $ref: '#/components/schemas/DORAIncidentRequestData'
      required:
        - data
      type: object
    DORAIncidentType:
      default: dora_incident
      description: JSON:API type for DORA incident events.
      enum:
        - dora_incident
      example: dora_incident
      type: string
      x-enum-varnames:
        - DORA_INCIDENT
    DORAIncidentResponseData:
      description: Response after receiving a DORA incident event.
      properties:
        id:
          description: The ID of the received DORA incident event.
          example: 4242fcdd31586083
          type: string
        type:
          $ref: '#/components/schemas/DORAIncidentType'
      required:
        - id
      type: object
    DORAIncidentResponse:
      description: Response after receiving a DORA incident event.
      properties:
        data:
          $ref: '#/components/schemas/DORAIncidentResponseData'
      required:
        - data
      type: object
    DowntimeDisplayTimezone:
      default: UTC
      description: >-
        The timezone in which to display the downtime's start and end times in
        Datadog applications. This is not used

        as an offset for scheduling.
      example: America/New_York
      nullable: true
      type: string
    DowntimeMessage:
      description: >-
        A message to include with notifications for this downtime. Email
        notifications can be sent to specific users

        by using the same `@username` notation as events.
      example: Message about the downtime
      nullable: true
      type: string
    DowntimeMonitorIdentifierId:
      additionalProperties: {}
      description: Object of the monitor identifier.
      properties:
        monitor_id:
          description: ID of the monitor to prevent notifications.
          example: 123
          format: int64
          type: integer
      required:
        - monitor_id
      type: object
    DowntimeMonitorIdentifierTags:
      additionalProperties: {}
      description: Object of the monitor tags.
      properties:
        monitor_tags:
          description: >-
            A list of monitor tags. For example, tags that are applied directly
            to monitors,

            not tags that are used in monitor queries (which are filtered by the
            scope parameter), to which the downtime applies.

            The resulting downtime applies to monitors that match **all**
            provided monitor tags. Setting `monitor_tags`

            to `[*]` configures the downtime to mute all monitors for the given
            scope.
          example:
            - service:postgres
            - team:frontend
          items:
            description: A list of monitor tags.
            example: service:postgres
            type: string
          minItems: 1
          type: array
      required:
        - monitor_tags
      type: object
    DowntimeMonitorIdentifier:
      description: Monitor identifier for the downtime.
      oneOf:
        - $ref: '#/components/schemas/DowntimeMonitorIdentifierId'
        - $ref: '#/components/schemas/DowntimeMonitorIdentifierTags'
    DowntimeMuteFirstRecoveryNotification:
      description: If the first recovery notification during a downtime should be muted.
      example: false
      type: boolean
    DowntimeNotifyEndStateTypes:
      description: >-
        State that will trigger a monitor notification when the
        `notify_end_types` action occurs.
      enum:
        - alert
        - no data
        - warn
      example: alert
      type: string
      x-enum-varnames:
        - ALERT
        - NO_DATA
        - WARN
    DowntimeNotifyEndStates:
      description: >-
        States that will trigger a monitor notification when the
        `notify_end_types` action occurs.
      example:
        - alert
        - warn
      items:
        $ref: '#/components/schemas/DowntimeNotifyEndStateTypes'
      type: array
    DowntimeNotifyEndStateActions:
      description: >-
        Action that will trigger a monitor notification if the downtime is in
        the `notify_end_types` state.
      enum:
        - canceled
        - expired
      example: canceled
      type: string
      x-enum-varnames:
        - CANCELED
        - EXPIRED
    DowntimeNotifyEndTypes:
      description: >-
        Actions that will trigger a monitor notification if the downtime is in
        the `notify_end_types` state.
      example:
        - canceled
        - expired
      items:
        $ref: '#/components/schemas/DowntimeNotifyEndStateActions'
      type: array
    DowntimeScheduleCurrentDowntimeResponse:
      description: >-
        The most recent actual start and end dates for a recurring downtime. For
        a canceled downtime,

        this is the previously occurring downtime. For active downtimes, this is
        the ongoing downtime, and for scheduled

        downtimes it is the upcoming downtime.
      properties:
        end:
          description: The end of the current downtime.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          nullable: true
          type: string
        start:
          description: The start of the current downtime.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          type: string
      type: object
    DowntimeScheduleRecurrenceDuration:
      description: >-
        The length of the downtime. Must begin with an integer and end with one
        of 'm', 'h', d', or 'w'.
      example: 123d
      type: string
    DowntimeScheduleRecurrenceRrule:
      description: >-
        The `RRULE` standard for defining recurring events.

        For example, to have a recurring event on the first day of each month,
        set the type to `rrule` and set the `FREQ` to `MONTHLY` and `BYMONTHDAY`
        to `1`.

        Most common `rrule` options from the [iCalendar
        Spec](https://tools.ietf.org/html/rfc5545) are supported.


        **Note**: Attributes specifying the duration in `RRULE` are not
        supported (for example, `DTSTART`, `DTEND`, `DURATION`).

        More examples available in this [downtime
        guide](https://docs.datadoghq.com/monitors/guide/suppress-alert-with-downtimes/?tab=api).
      example: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
      type: string
    DowntimeScheduleRecurrenceResponse:
      description: An RRULE-based recurring downtime.
      properties:
        duration:
          $ref: '#/components/schemas/DowntimeScheduleRecurrenceDuration'
        rrule:
          $ref: '#/components/schemas/DowntimeScheduleRecurrenceRrule'
        start:
          description: >-
            ISO-8601 Datetime to start the downtime. Must not include a UTC
            offset. If not provided, the

            downtime starts the moment it is created.
          example: 2020-01-02T03:04
          type: string
      type: object
    DowntimeScheduleRecurrencesResponse:
      description: A recurring downtime schedule definition.
      properties:
        current_downtime:
          $ref: '#/components/schemas/DowntimeScheduleCurrentDowntimeResponse'
        recurrences:
          description: A list of downtime recurrences.
          items:
            $ref: '#/components/schemas/DowntimeScheduleRecurrenceResponse'
          maxItems: 5
          minItems: 1
          type: array
        timezone:
          default: UTC
          description: >-
            The timezone in which to schedule the downtime. This affects
            recurring start and end dates.

            Must match `display_timezone`.
          example: America/New_York
          type: string
      required:
        - recurrences
      type: object
    DowntimeScheduleOneTimeResponse:
      description: A one-time downtime definition.
      properties:
        end:
          description: ISO-8601 Datetime to end the downtime.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          nullable: true
          type: string
        start:
          description: ISO-8601 Datetime to start the downtime.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          type: string
      required:
        - start
      type: object
    DowntimeScheduleResponse:
      description: >-
        The schedule that defines when the monitor starts, stops, and recurs.
        There are two types of schedules:

        one-time and recurring. Recurring schedules may have up to five
        RRULE-based recurrences. If no schedules are

        provided, the downtime will begin immediately and never end.
      oneOf:
        - $ref: '#/components/schemas/DowntimeScheduleRecurrencesResponse'
        - $ref: '#/components/schemas/DowntimeScheduleOneTimeResponse'
    DowntimeScope:
      description: >-
        The scope to which the downtime applies. Must follow the [common search
        syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).
      example: env:(staging OR prod) AND datacenter:us-east-1
      type: string
    DowntimeStatus:
      description: The current status of the downtime.
      enum:
        - active
        - canceled
        - ended
        - scheduled
      example: active
      type: string
      x-enum-varnames:
        - ACTIVE
        - CANCELED
        - ENDED
        - SCHEDULED
    DowntimeResponseAttributes:
      description: Downtime details.
      properties:
        canceled:
          description: Time that the downtime was canceled.
          example: 2020-01-02T03:04:05.282979+0000
          format: date-time
          nullable: true
          type: string
        created:
          description: Creation time of the downtime.
          example: 2020-01-02T03:04:05.282979+0000
          format: date-time
          type: string
        display_timezone:
          $ref: '#/components/schemas/DowntimeDisplayTimezone'
        message:
          $ref: '#/components/schemas/DowntimeMessage'
        modified:
          description: Time that the downtime was last modified.
          example: 2020-01-02T03:04:05.282979+0000
          format: date-time
          type: string
        monitor_identifier:
          $ref: '#/components/schemas/DowntimeMonitorIdentifier'
        mute_first_recovery_notification:
          $ref: '#/components/schemas/DowntimeMuteFirstRecoveryNotification'
        notify_end_states:
          $ref: '#/components/schemas/DowntimeNotifyEndStates'
        notify_end_types:
          $ref: '#/components/schemas/DowntimeNotifyEndTypes'
        schedule:
          $ref: '#/components/schemas/DowntimeScheduleResponse'
        scope:
          $ref: '#/components/schemas/DowntimeScope'
        status:
          $ref: '#/components/schemas/DowntimeStatus'
      type: object
    DowntimeRelationshipsCreatedByData:
      description: Data for the user who created the downtime.
      nullable: true
      properties:
        id:
          description: User ID of the downtime creator.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    DowntimeRelationshipsCreatedBy:
      description: The user who created the downtime.
      properties:
        data:
          $ref: '#/components/schemas/DowntimeRelationshipsCreatedByData'
      type: object
    DowntimeIncludedMonitorType:
      default: monitors
      description: Monitor resource type.
      enum:
        - monitors
      example: monitors
      type: string
      x-enum-varnames:
        - MONITORS
    DowntimeRelationshipsMonitorData:
      description: Data for the monitor.
      nullable: true
      properties:
        id:
          description: Monitor ID of the downtime.
          example: '12345'
          type: string
        type:
          $ref: '#/components/schemas/DowntimeIncludedMonitorType'
      type: object
    DowntimeRelationshipsMonitor:
      description: The monitor identified by the downtime.
      properties:
        data:
          $ref: '#/components/schemas/DowntimeRelationshipsMonitorData'
      type: object
    DowntimeRelationships:
      description: All relationships associated with downtime.
      properties:
        created_by:
          $ref: '#/components/schemas/DowntimeRelationshipsCreatedBy'
        monitor:
          $ref: '#/components/schemas/DowntimeRelationshipsMonitor'
      type: object
    DowntimeResourceType:
      default: downtime
      description: Downtime resource type.
      enum:
        - downtime
      example: downtime
      type: string
      x-enum-varnames:
        - DOWNTIME
    DowntimeResponseData:
      description: Downtime data.
      properties:
        attributes:
          $ref: '#/components/schemas/DowntimeResponseAttributes'
        id:
          description: The downtime ID.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/DowntimeRelationships'
        type:
          $ref: '#/components/schemas/DowntimeResourceType'
      type: object
    DowntimeMonitorIncludedAttributes:
      description: Attributes of the monitor identified by the downtime.
      properties:
        name:
          description: The name of the monitor identified by the downtime.
          example: A monitor name
          type: string
      type: object
    DowntimeMonitorIncludedItem:
      description: Information about the monitor identified by the downtime.
      properties:
        attributes:
          $ref: '#/components/schemas/DowntimeMonitorIncludedAttributes'
        id:
          description: ID of the monitor identified by the downtime.
          example: 12345
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/DowntimeIncludedMonitorType'
      type: object
    DowntimeResponseIncludedItem:
      description: An object related to a downtime.
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/DowntimeMonitorIncludedItem'
    DowntimeMetaPage:
      description: Object containing the total filtered count.
      properties:
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    DowntimeMeta:
      description: Pagination metadata returned by the API.
      properties:
        page:
          $ref: '#/components/schemas/DowntimeMetaPage'
      type: object
    ListDowntimesResponse:
      description: Response for retrieving all downtimes.
      properties:
        data:
          description: An array of downtimes.
          items:
            $ref: '#/components/schemas/DowntimeResponseData'
          type: array
        included:
          description: Array of objects related to the downtimes.
          items:
            $ref: '#/components/schemas/DowntimeResponseIncludedItem'
          type: array
        meta:
          $ref: '#/components/schemas/DowntimeMeta'
      type: object
    DowntimeScheduleRecurrenceCreateUpdateRequest:
      additionalProperties: {}
      description: An object defining the recurrence of the downtime.
      properties:
        duration:
          $ref: '#/components/schemas/DowntimeScheduleRecurrenceDuration'
        rrule:
          $ref: '#/components/schemas/DowntimeScheduleRecurrenceRrule'
        start:
          description: >-
            ISO-8601 Datetime to start the downtime. Must not include a UTC
            offset. If not provided, the

            downtime starts the moment it is created.
          example: 2020-01-02T03:04
          nullable: true
          type: string
      required:
        - duration
        - rrule
      type: object
    DowntimeScheduleRecurrencesCreateRequest:
      description: A recurring downtime schedule definition.
      properties:
        recurrences:
          description: A list of downtime recurrences.
          items:
            $ref: '#/components/schemas/DowntimeScheduleRecurrenceCreateUpdateRequest'
          type: array
        timezone:
          default: UTC
          description: The timezone in which to schedule the downtime.
          example: America/New_York
          type: string
      required:
        - recurrences
      type: object
    DowntimeScheduleOneTimeCreateUpdateRequest:
      additionalProperties: false
      description: A one-time downtime definition.
      properties:
        end:
          description: >-
            ISO-8601 Datetime to end the downtime. Must include a UTC offset of
            zero. If not provided, the

            downtime continues forever.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          nullable: true
          type: string
        start:
          description: >-
            ISO-8601 Datetime to start the downtime. Must include a UTC offset
            of zero. If not provided, the

            downtime starts the moment it is created.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          nullable: true
          type: string
      type: object
    DowntimeScheduleCreateRequest:
      description: Schedule for the downtime.
      oneOf:
        - $ref: '#/components/schemas/DowntimeScheduleRecurrencesCreateRequest'
        - $ref: '#/components/schemas/DowntimeScheduleOneTimeCreateUpdateRequest'
    DowntimeCreateRequestAttributes:
      description: Downtime details.
      properties:
        display_timezone:
          $ref: '#/components/schemas/DowntimeDisplayTimezone'
        message:
          $ref: '#/components/schemas/DowntimeMessage'
        monitor_identifier:
          $ref: '#/components/schemas/DowntimeMonitorIdentifier'
        mute_first_recovery_notification:
          $ref: '#/components/schemas/DowntimeMuteFirstRecoveryNotification'
        notify_end_states:
          $ref: '#/components/schemas/DowntimeNotifyEndStates'
        notify_end_types:
          $ref: '#/components/schemas/DowntimeNotifyEndTypes'
        schedule:
          $ref: '#/components/schemas/DowntimeScheduleCreateRequest'
        scope:
          $ref: '#/components/schemas/DowntimeScope'
      required:
        - scope
        - monitor_identifier
      type: object
    DowntimeCreateRequestData:
      description: Object to create a downtime.
      properties:
        attributes:
          $ref: '#/components/schemas/DowntimeCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/DowntimeResourceType'
      required:
        - type
        - attributes
      type: object
    DowntimeCreateRequest:
      description: Request for creating a downtime.
      properties:
        data:
          $ref: '#/components/schemas/DowntimeCreateRequestData'
      required:
        - data
      type: object
    DowntimeResponse:
      description: |-
        Downtiming gives you greater control over monitor notifications by
        allowing you to globally exclude scopes from alerting.
        Downtime settings, which can be scheduled with start and end times,
        prevent all alerting related to specified Datadog tags.
      properties:
        data:
          $ref: '#/components/schemas/DowntimeResponseData'
        included:
          description: Array of objects related to the downtime that the user requested.
          items:
            $ref: '#/components/schemas/DowntimeResponseIncludedItem'
          type: array
      type: object
    DowntimeScheduleRecurrencesUpdateRequest:
      additionalProperties: false
      description: A recurring downtime schedule definition.
      properties:
        recurrences:
          description: A list of downtime recurrences.
          items:
            $ref: '#/components/schemas/DowntimeScheduleRecurrenceCreateUpdateRequest'
          type: array
        timezone:
          default: UTC
          description: The timezone in which to schedule the downtime.
          example: America/New_York
          type: string
      type: object
    DowntimeScheduleUpdateRequest:
      description: Schedule for the downtime.
      oneOf:
        - $ref: '#/components/schemas/DowntimeScheduleRecurrencesUpdateRequest'
        - $ref: '#/components/schemas/DowntimeScheduleOneTimeCreateUpdateRequest'
    DowntimeUpdateRequestAttributes:
      description: Attributes of the downtime to update.
      properties:
        display_timezone:
          $ref: '#/components/schemas/DowntimeDisplayTimezone'
        message:
          $ref: '#/components/schemas/DowntimeMessage'
        monitor_identifier:
          $ref: '#/components/schemas/DowntimeMonitorIdentifier'
        mute_first_recovery_notification:
          $ref: '#/components/schemas/DowntimeMuteFirstRecoveryNotification'
        notify_end_states:
          $ref: '#/components/schemas/DowntimeNotifyEndStates'
        notify_end_types:
          $ref: '#/components/schemas/DowntimeNotifyEndTypes'
        schedule:
          $ref: '#/components/schemas/DowntimeScheduleUpdateRequest'
        scope:
          $ref: '#/components/schemas/DowntimeScope'
      type: object
    DowntimeUpdateRequestData:
      description: Object to update a downtime.
      properties:
        attributes:
          $ref: '#/components/schemas/DowntimeUpdateRequestAttributes'
        id:
          description: ID of this downtime.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/DowntimeResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    DowntimeUpdateRequest:
      description: Request for editing a downtime.
      properties:
        data:
          $ref: '#/components/schemas/DowntimeUpdateRequestData'
      required:
        - data
      type: object
    EventsSort:
      description: The sort parameters when querying events.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    Event:
      description: The metadata associated with a request.
      properties:
        id:
          description: Event ID.
          example: '6509751066204996294'
          type: string
        name:
          description: The event name.
          type: string
        source_id:
          description: Event source ID.
          example: 36
          format: int64
          type: integer
        type:
          description: Event type.
          example: error_tracking_alert
          type: string
      type: object
    MonitorType:
      description: Attributes from the monitor that triggered the event.
      nullable: true
      properties:
        created_at:
          description: The POSIX timestamp of the monitor's creation in nanoseconds.
          example: 1646318692000
          format: int64
          type: integer
        group_status:
          description: Monitor group status used when there is no `result_groups`.
          format: int32
          maximum: 2147483647
          type: integer
        groups:
          description: Groups to which the monitor belongs.
          items:
            description: A group.
            type: string
          type: array
        id:
          description: The monitor ID.
          format: int64
          type: integer
        message:
          description: The monitor message.
          type: string
        modified:
          description: The monitor's last-modified timestamp.
          format: int64
          type: integer
        name:
          description: The monitor name.
          type: string
        query:
          description: The query that triggers the alert.
          type: string
        tags:
          description: A list of tags attached to the monitor.
          example:
            - environment:test
          items:
            description: A tag.
            type: string
          type: array
        templated_name:
          description: >-
            The templated name of the monitor before resolving any template
            variables.
          type: string
        type:
          description: The monitor type.
          type: string
      type: object
    EventPriority:
      description: The priority of the event's monitor. For example, `normal` or `low`.
      enum:
        - normal
        - low
      example: normal
      nullable: true
      type: string
      x-enum-varnames:
        - NORMAL
        - LOW
    EventStatusType:
      description: |-
        If an alert event is enabled, its status is one of the following:
        `failure`, `error`, `warning`, `info`, `success`, `user_update`,
        `recommendation`, or `snapshot`.
      enum:
        - failure
        - error
        - warning
        - info
        - success
        - user_update
        - recommendation
        - snapshot
      example: info
      type: string
      x-enum-varnames:
        - FAILURE
        - ERROR
        - WARNING
        - INFO
        - SUCCESS
        - USER_UPDATE
        - RECOMMENDATION
        - SNAPSHOT
    EventAttributes:
      description: Object description of attributes from your event.
      properties:
        aggregation_key:
          description: Aggregation key of the event.
          type: string
        date_happened:
          description: >-
            POSIX timestamp of the event. Must be sent as an integer (no
            quotation marks).

            Limited to events no older than 18 hours.
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        duration:
          description: >-
            The duration between the triggering of the event and its recovery in
            nanoseconds.
          format: int64
          type: integer
        event_object:
          description: The event title.
          example: Did you hear the news today?
          type: string
        evt:
          $ref: '#/components/schemas/Event'
        hostname:
          description: |-
            Host name to associate with the event.
            Any tags associated with the host are also applied to this event.
          type: string
        monitor:
          $ref: '#/components/schemas/MonitorType'
        monitor_groups:
          description: List of groups referred to in the event.
          items:
            description: Group referred to in the event.
            type: string
          nullable: true
          type: array
        monitor_id:
          description: >-
            ID of the monitor that triggered the event. When an event isn't
            related to a monitor, this field is empty.
          format: int64
          nullable: true
          type: integer
        priority:
          $ref: '#/components/schemas/EventPriority'
        related_event_id:
          description: Related event ID.
          format: int64
          type: integer
        service:
          description: Service that triggered the event.
          example: datadog-api
          type: string
        source_type_name:
          description: >-
            The type of event being posted.

            For example, `nagios`, `hudson`, `jenkins`, `my_apps`, `chef`,
            `puppet`, `git` or `bitbucket`.

            The list of standard source attribute values is [available
            here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          type: string
        sourcecategory:
          description: >-
            Identifier for the source of the event, such as a monitor alert, an
            externally-submitted event, or an integration.
          type: string
        status:
          $ref: '#/components/schemas/EventStatusType'
        tags:
          description: A list of tags to apply to the event.
          example:
            - environment:test
          items:
            description: A tag.
            type: string
          type: array
        timestamp:
          description: POSIX timestamp of your event in milliseconds.
          example: 1652274265000
          format: int64
          type: integer
        title:
          description: The event title.
          example: Oh boy!
          type: string
      type: object
    EventResponseAttributes:
      description: The object description of an event response attribute.
      properties:
        attributes:
          $ref: '#/components/schemas/EventAttributes'
        message:
          description: The message of the event.
          type: string
        tags:
          description: An array of tags associated with the event.
          example:
            - team:A
          items:
            description: The tag associated with the event.
            type: string
          type: array
        timestamp:
          description: The timestamp of the event.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    EventType:
      default: event
      description: Type of the event.
      enum:
        - event
      example: event
      type: string
      x-enum-varnames:
        - EVENT
    EventResponse:
      description: >-
        The object description of an event after being processed and stored by
        Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/EventResponseAttributes'
        id:
          description: the unique ID of the event.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/EventType'
      type: object
    EventsListResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            Link for the next set of results. Note that the request can also be
            made using the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    EventsResponseMetadataPage:
      description: Pagination attributes.
      properties:
        after:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same

            parameters with the addition of the `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    EventsWarning:
      description: A warning message indicating something is wrong with the query.
      properties:
        code:
          description: A unique code for this type of warning.
          example: unknown_index
          type: string
        detail:
          description: A detailed explanation of this specific warning.
          example: 'indexes: foo, bar'
          type: string
        title:
          description: A short human-readable summary of the warning.
          example: >-
            One or several indexes are missing or invalid. Results hold data
            from the other indexes.
          type: string
      type: object
    EventsResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: The time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/EventsResponseMetadataPage'
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          description: The request status.
          example: done
          type: string
        warnings:
          description: >-
            A list of warnings (non-fatal errors) encountered. Partial results
            might be returned if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/EventsWarning'
          type: array
      type: object
    EventsListResponse:
      description: >-
        The response object with all events matching the request and pagination
        information.
      properties:
        data:
          description: An array of events matching the request.
          items:
            $ref: '#/components/schemas/EventResponse'
          type: array
        links:
          $ref: '#/components/schemas/EventsListResponseLinks'
        meta:
          $ref: '#/components/schemas/EventsResponseMetadata'
      type: object
    ChangeEventCustomAttributesAuthorType:
      description: Author's type.
      enum:
        - user
        - system
      example: user
      type: string
      x-enum-varnames:
        - USER
        - SYSTEM
    ChangeEventCustomAttributesAuthor:
      description: >-
        Object representing the entity which made the change. Optional field but
        if provided should include `type` and `name`.
      properties:
        name:
          description: Author's name. Limited to 128 characters.
          example: datadog@datadog.com
          maxLength: 128
          type: string
        type:
          $ref: '#/components/schemas/ChangeEventCustomAttributesAuthorType'
      required:
        - name
        - type
      type: object
    ChangeEventCustomAttributesChangedResourceType:
      description: Resource's type.
      enum:
        - feature_flag
        - configuration
      example: feature_flag
      type: string
      x-enum-varnames:
        - FEATURE_FLAG
        - CONFIGURATION
    ChangeEventCustomAttributesChangedResource:
      description: Object representing a uniquely identified resource.
      properties:
        name:
          description: Resource's name.
          example: fallback_payments_test
          type: string
        type:
          $ref: '#/components/schemas/ChangeEventCustomAttributesChangedResourceType'
      required:
        - type
        - name
      type: object
    ChangeEventCustomAttributesImpactedResourcesItemsType:
      description: Resource's type.
      enum:
        - service
      example: service
      type: string
      x-enum-varnames:
        - SERVICE
    ChangeEventCustomAttributesImpactedResourcesItems:
      description: >-
        Object representing a uniquely identified resource. Only the resource
        type `service` is supported.
      properties:
        name:
          description: Resource's name.
          example: payments_api
          type: string
        type:
          $ref: >-
            #/components/schemas/ChangeEventCustomAttributesImpactedResourcesItemsType
      required:
        - type
        - name
      type: object
    ChangeEventCustomAttributes:
      description: Object representing custom change event attributes.
      properties:
        author:
          $ref: '#/components/schemas/ChangeEventCustomAttributesAuthor'
        change_metadata:
          additionalProperties: {}
          description: >-
            Free form object with information related to the `change` event. Can
            be arbitrarily nested and contain any valid JSON.
          example:
            dd:
              team: datadog_team
              user_email: datadog@datadog.com
              user_id: datadog_user_id
              user_name: datadog_username
            resource_link: datadog.com/feature/fallback_payments_test
          type: object
        changed_resource:
          $ref: '#/components/schemas/ChangeEventCustomAttributesChangedResource'
        impacted_resources:
          description: >-
            A list of resources impacted by this change. It is recommended to
            provide an impacted resource to display

            the change event at the right location. Only resources of type
            `service` are supported.
          example:
            - name: payments_api
              type: service
          items:
            $ref: >-
              #/components/schemas/ChangeEventCustomAttributesImpactedResourcesItems
          type: array
        new_value:
          additionalProperties: {}
          description: Free form object to track new value of the changed resource.
          example:
            enabled: true
            percentage: 50%
            rule:
              datacenter: devcycle.us1.prod
          type: object
        prev_value:
          additionalProperties: {}
          description: Free form object to track previous value of the changed resource.
          example:
            enabled: true
            percentage: 10%
            rule:
              datacenter: devcycle.us1.prod
          type: object
      required:
        - changed_resource
      type: object
    EventPayloadAttributes:
      description: >-
        JSON object for custom attributes. Schema are different per each event
        category.
      oneOf:
        - $ref: '#/components/schemas/ChangeEventCustomAttributes'
    EventCategory:
      description: >-
        Event category to identify the type of event. Only the value `change` is
        supported. Support for other categories are coming. please reach out to
        datadog support if you're interested.
      enum:
        - change
      example: change
      type: string
      x-enum-varnames:
        - CHANGE
    EventPayload:
      description: Event attributes.
      properties:
        aggregation_key:
          description: >-
            An arbitrary string to use for aggregation when correlating events.
            Limited to 100 characters.
          maxLength: 100
          type: string
        attributes:
          $ref: '#/components/schemas/EventPayloadAttributes'
        category:
          $ref: '#/components/schemas/EventCategory'
        message:
          description: The body of the event. Limited to 4000 characters.
          example: payment_processed feature flag has been enabled
          maxLength: 4000
          type: string
        tags:
          description: >-
            A list of tags to apply to the event.

            Refer to [Tags
            docs](https://docs.datadoghq.com/getting_started/tagging/).
          example:
            - env:test
          items:
            description: A tag.
            type: string
          type: array
        timestamp:
          description: >-
            Timestamp when the event occurred. Must follow [ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format.

            For example `"2017-01-15T01:30:15.010000Z"`.

            Defaults to the timestamp of receipt. Limited to values no older
            than 18 hours.
          type: string
        title:
          description: The event title. Limited to 500 characters.
          example: payment_processed feature flag updated
          maxLength: 500
          type: string
      required:
        - title
        - category
        - attributes
      type: object
    EventCreateRequestType:
      description: Entity type.
      enum:
        - event
      example: event
      type: string
      x-enum-varnames:
        - EVENT
    EventCreateRequest:
      description: Object representing an event creation request.
      properties:
        attributes:
          $ref: '#/components/schemas/EventPayload'
        type:
          $ref: '#/components/schemas/EventCreateRequestType'
      type: object
    EventCreateRequestPayload:
      description: Payload for creating an event.
      properties:
        data:
          $ref: '#/components/schemas/EventCreateRequest'
      type: object
    EventCreateResponseAttributesAttributesEvt:
      description: JSON object of event system attributes.
      properties:
        id:
          description: Event id
          type: string
      type: object
    EventCreateResponseAttributesAttributes:
      description: JSON object of attributes from your events.
      properties:
        evt:
          $ref: '#/components/schemas/EventCreateResponseAttributesAttributesEvt'
      type: object
    EventCreateResponseAttributes:
      description: >-
        JSON object containing all events attributes and their associated
        values.
      properties:
        attributes:
          $ref: '#/components/schemas/EventCreateResponseAttributesAttributes'
      type: object
    EventCreateResponse:
      description: Object containing an event response.
      properties:
        attributes:
          $ref: '#/components/schemas/EventCreateResponseAttributes'
        type:
          description: Event type
          example: event
          type: string
      type: object
    EventCreateResponsePayload:
      description: Response containing information about created event.
      properties:
        data:
          $ref: '#/components/schemas/EventCreateResponse'
      type: object
    EventsQueryFilter:
      description: The search and filter query settings.
      properties:
        from:
          default: now-15m
          description: >-
            The minimum time for the requested events. Supports date math and
            regular timestamps in milliseconds.
          example: now-15m
          type: string
        query:
          default: '*'
          description: The search query following the event search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
        to:
          default: now
          description: >-
            The maximum time for the requested events. Supports date math and
            regular timestamps in milliseconds.
          example: now
          type: string
      type: object
    EventsQueryOptions:
      description: >-
        The global query options that are used. Either provide a timezone or a
        time offset but not both,

        otherwise the query fails.
      properties:
        timeOffset:
          description: The time offset to apply to the query in seconds.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: >-
            The timezone can be specified as GMT, UTC, an offset from UTC (like
            UTC+1), or as a Timezone Database identifier (like
            America/New_York).
          example: GMT
          type: string
      type: object
    EventsRequestPage:
      description: Pagination settings.
      properties:
        cursor:
          description: The returned paging point to use to get the next results.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: The maximum number of logs in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    EventsListRequest:
      description: >-
        The object sent with the request to retrieve a list of events from your
        organization.
      properties:
        filter:
          $ref: '#/components/schemas/EventsQueryFilter'
        options:
          $ref: '#/components/schemas/EventsQueryOptions'
        page:
          $ref: '#/components/schemas/EventsRequestPage'
        sort:
          $ref: '#/components/schemas/EventsSort'
      type: object
    IncidentRelatedObject:
      description: Object related to an incident.
      enum:
        - users
        - attachments
      type: string
      x-enum-varnames:
        - USERS
        - ATTACHMENTS
    IncidentFieldAttributesSingleValueType:
      default: dropdown
      description: Type of the single value field definitions.
      enum:
        - dropdown
        - textbox
      example: dropdown
      type: string
      x-enum-varnames:
        - DROPDOWN
        - TEXTBOX
    IncidentFieldAttributesSingleValue:
      description: A field with a single value selected.
      properties:
        type:
          $ref: '#/components/schemas/IncidentFieldAttributesSingleValueType'
        value:
          description: The single value selected for this field.
          example: SEV-1
          nullable: true
          type: string
      type: object
    IncidentFieldAttributesValueType:
      default: multiselect
      description: Type of the multiple value field definitions.
      enum:
        - multiselect
        - textarray
        - metrictag
        - autocomplete
      example: multiselect
      type: string
      x-enum-varnames:
        - MULTISELECT
        - TEXTARRAY
        - METRICTAG
        - AUTOCOMPLETE
    IncidentFieldAttributesMultipleValue:
      description: A field with potentially multiple values selected.
      properties:
        type:
          $ref: '#/components/schemas/IncidentFieldAttributesValueType'
        value:
          description: The multiple values selected for this field.
          example:
            - '1.0'
            - '1.1'
          items:
            description: A value which has been selected for the parent field.
            example: '1.1'
            type: string
          nullable: true
          type: array
      type: object
    IncidentFieldAttributes:
      description: >-
        Dynamic fields for which selections can be made, with field names as
        keys.
      oneOf:
        - $ref: '#/components/schemas/IncidentFieldAttributesSingleValue'
        - $ref: '#/components/schemas/IncidentFieldAttributesMultipleValue'
    IncidentNonDatadogCreator:
      description: Incident's non Datadog creator.
      nullable: true
      properties:
        image_48_px:
          description: Non Datadog creator `48px` image.
          type: string
        name:
          description: Non Datadog creator name.
          type: string
      type: object
    IncidentNotificationHandle:
      description: A notification handle that will be notified at incident creation.
      properties:
        display_name:
          description: The name of the notified handle.
          example: Jane Doe
          type: string
        handle:
          description: >-
            The handle used for the notification. This includes an email
            address, Slack channel, or workflow.
          example: '@test.user@test.com'
          type: string
      type: object
    IncidentSeverity:
      description: The incident severity.
      enum:
        - UNKNOWN
        - SEV-1
        - SEV-2
        - SEV-3
        - SEV-4
        - SEV-5
      example: UNKNOWN
      type: string
      x-enum-varnames:
        - UNKNOWN
        - SEV_1
        - SEV_2
        - SEV_3
        - SEV_4
        - SEV_5
    IncidentResponseAttributes:
      description: The incident's attributes from a response.
      properties:
        archived:
          description: Timestamp of when the incident was archived.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        case_id:
          description: The incident case id.
          format: int64
          nullable: true
          type: integer
        created:
          description: Timestamp when the incident was created.
          format: date-time
          readOnly: true
          type: string
        customer_impact_duration:
          description: >-
            Length of the incident's customer impact in seconds.

            Equals the difference between `customer_impact_start` and
            `customer_impact_end`.
          format: int64
          readOnly: true
          type: integer
        customer_impact_end:
          description: Timestamp when customers were no longer impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impact_scope:
          description: A summary of the impact customers experienced during the incident.
          example: An example customer impact scope
          nullable: true
          type: string
        customer_impact_start:
          description: Timestamp when customers began being impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        detected:
          description: Timestamp when the incident was detected.
          format: date-time
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: A condensed view of the user-defined fields attached to incidents.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        incident_type_uuid:
          description: A unique identifier that represents an incident type.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        modified:
          description: Timestamp when the incident was last modified.
          format: date-time
          readOnly: true
          type: string
        non_datadog_creator:
          $ref: '#/components/schemas/IncidentNonDatadogCreator'
        notification_handles:
          description: >-
            Notification handles that will be notified of the incident during
            update.
          example:
            - display_name: Jane Doe
              handle: '@user@email.com'
            - display_name: Slack Channel
              handle: '@slack-channel'
            - display_name: Incident Workflow
              handle: '@workflow-from-incident'
          items:
            $ref: '#/components/schemas/IncidentNotificationHandle'
          nullable: true
          type: array
        public_id:
          description: The monotonically increasing integer ID for the incident.
          example: 1
          format: int64
          type: integer
        resolved:
          description: >-
            Timestamp when the incident's state was last changed from active or
            stable to resolved or completed.
          format: date-time
          nullable: true
          type: string
        severity:
          $ref: '#/components/schemas/IncidentSeverity'
        state:
          description: The state incident.
          nullable: true
          type: string
        time_to_detect:
          description: >-
            The amount of time in seconds to detect the incident.

            Equals the difference between `customer_impact_start` and
            `detected`.
          format: int64
          readOnly: true
          type: integer
        time_to_internal_response:
          description: >-
            The amount of time in seconds to call incident after detection.
            Equals the difference of `detected` and `created`.
          format: int64
          readOnly: true
          type: integer
        time_to_repair:
          description: >-
            The amount of time in seconds to resolve customer impact after
            detecting the issue. Equals the difference between
            `customer_impact_end` and `detected`.
          format: int64
          readOnly: true
          type: integer
        time_to_resolve:
          description: >-
            The amount of time in seconds to resolve the incident after it was
            created. Equals the difference between `created` and `resolved`.
          format: int64
          readOnly: true
          type: integer
        title:
          description: The title of the incident, which summarizes what happened.
          example: A test incident title
          type: string
        visibility:
          description: The incident visibility status.
          nullable: true
          type: string
      required:
        - title
      type: object
    IncidentAttachmentType:
      default: incident_attachments
      description: The incident attachment resource type.
      enum:
        - incident_attachments
      example: incident_attachments
      type: string
      x-enum-varnames:
        - INCIDENT_ATTACHMENTS
    RelationshipToIncidentAttachmentData:
      description: The attachment relationship data.
      properties:
        id:
          description: A unique identifier that represents the attachment.
          example: 00000000-0000-abcd-1000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentAttachmentType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentAttachment:
      description: A relationship reference for attachments.
      properties:
        data:
          description: An array of incident attachments.
          items:
            $ref: '#/components/schemas/RelationshipToIncidentAttachmentData'
          type: array
      required:
        - data
      type: object
    IncidentImpactsType:
      description: The incident impacts type.
      enum:
        - incident_impacts
      example: incident_impacts
      type: string
      x-enum-varnames:
        - INCIDENT_IMPACTS
    RelationshipToIncidentImpactData:
      description: Relationship to impact object.
      properties:
        id:
          description: A unique identifier that represents the impact.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentImpactsType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentImpacts:
      description: Relationship to impacts.
      properties:
        data:
          description: An array of incident impacts.
          items:
            $ref: '#/components/schemas/RelationshipToIncidentImpactData'
          type: array
      required:
        - data
      type: object
    IncidentIntegrationMetadataType:
      default: incident_integrations
      description: Integration metadata resource type.
      enum:
        - incident_integrations
      example: incident_integrations
      type: string
      x-enum-varnames:
        - INCIDENT_INTEGRATIONS
    RelationshipToIncidentIntegrationMetadataData:
      description: A relationship reference for an integration metadata object.
      example:
        id: 00000000-abcd-0002-0000-000000000000
        type: incident_integrations
      properties:
        id:
          description: A unique identifier that represents the integration metadata.
          example: 00000000-abcd-0001-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentIntegrationMetadatas:
      description: A relationship reference for multiple integration metadata objects.
      example:
        data:
          - id: 00000000-abcd-0005-0000-000000000000
            type: incident_integrations
          - id: 00000000-abcd-0006-0000-000000000000
            type: incident_integrations
      properties:
        data:
          description: Integration metadata relationship array
          example:
            - id: 00000000-abcd-0003-0000-000000000000
              type: incident_integrations
            - id: 00000000-abcd-0004-0000-000000000000
              type: incident_integrations
          items:
            $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadataData'
          type: array
      required:
        - data
      type: object
    IncidentRespondersType:
      description: The incident responders type.
      enum:
        - incident_responders
      example: incident_responders
      type: string
      x-enum-varnames:
        - INCIDENT_RESPONDERS
    RelationshipToIncidentResponderData:
      description: Relationship to impact object.
      properties:
        id:
          description: A unique identifier that represents the responder.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentRespondersType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentResponders:
      description: Relationship to incident responders.
      properties:
        data:
          description: An array of incident responders.
          items:
            $ref: '#/components/schemas/RelationshipToIncidentResponderData'
          type: array
      required:
        - data
      type: object
    IncidentUserDefinedFieldType:
      description: The incident user defined fields type.
      enum:
        - user_defined_field
      example: user_defined_field
      type: string
      x-enum-varnames:
        - USER_DEFINED_FIELD
    RelationshipToIncidentUserDefinedFieldData:
      description: Relationship to impact object.
      properties:
        id:
          description: A unique identifier that represents the responder.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentUserDefinedFieldType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentUserDefinedFields:
      description: Relationship to incident user defined fields.
      properties:
        data:
          description: An array of user defined fields.
          items:
            $ref: '#/components/schemas/RelationshipToIncidentUserDefinedFieldData'
          type: array
      required:
        - data
      type: object
    IncidentResponseRelationships:
      description: The incident's relationships from a response.
      properties:
        attachments:
          $ref: '#/components/schemas/RelationshipToIncidentAttachment'
        commander_user:
          $ref: '#/components/schemas/NullableRelationshipToUser'
        created_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        impacts:
          $ref: '#/components/schemas/RelationshipToIncidentImpacts'
        integrations:
          $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadatas'
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        responders:
          $ref: '#/components/schemas/RelationshipToIncidentResponders'
        user_defined_fields:
          $ref: '#/components/schemas/RelationshipToIncidentUserDefinedFields'
      type: object
    IncidentType:
      default: incidents
      description: Incident resource type.
      enum:
        - incidents
      example: incidents
      type: string
      x-enum-varnames:
        - INCIDENTS
    IncidentResponseData:
      description: Incident data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentResponseAttributes'
        id:
          description: The incident's ID.
          example: 00000000-0000-0000-1234-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentResponseRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - id
        - type
      type: object
    IncidentUserAttributes:
      description: Attributes of user object returned by the API.
      properties:
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        name:
          description: Name of the user.
          nullable: true
          type: string
        uuid:
          description: UUID of the user.
          type: string
      type: object
    IncidentUserData:
      description: User object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentUserAttributes'
        id:
          description: ID of the user.
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    IncidentAttachmentsPostmortemAttributesAttachmentObject:
      description: The postmortem attachment.
      properties:
        documentUrl:
          description: The URL of this notebook attachment.
          example: https://app.datadoghq.com/notebook/123
          type: string
        title:
          description: The title of this postmortem attachment.
          example: Postmortem IR-123
          type: string
      required:
        - documentUrl
        - title
      type: object
    IncidentAttachmentPostmortemAttachmentType:
      default: postmortem
      description: The type of postmortem attachment attributes.
      enum:
        - postmortem
      example: postmortem
      type: string
      x-enum-varnames:
        - POSTMORTEM
    IncidentAttachmentPostmortemAttributes:
      description: The attributes object for a postmortem attachment.
      properties:
        attachment:
          $ref: >-
            #/components/schemas/IncidentAttachmentsPostmortemAttributesAttachmentObject
        attachment_type:
          $ref: '#/components/schemas/IncidentAttachmentPostmortemAttachmentType'
      required:
        - attachment_type
        - attachment
      type: object
    IncidentAttachmentLinkAttributesAttachmentObject:
      description: The link attachment.
      properties:
        documentUrl:
          description: The URL of this link attachment.
          example: https://www.example.com/webstore-failure-runbook
          type: string
        title:
          description: The title of this link attachment.
          example: Runbook for webstore service failures
          type: string
      required:
        - documentUrl
        - title
      type: object
    IncidentAttachmentLinkAttachmentType:
      default: link
      description: The type of link attachment attributes.
      enum:
        - link
      example: link
      type: string
      x-enum-varnames:
        - LINK
    IncidentAttachmentLinkAttributes:
      description: The attributes object for a link attachment.
      properties:
        attachment:
          $ref: >-
            #/components/schemas/IncidentAttachmentLinkAttributesAttachmentObject
        attachment_type:
          $ref: '#/components/schemas/IncidentAttachmentLinkAttachmentType'
        modified:
          description: Timestamp when the incident attachment link was last modified.
          format: date-time
          readOnly: true
          type: string
      required:
        - attachment_type
        - attachment
      type: object
    IncidentAttachmentAttributes:
      description: The attributes object for an attachment.
      oneOf:
        - $ref: '#/components/schemas/IncidentAttachmentPostmortemAttributes'
        - $ref: '#/components/schemas/IncidentAttachmentLinkAttributes'
    IncidentAttachmentRelationships:
      description: The incident attachment's relationships.
      properties:
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    IncidentAttachmentData:
      description: A single incident attachment.
      example:
        attributes:
          attachment:
            documentUrl: ''
            title: Postmortem IR-123
          attachment_type: postmortem
        id: 00000000-abcd-0002-0000-000000000000
        relationships:
          last_modified_by_user:
            data:
              id: 00000000-0000-0000-cccc-000000000000
              type: users
        type: incident_attachments
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentAttachmentAttributes'
        id:
          description: A unique identifier that represents the incident attachment.
          example: 00000000-abcd-0001-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentAttachmentRelationships'
        type:
          $ref: '#/components/schemas/IncidentAttachmentType'
      required:
        - type
        - attributes
        - id
        - relationships
      type: object
    IncidentResponseIncludedItem:
      description: An object related to an incident that is included in the response.
      oneOf:
        - $ref: '#/components/schemas/IncidentUserData'
        - $ref: '#/components/schemas/IncidentAttachmentData'
    IncidentResponseMetaPagination:
      description: Pagination properties.
      properties:
        next_offset:
          description: >-
            The index of the first element in the next page of results. Equal to
            page size added to the current offset.
          example: 1000
          format: int64
          type: integer
        offset:
          description: The index of the first element in the results.
          example: 10
          format: int64
          type: integer
        size:
          description: Maximum size of pages to return.
          example: 1000
          format: int64
          type: integer
      type: object
    IncidentResponseMeta:
      description: The metadata object containing pagination metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/IncidentResponseMetaPagination'
      readOnly: true
      type: object
    IncidentsResponse:
      description: Response with a list of incidents.
      properties:
        data:
          description: An array of incidents.
          example:
            - attributes:
                created: '2020-04-21T15:34:08.627205+00:00'
                creation_idempotency_key: null
                customer_impact_duration: 0
                customer_impact_end: null
                customer_impact_scope: null
                customer_impact_start: null
                customer_impacted: false
                detected: '2020-04-14T00:00:00+00:00'
                incident_type_uuid: 00000000-0000-0000-0000-000000000001
                modified: '2020-09-17T14:16:58.696424+00:00'
                public_id: 1
                resolved: null
                severity: SEV-1
                time_to_detect: 0
                time_to_internal_response: 0
                time_to_repair: 0
                time_to_resolve: 0
                title: Example Incident
              id: 00000000-aaaa-0000-0000-000000000000
              relationships:
                attachments:
                  data:
                    - id: 00000000-9999-0000-0000-000000000000
                      type: incident_attachments
                    - id: 00000000-1234-0000-0000-000000000000
                      type: incident_attachments
                commander_user:
                  data:
                    id: 00000000-0000-0000-cccc-000000000000
                    type: users
                created_by_user:
                  data:
                    id: 00000000-0000-0000-cccc-000000000000
                    type: users
                integrations:
                  data:
                    - id: 00000000-0000-0000-4444-000000000000
                      type: incident_integrations
                    - id: 00000000-0000-0000-5555-000000000000
                      type: incident_integrations
                last_modified_by_user:
                  data:
                    id: 00000000-0000-0000-cccc-000000000000
                    type: users
              type: incidents
            - attributes:
                created: '2020-04-21T15:34:08.627205+00:00'
                creation_idempotency_key: null
                customer_impact_duration: 0
                customer_impact_end: null
                customer_impact_scope: null
                customer_impact_start: null
                customer_impacted: false
                detected: '2020-04-14T00:00:00+00:00'
                incident_type_uuid: 00000000-0000-0000-0000-000000000002
                modified: '2020-09-17T14:16:58.696424+00:00'
                public_id: 2
                resolved: null
                severity: SEV-5
                time_to_detect: 0
                time_to_internal_response: 0
                time_to_repair: 0
                time_to_resolve: 0
                title: Example Incident 2
              id: 00000000-1111-0000-0000-000000000000
              relationships:
                attachments:
                  data:
                    - id: 00000000-9999-0000-0000-000000000000
                      type: incident_attachments
                commander_user:
                  data:
                    id: 00000000-aaaa-0000-0000-000000000000
                    type: users
                created_by_user:
                  data:
                    id: 00000000-aaaa-0000-0000-000000000000
                    type: users
                integrations:
                  data:
                    - id: 00000000-0000-0000-0001-000000000000
                      type: incident_integrations
                    - id: 00000000-0000-0000-0002-000000000000
                      type: incident_integrations
                last_modified_by_user:
                  data:
                    id: 00000000-aaaa-0000-0000-000000000000
                    type: users
              type: incidents
          items:
            $ref: '#/components/schemas/IncidentResponseData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentResponseIncludedItem'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentTimelineCellMarkdownContentType:
      default: markdown
      description: Type of the Markdown timeline cell.
      enum:
        - markdown
      example: markdown
      type: string
      x-enum-varnames:
        - MARKDOWN
    IncidentTimelineCellMarkdownCreateAttributesContent:
      description: The Markdown timeline cell contents.
      properties:
        content:
          description: The Markdown content of the cell.
          example: An example timeline cell message.
          nullable: false
          type: string
      type: object
    IncidentTimelineCellMarkdownCreateAttributes:
      description: Timeline cell data for Markdown timeline cells for a create request.
      properties:
        cell_type:
          $ref: '#/components/schemas/IncidentTimelineCellMarkdownContentType'
        content:
          $ref: >-
            #/components/schemas/IncidentTimelineCellMarkdownCreateAttributesContent
        important:
          default: false
          description: >-
            A flag indicating whether the timeline cell is important and should
            be highlighted.
          example: false
          type: boolean
      required:
        - content
        - cell_type
      type: object
    IncidentTimelineCellCreateAttributes:
      description: The timeline cell's attributes for a create request.
      oneOf:
        - $ref: '#/components/schemas/IncidentTimelineCellMarkdownCreateAttributes'
    IncidentCreateAttributes:
      description: The incident's attributes for a create request.
      properties:
        customer_impact_scope:
          description: >-
            Required if `customer_impacted:"true"`. A summary of the impact
            customers experienced during the incident.
          example: Example customer impact scope
          type: string
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: >-
            A condensed view of the user-defined fields for which to create
            initial selections.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        incident_type_uuid:
          description: >-
            A unique identifier that represents an incident type. The default
            incident type will be used if this property is not provided.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        initial_cells:
          description: >-
            An array of initial timeline cells to be placed at the beginning of
            the incident timeline.
          items:
            $ref: '#/components/schemas/IncidentTimelineCellCreateAttributes'
          type: array
        notification_handles:
          description: >-
            Notification handles that will be notified of the incident at
            creation.
          example:
            - display_name: Jane Doe
              handle: '@user@email.com'
            - display_name: Slack Channel
              handle: '@slack-channel'
            - display_name: Incident Workflow
              handle: '@workflow-from-incident'
          items:
            $ref: '#/components/schemas/IncidentNotificationHandle'
          type: array
        title:
          description: The title of the incident, which summarizes what happened.
          example: A test incident title
          type: string
      required:
        - title
        - customer_impacted
      type: object
    IncidentCreateRelationships:
      description: >-
        The relationships the incident will have with other resources once
        created.
      properties:
        commander_user:
          $ref: '#/components/schemas/NullableRelationshipToUser'
      required:
        - commander_user
      type: object
    IncidentCreateData:
      description: Incident data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentCreateRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - type
        - attributes
      type: object
    IncidentCreateRequest:
      description: Create request for an incident.
      properties:
        data:
          $ref: '#/components/schemas/IncidentCreateData'
      required:
        - data
      type: object
    IncidentResponse:
      description: Response with an incident.
      properties:
        data:
          $ref: '#/components/schemas/IncidentResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentResponseIncludedItem'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentTypeAttributes:
      description: Incident type's attributes.
      properties:
        createdAt:
          description: Timestamp when the incident type was created.
          format: date-time
          readOnly: true
          type: string
        createdBy:
          description: >-
            A unique identifier that represents the user that created the
            incident type.
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        description:
          description: Text that describes the incident type.
          example: >-
            Any incidents that harm (or have the potential to) the
            confidentiality, integrity, or availability of our data.
          type: string
        is_default:
          default: false
          description: >-
            If true, this incident type will be used as the default incident
            type if a type is not specified during the creation of incident
            resources.
          example: false
          type: boolean
        lastModifiedBy:
          description: >-
            A unique identifier that represents the user that last modified the
            incident type.
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        modifiedAt:
          description: Timestamp when the incident type was last modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the incident type.
          example: Security Incident
          type: string
        prefix:
          description: >-
            The string that will be prepended to the incident title across the
            Datadog app.
          example: IR
          readOnly: true
          type: string
      required:
        - name
      type: object
    IncidentTypeType:
      default: incident_types
      description: Incident type resource type.
      enum:
        - incident_types
      example: incident_types
      type: string
      x-enum-varnames:
        - INCIDENT_TYPES
    IncidentTypeObject:
      description: Incident type response data.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTypeAttributes'
        id:
          description: The incident type's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentTypeType'
      required:
        - id
        - type
      type: object
    IncidentTypeListResponse:
      description: Response with a list of incident types.
      properties:
        data:
          description: An array of incident type objects.
          items:
            $ref: '#/components/schemas/IncidentTypeObject'
          type: array
      required:
        - data
      type: object
    IncidentTypeCreateData:
      description: Incident type data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTypeAttributes'
        type:
          $ref: '#/components/schemas/IncidentTypeType'
      required:
        - type
        - attributes
      type: object
    IncidentTypeCreateRequest:
      description: Create request for an incident type.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTypeCreateData'
      required:
        - data
      type: object
    IncidentTypeResponse:
      description: Incident type response data.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTypeObject'
      required:
        - data
      type: object
    IncidentTypeUpdateAttributes:
      description: Incident type's attributes for updates.
      properties:
        createdAt:
          description: Timestamp when the incident type was created.
          format: date-time
          readOnly: true
          type: string
        createdBy:
          description: >-
            A unique identifier that represents the user that created the
            incident type.
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        description:
          description: Text that describes the incident type.
          example: >-
            Any incidents that harm (or have the potential to) the
            confidentiality, integrity, or availability of our data. Note: This
            will notify the security team.
          type: string
        is_default:
          description: >-
            When true, this incident type will be used as the default type when
            an incident type is not specified.
          example: false
          type: boolean
        lastModifiedBy:
          description: >-
            A unique identifier that represents the user that last modified the
            incident type.
          example: 00000000-0000-0000-0000-000000000000
          readOnly: true
          type: string
        modifiedAt:
          description: Timestamp when the incident type was last modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the incident type.
          example: Security Incident
          type: string
        prefix:
          description: >-
            The string that will be prepended to the incident title across the
            Datadog app.
          example: IR
          readOnly: true
          type: string
      type: object
    IncidentTypePatchData:
      description: Incident type data for a patch request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTypeUpdateAttributes'
        id:
          description: The incident type's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentTypeType'
      required:
        - id
        - type
        - attributes
      type: object
    IncidentTypePatchRequest:
      description: Patch request for an incident type.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTypePatchData'
      required:
        - data
      type: object
    IncidentSearchSortOrder:
      description: The ways searched incidents can be sorted.
      enum:
        - created
        - '-created'
      type: string
      x-enum-varnames:
        - CREATED_ASCENDING
        - CREATED_DESCENDING
    IncidentSearchResponseFacetCount:
      description: Count of the facet value appearing in search results.
      example: 5
      format: int32
      maximum: 2147483647
      type: integer
    IncidentSearchResponseUserFacetData:
      description: Facet data for user attributes of an incident.
      properties:
        count:
          $ref: '#/components/schemas/IncidentSearchResponseFacetCount'
        email:
          description: Email of the user.
          example: datadog.user@example.com
          type: string
        handle:
          description: Handle of the user.
          example: '@datadog.user@example.com'
          type: string
        name:
          description: Name of the user.
          example: Datadog User
          type: string
        uuid:
          description: ID of the user.
          example: 773b045d-ccf8-4808-bd3b-955ef6a8c940
          type: string
      type: object
    IncidentSearchResponseNumericFacetDataAggregates:
      description: Aggregate information for numeric incident data.
      properties:
        max:
          description: Maximum value of the numeric aggregates.
          example: 1234
          format: double
          nullable: true
          type: number
        min:
          description: Minimum value of the numeric aggregates.
          example: 20
          format: double
          nullable: true
          type: number
      type: object
    IncidentSearchResponseFieldFacetData:
      description: >-
        Facet value and number of occurrences for a property field of an
        incident.
      properties:
        count:
          $ref: '#/components/schemas/IncidentSearchResponseFacetCount'
        name:
          description: The facet value appearing in search results.
          example: SEV-2
          type: string
      type: object
    IncidentSearchResponsePropertyFieldFacetData:
      description: Facet data for the incident property fields.
      properties:
        aggregates:
          $ref: >-
            #/components/schemas/IncidentSearchResponseNumericFacetDataAggregates
        facets:
          description: Facet data for the property field of an incident.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        name:
          description: Name of the incident property field.
          example: Severity
          type: string
      required:
        - facets
        - name
      type: object
    IncidentSearchResponseNumericFacetData:
      description: Facet data numeric attributes of an incident.
      properties:
        aggregates:
          $ref: >-
            #/components/schemas/IncidentSearchResponseNumericFacetDataAggregates
        name:
          description: Name of the incident property field.
          example: time_to_repair
          type: string
      required:
        - name
        - aggregates
      type: object
    IncidentSearchResponseFacetsData:
      description: Facet data for incidents returned by a search query.
      properties:
        commander:
          description: Facet data for incident commander users.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseUserFacetData'
          type: array
        created_by:
          description: Facet data for incident creator users.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseUserFacetData'
          type: array
        fields:
          description: Facet data for incident property fields.
          items:
            $ref: '#/components/schemas/IncidentSearchResponsePropertyFieldFacetData'
          type: array
        impact:
          description: Facet data for incident impact attributes.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        last_modified_by:
          description: Facet data for incident last modified by users.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseUserFacetData'
          type: array
        postmortem:
          description: Facet data for incident postmortem existence.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        responder:
          description: Facet data for incident responder users.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseUserFacetData'
          type: array
        severity:
          description: Facet data for incident severity attributes.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        state:
          description: Facet data for incident state attributes.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        time_to_repair:
          description: Facet data for incident time to repair metrics.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseNumericFacetData'
          type: array
        time_to_resolve:
          description: Facet data for incident time to resolve metrics.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseNumericFacetData'
          type: array
      type: object
    IncidentSearchResponseIncidentsData:
      description: Incident returned by the search.
      properties:
        data:
          $ref: '#/components/schemas/IncidentResponseData'
      required:
        - data
      type: object
    IncidentSearchResponseAttributes:
      description: Attributes returned by an incident search.
      properties:
        facets:
          $ref: '#/components/schemas/IncidentSearchResponseFacetsData'
        incidents:
          description: Incidents returned by the search.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseIncidentsData'
          type: array
        total:
          description: Number of incidents returned by the search.
          example: 10
          format: int32
          maximum: 2147483647
          type: integer
      required:
        - facets
        - incidents
        - total
      type: object
    IncidentSearchResultsType:
      default: incidents_search_results
      description: Incident search result type.
      enum:
        - incidents_search_results
      example: incidents_search_results
      type: string
      x-enum-varnames:
        - INCIDENTS_SEARCH_RESULTS
    IncidentSearchResponseData:
      description: Data returned by an incident search.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentSearchResponseAttributes'
        type:
          $ref: '#/components/schemas/IncidentSearchResultsType'
      type: object
    IncidentSearchResponseMeta:
      description: The metadata object containing pagination metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/IncidentResponseMetaPagination'
      readOnly: true
      type: object
    IncidentSearchResponse:
      description: Response with incidents and facets.
      properties:
        data:
          $ref: '#/components/schemas/IncidentSearchResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentResponseIncludedItem'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentSearchResponseMeta'
      required:
        - data
      type: object
    IncidentUpdateAttributes:
      description: The incident's attributes for an update request.
      properties:
        customer_impact_end:
          description: Timestamp when customers were no longer impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impact_scope:
          description: A summary of the impact customers experienced during the incident.
          example: Example customer impact scope
          type: string
        customer_impact_start:
          description: Timestamp when customers began being impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        detected:
          description: Timestamp when the incident was detected.
          format: date-time
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: >-
            A condensed view of the user-defined fields for which to update
            selections.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        notification_handles:
          description: >-
            Notification handles that will be notified of the incident during
            update.
          example:
            - display_name: Jane Doe
              handle: '@user@email.com'
            - display_name: Slack Channel
              handle: '@slack-channel'
            - display_name: Incident Workflow
              handle: '@workflow-from-incident'
          items:
            $ref: '#/components/schemas/IncidentNotificationHandle'
          type: array
        title:
          description: The title of the incident, which summarizes what happened.
          example: A test incident title
          type: string
      type: object
    IncidentPostmortemType:
      default: incident_postmortems
      description: Incident postmortem resource type.
      enum:
        - incident_postmortems
      example: incident_postmortems
      type: string
      x-enum-varnames:
        - INCIDENT_POSTMORTEMS
    RelationshipToIncidentPostmortemData:
      description: The postmortem relationship data.
      example:
        id: 00000000-0000-abcd-2000-000000000000
        type: incident_postmortems
      properties:
        id:
          description: A unique identifier that represents the postmortem.
          example: 00000000-0000-abcd-1000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentPostmortemType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentPostmortem:
      description: A relationship reference for postmortems.
      example:
        data:
          id: 00000000-0000-abcd-3000-000000000000
          type: incident_postmortems
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToIncidentPostmortemData'
      required:
        - data
      type: object
    IncidentUpdateRelationships:
      description: The incident's relationships for an update request.
      properties:
        commander_user:
          $ref: '#/components/schemas/NullableRelationshipToUser'
        integrations:
          $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadatas'
        postmortem:
          $ref: '#/components/schemas/RelationshipToIncidentPostmortem'
      type: object
    IncidentUpdateData:
      description: Incident data for an update request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentUpdateAttributes'
        id:
          description: The incident's ID.
          example: 00000000-0000-0000-4567-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentUpdateRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - id
        - type
      type: object
    IncidentUpdateRequest:
      description: Update request for an incident.
      properties:
        data:
          $ref: '#/components/schemas/IncidentUpdateData'
      required:
        - data
      type: object
    IncidentAttachmentRelatedObject:
      description: The object related to an incident attachment.
      enum:
        - users
      type: string
      x-enum-varnames:
        - USERS
    IncidentAttachmentAttachmentType:
      description: The type of the incident attachment attributes.
      enum:
        - link
        - postmortem
      example: link
      type: string
      x-enum-varnames:
        - LINK
        - POSTMORTEM
    IncidentAttachmentsResponseIncludedItem:
      description: An object related to an attachment that is included in the response.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentAttachmentsResponse:
      description: The response object containing an incident's attachments.
      properties:
        data:
          description: An array of incident attachments.
          example:
            - attributes:
                attachment:
                  documentUrl: ''
                  title: Postmortem IR-123
                attachment_type: postmortem
              id: 00000000-abcd-0002-0000-000000000000
              relationships:
                last_modified_by_user:
                  data:
                    id: 00000000-0000-0000-cccc-000000000000
                    type: users
              type: incident_attachments
          items:
            $ref: '#/components/schemas/IncidentAttachmentData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentAttachmentsResponseIncludedItem'
          type: array
      required:
        - data
      type: object
    IncidentAttachmentUpdateAttributes:
      description: Incident attachment attributes.
      oneOf:
        - $ref: '#/components/schemas/IncidentAttachmentPostmortemAttributes'
        - $ref: '#/components/schemas/IncidentAttachmentLinkAttributes'
    IncidentAttachmentUpdateData:
      description: A single incident attachment.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentAttachmentUpdateAttributes'
        id:
          description: A unique identifier that represents the incident attachment.
          example: 00000000-abcd-0001-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentAttachmentType'
      required:
        - type
      type: object
    IncidentAttachmentUpdateRequest:
      description: The update request for an incident's attachments.
      properties:
        data:
          description: >-
            An array of incident attachments. An attachment object without an
            "id" key indicates that you want to

            create that attachment. An attachment object without an "attributes"
            key indicates that you want to

            delete that attachment. An attachment object with both the "id" key
            and a populated "attributes" object

            indicates that you want to update that attachment.
          example:
            - attributes:
                attachment:
                  documentUrl: https://app.datadoghq.com/notebook/123
                  title: Postmortem IR-123
                attachment_type: postmortem
              id: 00000000-abcd-0002-0000-000000000000
              type: incident_attachments
            - attributes:
                attachment:
                  documentUrl: https://www.example.com/webstore-failure-runbook
                  title: Runbook for webstore service failures
                attachment_type: link
              type: incident_attachments
            - id: 00000000-abcd-0003-0000-000000000000
              type: incident_attachments
          items:
            $ref: '#/components/schemas/IncidentAttachmentUpdateData'
          type: array
      required:
        - data
      type: object
    IncidentAttachmentUpdateResponse:
      description: >-
        The response object containing the created or updated incident
        attachments.
      properties:
        data:
          description: >-
            An array of incident attachments. Only the attachments that were
            created or updated by the request are

            returned.
          example:
            - attributes:
                attachment:
                  documentUrl: ''
                  title: Postmortem IR-123
                attachment_type: postmortem
              id: 00000000-abcd-0002-0000-000000000000
              relationships:
                last_modified_by_user:
                  data:
                    id: 00000000-0000-0000-cccc-000000000000
                    type: users
              type: incident_attachments
          items:
            $ref: '#/components/schemas/IncidentAttachmentData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentAttachmentsResponseIncludedItem'
          type: array
      required:
        - data
      type: object
    SlackIntegrationMetadataChannelItem:
      description: Item in the Slack integration metadata channel array.
      properties:
        channel_id:
          description: Slack channel ID.
          example: C0123456789
          type: string
        channel_name:
          description: Name of the Slack channel.
          example: '#example-channel-name'
          type: string
        redirect_url:
          description: URL redirecting to the Slack channel.
          example: https://slack.com/app_redirect?channel=C0123456789&team=T01234567
          type: string
        team_id:
          description: Slack team ID.
          example: T01234567
          type: string
      required:
        - channel_id
        - channel_name
        - redirect_url
      type: object
    SlackIntegrationMetadata:
      description: Incident integration metadata for the Slack integration.
      properties:
        channels:
          description: Array of Slack channels in this integration metadata.
          example: []
          items:
            $ref: '#/components/schemas/SlackIntegrationMetadataChannelItem'
          type: array
      required:
        - channels
      type: object
    JiraIntegrationMetadataIssuesItem:
      description: Item in the Jira integration metadata issue array.
      properties:
        account:
          description: URL of issue's Jira account.
          example: https://example.atlassian.net
          type: string
        issue_key:
          description: Jira issue's issue key.
          example: PROJ-123
          type: string
        issuetype_id:
          description: Jira issue's issue type.
          example: '1000'
          type: string
        project_key:
          description: Jira issue's project keys.
          example: PROJ
          type: string
        redirect_url:
          description: URL redirecting to the Jira issue.
          example: https://example.atlassian.net/browse/PROJ-123
          type: string
      required:
        - project_key
        - account
      type: object
    JiraIntegrationMetadata:
      description: Incident integration metadata for the Jira integration.
      properties:
        issues:
          description: Array of Jira issues in this integration metadata.
          example: []
          items:
            $ref: '#/components/schemas/JiraIntegrationMetadataIssuesItem'
          type: array
      required:
        - issues
      type: object
    MSTeamsIntegrationMetadataTeamsItem:
      description: Item in the Microsoft Teams integration metadata teams array.
      properties:
        ms_channel_id:
          description: Microsoft Teams channel ID.
          example: 19:abc00abcdef00a0abcdef0abcdef0a@thread.tacv2
          type: string
        ms_channel_name:
          description: Microsoft Teams channel name.
          example: incident-0001-example
          type: string
        ms_tenant_id:
          description: Microsoft Teams tenant ID.
          example: 00000000-abcd-0005-0000-000000000000
          type: string
        redirect_url:
          description: URL redirecting to the Microsoft Teams channel.
          example: >-
            https://teams.microsoft.com/l/channel/19%3Aabc00abcdef00a0abcdef0abcdef0a%40thread.tacv2/conversations?groupId=12345678-abcd-dcba-abcd-1234567890ab&tenantId=00000000-abcd-0005-0000-000000000000
          type: string
      required:
        - ms_tenant_id
        - ms_channel_id
        - ms_channel_name
        - redirect_url
      type: object
    MSTeamsIntegrationMetadata:
      description: Incident integration metadata for the Microsoft Teams integration.
      properties:
        teams:
          description: Array of Microsoft Teams in this integration metadata.
          example: []
          items:
            $ref: '#/components/schemas/MSTeamsIntegrationMetadataTeamsItem'
          type: array
      required:
        - teams
      type: object
    IncidentIntegrationMetadataMetadata:
      description: Incident integration metadata's metadata attribute.
      oneOf:
        - $ref: '#/components/schemas/SlackIntegrationMetadata'
        - $ref: '#/components/schemas/JiraIntegrationMetadata'
        - $ref: '#/components/schemas/MSTeamsIntegrationMetadata'
    IncidentIntegrationMetadataAttributes:
      description: Incident integration metadata's attributes for a create request.
      properties:
        created:
          description: Timestamp when the incident todo was created.
          format: date-time
          readOnly: true
          type: string
        incident_id:
          description: UUID of the incident this integration metadata is connected to.
          example: 00000000-aaaa-0000-0000-000000000000
          type: string
        integration_type:
          description: >-
            A number indicating the type of integration this metadata is for. 1
            indicates Slack;

            8 indicates Jira.
          example: 1
          format: int32
          maximum: 9
          type: integer
        metadata:
          $ref: '#/components/schemas/IncidentIntegrationMetadataMetadata'
        modified:
          description: Timestamp when the incident todo was last modified.
          format: date-time
          readOnly: true
          type: string
        status:
          description: >-
            A number indicating the status of this integration metadata. 0
            indicates unknown;

            1 indicates pending; 2 indicates complete; 3 indicates manually
            created;

            4 indicates manually updated; 5 indicates failed.
          format: int32
          maximum: 5
          type: integer
      required:
        - integration_type
        - metadata
      type: object
    IncidentIntegrationRelationships:
      description: The incident's integration relationships from a response.
      properties:
        created_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    IncidentIntegrationMetadataResponseData:
      description: Incident integration metadata from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentIntegrationMetadataAttributes'
        id:
          description: The incident integration metadata's ID.
          example: 00000000-0000-0000-1234-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentIntegrationRelationships'
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - id
        - type
      type: object
    IncidentIntegrationMetadataResponseIncludedItem:
      description: >-
        An object related to an incident integration metadata that is included
        in the response.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentIntegrationMetadataListResponse:
      description: Response with a list of incident integration metadata.
      properties:
        data:
          description: An array of incident integration metadata.
          items:
            $ref: '#/components/schemas/IncidentIntegrationMetadataResponseData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: >-
              #/components/schemas/IncidentIntegrationMetadataResponseIncludedItem
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentIntegrationMetadataCreateData:
      description: Incident integration metadata data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentIntegrationMetadataAttributes'
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - type
        - attributes
      type: object
    IncidentIntegrationMetadataCreateRequest:
      description: Create request for an incident integration metadata.
      properties:
        data:
          $ref: '#/components/schemas/IncidentIntegrationMetadataCreateData'
      required:
        - data
      type: object
    IncidentIntegrationMetadataResponse:
      description: Response with an incident integration metadata.
      properties:
        data:
          $ref: '#/components/schemas/IncidentIntegrationMetadataResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: >-
              #/components/schemas/IncidentIntegrationMetadataResponseIncludedItem
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentIntegrationMetadataPatchData:
      description: Incident integration metadata data for a patch request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentIntegrationMetadataAttributes'
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - type
        - attributes
      type: object
    IncidentIntegrationMetadataPatchRequest:
      description: Patch request for an incident integration metadata.
      properties:
        data:
          $ref: '#/components/schemas/IncidentIntegrationMetadataPatchData'
      required:
        - data
      type: object
    IncidentTodoAssigneeHandle:
      description: Assignee's @-handle.
      example: '@test.user@test.com'
      type: string
    IncidentTodoAnonymousAssigneeSource:
      default: slack
      description: The source of the anonymous assignee.
      enum:
        - slack
        - microsoft_teams
      example: slack
      type: string
      x-enum-varnames:
        - SLACK
        - MICROSOFT_TEAMS
    IncidentTodoAnonymousAssignee:
      description: Anonymous assignee entity.
      properties:
        icon:
          description: URL for assignee's icon.
          example: https://a.slack-edge.com/80588/img/slackbot_48.png
          type: string
        id:
          description: Anonymous assignee's ID.
          example: USLACKBOT
          type: string
        name:
          description: Assignee's name.
          example: Slackbot
          type: string
        source:
          $ref: '#/components/schemas/IncidentTodoAnonymousAssigneeSource'
      required:
        - id
        - icon
        - name
        - source
      type: object
    IncidentTodoAssignee:
      description: A todo assignee.
      example: '@test.user@test.com'
      oneOf:
        - $ref: '#/components/schemas/IncidentTodoAssigneeHandle'
        - $ref: '#/components/schemas/IncidentTodoAnonymousAssignee'
    IncidentTodoAssigneeArray:
      description: Array of todo assignees.
      example:
        - '@test.user@test.com'
      items:
        $ref: '#/components/schemas/IncidentTodoAssignee'
      type: array
    IncidentTodoAttributes:
      description: Incident todo's attributes.
      properties:
        assignees:
          $ref: '#/components/schemas/IncidentTodoAssigneeArray'
        completed:
          description: Timestamp when the todo was completed.
          example: '2023-03-06T22:00:00.000000+00:00'
          nullable: true
          type: string
        content:
          description: The follow-up task's content.
          example: Restore lost data.
          type: string
        created:
          description: Timestamp when the incident todo was created.
          format: date-time
          readOnly: true
          type: string
        due_date:
          description: Timestamp when the todo should be completed by.
          example: '2023-07-10T05:00:00.000000+00:00'
          nullable: true
          type: string
        incident_id:
          description: UUID of the incident this todo is connected to.
          example: 00000000-aaaa-0000-0000-000000000000
          type: string
        modified:
          description: Timestamp when the incident todo was last modified.
          format: date-time
          readOnly: true
          type: string
      required:
        - content
        - assignees
      type: object
    IncidentTodoRelationships:
      description: The incident's relationships from a response.
      properties:
        created_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    IncidentTodoType:
      default: incident_todos
      description: Todo resource type.
      enum:
        - incident_todos
      example: incident_todos
      type: string
      x-enum-varnames:
        - INCIDENT_TODOS
    IncidentTodoResponseData:
      description: Incident todo response data.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTodoAttributes'
        id:
          description: The incident todo's ID.
          example: 00000000-0000-0000-1234-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentTodoRelationships'
        type:
          $ref: '#/components/schemas/IncidentTodoType'
      required:
        - id
        - type
      type: object
    IncidentTodoResponseIncludedItem:
      description: An object related to an incident todo that is included in the response.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentTodoListResponse:
      description: Response with a list of incident todos.
      properties:
        data:
          description: An array of incident todos.
          items:
            $ref: '#/components/schemas/IncidentTodoResponseData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentTodoResponseIncludedItem'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentTodoCreateData:
      description: Incident todo data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTodoAttributes'
        type:
          $ref: '#/components/schemas/IncidentTodoType'
      required:
        - type
        - attributes
      type: object
    IncidentTodoCreateRequest:
      description: Create request for an incident todo.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTodoCreateData'
      required:
        - data
      type: object
    IncidentTodoResponse:
      description: Response with an incident todo.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTodoResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentTodoResponseIncludedItem'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentTodoPatchData:
      description: Incident todo data for a patch request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTodoAttributes'
        type:
          $ref: '#/components/schemas/IncidentTodoType'
      required:
        - type
        - attributes
      type: object
    IncidentTodoPatchRequest:
      description: Patch request for an incident todo.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTodoPatchData'
      required:
        - data
      type: object
    AWSAccountTags:
      description: >-
        Tags to apply to all hosts and metrics reporting for this account.
        Defaults to `[]`.
      items:
        description: Tag in the form `key:value`.
        example: env:prod
        type: string
      nullable: true
      type: array
    AWSAuthConfigKeys:
      description: >-
        AWS Authentication config to integrate your account using an access key
        pair.
      properties:
        access_key_id:
          description: AWS Access Key ID.
          example: AKIAIOSFODNN7EXAMPLE
          type: string
        secret_access_key:
          description: AWS Secret Access Key.
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          minLength: 1
          type: string
          writeOnly: true
      required:
        - access_key_id
      type: object
    AWSAuthConfigRole:
      description: AWS Authentication config to integrate your account using an IAM role.
      properties:
        external_id:
          description: AWS IAM External ID for associated role.
          type: string
        role_name:
          description: AWS IAM Role name.
          example: DatadogIntegrationRole
          maxLength: 576
          minLength: 1
          type: string
      required:
        - role_name
      type: object
    AWSAuthConfig:
      description: AWS Authentication config.
      oneOf:
        - $ref: '#/components/schemas/AWSAuthConfigKeys'
        - $ref: '#/components/schemas/AWSAuthConfigRole'
    AWSAccountID:
      description: AWS Account ID.
      example: '123456789012'
      type: string
    AWSAccountPartition:
      description: >-
        AWS partition your AWS account is scoped to. Defaults to `aws`.

        See
        [Partitions](https://docs.aws.amazon.com/whitepapers/latest/aws-fault-isolation-boundaries/partitions.html)
        in the AWS documentation for more information.
      enum:
        - aws
        - aws-cn
        - aws-us-gov
      example: aws
      type: string
      x-enum-varnames:
        - AWS
        - AWS_CN
        - AWS_US_GOV
    AWSRegionsIncludeAll:
      description: Include all regions. Defaults to `true`.
      properties:
        include_all:
          description: Include all regions.
          example: true
          type: boolean
      required:
        - include_all
      type: object
    AWSRegionsIncludeOnly:
      description: Include only these regions.
      properties:
        include_only:
          description: Include only these regions.
          example:
            - us-east-1
          items:
            example: us-east-1
            type: string
          type: array
      required:
        - include_only
      type: object
    AWSRegions:
      description: AWS Regions to collect data from. Defaults to `include_all`.
      oneOf:
        - $ref: '#/components/schemas/AWSRegionsIncludeAll'
        - $ref: '#/components/schemas/AWSRegionsIncludeOnly'
    AWSLambdaForwarderConfig:
      description: >-
        Log Autosubscription configuration for Datadog Forwarder Lambda
        functions. Automatically set up triggers for existing

        and new logs for some services, ensuring no logs from new resources are
        missed and saving time spent on manual configuration.
      properties:
        lambdas:
          description: >-
            List of Datadog Lambda Log Forwarder ARNs in your AWS account.
            Defaults to `[]`.
          items:
            example: >-
              arn:aws:lambda:us-east-1:123456789012:function:DatadogLambdaLogForwarder
            type: string
          type: array
        sources:
          description: >-
            List of service IDs set to enable automatic log collection. Discover
            the list of available services with the

            [Get list of AWS log ready
            services](https://docs.datadoghq.com/api/latest/aws-logs-integration/#get-list-of-aws-log-ready-services)
            endpoint.
          items:
            example: s3
            type: string
          type: array
      type: object
    AWSLogsConfig:
      description: AWS Logs Collection config.
      properties:
        lambda_forwarder:
          $ref: '#/components/schemas/AWSLambdaForwarderConfig'
      type: object
    AWSNamespaceFiltersExcludeOnly:
      description: >-
        Exclude only these namespaces from metrics collection. Defaults to
        `["AWS/SQS", "AWS/ElasticMapReduce"]`.

        `AWS/SQS` and `AWS/ElasticMapReduce` are excluded by default to reduce
        your AWS CloudWatch costs from `GetMetricData` API calls.
      properties:
        exclude_only:
          description: >-
            Exclude only these namespaces from metrics collection. Defaults to
            `["AWS/SQS", "AWS/ElasticMapReduce"]`.

            `AWS/SQS` and `AWS/ElasticMapReduce` are excluded by default to
            reduce your AWS CloudWatch costs from `GetMetricData` API calls.
          example:
            - AWS/SQS
            - AWS/ElasticMapReduce
          items:
            example: AWS/SQS
            type: string
          type: array
      required:
        - exclude_only
      type: object
    AWSNamespaceFiltersIncludeOnly:
      description: Include only these namespaces.
      properties:
        include_only:
          description: Include only these namespaces.
          example:
            - AWS/EC2
          items:
            example: AWS/EC2
            type: string
          type: array
      required:
        - include_only
      type: object
    AWSNamespaceFilters:
      description: AWS Metrics namespace filters. Defaults to `exclude_only`.
      oneOf:
        - $ref: '#/components/schemas/AWSNamespaceFiltersExcludeOnly'
        - $ref: '#/components/schemas/AWSNamespaceFiltersIncludeOnly'
    AWSNamespaceTagFilter:
      description: >-
        AWS Metrics Collection tag filters list. Defaults to `[]`.

        The array of custom AWS resource tags (in the form `key:value`) defines
        a filter that Datadog uses when collecting metrics from a specified
        service.

        Wildcards, such as `?` (match a single character) and `*` (match
        multiple characters), and exclusion using `!` before the tag are
        supported.

        For EC2, only hosts that match one of the defined tags will be imported
        into Datadog. The rest will be ignored.

        For example, `env:production,instance-type:c?.*,!region:us-east-1`.
      properties:
        namespace:
          description: >-
            The AWS service for which the tag filters defined in `tags` will be
            applied.
          example: AWS/EC2
          type: string
        tags:
          description: >-
            The AWS resource tags to filter on for the service specified by
            `namespace`.
          items:
            description: Tag in the form `key:value`.
            example: datadog:true
            type: string
          nullable: true
          type: array
      type: object
    AWSMetricsConfig:
      description: AWS Metrics Collection config.
      properties:
        automute_enabled:
          description: Enable EC2 automute for AWS metrics. Defaults to `true`.
          example: true
          type: boolean
        collect_cloudwatch_alarms:
          description: Enable CloudWatch alarms collection. Defaults to `false`.
          example: false
          type: boolean
        collect_custom_metrics:
          description: Enable custom metrics collection. Defaults to `false`.
          example: false
          type: boolean
        enabled:
          description: Enable AWS metrics collection. Defaults to `true`.
          example: true
          type: boolean
        namespace_filters:
          $ref: '#/components/schemas/AWSNamespaceFilters'
        tag_filters:
          description: AWS Metrics collection tag filters list. Defaults to `[]`.
          items:
            $ref: '#/components/schemas/AWSNamespaceTagFilter'
          type: array
      type: object
    AWSResourcesConfig:
      description: AWS Resources Collection config.
      properties:
        cloud_security_posture_management_collection:
          description: >-
            Enable Cloud Security Management to scan AWS resources for
            vulnerabilities, misconfigurations, identity risks, and compliance
            violations. Defaults to `false`. Requires `extended_collection` to
            be set to `true`.
          example: false
          type: boolean
        extended_collection:
          description: >-
            Whether Datadog collects additional attributes and configuration
            information about the resources in your AWS account. Defaults to
            `true`. Required for `cloud_security_posture_management_collection`.
          example: true
          type: boolean
      type: object
    XRayServicesIncludeAll:
      description: Include all services.
      properties:
        include_all:
          description: Include all services.
          example: false
          type: boolean
      required:
        - include_all
      type: object
    XRayServicesIncludeOnly:
      description: Include only these services. Defaults to `[]`.
      nullable: true
      properties:
        include_only:
          description: Include only these services.
          example:
            - AWS/AppSync
          items:
            example: AWS/AppSync
            type: string
          type: array
      required:
        - include_only
      type: object
    XRayServicesList:
      description: AWS X-Ray services to collect traces from. Defaults to `include_only`.
      oneOf:
        - $ref: '#/components/schemas/XRayServicesIncludeAll'
        - $ref: '#/components/schemas/XRayServicesIncludeOnly'
    AWSTracesConfig:
      description: AWS Traces Collection config.
      properties:
        xray_services:
          $ref: '#/components/schemas/XRayServicesList'
      type: object
    AWSAccountResponseAttributes:
      description: AWS Account response attributes.
      properties:
        account_tags:
          $ref: '#/components/schemas/AWSAccountTags'
        auth_config:
          $ref: '#/components/schemas/AWSAuthConfig'
        aws_account_id:
          $ref: '#/components/schemas/AWSAccountID'
        aws_partition:
          $ref: '#/components/schemas/AWSAccountPartition'
        aws_regions:
          $ref: '#/components/schemas/AWSRegions'
        created_at:
          description: Timestamp of when the account integration was created.
          format: date-time
          readOnly: true
          type: string
        logs_config:
          $ref: '#/components/schemas/AWSLogsConfig'
        metrics_config:
          $ref: '#/components/schemas/AWSMetricsConfig'
        modified_at:
          description: Timestamp of when the account integration was updated.
          format: date-time
          readOnly: true
          type: string
        resources_config:
          $ref: '#/components/schemas/AWSResourcesConfig'
        traces_config:
          $ref: '#/components/schemas/AWSTracesConfig'
      required:
        - aws_account_id
      type: object
    AWSAccountConfigID:
      description: >-
        Unique Datadog ID of the AWS Account Integration Config.

        To get the config ID for an account, use the [List all AWS
        integrations](https://docs.datadoghq.com/api/latest/aws-integration/#list-all-aws-integrations)

        endpoint and query by AWS Account ID.
      example: 00000000-abcd-0001-0000-000000000000
      type: string
    AWSAccountType:
      default: account
      description: AWS Account resource type.
      enum:
        - account
      example: account
      type: string
      x-enum-varnames:
        - ACCOUNT
    AWSAccountResponseData:
      description: AWS Account response data.
      properties:
        attributes:
          $ref: '#/components/schemas/AWSAccountResponseAttributes'
        id:
          $ref: '#/components/schemas/AWSAccountConfigID'
        type:
          $ref: '#/components/schemas/AWSAccountType'
      required:
        - id
        - type
      type: object
    AWSAccountsResponse:
      description: AWS Accounts response body.
      properties:
        data:
          description: List of AWS Account Integration Configs.
          items:
            $ref: '#/components/schemas/AWSAccountResponseData'
          type: array
      required:
        - data
      type: object
    AWSAccountCreateRequestAttributes:
      description: The AWS Account Integration Config to be created.
      properties:
        account_tags:
          $ref: '#/components/schemas/AWSAccountTags'
        auth_config:
          $ref: '#/components/schemas/AWSAuthConfig'
        aws_account_id:
          $ref: '#/components/schemas/AWSAccountID'
        aws_partition:
          $ref: '#/components/schemas/AWSAccountPartition'
        aws_regions:
          $ref: '#/components/schemas/AWSRegions'
        logs_config:
          $ref: '#/components/schemas/AWSLogsConfig'
        metrics_config:
          $ref: '#/components/schemas/AWSMetricsConfig'
        resources_config:
          $ref: '#/components/schemas/AWSResourcesConfig'
        traces_config:
          $ref: '#/components/schemas/AWSTracesConfig'
      required:
        - aws_account_id
        - aws_partition
        - auth_config
      type: object
    AWSAccountCreateRequestData:
      description: AWS Account Create Request data.
      properties:
        attributes:
          $ref: '#/components/schemas/AWSAccountCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/AWSAccountType'
      required:
        - attributes
        - type
      type: object
    AWSAccountCreateRequest:
      description: AWS Account Create Request body.
      properties:
        data:
          $ref: '#/components/schemas/AWSAccountCreateRequestData'
      required:
        - data
      type: object
    AWSAccountResponse:
      description: AWS Account response body.
      properties:
        data:
          $ref: '#/components/schemas/AWSAccountResponseData'
      required:
        - data
      type: object
    AWSAccountUpdateRequestAttributes:
      description: The AWS Account Integration Config to be updated.
      properties:
        account_tags:
          $ref: '#/components/schemas/AWSAccountTags'
        auth_config:
          $ref: '#/components/schemas/AWSAuthConfig'
        aws_account_id:
          $ref: '#/components/schemas/AWSAccountID'
        aws_partition:
          $ref: '#/components/schemas/AWSAccountPartition'
        aws_regions:
          $ref: '#/components/schemas/AWSRegions'
        logs_config:
          $ref: '#/components/schemas/AWSLogsConfig'
        metrics_config:
          $ref: '#/components/schemas/AWSMetricsConfig'
        resources_config:
          $ref: '#/components/schemas/AWSResourcesConfig'
        traces_config:
          $ref: '#/components/schemas/AWSTracesConfig'
      required:
        - aws_account_id
      type: object
    AWSAccountUpdateRequestData:
      description: AWS Account Update Request data.
      properties:
        attributes:
          $ref: '#/components/schemas/AWSAccountUpdateRequestAttributes'
        id:
          $ref: '#/components/schemas/AWSAccountConfigID'
        type:
          $ref: '#/components/schemas/AWSAccountType'
      required:
        - attributes
        - type
      type: object
    AWSAccountUpdateRequest:
      description: AWS Account Update Request body.
      properties:
        data:
          $ref: '#/components/schemas/AWSAccountUpdateRequestData'
      required:
        - data
      type: object
    AWSNamespacesResponseAttributes:
      description: AWS Namespaces response attributes.
      properties:
        namespaces:
          description: AWS CloudWatch namespace.
          example:
            - AWS/ApiGateway
          items:
            example: AWS/ApiGateway
            type: string
          type: array
      required:
        - namespaces
      type: object
    AWSNamespacesResponseDataType:
      default: namespaces
      description: The `AWSNamespacesResponseData` `type`.
      enum:
        - namespaces
      example: namespaces
      type: string
      x-enum-varnames:
        - NAMESPACES
    AWSNamespacesResponseData:
      description: AWS Namespaces response data.
      properties:
        attributes:
          $ref: '#/components/schemas/AWSNamespacesResponseAttributes'
        id:
          default: namespaces
          description: The `AWSNamespacesResponseData` `id`.
          example: namespaces
          type: string
        type:
          $ref: '#/components/schemas/AWSNamespacesResponseDataType'
      required:
        - id
        - type
      type: object
    AWSNamespacesResponse:
      description: AWS Namespaces response body.
      properties:
        data:
          $ref: '#/components/schemas/AWSNamespacesResponseData'
      required:
        - data
      type: object
    AWSNewExternalIDResponseAttributes:
      description: AWS External ID response body.
      properties:
        external_id:
          description: AWS IAM External ID for associated role.
          example: acb8f6b8a844443dbb726d07dcb1a870
          type: string
      required:
        - external_id
      type: object
    AWSNewExternalIDResponseDataType:
      default: external_id
      description: The `AWSNewExternalIDResponseData` `type`.
      enum:
        - external_id
      example: external_id
      type: string
      x-enum-varnames:
        - EXTERNAL_ID
    AWSNewExternalIDResponseData:
      description: AWS External ID response body.
      properties:
        attributes:
          $ref: '#/components/schemas/AWSNewExternalIDResponseAttributes'
        id:
          default: external_id
          description: The `AWSNewExternalIDResponseData` `id`.
          example: external_id
          type: string
        type:
          $ref: '#/components/schemas/AWSNewExternalIDResponseDataType'
      required:
        - id
        - type
      type: object
    AWSNewExternalIDResponse:
      description: AWS External ID response body.
      properties:
        data:
          $ref: '#/components/schemas/AWSNewExternalIDResponseData'
      required:
        - data
      type: object
    AWSLogsServicesResponseAttributes:
      description: AWS Logs Services response body
      properties:
        logs_services:
          description: List of AWS services that can send logs to Datadog
          example:
            - s3
          items:
            example: s3
            type: string
          type: array
      required:
        - logs_services
      type: object
    AWSLogsServicesResponseDataType:
      default: logs_services
      description: The `AWSLogsServicesResponseData` `type`.
      enum:
        - logs_services
      example: logs_services
      type: string
      x-enum-varnames:
        - LOGS_SERVICES
    AWSLogsServicesResponseData:
      description: AWS Logs Services response body
      properties:
        attributes:
          $ref: '#/components/schemas/AWSLogsServicesResponseAttributes'
        id:
          default: logs_services
          description: The `AWSLogsServicesResponseData` `id`.
          example: logs_services
          type: string
        type:
          $ref: '#/components/schemas/AWSLogsServicesResponseDataType'
      required:
        - id
        - type
      type: object
    AWSLogsServicesResponse:
      description: AWS Logs Services response body
      properties:
        data:
          $ref: '#/components/schemas/AWSLogsServicesResponseData'
      required:
        - data
      type: object
    GCPMetricNamespaceConfig:
      description: Configuration for a GCP metric namespace.
      properties:
        disabled:
          default: false
          description: >-
            When disabled, Datadog does not collect metrics that are related to
            this GCP metric namespace.
          example: true
          type: boolean
        id:
          description: The id of the GCP metric namespace.
          example: aiplatform
          type: string
      type: object
    GCPSTSServiceAccountAttributes:
      description: Attributes associated with your service account.
      properties:
        account_tags:
          description: >-
            Tags to be associated with GCP metrics and service checks from your
            account.
          items:
            description: Account Level Tag
            type: string
          type: array
        automute:
          description: Silence monitors for expected GCE instance shutdowns.
          type: boolean
        client_email:
          description: Your service account email address.
          example: datadog-service-account@test-project.iam.gserviceaccount.com
          type: string
        cloud_run_revision_filters:
          description: >-
            List of filters to limit the Cloud Run revisions that are pulled
            into Datadog by using tags.

            Only Cloud Run revision resources that apply to specified filters
            are imported into Datadog.
          example:
            - $KEY:$VALUE
          items:
            description: Cloud Run Filters
            type: string
          type: array
        host_filters:
          description: Your Host Filters.
          items:
            description: Host Filters
            type: string
          type: array
        is_cspm_enabled:
          description: >-
            When enabled, Datadog will activate the Cloud Security Monitoring
            product for this service account. Note: This requires
            resource_collection_enabled to be set to true.
          type: boolean
        is_per_project_quota_enabled:
          default: false
          description: >-
            When enabled, Datadog applies the `X-Goog-User-Project` header,
            attributing Google Cloud billing and quota usage to the project
            being monitored rather than the default service account project.
          example: true
          type: boolean
        is_resource_change_collection_enabled:
          default: false
          description: >-
            When enabled, Datadog scans for all resource change data in your
            Google Cloud environment.
          example: true
          type: boolean
        is_security_command_center_enabled:
          default: false
          description: >-
            When enabled, Datadog will attempt to collect Security Command
            Center Findings. Note: This requires additional permissions on the
            service account.
          example: true
          type: boolean
        metric_namespace_configs:
          description: Configurations for GCP metric namespaces.
          example:
            - disabled: true
              id: aiplatform
          items:
            $ref: '#/components/schemas/GCPMetricNamespaceConfig'
          type: array
        resource_collection_enabled:
          description: >-
            When enabled, Datadog scans for all resources in your GCP
            environment.
          type: boolean
      type: object
    GCPServiceAccountMeta:
      description: Additional information related to your service account.
      properties:
        accessible_projects:
          description: The current list of projects accessible from your service account.
          items:
            description: List of GCP projects.
            type: string
          type: array
      type: object
    GCPServiceAccountType:
      default: gcp_service_account
      description: The type of account.
      enum:
        - gcp_service_account
      example: gcp_service_account
      type: string
      x-enum-varnames:
        - GCP_SERVICE_ACCOUNT
    GCPSTSServiceAccount:
      description: Info on your service account.
      properties:
        attributes:
          $ref: '#/components/schemas/GCPSTSServiceAccountAttributes'
        id:
          description: Your service account's unique ID.
          example: d291291f-12c2-22g4-j290-123456678897
          type: string
        meta:
          $ref: '#/components/schemas/GCPServiceAccountMeta'
        type:
          $ref: '#/components/schemas/GCPServiceAccountType'
      type: object
    GCPSTSServiceAccountsResponse:
      description: Object containing all your STS enabled accounts.
      properties:
        data:
          description: Array of GCP STS enabled service accounts.
          items:
            $ref: '#/components/schemas/GCPSTSServiceAccount'
          type: array
      type: object
    GCPSTSServiceAccountData:
      description: Additional metadata on your generated service account.
      properties:
        attributes:
          $ref: '#/components/schemas/GCPSTSServiceAccountAttributes'
        type:
          $ref: '#/components/schemas/GCPServiceAccountType'
      type: object
    GCPSTSServiceAccountCreateRequest:
      description: Data on your newly generated service account.
      properties:
        data:
          $ref: '#/components/schemas/GCPSTSServiceAccountData'
      type: object
    GCPSTSServiceAccountResponse:
      description: The account creation response.
      properties:
        data:
          $ref: '#/components/schemas/GCPSTSServiceAccount'
      type: object
    GCPSTSServiceAccountUpdateRequestData:
      description: Data on your service account.
      properties:
        attributes:
          $ref: '#/components/schemas/GCPSTSServiceAccountAttributes'
        id:
          description: Your service account's unique ID.
          example: d291291f-12c2-22g4-j290-123456678897
          type: string
        type:
          $ref: '#/components/schemas/GCPServiceAccountType'
      type: object
    GCPSTSServiceAccountUpdateRequest:
      description: Service account info.
      properties:
        data:
          $ref: '#/components/schemas/GCPSTSServiceAccountUpdateRequestData'
      type: object
    GCPSTSDelegateAccountAttributes:
      description: Your delegate account attributes.
      properties:
        delegate_account_email:
          description: Your organization's Datadog principal email address.
          example: >-
            ddgci-1a19n28hb1a812221893@datadog-gci-sts-us5-prod.iam.gserviceaccount.com
          type: string
      type: object
    GCPSTSDelegateAccountType:
      default: gcp_sts_delegate
      description: The type of account.
      enum:
        - gcp_sts_delegate
      example: gcp_sts_delegate
      type: string
      x-enum-varnames:
        - GCP_STS_DELEGATE
    GCPSTSDelegateAccount:
      description: Datadog principal service account info.
      properties:
        attributes:
          $ref: '#/components/schemas/GCPSTSDelegateAccountAttributes'
        id:
          description: The ID of the delegate service account.
          example: >-
            ddgci-1a19n28hb1a812221893@datadog-gci-sts-us5-prod.iam.gserviceaccount.com
          type: string
        type:
          $ref: '#/components/schemas/GCPSTSDelegateAccountType'
      type: object
    GCPSTSDelegateAccountResponse:
      description: Your delegate service account response data.
      properties:
        data:
          $ref: '#/components/schemas/GCPSTSDelegateAccount'
      type: object
    MicrosoftTeamsChannelInfoResponseAttributes:
      description: Channel attributes.
      properties:
        is_primary:
          description: Indicates if this is the primary channel.
          example: true
          maxLength: 255
          type: boolean
        team_id:
          description: Team id.
          example: 00000000-0000-0000-0000-000000000000
          maxLength: 255
          type: string
        tenant_id:
          description: Tenant id.
          example: 00000000-0000-0000-0000-000000000001
          maxLength: 255
          type: string
      type: object
    MicrosoftTeamsChannelInfoType:
      default: ms-teams-channel-info
      description: Channel info resource type.
      enum:
        - ms-teams-channel-info
      example: ms-teams-channel-info
      type: string
      x-enum-varnames:
        - MS_TEAMS_CHANNEL_INFO
    MicrosoftTeamsChannelInfoResponseData:
      description: Channel data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/MicrosoftTeamsChannelInfoResponseAttributes'
        id:
          description: The ID of the channel.
          example: 19:b41k24b14bn1nwffkernfkwrnfneubgkr@thread.tacv2
          maxLength: 255
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/MicrosoftTeamsChannelInfoType'
      type: object
    MicrosoftTeamsGetChannelByNameResponse:
      description: Response with channel, team, and tenant ID information.
      properties:
        data:
          $ref: '#/components/schemas/MicrosoftTeamsChannelInfoResponseData'
      type: object
    MicrosoftTeamsTenantBasedHandleInfoResponseAttributes:
      description: Tenant-based handle attributes.
      properties:
        channel_id:
          description: Channel id.
          example: fake-channel-id
          maxLength: 255
          type: string
        channel_name:
          description: Channel name.
          example: fake-channel-name
          maxLength: 255
          type: string
        name:
          description: Tenant-based handle name.
          example: fake-handle-name
          maxLength: 255
          type: string
        team_id:
          description: Team id.
          example: 00000000-0000-0000-0000-000000000000
          maxLength: 255
          type: string
        team_name:
          description: Team name.
          example: fake-team-name
          maxLength: 255
          type: string
        tenant_id:
          description: Tenant id.
          example: 00000000-0000-0000-0000-000000000001
          maxLength: 255
          type: string
        tenant_name:
          description: Tenant name.
          example: fake-tenant-name
          maxLength: 255
          type: string
      type: object
    MicrosoftTeamsTenantBasedHandleInfoType:
      default: ms-teams-tenant-based-handle-info
      description: Tenant-based handle resource type.
      enum:
        - ms-teams-tenant-based-handle-info
      example: ms-teams-tenant-based-handle-info
      type: string
      x-enum-varnames:
        - MS_TEAMS_TENANT_BASED_HANDLE_INFO
    MicrosoftTeamsTenantBasedHandleInfoResponseData:
      description: Tenant-based handle data from a response.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/MicrosoftTeamsTenantBasedHandleInfoResponseAttributes
        id:
          description: The ID of the tenant-based handle.
          example: 596da4af-0563-4097-90ff-07230c3f9db3
          maxLength: 100
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleInfoType'
      type: object
    MicrosoftTeamsTenantBasedHandlesResponse:
      description: Response with a list of tenant-based handles.
      properties:
        data:
          description: An array of tenant-based handles.
          example:
            - attributes:
                channelId: 19:b41k24b14bn1nwffkernfkwrnfneubgkr@thread.tacv2
                channelName: General
                name: general-handle
                teamId: 00000000-0000-0000-0000-000000000000
                teamName: Example Team
                tenantId: 00000000-0000-0000-0000-000000000001
                tenantName: Company, Inc.
              id: 596da4af-0563-4097-90ff-07230c3f9db3
              type: ms-teams-tenant-based-handle-info
            - attributes:
                channelId: 19:b41k24b14bn1nwffkernfkwrnfneubgk1@thread.tacv2
                channelName: General2
                name: general-handle-2
                teamId: 00000000-0000-0000-0000-000000000002
                teamName: Example Team 2
                tenantId: 00000000-0000-0000-0000-000000000003
                tenantName: Company, Inc.
              id: 596da4af-0563-4097-90ff-07230c3f9db4
              type: ms-teams-tenant-based-handle-info
          items:
            $ref: >-
              #/components/schemas/MicrosoftTeamsTenantBasedHandleInfoResponseData
          type: array
      required:
        - data
      type: object
    MicrosoftTeamsTenantBasedHandleRequestAttributes:
      description: Tenant-based handle attributes.
      properties:
        channel_id:
          description: Channel id.
          example: fake-channel-id
          maxLength: 255
          type: string
        name:
          description: Tenant-based handle name.
          example: fake-handle-name
          maxLength: 255
          type: string
        team_id:
          description: Team id.
          example: 00000000-0000-0000-0000-000000000000
          maxLength: 255
          type: string
        tenant_id:
          description: Tenant id.
          example: 00000000-0000-0000-0000-000000000001
          maxLength: 255
          type: string
      required:
        - name
        - channel_id
        - team_id
        - tenant_id
      type: object
    MicrosoftTeamsTenantBasedHandleType:
      default: tenant-based-handle
      description: Specifies the tenant-based handle resource type.
      enum:
        - tenant-based-handle
      example: tenant-based-handle
      type: string
      x-enum-varnames:
        - TENANT_BASED_HANDLE
    MicrosoftTeamsTenantBasedHandleRequestData:
      description: Tenant-based handle data from a response.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/MicrosoftTeamsTenantBasedHandleRequestAttributes
        type:
          $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleType'
      required:
        - type
        - attributes
      type: object
    MicrosoftTeamsCreateTenantBasedHandleRequest:
      description: Create tenant-based handle request.
      properties:
        data:
          $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleRequestData'
      required:
        - data
      type: object
    MicrosoftTeamsTenantBasedHandleAttributes:
      description: Tenant-based handle attributes.
      properties:
        channel_id:
          description: Channel id.
          example: fake-channel-id
          maxLength: 255
          type: string
        name:
          description: Tenant-based handle name.
          example: fake-handle-name
          maxLength: 255
          type: string
        team_id:
          description: Team id.
          example: 00000000-0000-0000-0000-000000000000
          maxLength: 255
          type: string
        tenant_id:
          description: Tenant id.
          example: 00000000-0000-0000-0000-000000000001
          maxLength: 255
          type: string
      type: object
    MicrosoftTeamsTenantBasedHandleResponseData:
      description: Tenant-based handle data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleAttributes'
        id:
          description: The ID of the tenant-based handle.
          example: 596da4af-0563-4097-90ff-07230c3f9db3
          maxLength: 100
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleType'
      type: object
    MicrosoftTeamsTenantBasedHandleResponse:
      description: Response of a tenant-based handle.
      properties:
        data:
          $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleResponseData'
      required:
        - data
      type: object
    MicrosoftTeamsUpdateTenantBasedHandleRequestData:
      description: Tenant-based handle data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleAttributes'
        type:
          $ref: '#/components/schemas/MicrosoftTeamsTenantBasedHandleType'
      required:
        - type
        - attributes
      type: object
    MicrosoftTeamsUpdateTenantBasedHandleRequest:
      description: Update tenant-based handle request.
      properties:
        data:
          $ref: >-
            #/components/schemas/MicrosoftTeamsUpdateTenantBasedHandleRequestData
      required:
        - data
      type: object
    MicrosoftTeamsWorkflowsWebhookResponseAttributes:
      description: Workflows Webhook handle attributes.
      properties:
        name:
          description: Workflows Webhook handle name.
          example: fake-handle-name
          maxLength: 255
          type: string
      type: object
    MicrosoftTeamsWorkflowsWebhookHandleType:
      default: workflows-webhook-handle
      description: Specifies the Workflows webhook handle resource type.
      enum:
        - workflows-webhook-handle
      example: workflows-webhook-handle
      type: string
      x-enum-varnames:
        - WORKFLOWS_WEBHOOK_HANDLE
    MicrosoftTeamsWorkflowsWebhookHandleResponseData:
      description: Workflows Webhook handle data from a response.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/MicrosoftTeamsWorkflowsWebhookResponseAttributes
        id:
          description: The ID of the Workflows webhook handle.
          example: 596da4af-0563-4097-90ff-07230c3f9db3
          maxLength: 100
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleType'
      type: object
    MicrosoftTeamsWorkflowsWebhookHandlesResponse:
      description: Response with a list of Workflows webhook handles.
      properties:
        data:
          description: An array of Workflows webhook handles.
          example:
            - attributes:
                name: general-handle
              id: 596da4af-0563-4097-90ff-07230c3f9db3
              type: workflows-webhook-handle
            - attributes:
                name: general-handle-2
              id: 596da4af-0563-4097-90ff-07230c3f9db4
              type: workflows-webhook-handle
          items:
            $ref: >-
              #/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleResponseData
          type: array
      required:
        - data
      type: object
    MicrosoftTeamsWorkflowsWebhookHandleRequestAttributes:
      description: Workflows Webhook handle attributes.
      properties:
        name:
          description: Workflows Webhook handle name.
          example: fake-handle-name
          maxLength: 255
          type: string
        url:
          description: Workflows Webhook URL.
          example: https://fake.url.com
          maxLength: 255
          type: string
      required:
        - name
        - url
      type: object
    MicrosoftTeamsWorkflowsWebhookHandleRequestData:
      description: Workflows Webhook handle data from a response.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleRequestAttributes
        type:
          $ref: '#/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleType'
      required:
        - type
        - attributes
      type: object
    MicrosoftTeamsCreateWorkflowsWebhookHandleRequest:
      description: Create Workflows webhook handle request.
      properties:
        data:
          $ref: '#/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleRequestData'
      required:
        - data
      type: object
    MicrosoftTeamsWorkflowsWebhookHandleResponse:
      description: Response of a Workflows webhook handle.
      properties:
        data:
          $ref: >-
            #/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleResponseData
      required:
        - data
      type: object
    MicrosoftTeamsWorkflowsWebhookHandleAttributes:
      description: Workflows Webhook handle attributes.
      properties:
        name:
          description: Workflows Webhook handle name.
          example: fake-handle-name
          maxLength: 255
          type: string
        url:
          description: Workflows Webhook URL.
          example: https://fake.url.com
          maxLength: 255
          type: string
      type: object
    MicrosoftTeamsUpdateWorkflowsWebhookHandleRequestData:
      description: Workflows Webhook handle data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleAttributes'
        type:
          $ref: '#/components/schemas/MicrosoftTeamsWorkflowsWebhookHandleType'
      required:
        - type
        - attributes
      type: object
    MicrosoftTeamsUpdateWorkflowsWebhookHandleRequest:
      description: Update Workflows webhook handle request.
      properties:
        data:
          $ref: >-
            #/components/schemas/MicrosoftTeamsUpdateWorkflowsWebhookHandleRequestData
      required:
        - data
      type: object
    OpsgenieServiceRegionType:
      description: The region for the Opsgenie service.
      enum:
        - us
        - eu
        - custom
      example: us
      type: string
      x-enum-varnames:
        - US
        - EU
        - CUSTOM
    OpsgenieServiceResponseAttributes:
      description: The attributes from an Opsgenie service response.
      properties:
        custom_url:
          description: The custom URL for a custom region.
          example: null
          nullable: true
          type: string
        name:
          description: The name for the Opsgenie service.
          example: fake-opsgenie-service-name
          maxLength: 100
          type: string
        region:
          $ref: '#/components/schemas/OpsgenieServiceRegionType'
      type: object
    OpsgenieServiceType:
      default: opsgenie-service
      description: Opsgenie service resource type.
      enum:
        - opsgenie-service
      example: opsgenie-service
      type: string
      x-enum-varnames:
        - OPSGENIE_SERVICE
    OpsgenieServiceResponseData:
      description: Opsgenie service data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/OpsgenieServiceResponseAttributes'
        id:
          description: The ID of the Opsgenie service.
          example: 596da4af-0563-4097-90ff-07230c3f9db3
          maxLength: 100
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/OpsgenieServiceType'
      required:
        - id
        - type
        - attributes
      type: object
    OpsgenieServicesResponse:
      description: Response with a list of Opsgenie services.
      properties:
        data:
          description: An array of Opsgenie services.
          example:
            - attributes:
                custom_url: null
                name: fake-opsgenie-service-name
                region: us
              id: 596da4af-0563-4097-90ff-07230c3f9db3
              type: opsgenie-service
            - attributes:
                custom_url: null
                name: fake-opsgenie-service-name-2
                region: eu
              id: 0d2937f1-b561-44fa-914a-99910f848014
              type: opsgenie-service
          items:
            $ref: '#/components/schemas/OpsgenieServiceResponseData'
          type: array
      required:
        - data
      type: object
    OpsgenieServiceCreateAttributes:
      description: The Opsgenie service attributes for a create request.
      properties:
        custom_url:
          description: The custom URL for a custom region.
          example: https://example.com
          type: string
        name:
          description: The name for the Opsgenie service.
          example: fake-opsgenie-service-name
          maxLength: 100
          type: string
        opsgenie_api_key:
          description: The Opsgenie API key for your Opsgenie service.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        region:
          $ref: '#/components/schemas/OpsgenieServiceRegionType'
      required:
        - name
        - opsgenie_api_key
        - region
      type: object
    OpsgenieServiceCreateData:
      description: Opsgenie service data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/OpsgenieServiceCreateAttributes'
        type:
          $ref: '#/components/schemas/OpsgenieServiceType'
      required:
        - type
        - attributes
      type: object
    OpsgenieServiceCreateRequest:
      description: Create request for an Opsgenie service.
      properties:
        data:
          $ref: '#/components/schemas/OpsgenieServiceCreateData'
      required:
        - data
      type: object
    OpsgenieServiceResponse:
      description: Response of an Opsgenie service.
      properties:
        data:
          $ref: '#/components/schemas/OpsgenieServiceResponseData'
      required:
        - data
      type: object
    OpsgenieServiceUpdateAttributes:
      description: The Opsgenie service attributes for an update request.
      properties:
        custom_url:
          description: The custom URL for a custom region.
          example: https://example.com
          nullable: true
          type: string
        name:
          description: The name for the Opsgenie service.
          example: fake-opsgenie-service-name
          maxLength: 100
          type: string
        opsgenie_api_key:
          description: The Opsgenie API key for your Opsgenie service.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        region:
          $ref: '#/components/schemas/OpsgenieServiceRegionType'
      type: object
    OpsgenieServiceUpdateData:
      description: Opsgenie service for an update request.
      properties:
        attributes:
          $ref: '#/components/schemas/OpsgenieServiceUpdateAttributes'
        id:
          description: The ID of the Opsgenie service.
          example: 596da4af-0563-4097-90ff-07230c3f9db3
          maxLength: 100
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/OpsgenieServiceType'
      required:
        - id
        - type
        - attributes
      type: object
    OpsgenieServiceUpdateRequest:
      description: Update request for an Opsgenie service.
      properties:
        data:
          $ref: '#/components/schemas/OpsgenieServiceUpdateData'
      required:
        - data
      type: object
    CloudflareAccountResponseAttributes:
      description: Attributes object of a Cloudflare account.
      properties:
        email:
          description: The email associated with the Cloudflare account.
          example: test-email@example.com
          type: string
        name:
          description: The name of the Cloudflare account.
          example: test-name
          type: string
        resources:
          description: >-
            An allowlist of resources, such as `web`, `dns`, `lb` (load
            balancer), `worker`, that restricts pulling metrics from those
            resources.
          example:
            - web
            - dns
            - lb
            - worker
          items:
            type: string
          type: array
        zones:
          description: An allowlist of zones to restrict pulling metrics for.
          example:
            - zone_id_1
            - zone_id_2
          items:
            type: string
          type: array
      required:
        - name
      type: object
    CloudflareAccountType:
      default: cloudflare-accounts
      description: The JSON:API type for this API. Should always be `cloudflare-accounts`.
      enum:
        - cloudflare-accounts
      example: cloudflare-accounts
      type: string
      x-enum-varnames:
        - CLOUDFLARE_ACCOUNTS
    CloudflareAccountResponseData:
      description: Data object of a Cloudflare account.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudflareAccountResponseAttributes'
        id:
          description: The ID of the Cloudflare account, a hash of the account name.
          example: c1a8e059bfd1e911cf10b626340c9a54
          type: string
        type:
          $ref: '#/components/schemas/CloudflareAccountType'
      required:
        - attributes
        - id
        - type
      type: object
    CloudflareAccountsResponse:
      description: The expected response schema when getting Cloudflare accounts.
      properties:
        data:
          description: The JSON:API data schema.
          items:
            $ref: '#/components/schemas/CloudflareAccountResponseData'
          type: array
      type: object
    CloudflareAccountCreateRequestAttributes:
      description: Attributes object for creating a Cloudflare account.
      properties:
        api_key:
          description: The API key (or token) for the Cloudflare account.
          example: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          type: string
        email:
          description: >-
            The email associated with the Cloudflare account. If an API key is
            provided (and not a token), this field is also required.
          example: test-email@example.com
          type: string
        name:
          description: The name of the Cloudflare account.
          example: test-name
          type: string
        resources:
          description: >-
            An allowlist of resources to restrict pulling metrics for including
            `'web', 'dns', 'lb' (load balancer), 'worker'`.
          example:
            - web
            - dns
            - lb
            - worker
          items:
            type: string
          type: array
        zones:
          description: An allowlist of zones to restrict pulling metrics for.
          example:
            - zone_id_1
            - zone_id_2
          items:
            type: string
          type: array
      required:
        - api_key
        - name
      type: object
    CloudflareAccountCreateRequestData:
      description: Data object for creating a Cloudflare account.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudflareAccountCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/CloudflareAccountType'
      required:
        - attributes
        - type
      type: object
    CloudflareAccountCreateRequest:
      description: Payload schema when adding a Cloudflare account.
      properties:
        data:
          $ref: '#/components/schemas/CloudflareAccountCreateRequestData'
      required:
        - data
      type: object
    CloudflareAccountResponse:
      description: The expected response schema when getting a Cloudflare account.
      properties:
        data:
          $ref: '#/components/schemas/CloudflareAccountResponseData'
      type: object
    CloudflareAccountUpdateRequestAttributes:
      description: Attributes object for updating a Cloudflare account.
      properties:
        api_key:
          description: The API key of the Cloudflare account.
          example: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          type: string
        email:
          description: >-
            The email associated with the Cloudflare account. If an API key is
            provided (and not a token), this field is also required.
          example: test-email@example.com
          type: string
        name:
          description: The name of the Cloudflare account.
          type: string
        resources:
          description: >-
            An allowlist of resources to restrict pulling metrics for including
            `'web', 'dns', 'lb' (load balancer), 'worker'`.
          example:
            - web
            - dns
            - lb
            - worker
          items:
            type: string
          type: array
        zones:
          description: An allowlist of zones to restrict pulling metrics for.
          example:
            - zone_id_1
            - zone_id_2
          items:
            type: string
          type: array
      required:
        - api_key
      type: object
    CloudflareAccountUpdateRequestData:
      description: Data object for updating a Cloudflare account.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudflareAccountUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/CloudflareAccountType'
      type: object
    CloudflareAccountUpdateRequest:
      description: Payload schema when updating a Cloudflare account.
      properties:
        data:
          $ref: '#/components/schemas/CloudflareAccountUpdateRequestData'
      required:
        - data
      type: object
    ConfluentResourceResponseAttributes:
      description: Model representation of a Confluent Cloud resource.
      properties:
        enable_custom_metrics:
          default: false
          description: >-
            Enable the `custom.consumer_lag_offset` metric, which contains extra
            metric tags.
          example: false
          type: boolean
        id:
          description: The ID associated with the Confluent resource.
          example: resource_id_abc123
          type: string
        resource_type:
          description: >-
            The resource type of the Resource. Can be `kafka`, `connector`,
            `ksql`, or `schema_registry`.
          example: kafka
          type: string
        tags:
          description: >-
            A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
            - myTag
            - myTag2:myValue
          items:
            type: string
          type: array
      required:
        - resource_type
      type: object
    ConfluentAccountResponseAttributes:
      description: The attributes of a Confluent account.
      properties:
        api_key:
          description: The API key associated with your Confluent account.
          example: TESTAPIKEY123
          type: string
        resources:
          description: A list of Confluent resources associated with the Confluent account.
          items:
            $ref: '#/components/schemas/ConfluentResourceResponseAttributes'
          type: array
        tags:
          description: >-
            A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
            - myTag
            - myTag2:myValue
          items:
            type: string
          type: array
      required:
        - api_key
      type: object
    ConfluentAccountType:
      default: confluent-cloud-accounts
      description: >-
        The JSON:API type for this API. Should always be
        `confluent-cloud-accounts`.
      enum:
        - confluent-cloud-accounts
      example: confluent-cloud-accounts
      type: string
      x-enum-varnames:
        - CONFLUENT_CLOUD_ACCOUNTS
    ConfluentAccountResponseData:
      description: An API key and API secret pair that represents a Confluent account.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentAccountResponseAttributes'
        id:
          description: A randomly generated ID associated with a Confluent account.
          example: account_id_abc123
          type: string
        type:
          $ref: '#/components/schemas/ConfluentAccountType'
      required:
        - attributes
        - id
        - type
      type: object
    ConfluentAccountsResponse:
      description: Confluent account returned by the API.
      properties:
        data:
          description: The Confluent account.
          items:
            $ref: '#/components/schemas/ConfluentAccountResponseData'
          type: array
      type: object
    ConfluentAccountResourceAttributes:
      description: Attributes object for updating a Confluent resource.
      properties:
        enable_custom_metrics:
          default: false
          description: >-
            Enable the `custom.consumer_lag_offset` metric, which contains extra
            metric tags.
          example: false
          type: boolean
        id:
          description: The ID associated with a Confluent resource.
          example: resource-id-123
          type: string
        resource_type:
          description: >-
            The resource type of the Resource. Can be `kafka`, `connector`,
            `ksql`, or `schema_registry`.
          example: kafka
          type: string
        tags:
          description: >-
            A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
            - myTag
            - myTag2:myValue
          items:
            type: string
          type: array
      required:
        - resource_type
      type: object
    ConfluentAccountCreateRequestAttributes:
      description: Attributes associated with the account creation request.
      properties:
        api_key:
          description: The API key associated with your Confluent account.
          example: TESTAPIKEY123
          type: string
        api_secret:
          description: The API secret associated with your Confluent account.
          example: test-api-secret-123
          type: string
        resources:
          description: A list of Confluent resources associated with the Confluent account.
          items:
            $ref: '#/components/schemas/ConfluentAccountResourceAttributes'
          type: array
        tags:
          description: >-
            A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
            - myTag
            - myTag2:myValue
          items:
            type: string
          type: array
      required:
        - api_key
        - api_secret
      type: object
    ConfluentAccountCreateRequestData:
      description: The data body for adding a Confluent account.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentAccountCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/ConfluentAccountType'
      required:
        - attributes
        - type
      type: object
    ConfluentAccountCreateRequest:
      description: Payload schema when adding a Confluent account.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentAccountCreateRequestData'
      required:
        - data
      type: object
    ConfluentAccountResponse:
      description: The expected response schema when getting a Confluent account.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentAccountResponseData'
      type: object
    ConfluentAccountUpdateRequestAttributes:
      description: Attributes object for updating a Confluent account.
      properties:
        api_key:
          description: The API key associated with your Confluent account.
          example: TESTAPIKEY123
          type: string
        api_secret:
          description: The API secret associated with your Confluent account.
          example: test-api-secret-123
          type: string
        tags:
          description: >-
            A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
            - myTag
            - myTag2:myValue
          items:
            type: string
          type: array
      required:
        - api_key
        - api_secret
      type: object
    ConfluentAccountUpdateRequestData:
      description: Data object for updating a Confluent account.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentAccountUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/ConfluentAccountType'
      required:
        - attributes
        - type
      type: object
    ConfluentAccountUpdateRequest:
      description: The JSON:API request for updating a Confluent account.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentAccountUpdateRequestData'
      required:
        - data
      type: object
    ConfluentResourceType:
      default: confluent-cloud-resources
      description: The JSON:API type for this request.
      enum:
        - confluent-cloud-resources
      example: confluent-cloud-resources
      type: string
      x-enum-varnames:
        - CONFLUENT_CLOUD_RESOURCES
    ConfluentResourceResponseData:
      description: Confluent Cloud resource data.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentResourceResponseAttributes'
        id:
          description: The ID associated with the Confluent resource.
          example: resource_id_abc123
          type: string
        type:
          $ref: '#/components/schemas/ConfluentResourceType'
      required:
        - attributes
        - type
        - id
      type: object
    ConfluentResourcesResponse:
      description: Response schema when interacting with a list of Confluent resources.
      properties:
        data:
          description: The JSON:API data attribute.
          items:
            $ref: '#/components/schemas/ConfluentResourceResponseData'
          type: array
      type: object
    ConfluentResourceRequestAttributes:
      description: Attributes object for updating a Confluent resource.
      properties:
        enable_custom_metrics:
          default: false
          description: >-
            Enable the `custom.consumer_lag_offset` metric, which contains extra
            metric tags.
          example: false
          type: boolean
        resource_type:
          description: >-
            The resource type of the Resource. Can be `kafka`, `connector`,
            `ksql`, or `schema_registry`.
          example: kafka
          type: string
        tags:
          description: >-
            A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
            - myTag
            - myTag2:myValue
          items:
            type: string
          type: array
      required:
        - resource_type
      type: object
    ConfluentResourceRequestData:
      description: JSON:API request for updating a Confluent resource.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentResourceRequestAttributes'
        id:
          description: The ID associated with a Confluent resource.
          example: resource-id-123
          type: string
        type:
          $ref: '#/components/schemas/ConfluentResourceType'
      required:
        - attributes
        - type
        - id
      type: object
    ConfluentResourceRequest:
      description: The JSON:API request for updating a Confluent resource.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentResourceRequestData'
      required:
        - data
      type: object
    ConfluentResourceResponse:
      description: Response schema when interacting with a Confluent resource.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentResourceResponseData'
      type: object
    FastlyService:
      description: The schema representation of a Fastly service.
      properties:
        id:
          description: The ID of the Fastly service
          example: 6abc7de6893AbcDe9fghIj
          type: string
        tags:
          description: A list of tags for the Fastly service.
          example:
            - myTag
            - myTag2:myValue
          items:
            type: string
          type: array
      required:
        - id
      type: object
    FastlyAccounResponseAttributes:
      description: Attributes object of a Fastly account.
      properties:
        name:
          description: The name of the Fastly account.
          example: test-name
          type: string
        services:
          description: A list of services belonging to the parent account.
          items:
            $ref: '#/components/schemas/FastlyService'
          type: array
      required:
        - name
      type: object
    FastlyAccountType:
      default: fastly-accounts
      description: The JSON:API type for this API. Should always be `fastly-accounts`.
      enum:
        - fastly-accounts
      example: fastly-accounts
      type: string
      x-enum-varnames:
        - FASTLY_ACCOUNTS
    FastlyAccountResponseData:
      description: Data object of a Fastly account.
      properties:
        attributes:
          $ref: '#/components/schemas/FastlyAccounResponseAttributes'
        id:
          description: The ID of the Fastly account, a hash of the account name.
          example: abc123
          type: string
        type:
          $ref: '#/components/schemas/FastlyAccountType'
      required:
        - attributes
        - id
        - type
      type: object
    FastlyAccountsResponse:
      description: The expected response schema when getting Fastly accounts.
      properties:
        data:
          description: The JSON:API data schema.
          items:
            $ref: '#/components/schemas/FastlyAccountResponseData'
          type: array
      type: object
    FastlyAccountCreateRequestAttributes:
      description: Attributes object for creating a Fastly account.
      properties:
        api_key:
          description: The API key for the Fastly account.
          example: ABCDEFG123
          type: string
        name:
          description: The name of the Fastly account.
          example: test-name
          type: string
        services:
          description: A list of services belonging to the parent account.
          items:
            $ref: '#/components/schemas/FastlyService'
          type: array
      required:
        - api_key
        - name
      type: object
    FastlyAccountCreateRequestData:
      description: Data object for creating a Fastly account.
      properties:
        attributes:
          $ref: '#/components/schemas/FastlyAccountCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/FastlyAccountType'
      required:
        - attributes
        - type
      type: object
    FastlyAccountCreateRequest:
      description: Payload schema when adding a Fastly account.
      properties:
        data:
          $ref: '#/components/schemas/FastlyAccountCreateRequestData'
      required:
        - data
      type: object
    FastlyAccountResponse:
      description: The expected response schema when getting a Fastly account.
      properties:
        data:
          $ref: '#/components/schemas/FastlyAccountResponseData'
      type: object
    FastlyAccountUpdateRequestAttributes:
      description: Attributes object for updating a Fastly account.
      properties:
        api_key:
          description: The API key of the Fastly account.
          example: ABCDEFG123
          type: string
        name:
          description: The name of the Fastly account.
          type: string
      type: object
    FastlyAccountUpdateRequestData:
      description: Data object for updating a Fastly account.
      properties:
        attributes:
          $ref: '#/components/schemas/FastlyAccountUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/FastlyAccountType'
      type: object
    FastlyAccountUpdateRequest:
      description: Payload schema when updating a Fastly account.
      properties:
        data:
          $ref: '#/components/schemas/FastlyAccountUpdateRequestData'
      required:
        - data
      type: object
    FastlyServiceAttributes:
      description: Attributes object for Fastly service requests.
      properties:
        tags:
          description: A list of tags for the Fastly service.
          example:
            - myTag
            - myTag2:myValue
          items:
            type: string
          type: array
      type: object
    FastlyServiceType:
      default: fastly-services
      description: The JSON:API type for this API. Should always be `fastly-services`.
      enum:
        - fastly-services
      example: fastly-services
      type: string
      x-enum-varnames:
        - FASTLY_SERVICES
    FastlyServiceData:
      description: Data object for Fastly service requests.
      properties:
        attributes:
          $ref: '#/components/schemas/FastlyServiceAttributes'
        id:
          description: The ID of the Fastly service.
          example: abc123
          type: string
        type:
          $ref: '#/components/schemas/FastlyServiceType'
      required:
        - id
        - type
      type: object
    FastlyServicesResponse:
      description: The expected response schema when getting Fastly services.
      properties:
        data:
          description: The JSON:API data schema.
          items:
            $ref: '#/components/schemas/FastlyServiceData'
          type: array
      type: object
    FastlyServiceRequest:
      description: Payload schema for Fastly service requests.
      properties:
        data:
          $ref: '#/components/schemas/FastlyServiceData'
      required:
        - data
      type: object
    FastlyServiceResponse:
      description: The expected response schema when getting a Fastly service.
      properties:
        data:
          $ref: '#/components/schemas/FastlyServiceData'
      type: object
    OktaAccountAttributes:
      description: Attributes object for an Okta account.
      properties:
        api_key:
          description: The API key of the Okta account.
          type: string
          writeOnly: true
        auth_method:
          description: The authorization method for an Okta account.
          example: oauth
          type: string
        client_id:
          description: The Client ID of an Okta app integration.
          type: string
        client_secret:
          description: The client secret of an Okta app integration.
          type: string
          writeOnly: true
        domain:
          description: The domain of the Okta account.
          example: https://example.okta.com/
          type: string
        name:
          description: The name of the Okta account.
          example: Okta-Prod
          type: string
      required:
        - auth_method
        - domain
        - name
      type: object
    OktaAccountType:
      default: okta-accounts
      description: Account type for an Okta account.
      enum:
        - okta-accounts
      example: okta-accounts
      type: string
      x-enum-varnames:
        - OKTA_ACCOUNTS
    OktaAccountResponseData:
      description: Data object of an Okta account
      properties:
        attributes:
          $ref: '#/components/schemas/OktaAccountAttributes'
        id:
          description: The ID of the Okta account, a UUID hash of the account name.
          example: f749daaf-682e-4208-a38d-c9b43162c609
          type: string
        type:
          $ref: '#/components/schemas/OktaAccountType'
      required:
        - attributes
        - id
        - type
      type: object
    OktaAccountsResponse:
      description: The expected response schema when getting Okta accounts.
      properties:
        data:
          description: List of Okta accounts.
          items:
            $ref: '#/components/schemas/OktaAccountResponseData'
          type: array
      type: object
    OktaAccount:
      description: Schema for an Okta account.
      properties:
        attributes:
          $ref: '#/components/schemas/OktaAccountAttributes'
        id:
          description: The ID of the Okta account, a UUID hash of the account name.
          example: f749daaf-682e-4208-a38d-c9b43162c609
          type: string
        type:
          $ref: '#/components/schemas/OktaAccountType'
      required:
        - attributes
        - type
      type: object
    OktaAccountRequest:
      description: Request object for an Okta account.
      properties:
        data:
          $ref: '#/components/schemas/OktaAccount'
      required:
        - data
      type: object
    OktaAccountResponse:
      description: Response object for an Okta account.
      properties:
        data:
          $ref: '#/components/schemas/OktaAccount'
      type: object
    OktaAccountUpdateRequestAttributes:
      description: Attributes object for updating an Okta account.
      properties:
        api_key:
          description: The API key of the Okta account.
          type: string
          writeOnly: true
        auth_method:
          description: The authorization method for an Okta account.
          example: oauth
          type: string
        client_id:
          description: The Client ID of an Okta app integration.
          type: string
        client_secret:
          description: The client secret of an Okta app integration.
          type: string
          writeOnly: true
        domain:
          description: The domain associated with an Okta account.
          example: https://dev-test.okta.com/
          type: string
      required:
        - auth_method
        - domain
      type: object
    OktaAccountUpdateRequestData:
      description: Data object for updating an Okta account.
      properties:
        attributes:
          $ref: '#/components/schemas/OktaAccountUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/OktaAccountType'
      type: object
    OktaAccountUpdateRequest:
      description: Payload schema when updating an Okta account.
      properties:
        data:
          $ref: '#/components/schemas/OktaAccountUpdateRequestData'
      required:
        - data
      type: object
    IPAllowlistEntryAttributes:
      description: Attributes of the IP allowlist entry.
      properties:
        cidr_block:
          description: The CIDR block describing the IP range of the entry.
          type: string
        created_at:
          description: Creation time of the entry.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last entry modification.
          format: date-time
          readOnly: true
          type: string
        note:
          description: A note describing the IP allowlist entry.
          type: string
      type: object
    IPAllowlistEntryType:
      default: ip_allowlist_entry
      description: IP allowlist Entry type.
      enum:
        - ip_allowlist_entry
      example: ip_allowlist_entry
      type: string
      x-enum-varnames:
        - IP_ALLOWLIST_ENTRY
    IPAllowlistEntryData:
      description: Data of the IP allowlist entry object.
      properties:
        attributes:
          $ref: '#/components/schemas/IPAllowlistEntryAttributes'
        id:
          description: The unique identifier of the IP allowlist entry.
          type: string
        type:
          $ref: '#/components/schemas/IPAllowlistEntryType'
      required:
        - type
      type: object
    IPAllowlistEntry:
      description: IP allowlist entry object.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistEntryData'
      required:
        - data
      type: object
    IPAllowlistAttributes:
      description: Attributes of the IP allowlist.
      properties:
        enabled:
          description: Whether the IP allowlist logic is enabled or not.
          type: boolean
        entries:
          description: Array of entries in the IP allowlist.
          items:
            $ref: '#/components/schemas/IPAllowlistEntry'
          type: array
      type: object
    IPAllowlistType:
      default: ip_allowlist
      description: IP allowlist type.
      enum:
        - ip_allowlist
      example: ip_allowlist
      type: string
      x-enum-varnames:
        - IP_ALLOWLIST
    IPAllowlistData:
      description: IP allowlist data.
      properties:
        attributes:
          $ref: '#/components/schemas/IPAllowlistAttributes'
        id:
          description: The unique identifier of the org.
          type: string
        type:
          $ref: '#/components/schemas/IPAllowlistType'
      required:
        - type
      type: object
    IPAllowlistResponse:
      description: Response containing information about the IP allowlist.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistData'
      type: object
    IPAllowlistUpdateRequest:
      description: Update the IP allowlist.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistData'
      required:
        - data
      type: object
    ContentEncoding:
      description: HTTP header used to compress the media-type.
      enum:
        - identity
        - gzip
        - deflate
      type: string
      x-enum-varnames:
        - IDENTITY
        - GZIP
        - DEFLATE
    HTTPLogItem:
      additionalProperties:
        description: Additional log attributes.
      description: Logs that are sent over HTTP.
      properties:
        ddsource:
          description: >-
            The integration name associated with your log: the technology from
            which the log originated.

            When it matches an integration name, Datadog automatically installs
            the corresponding parsers and facets.

            See [reserved
            attributes](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).
          example: nginx
          type: string
        ddtags:
          description: Tags associated with your logs.
          example: env:staging,version:5.1
          type: string
        hostname:
          description: The name of the originating host of the log.
          example: i-012345678
          type: string
        message:
          description: >-
            The message [reserved
            attribute](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message
            attribute as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where
            it is indexed for full text search.
          example: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
          type: string
        service:
          description: >-
            The name of the application or service generating the log events.

            It is used to switch from Logs to APM, so make sure you define the
            same value when you use both products.

            See [reserved
            attributes](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).
          example: payment
          type: string
      required:
        - message
      type: object
    HTTPLog:
      description: Structured log message.
      items:
        $ref: '#/components/schemas/HTTPLogItem'
      type: array
    HTTPLogError:
      description: List of errors.
      properties:
        detail:
          description: Error message.
          example: Malformed payload
          type: string
        status:
          description: Error code.
          example: '400'
          type: string
        title:
          description: Error title.
          example: Bad Request
          type: string
      type: object
    HTTPLogErrors:
      description: Invalid query performed.
      properties:
        errors:
          description: Structured errors.
          items:
            $ref: '#/components/schemas/HTTPLogError'
          type: array
      type: object
    LogsAggregationFunction:
      description: An aggregation function
      enum:
        - count
        - cardinality
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
        - median
      example: pc90
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - PERCENTILE_75
        - PERCENTILE_90
        - PERCENTILE_95
        - PERCENTILE_98
        - PERCENTILE_99
        - SUM
        - MIN
        - MAX
        - AVG
        - MEDIAN
    LogsComputeType:
      default: total
      description: The type of compute
      enum:
        - timeseries
        - total
      type: string
      x-enum-varnames:
        - TIMESERIES
        - TOTAL
    LogsCompute:
      description: A compute rule to compute metrics or timeseries
      properties:
        aggregation:
          $ref: '#/components/schemas/LogsAggregationFunction'
        interval:
          description: |-
            The time buckets' size (only used for type=timeseries)
            Defaults to a resolution of 150 points
          example: 5m
          type: string
        metric:
          description: The metric to use
          example: '@duration'
          type: string
        type:
          $ref: '#/components/schemas/LogsComputeType'
      required:
        - aggregation
      type: object
    LogsStorageTier:
      default: indexes
      description: Specifies storage type as indexes, online-archives or flex
      enum:
        - indexes
        - online-archives
        - flex
      example: indexes
      type: string
      x-enum-varnames:
        - INDEXES
        - ONLINE_ARCHIVES
        - FLEX
    LogsQueryFilter:
      description: The search and filter query settings
      properties:
        from:
          default: now-15m
          description: >-
            The minimum time for the requested logs, supports date math and
            regular timestamps (milliseconds).
          example: now-15m
          type: string
        indexes:
          default:
            - '*'
          description: >-
            For customers with multiple indexes, the indexes to search. Defaults
            to ['*'] which means all indexes.
          example:
            - main
            - web
          items:
            description: The name of a log index.
            type: string
          type: array
        query:
          default: '*'
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
        storage_tier:
          $ref: '#/components/schemas/LogsStorageTier'
        to:
          default: now
          description: >-
            The maximum time for the requested logs, supports date math and
            regular timestamps (milliseconds).
          example: now
          type: string
      type: object
    LogsGroupByHistogram:
      description: >-
        Used to perform a histogram computation (only for measure facets).

        Note: at most 100 buckets are allowed, the number of buckets is (max -
        min)/interval.
      properties:
        interval:
          description: The bin size of the histogram buckets
          example: 10
          format: double
          type: number
        max:
          description: |-
            The maximum value for the measure used in the histogram
            (values greater than this one are filtered out)
          example: 100
          format: double
          type: number
        min:
          description: |-
            The minimum value for the measure used in the histogram
            (values smaller than this one are filtered out)
          example: 50
          format: double
          type: number
      required:
        - interval
        - min
        - max
      type: object
    LogsGroupByMissingString:
      description: The missing value to use if there is string valued facet.
      type: string
    LogsGroupByMissingNumber:
      description: The missing value to use if there is a number valued facet.
      format: double
      type: number
    LogsGroupByMissing:
      description: The value to use for logs that don't have the facet used to group by
      oneOf:
        - $ref: '#/components/schemas/LogsGroupByMissingString'
        - $ref: '#/components/schemas/LogsGroupByMissingNumber'
    LogsSortOrder:
      description: The order to use, ascending or descending
      enum:
        - asc
        - desc
      example: asc
      type: string
      x-enum-varnames:
        - ASCENDING
        - DESCENDING
    LogsAggregateSortType:
      default: alphabetical
      description: The type of sorting algorithm
      enum:
        - alphabetical
        - measure
      type: string
      x-enum-varnames:
        - ALPHABETICAL
        - MEASURE
    LogsAggregateSort:
      description: A sort rule
      example:
        aggregation: count
        order: asc
      properties:
        aggregation:
          $ref: '#/components/schemas/LogsAggregationFunction'
        metric:
          description: The metric to sort by (only used for `type=measure`)
          example: '@duration'
          type: string
        order:
          $ref: '#/components/schemas/LogsSortOrder'
        type:
          $ref: '#/components/schemas/LogsAggregateSortType'
      type: object
    LogsGroupByTotalBoolean:
      description: If set to true, creates an additional bucket labeled "$facet_total"
      type: boolean
    LogsGroupByTotalString:
      description: A string to use as the key value for the total bucket
      type: string
    LogsGroupByTotalNumber:
      description: A number to use as the key value for the total bucket
      format: double
      type: number
    LogsGroupByTotal:
      default: false
      description: >-
        A resulting object to put the given computes in over all the matching
        records.
      oneOf:
        - $ref: '#/components/schemas/LogsGroupByTotalBoolean'
        - $ref: '#/components/schemas/LogsGroupByTotalString'
        - $ref: '#/components/schemas/LogsGroupByTotalNumber'
    LogsGroupBy:
      description: A group by rule
      properties:
        facet:
          description: The name of the facet to use (required)
          example: host
          type: string
        histogram:
          $ref: '#/components/schemas/LogsGroupByHistogram'
        limit:
          default: 10
          description: >-
            The maximum buckets to return for this group by. Note: at most 10000
            buckets are allowed.

            If grouping by multiple facets, the product of limits must not
            exceed 10000.
          format: int64
          type: integer
        missing:
          $ref: '#/components/schemas/LogsGroupByMissing'
        sort:
          $ref: '#/components/schemas/LogsAggregateSort'
        total:
          $ref: '#/components/schemas/LogsGroupByTotal'
      required:
        - facet
      type: object
    LogsQueryOptions:
      deprecated: true
      description: >-
        Global query options that are used during the query.

        Note: These fields are currently deprecated and do not affect the query
        results.
      properties:
        timeOffset:
          description: The time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: >-
            The timezone can be specified as GMT, UTC, an offset from UTC (like
            UTC+1), or as a Timezone Database identifier (like
            America/New_York).
          example: GMT
          type: string
      type: object
    LogsAggregateRequestPage:
      description: Paging settings
      properties:
        cursor:
          description: >-
            The returned paging point to use to get the next results. Note: at
            most 1000 results can be paged.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    LogsAggregateRequest:
      description: >-
        The object sent with the request to retrieve a list of logs from your
        organization.
      properties:
        compute:
          description: >-
            The list of metrics or timeseries to compute for the retrieved
            buckets.
          items:
            $ref: '#/components/schemas/LogsCompute'
          type: array
        filter:
          $ref: '#/components/schemas/LogsQueryFilter'
        group_by:
          description: The rules for the group by
          items:
            $ref: '#/components/schemas/LogsGroupBy'
          type: array
        options:
          $ref: '#/components/schemas/LogsQueryOptions'
        page:
          $ref: '#/components/schemas/LogsAggregateRequestPage'
      type: object
    LogsAggregateBucketValueSingleString:
      description: A single string value
      type: string
    LogsAggregateBucketValueSingleNumber:
      description: A single number value
      format: double
      type: number
    LogsAggregateBucketValueTimeseriesPoint:
      description: A timeseries point
      properties:
        time:
          description: The time value for this point
          example: '2020-06-08T11:55:00Z'
          type: string
        value:
          description: The value for this point
          example: 19
          format: double
          type: number
      type: object
    LogsAggregateBucketValueTimeseries:
      description: A timeseries array
      items:
        $ref: '#/components/schemas/LogsAggregateBucketValueTimeseriesPoint'
      type: array
      x-generate-alias-as-model: true
    LogsAggregateBucketValue:
      description: A bucket value, can be either a timeseries or a single value
      oneOf:
        - $ref: '#/components/schemas/LogsAggregateBucketValueSingleString'
        - $ref: '#/components/schemas/LogsAggregateBucketValueSingleNumber'
        - $ref: '#/components/schemas/LogsAggregateBucketValueTimeseries'
    LogsAggregateBucket:
      description: A bucket values
      properties:
        by:
          additionalProperties:
            description: The values for each group by
          description: The key, value pairs for each group by
          example:
            '@state': success
            '@version': abc
          type: object
        computes:
          additionalProperties:
            $ref: '#/components/schemas/LogsAggregateBucketValue'
          description: >-
            A map of the metric name -> value for regular compute or list of
            values for a timeseries
          type: object
      type: object
    LogsAggregateResponseData:
      description: The query results
      properties:
        buckets:
          description: The list of matching buckets, one item per bucket
          items:
            $ref: '#/components/schemas/LogsAggregateBucket'
          type: array
      type: object
    LogsResponseMetadataPage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same

            parameters with the addition of the `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    LogsAggregateResponseStatus:
      description: The status of the response
      enum:
        - done
        - timeout
      example: done
      type: string
      x-enum-varnames:
        - DONE
        - TIMEOUT
    LogsWarning:
      description: A warning message indicating something that went wrong with the query
      properties:
        code:
          description: A unique code for this type of warning
          example: unknown_index
          type: string
        detail:
          description: A detailed explanation of this specific warning
          example: 'indexes: foo, bar'
          type: string
        title:
          description: A short human-readable summary of the warning
          example: >-
            One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    LogsResponseMetadata:
      description: The metadata associated with a request
      properties:
        elapsed:
          description: The time elapsed in milliseconds
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/LogsResponseMetadataPage'
        request_id:
          description: The identifier of the request
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/LogsAggregateResponseStatus'
        warnings:
          description: >-
            A list of warnings (non fatal errors) encountered, partial results
            might be returned if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/LogsWarning'
          type: array
      type: object
    LogsAggregateResponse:
      description: The response object for the logs aggregate API endpoint
      properties:
        data:
          $ref: '#/components/schemas/LogsAggregateResponseData'
        meta:
          $ref: '#/components/schemas/LogsResponseMetadata'
      type: object
    LogsArchiveOrderAttributes:
      description: The attributes associated with the archive order.
      properties:
        archive_ids:
          description: >-
            An ordered array of `<ARCHIVE_ID>` strings, the order of archive IDs
            in the array

            define the overall archives order for Datadog.
          example:
            - a2zcMylnM4OCHpYusxIi1g
            - a2zcMylnM4OCHpYusxIi2g
            - a2zcMylnM4OCHpYusxIi3g
          items:
            description: A given archive ID.
            type: string
          type: array
      required:
        - archive_ids
      type: object
    LogsArchiveOrderDefinitionType:
      default: archive_order
      description: Type of the archive order definition.
      enum:
        - archive_order
      example: archive_order
      type: string
      x-enum-varnames:
        - ARCHIVE_ORDER
    LogsArchiveOrderDefinition:
      description: The definition of an archive order.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveOrderAttributes'
        type:
          $ref: '#/components/schemas/LogsArchiveOrderDefinitionType'
      required:
        - type
        - attributes
      type: object
    LogsArchiveOrder:
      description: A ordered list of archive IDs.
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveOrderDefinition'
      type: object
    LogsArchiveIntegrationAzure:
      description: The Azure archive's integration destination.
      properties:
        client_id:
          description: A client ID.
          example: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
          type: string
        tenant_id:
          description: A tenant ID.
          example: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
          type: string
      required:
        - tenant_id
        - client_id
      type: object
    LogsArchiveDestinationAzureType:
      default: azure
      description: Type of the Azure archive destination.
      enum:
        - azure
      example: azure
      type: string
      x-enum-varnames:
        - AZURE
    LogsArchiveDestinationAzure:
      description: The Azure archive destination.
      properties:
        container:
          description: The container where the archive will be stored.
          example: container-name
          type: string
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationAzure'
        path:
          description: The archive path.
          type: string
        region:
          description: The region where the archive will be stored.
          type: string
        storage_account:
          description: The associated storage account.
          example: account-name
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationAzureType'
      required:
        - storage_account
        - container
        - integration
        - type
      type: object
    LogsArchiveIntegrationGCS:
      description: The GCS archive's integration destination.
      properties:
        client_email:
          description: A client email.
          example: youremail@example.com
          type: string
        project_id:
          description: A project ID.
          example: project-id
          type: string
      required:
        - client_email
      type: object
    LogsArchiveDestinationGCSType:
      default: gcs
      description: Type of the GCS archive destination.
      enum:
        - gcs
      example: gcs
      type: string
      x-enum-varnames:
        - GCS
    LogsArchiveDestinationGCS:
      description: The GCS archive destination.
      properties:
        bucket:
          description: The bucket where the archive will be stored.
          example: bucket-name
          type: string
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationGCS'
        path:
          description: The archive path.
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationGCSType'
      required:
        - bucket
        - integration
        - type
      type: object
    LogsArchiveEncryptionS3Type:
      description: Type of S3 encryption for a destination.
      enum:
        - NO_OVERRIDE
        - SSE_S3
        - SSE_KMS
      example: SSE_S3
      type: string
      x-enum-varnames:
        - NO_OVERRIDE
        - SSE_S3
        - SSE_KMS
    LogsArchiveEncryptionS3:
      description: The S3 encryption settings.
      properties:
        key:
          description: An Amazon Resource Name (ARN) used to identify an AWS KMS key.
          example: arn:aws:kms:us-east-1:012345678901:key/DatadogIntegrationRoleKms
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveEncryptionS3Type'
      required:
        - type
      type: object
    LogsArchiveIntegrationS3:
      description: The S3 Archive's integration destination.
      properties:
        account_id:
          description: The account ID for the integration.
          example: '123456789012'
          type: string
        role_name:
          description: The path of the integration.
          example: role-name
          type: string
      required:
        - role_name
        - account_id
      type: object
    LogsArchiveStorageClassS3Type:
      default: STANDARD
      description: The storage class where the archive will be stored.
      enum:
        - STANDARD
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - GLACIER_IR
      example: STANDARD
      type: string
      x-enum-varnames:
        - STANDARD
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - GLACIER_IR
    LogsArchiveDestinationS3Type:
      default: s3
      description: Type of the S3 archive destination.
      enum:
        - s3
      example: s3
      type: string
      x-enum-varnames:
        - S3
    LogsArchiveDestinationS3:
      description: The S3 archive destination.
      properties:
        bucket:
          description: The bucket where the archive will be stored.
          example: bucket-name
          type: string
        encryption:
          $ref: '#/components/schemas/LogsArchiveEncryptionS3'
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationS3'
        path:
          description: The archive path.
          type: string
        storage_class:
          $ref: '#/components/schemas/LogsArchiveStorageClassS3Type'
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationS3Type'
      required:
        - bucket
        - integration
        - type
      type: object
    LogsArchiveDestination:
      description: An archive's destination.
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/LogsArchiveDestinationAzure'
        - $ref: '#/components/schemas/LogsArchiveDestinationGCS'
        - $ref: '#/components/schemas/LogsArchiveDestinationS3'
      type: object
    LogsArchiveState:
      description: The state of the archive.
      enum:
        - UNKNOWN
        - WORKING
        - FAILING
        - WORKING_AUTH_LEGACY
      example: WORKING
      type: string
      x-enum-varnames:
        - UNKNOWN
        - WORKING
        - FAILING
        - WORKING_AUTH_LEGACY
    LogsArchiveAttributes:
      description: The attributes associated with the archive.
      properties:
        destination:
          $ref: '#/components/schemas/LogsArchiveDestination'
        include_tags:
          default: false
          description: >-
            To store the tags in the archive, set the value "true".

            If it is set to "false", the tags will be deleted when the logs are
            sent to the archive.
          example: false
          type: boolean
        name:
          description: The archive name.
          example: Nginx Archive
          type: string
        query:
          description: >-
            The archive query/filter. Logs matching this query are included in
            the archive.
          example: source:nginx
          type: string
        rehydration_max_scan_size_in_gb:
          description: Maximum scan size for rehydration from this archive.
          example: 100
          format: int64
          nullable: true
          type: integer
        rehydration_tags:
          description: An array of tags to add to rehydrated logs from an archive.
          example:
            - team:intake
            - team:app
          items:
            description: A given tag in the `<KEY>:<VALUE>` format.
            type: string
          type: array
        state:
          $ref: '#/components/schemas/LogsArchiveState'
      required:
        - name
        - query
        - destination
      type: object
    LogsArchiveDefinition:
      description: The definition of an archive.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveAttributes'
        id:
          description: The archive ID.
          example: a2zcMylnM4OCHpYusxIi3g
          readOnly: true
          type: string
        type:
          default: archives
          description: The type of the resource. The value should always be archives.
          example: archives
          readOnly: true
          type: string
      required:
        - type
      type: object
    LogsArchives:
      description: The available archives.
      properties:
        data:
          description: A list of archives.
          items:
            $ref: '#/components/schemas/LogsArchiveDefinition'
          type: array
      type: object
    LogsArchiveCreateRequestDestination:
      description: An archive's destination.
      oneOf:
        - $ref: '#/components/schemas/LogsArchiveDestinationAzure'
        - $ref: '#/components/schemas/LogsArchiveDestinationGCS'
        - $ref: '#/components/schemas/LogsArchiveDestinationS3'
    LogsArchiveCreateRequestAttributes:
      description: The attributes associated with the archive.
      properties:
        destination:
          $ref: '#/components/schemas/LogsArchiveCreateRequestDestination'
        include_tags:
          default: false
          description: >-
            To store the tags in the archive, set the value "true".

            If it is set to "false", the tags will be deleted when the logs are
            sent to the archive.
          example: false
          type: boolean
        name:
          description: The archive name.
          example: Nginx Archive
          type: string
        query:
          description: >-
            The archive query/filter. Logs matching this query are included in
            the archive.
          example: source:nginx
          type: string
        rehydration_max_scan_size_in_gb:
          description: Maximum scan size for rehydration from this archive.
          example: 100
          format: int64
          nullable: true
          type: integer
        rehydration_tags:
          description: An array of tags to add to rehydrated logs from an archive.
          example:
            - team:intake
            - team:app
          items:
            description: A given tag in the `<KEY>:<VALUE>` format.
            type: string
          type: array
      required:
        - name
        - query
        - destination
      type: object
    LogsArchiveCreateRequestDefinition:
      description: The definition of an archive.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveCreateRequestAttributes'
        type:
          default: archives
          description: The type of the resource. The value should always be archives.
          example: archives
          type: string
      required:
        - type
      type: object
    LogsArchiveCreateRequest:
      description: The logs archive.
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveCreateRequestDefinition'
      type: object
    LogsArchive:
      description: The logs archive.
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveDefinition'
      type: object
    RolesResponse:
      description: Response containing information about multiple roles.
      properties:
        data:
          description: Array of returned roles.
          items:
            $ref: '#/components/schemas/Role'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    CustomDestinationAttributeTagsRestrictionListType:
      default: ALLOW_LIST
      description: >-
        How `forward_tags_restriction_list` parameter should be interpreted.

        If `ALLOW_LIST`, then only tags whose keys on the forwarded logs match
        the ones on the restriction list

        are forwarded.


        `BLOCK_LIST` works the opposite way. It does not forward the tags
        matching the ones on the list.
      enum:
        - ALLOW_LIST
        - BLOCK_LIST
      example: ALLOW_LIST
      type: string
      x-enum-varnames:
        - ALLOW_LIST
        - BLOCK_LIST
    CustomDestinationResponseHttpDestinationAuthBasicType:
      default: basic
      description: Type of the basic access authentication.
      enum:
        - basic
      example: basic
      type: string
      x-enum-varnames:
        - BASIC
    CustomDestinationResponseHttpDestinationAuthBasic:
      description: Basic access authentication.
      properties:
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseHttpDestinationAuthBasicType
      required:
        - type
      type: object
    CustomDestinationResponseHttpDestinationAuthCustomHeaderType:
      default: custom_header
      description: Type of the custom header access authentication.
      enum:
        - custom_header
      example: custom_header
      type: string
      x-enum-varnames:
        - CUSTOM_HEADER
    CustomDestinationResponseHttpDestinationAuthCustomHeader:
      description: Custom header access authentication.
      properties:
        header_name:
          description: The header name of the authentication.
          example: CUSTOM-HEADER-NAME
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseHttpDestinationAuthCustomHeaderType
      required:
        - type
        - header_name
      type: object
    CustomDestinationResponseHttpDestinationAuth:
      description: Authentication method of the HTTP requests.
      oneOf:
        - $ref: >-
            #/components/schemas/CustomDestinationResponseHttpDestinationAuthBasic
        - $ref: >-
            #/components/schemas/CustomDestinationResponseHttpDestinationAuthCustomHeader
    CustomDestinationResponseForwardDestinationHttpType:
      default: http
      description: Type of the HTTP destination.
      enum:
        - http
      example: http
      type: string
      x-enum-varnames:
        - HTTP
    CustomDestinationResponseForwardDestinationHttp:
      description: The HTTP destination.
      properties:
        auth:
          $ref: '#/components/schemas/CustomDestinationResponseHttpDestinationAuth'
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationHttpType
      required:
        - type
        - endpoint
        - auth
      type: object
    CustomDestinationResponseForwardDestinationSplunkType:
      default: splunk_hec
      description: Type of the Splunk HTTP Event Collector (HEC) destination.
      enum:
        - splunk_hec
      example: splunk_hec
      type: string
      x-enum-varnames:
        - SPLUNK_HEC
    CustomDestinationResponseForwardDestinationSplunk:
      description: The Splunk HTTP Event Collector (HEC) destination.
      properties:
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationSplunkType
      required:
        - type
        - endpoint
      type: object
    CustomDestinationResponseElasticsearchDestinationAuth:
      additionalProperties:
        description: Basic access authentication.
      description: Basic access authentication.
      type: object
    CustomDestinationResponseForwardDestinationElasticsearchType:
      default: elasticsearch
      description: Type of the Elasticsearch destination.
      enum:
        - elasticsearch
      example: elasticsearch
      type: string
      x-enum-varnames:
        - ELASTICSEARCH
    CustomDestinationResponseForwardDestinationElasticsearch:
      description: The Elasticsearch destination.
      properties:
        auth:
          $ref: >-
            #/components/schemas/CustomDestinationResponseElasticsearchDestinationAuth
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        index_name:
          description: >-
            Name of the Elasticsearch index (must follow [Elasticsearch's
            criteria](https://www.elastic.co/guide/en/elasticsearch/reference/8.11/indices-create-index.html#indices-create-api-path-params)).
          example: nginx-logs
          type: string
        index_rotation:
          description: >-
            Date pattern with US locale and UTC timezone to be appended to the
            index name after adding `-`

            (that is, `${index_name}-${indexPattern}`).

            You can customize the index rotation naming pattern by choosing one
            of these options:

            - Hourly: `yyyy-MM-dd-HH` (as an example, it would render:
            `2022-10-19-09`)

            - Daily: `yyyy-MM-dd` (as an example, it would render: `2022-10-19`)

            - Weekly: `yyyy-'W'ww` (as an example, it would render: `2022-W42`)

            - Monthly: `yyyy-MM` (as an example, it would render: `2022-10`)


            If this field is missing or is blank, it means that the index name
            will always be the same

            (that is, no rotation).
          example: yyyy-MM-dd
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationElasticsearchType
      required:
        - type
        - endpoint
        - auth
        - index_name
      type: object
    CustomDestinationResponseForwardDestination:
      description: A custom destination's location to forward logs.
      oneOf:
        - $ref: '#/components/schemas/CustomDestinationResponseForwardDestinationHttp'
        - $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationSplunk
        - $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationElasticsearch
    CustomDestinationResponseAttributes:
      description: The attributes associated with the custom destination.
      properties:
        enabled:
          default: true
          description: >-
            Whether logs matching this custom destination should be forwarded or
            not.
          example: true
          type: boolean
        forward_tags:
          default: true
          description: Whether tags from the forwarded logs should be forwarded or not.
          example: true
          type: boolean
        forward_tags_restriction_list:
          default: []
          description: >-
            List of [keys of
            tags](https://docs.datadoghq.com/getting_started/tagging/#define-tags)
            to be filtered.


            An empty list represents no restriction is in place and either all
            or no tags will be

            forwarded depending on `forward_tags_restriction_list_type`
            parameter.
          example:
            - datacenter
            - host
          items:
            description: >-
              The [key part of a
              tag](https://docs.datadoghq.com/getting_started/tagging/#define-tags).
            type: string
          maxItems: 10
          minItems: 0
          type: array
        forward_tags_restriction_list_type:
          $ref: >-
            #/components/schemas/CustomDestinationAttributeTagsRestrictionListType
        forwarder_destination:
          $ref: '#/components/schemas/CustomDestinationResponseForwardDestination'
        name:
          description: The custom destination name.
          example: Nginx logs
          type: string
        query:
          default: ''
          description: >-
            The custom destination query filter. Logs matching this query are
            forwarded to the destination.
          example: source:nginx
          type: string
      type: object
    CustomDestinationType:
      default: custom_destination
      description: >-
        The type of the resource. The value should always be
        `custom_destination`.
      enum:
        - custom_destination
      example: custom_destination
      type: string
      x-enum-varnames:
        - CUSTOM_DESTINATION
    CustomDestinationResponseDefinition:
      description: The definition of a custom destination.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomDestinationResponseAttributes'
        id:
          description: The custom destination ID.
          example: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/CustomDestinationType'
      type: object
    CustomDestinationsResponse:
      description: The available custom destinations.
      properties:
        data:
          description: A list of custom destinations.
          items:
            $ref: '#/components/schemas/CustomDestinationResponseDefinition'
          type: array
      type: object
    CustomDestinationHttpDestinationAuthBasicType:
      default: basic
      description: Type of the basic access authentication.
      enum:
        - basic
      example: basic
      type: string
      x-enum-varnames:
        - BASIC
    CustomDestinationHttpDestinationAuthBasic:
      description: Basic access authentication.
      properties:
        password:
          description: >-
            The password of the authentication. This field is not returned by
            the API.
          example: datadog-custom-destination-password
          type: string
          writeOnly: true
        type:
          $ref: '#/components/schemas/CustomDestinationHttpDestinationAuthBasicType'
        username:
          description: >-
            The username of the authentication. This field is not returned by
            the API.
          example: datadog-custom-destination-username
          type: string
          writeOnly: true
      required:
        - type
        - username
        - password
      type: object
    CustomDestinationHttpDestinationAuthCustomHeaderType:
      default: custom_header
      description: Type of the custom header access authentication.
      enum:
        - custom_header
      example: custom_header
      type: string
      x-enum-varnames:
        - CUSTOM_HEADER
    CustomDestinationHttpDestinationAuthCustomHeader:
      description: Custom header access authentication.
      properties:
        header_name:
          description: The header name of the authentication.
          example: CUSTOM-HEADER-NAME
          type: string
        header_value:
          description: >-
            The header value of the authentication. This field is not returned
            by the API.
          example: CUSTOM-HEADER-AUTHENTICATION-VALUE
          type: string
          writeOnly: true
        type:
          $ref: >-
            #/components/schemas/CustomDestinationHttpDestinationAuthCustomHeaderType
      required:
        - type
        - header_name
        - header_value
      type: object
    CustomDestinationHttpDestinationAuth:
      description: Authentication method of the HTTP requests.
      oneOf:
        - $ref: '#/components/schemas/CustomDestinationHttpDestinationAuthBasic'
        - $ref: >-
            #/components/schemas/CustomDestinationHttpDestinationAuthCustomHeader
    CustomDestinationForwardDestinationHttpType:
      default: http
      description: Type of the HTTP destination.
      enum:
        - http
      example: http
      type: string
      x-enum-varnames:
        - HTTP
    CustomDestinationForwardDestinationHttp:
      description: The HTTP destination.
      properties:
        auth:
          $ref: '#/components/schemas/CustomDestinationHttpDestinationAuth'
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        type:
          $ref: '#/components/schemas/CustomDestinationForwardDestinationHttpType'
      required:
        - type
        - endpoint
        - auth
      type: object
    CustomDestinationForwardDestinationSplunkType:
      default: splunk_hec
      description: Type of the Splunk HTTP Event Collector (HEC) destination.
      enum:
        - splunk_hec
      example: splunk_hec
      type: string
      x-enum-varnames:
        - SPLUNK_HEC
    CustomDestinationForwardDestinationSplunk:
      description: The Splunk HTTP Event Collector (HEC) destination.
      properties:
        access_token:
          description: >-
            Access token of the Splunk HTTP Event Collector. This field is not
            returned by the API.
          example: splunk_access_token
          type: string
          writeOnly: true
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        type:
          $ref: '#/components/schemas/CustomDestinationForwardDestinationSplunkType'
      required:
        - type
        - endpoint
        - access_token
      type: object
    CustomDestinationElasticsearchDestinationAuth:
      description: Basic access authentication.
      properties:
        password:
          description: >-
            The password of the authentication. This field is not returned by
            the API.
          example: datadog-custom-destination-password
          type: string
          writeOnly: true
        username:
          description: >-
            The username of the authentication. This field is not returned by
            the API.
          example: datadog-custom-destination-username
          type: string
          writeOnly: true
      required:
        - username
        - password
      type: object
    CustomDestinationForwardDestinationElasticsearchType:
      default: elasticsearch
      description: Type of the Elasticsearch destination.
      enum:
        - elasticsearch
      example: elasticsearch
      type: string
      x-enum-varnames:
        - ELASTICSEARCH
    CustomDestinationForwardDestinationElasticsearch:
      description: The Elasticsearch destination.
      properties:
        auth:
          $ref: '#/components/schemas/CustomDestinationElasticsearchDestinationAuth'
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        index_name:
          description: >-
            Name of the Elasticsearch index (must follow [Elasticsearch's
            criteria](https://www.elastic.co/guide/en/elasticsearch/reference/8.11/indices-create-index.html#indices-create-api-path-params)).
          example: nginx-logs
          type: string
        index_rotation:
          description: >-
            Date pattern with US locale and UTC timezone to be appended to the
            index name after adding `-`

            (that is, `${index_name}-${indexPattern}`).

            You can customize the index rotation naming pattern by choosing one
            of these options:

            - Hourly: `yyyy-MM-dd-HH` (as an example, it would render:
            `2022-10-19-09`)

            - Daily: `yyyy-MM-dd` (as an example, it would render: `2022-10-19`)

            - Weekly: `yyyy-'W'ww` (as an example, it would render: `2022-W42`)

            - Monthly: `yyyy-MM` (as an example, it would render: `2022-10`)


            If this field is missing or is blank, it means that the index name
            will always be the same

            (that is, no rotation).
          example: yyyy-MM-dd
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationForwardDestinationElasticsearchType
      required:
        - type
        - endpoint
        - auth
        - index_name
      type: object
    CustomDestinationForwardDestination:
      description: A custom destination's location to forward logs.
      oneOf:
        - $ref: '#/components/schemas/CustomDestinationForwardDestinationHttp'
        - $ref: '#/components/schemas/CustomDestinationForwardDestinationSplunk'
        - $ref: >-
            #/components/schemas/CustomDestinationForwardDestinationElasticsearch
    CustomDestinationCreateRequestAttributes:
      description: The attributes associated with the custom destination.
      properties:
        enabled:
          default: true
          description: >-
            Whether logs matching this custom destination should be forwarded or
            not.
          example: true
          type: boolean
        forward_tags:
          default: true
          description: Whether tags from the forwarded logs should be forwarded or not.
          example: true
          type: boolean
        forward_tags_restriction_list:
          default: []
          description: >-
            List of [keys of
            tags](https://docs.datadoghq.com/getting_started/tagging/#define-tags)
            to be filtered.


            An empty list represents no restriction is in place and either all
            or no tags will be

            forwarded depending on `forward_tags_restriction_list_type`
            parameter.
          example:
            - datacenter
            - host
          items:
            description: >-
              The [key part of a
              tag](https://docs.datadoghq.com/getting_started/tagging/#define-tags).
            type: string
          maxItems: 10
          minItems: 0
          type: array
        forward_tags_restriction_list_type:
          $ref: >-
            #/components/schemas/CustomDestinationAttributeTagsRestrictionListType
        forwarder_destination:
          $ref: '#/components/schemas/CustomDestinationForwardDestination'
        name:
          description: The custom destination name.
          example: Nginx logs
          type: string
        query:
          default: ''
          description: >-
            The custom destination query and filter. Logs matching this query
            are forwarded to the destination.
          example: source:nginx
          type: string
      required:
        - name
        - forwarder_destination
      type: object
    CustomDestinationCreateRequestDefinition:
      description: The definition of a custom destination.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomDestinationCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/CustomDestinationType'
      required:
        - type
        - attributes
      type: object
    CustomDestinationCreateRequest:
      description: The custom destination.
      properties:
        data:
          $ref: '#/components/schemas/CustomDestinationCreateRequestDefinition'
      type: object
    CustomDestinationResponse:
      description: The custom destination.
      properties:
        data:
          $ref: '#/components/schemas/CustomDestinationResponseDefinition'
      type: object
    CustomDestinationUpdateRequestAttributes:
      description: The attributes associated with the custom destination.
      properties:
        enabled:
          default: true
          description: >-
            Whether logs matching this custom destination should be forwarded or
            not.
          example: true
          type: boolean
        forward_tags:
          default: true
          description: Whether tags from the forwarded logs should be forwarded or not.
          example: true
          type: boolean
        forward_tags_restriction_list:
          default: []
          description: >-
            List of [keys of
            tags](https://docs.datadoghq.com/getting_started/tagging/#define-tags)
            to be restricted from being forwarded.

            An empty list represents no restriction is in place and either all
            or no tags will be forwarded depending on
            `forward_tags_restriction_list_type` parameter.
          example:
            - datacenter
            - host
          items:
            description: >-
              The [key part of a
              tag](https://docs.datadoghq.com/getting_started/tagging/#define-tags).
            type: string
          maxItems: 10
          minItems: 0
          type: array
        forward_tags_restriction_list_type:
          $ref: >-
            #/components/schemas/CustomDestinationAttributeTagsRestrictionListType
        forwarder_destination:
          $ref: '#/components/schemas/CustomDestinationForwardDestination'
        name:
          description: The custom destination name.
          example: Nginx logs
          type: string
        query:
          default: ''
          description: >-
            The custom destination query and filter. Logs matching this query
            are forwarded to the destination.
          example: source:nginx
          type: string
      type: object
    CustomDestinationUpdateRequestDefinition:
      description: The definition of a custom destination.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomDestinationUpdateRequestAttributes'
        id:
          description: The custom destination ID.
          example: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
          type: string
        type:
          $ref: '#/components/schemas/CustomDestinationType'
      required:
        - type
        - id
      type: object
    CustomDestinationUpdateRequest:
      description: The custom destination.
      properties:
        data:
          $ref: '#/components/schemas/CustomDestinationUpdateRequestDefinition'
      type: object
    LogsMetricResponseComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    LogsMetricComputeIncludePercentiles:
      description: >-
        Toggle to include or exclude percentile aggregations for distribution
        metrics.

        Only present when the `aggregation_type` is `distribution`.
      example: true
      type: boolean
    LogsMetricResponseCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/LogsMetricResponseComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
        path:
          description: >-
            The path to the value the log-based metric will aggregate on (only
            used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      type: object
    LogsMetricResponseFilter:
      description: >-
        The log-based metric filter. Logs matching this filter will be
        aggregated in this metric.
      properties:
        query:
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    LogsMetricResponseGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the log-based metric will be aggregated over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, the path
            attribute is used as the tag name.
          example: status_code
          type: string
      type: object
    LogsMetricResponseAttributes:
      description: The object describing a Datadog log-based metric.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricResponseCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricResponseFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricResponseGroupBy'
          type: array
      type: object
    LogsMetricID:
      description: The name of the log-based metric.
      example: logs.page.load.count
      type: string
    LogsMetricType:
      default: logs_metrics
      description: The type of the resource. The value should always be logs_metrics.
      enum:
        - logs_metrics
      example: logs_metrics
      type: string
      x-enum-varnames:
        - LOGS_METRICS
    LogsMetricResponseData:
      description: The log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricResponseAttributes'
        id:
          $ref: '#/components/schemas/LogsMetricID'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      type: object
    LogsMetricsResponse:
      description: All the available log-based metric objects.
      properties:
        data:
          description: A list of log-based metric objects.
          items:
            $ref: '#/components/schemas/LogsMetricResponseData'
          type: array
      type: object
    LogsMetricComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    LogsMetricCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/LogsMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
        path:
          description: >-
            The path to the value the log-based metric will aggregate on (only
            used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      required:
        - aggregation_type
      type: object
    LogsMetricFilter:
      description: >-
        The log-based metric filter. Logs matching this filter will be
        aggregated in this metric.
      properties:
        query:
          default: '*'
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    LogsMetricGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the log-based metric will be aggregated over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, the path
            attribute is used as the tag name.
          example: status_code
          type: string
      required:
        - path
      type: object
    LogsMetricCreateAttributes:
      description: The object describing the Datadog log-based metric to create.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricGroupBy'
          type: array
      required:
        - compute
      type: object
    LogsMetricCreateData:
      description: The new log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricCreateAttributes'
        id:
          $ref: '#/components/schemas/LogsMetricID'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      required:
        - id
        - type
        - attributes
      type: object
    LogsMetricCreateRequest:
      description: The new log-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricCreateData'
      required:
        - data
      type: object
    LogsMetricResponse:
      description: The log-based metric object.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricResponseData'
      type: object
    LogsMetricUpdateCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
      type: object
    LogsMetricUpdateAttributes:
      description: The log-based metric properties that will be updated.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricUpdateCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricGroupBy'
          type: array
      type: object
    LogsMetricUpdateData:
      description: The new log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricUpdateAttributes'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      required:
        - type
        - attributes
      type: object
    LogsMetricUpdateRequest:
      description: The new log-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricUpdateData'
      required:
        - data
      type: object
    LogsSort:
      description: Sort parameters when querying logs.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    LogAttributes:
      description: JSON object containing all log attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from your log.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        host:
          description: Name of the machine from where the logs are being sent.
          example: i-0123
          type: string
        message:
          description: >-
            The message [reserved
            attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message
            attribute as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where
            it is indexed for full text search.
          example: Host connected to remote
          type: string
        service:
          description: >-
            The name of the application or service generating the log events.

            It is used to switch from Logs to APM, so make sure you define the
            same

            value when you use both products.
          example: agent
          type: string
        status:
          description: Status of the message associated with your log.
          example: INFO
          type: string
        tags:
          description: Array of tags associated with your log.
          example:
            - team:A
          items:
            description: Tag associated with your log.
            type: string
          type: array
        timestamp:
          description: Timestamp of your log.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    LogType:
      default: log
      description: Type of the event.
      enum:
        - log
      example: log
      type: string
      x-enum-varnames:
        - LOG
    Log:
      description: Object description of a log after being processed and stored by Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/LogAttributes'
        id:
          description: Unique ID of the Log.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/LogType'
      type: object
    LogsListResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            Link for the next set of results. Note that the request can also be
            made using the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    LogsListResponse:
      description: >-
        Response object with all logs matching the request and pagination
        information.
      properties:
        data:
          description: Array of logs matching the request.
          items:
            $ref: '#/components/schemas/Log'
          type: array
        links:
          $ref: '#/components/schemas/LogsListResponseLinks'
        meta:
          $ref: '#/components/schemas/LogsResponseMetadata'
      type: object
    LogsListRequestPage:
      description: Paging attributes for listing logs.
      properties:
        cursor:
          description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of logs in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    LogsListRequest:
      description: The request for a logs list.
      properties:
        filter:
          $ref: '#/components/schemas/LogsQueryFilter'
        options:
          $ref: '#/components/schemas/LogsQueryOptions'
        page:
          $ref: '#/components/schemas/LogsListRequestPage'
        sort:
          $ref: '#/components/schemas/LogsSort'
      type: object
    MetricTagConfigurationMetricTypeCategory:
      default: distribution
      description: The metric's type category.
      enum:
        - non_distribution
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - NON_DISTRIBUTION
        - DISTRIBUTION
    MetricName:
      description: The metric name for this resource.
      example: test.metric.latency
      type: string
    MetricType:
      default: metrics
      description: The metric resource type.
      enum:
        - metrics
      example: metrics
      type: string
      x-enum-varnames:
        - METRICS
    Metric:
      description: Object for a single metric tag configuration.
      example:
        id: metric.foo.bar
        type: metrics
      properties:
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricType'
      type: object
    MetricCustomSpaceAggregation:
      description: A space aggregation for use in query.
      enum:
        - avg
        - max
        - min
        - sum
      example: sum
      type: string
      x-enum-varnames:
        - AVG
        - MAX
        - MIN
        - SUM
    MetricCustomTimeAggregation:
      description: A time aggregation for use in query.
      enum:
        - avg
        - count
        - max
        - min
        - sum
      example: sum
      type: string
      x-enum-varnames:
        - AVG
        - COUNT
        - MAX
        - MIN
        - SUM
    MetricCustomAggregation:
      description: A time and space aggregation combination for use in query.
      example:
        space: sum
        time: sum
      properties:
        space:
          $ref: '#/components/schemas/MetricCustomSpaceAggregation'
        time:
          $ref: '#/components/schemas/MetricCustomTimeAggregation'
      required:
        - time
        - space
      type: object
    MetricCustomAggregations:
      description: >-
        A list of queryable aggregation combinations for a count, rate, or gauge
        metric.

        By default, count and rate metrics require the (time: sum, space: sum)
        aggregation and

        Gauge metrics require the (time: avg, space: avg) aggregation.

        Additional time & space combinations are also available:


        - time: avg, space: avg

        - time: avg, space: max

        - time: avg, space: min

        - time: avg, space: sum

        - time: count, space: sum

        - time: max, space: max

        - time: min, space: min

        - time: sum, space: avg

        - time: sum, space: sum


        Can only be applied to non_distribution metrics that have a
        `metric_type` of `count`, `rate`, or `gauge`.
      example:
        - space: sum
          time: sum
        - space: sum
          time: count
      items:
        $ref: '#/components/schemas/MetricCustomAggregation'
      type: array
    MetricTagConfigurationMetricTypes:
      default: gauge
      description: The metric's type.
      enum:
        - gauge
        - count
        - rate
        - distribution
      example: count
      type: string
      x-enum-varnames:
        - GAUGE
        - COUNT
        - RATE
        - DISTRIBUTION
    MetricTagConfigurationAttributes:
      description: >-
        Object containing the definition of a metric tag configuration
        attributes.
      properties:
        aggregations:
          $ref: '#/components/schemas/MetricCustomAggregations'
        created_at:
          description: Timestamp when the tag configuration was created.
          example: '2020-03-25T09:48:37.463835Z'
          format: date-time
          type: string
        exclude_tags_mode:
          description: >-
            When set to true, the configuration will exclude the configured tags
            and include any other submitted tags.

            When set to false, the configuration will include the configured
            tags and exclude any other submitted tags.

            Defaults to false. Requires `tags` property.
          type: boolean
        include_percentiles:
          description: >-
            Toggle to include or exclude percentile aggregations for
            distribution metrics.

            Only present when the `metric_type` is `distribution`.
          example: true
          type: boolean
        metric_type:
          $ref: '#/components/schemas/MetricTagConfigurationMetricTypes'
        modified_at:
          description: Timestamp when the tag configuration was last modified.
          example: '2020-03-25T09:48:37.463835Z'
          format: date-time
          type: string
        tags:
          description: List of tag keys on which to group.
          example:
            - app
            - datacenter
          items:
            description: Tag keys to group by.
            type: string
          type: array
      type: object
    MetricTagConfigurationType:
      default: manage_tags
      description: The metric tag configuration resource type.
      enum:
        - manage_tags
      example: manage_tags
      type: string
      x-enum-varnames:
        - MANAGE_TAGS
    MetricTagConfiguration:
      description: Object for a single metric tag configuration.
      example:
        attributes:
          aggregations:
            - space: avg
              time: avg
          created_at: '2020-03-25T09:48:37.463835Z'
          metric_type: gauge
          modified_at: '2020-04-25T09:48:37.463835Z'
          tags:
            - app
            - datacenter
        id: http.request.latency
        type: manage_tags
      properties:
        attributes:
          $ref: '#/components/schemas/MetricTagConfigurationAttributes'
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricTagConfigurationType'
      type: object
    MetricsAndMetricTagConfigurations:
      description: Object for a metrics and metric tag configurations.
      oneOf:
        - $ref: '#/components/schemas/Metric'
        - $ref: '#/components/schemas/MetricTagConfiguration'
    MetricsListResponseLinks:
      description: >-
        Pagination links. Only present if pagination query parameters were
        provided.
      properties:
        first:
          description: Link to the first page.
          type: string
        last:
          description: Link to the last page.
          nullable: true
          type: string
        next:
          description: Link to the next page.
          nullable: true
          type: string
        prev:
          description: Link to previous page.
          nullable: true
          type: string
        self:
          description: Link to current page.
          type: string
      type: object
    MetricMetaPageType:
      default: cursor_limit
      description: Type of metric pagination.
      enum:
        - cursor_limit
      example: cursor_limit
      type: string
      x-enum-varnames:
        - CURSOR_LIMIT
    MetricMetaPage:
      description: >-
        Paging attributes. Only present if pagination query parameters were
        provided.
      properties:
        cursor:
          description: The cursor used to get the current results, if any.
          nullable: true
          type: string
        limit:
          description: Number of results returned
          format: int32
          maximum: 20000
          minimum: 0
          type: integer
        next_cursor:
          description: The cursor used to get the next results, if any.
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/MetricMetaPageType'
      type: object
    MetricPaginationMeta:
      description: Response metadata object.
      properties:
        pagination:
          $ref: '#/components/schemas/MetricMetaPage'
      type: object
    MetricsAndMetricTagConfigurationsResponse:
      description: Response object that includes metrics and metric tag configurations.
      properties:
        data:
          description: Array of metrics and metric tag configurations.
          items:
            $ref: '#/components/schemas/MetricsAndMetricTagConfigurations'
          type: array
        links:
          $ref: '#/components/schemas/MetricsListResponseLinks'
        meta:
          $ref: '#/components/schemas/MetricPaginationMeta'
      readOnly: true
      type: object
    MetricBulkTagConfigEmailList:
      description: A list of account emails to notify when the configuration is applied.
      example:
        - sue@example.com
        - bob@example.com
      items:
        description: An email address.
        type: string
      type: array
    MetricBulkTagConfigTagNameList:
      description: A list of tag names to apply to the configuration.
      example:
        - host
        - pod_name
        - is_shadow
      items:
        description: A metric tag name.
        maxLength: 200
        pattern: ^[A-Za-z][A-Za-z0-9\.\-\_:\/]*$
        type: string
      type: array
    MetricBulkTagConfigCreateAttributes:
      description: Optional parameters for bulk creating metric tag configurations.
      properties:
        emails:
          $ref: '#/components/schemas/MetricBulkTagConfigEmailList'
        exclude_tags_mode:
          description: >-
            When set to true, the configuration will exclude the configured tags
            and include any other submitted tags.

            When set to false, the configuration will include the configured
            tags and exclude any other submitted tags.

            Defaults to false.
          type: boolean
        include_actively_queried_tags_window:
          description: |-
            When provided, all tags that have been actively queried are
            configured (and, therefore, remain queryable) for each metric that
            matches the given prefix.  Minimum value is 1 second, and maximum
            value is 7,776,000 seconds (90 days).
          format: double
          maximum: 7776000
          minimum: 1
          type: number
        override_existing_configurations:
          description: |-
            When set to true, the configuration overrides any existing
            configurations for the given metric with the new set of tags in this
            configuration request. If false, old configurations are kept and
            are merged with the set of tags in this configuration request.
            Defaults to true.
          type: boolean
        tags:
          $ref: '#/components/schemas/MetricBulkTagConfigTagNameList'
      type: object
    MetricBulkTagConfigNamePrefix:
      description: A text prefix to match against metric names.
      example: kafka.lag
      type: string
    MetricBulkConfigureTagsType:
      default: metric_bulk_configure_tags
      description: The metric bulk configure tags resource.
      enum:
        - metric_bulk_configure_tags
      example: metric_bulk_configure_tags
      type: string
      x-enum-varnames:
        - BULK_MANAGE_TAGS
    MetricBulkTagConfigCreate:
      description: >-
        Request object to bulk configure tags for metrics matching the given
        prefix.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricBulkTagConfigCreateAttributes'
        id:
          $ref: '#/components/schemas/MetricBulkTagConfigNamePrefix'
        type:
          $ref: '#/components/schemas/MetricBulkConfigureTagsType'
      required:
        - id
        - type
      type: object
    MetricBulkTagConfigCreateRequest:
      description: Wrapper object for a single bulk tag configuration request.
      properties:
        data:
          $ref: '#/components/schemas/MetricBulkTagConfigCreate'
      required:
        - data
      type: object
    MetricBulkTagConfigStatusAttributes:
      description: Optional attributes for the status of a bulk tag configuration request.
      properties:
        emails:
          $ref: '#/components/schemas/MetricBulkTagConfigEmailList'
        exclude_tags_mode:
          description: >-
            When set to true, the configuration will exclude the configured tags
            and include any other submitted tags.

            When set to false, the configuration will include the configured
            tags and exclude any other submitted tags.
          type: boolean
        status:
          description: The status of the request.
          example: Accepted
          type: string
        tags:
          $ref: '#/components/schemas/MetricBulkTagConfigTagNameList'
      type: object
    MetricBulkTagConfigStatus:
      description: |-
        The status of a request to bulk configure metric tags.
        It contains the fields from the original request for reference.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricBulkTagConfigStatusAttributes'
        id:
          $ref: '#/components/schemas/MetricBulkTagConfigNamePrefix'
        type:
          $ref: '#/components/schemas/MetricBulkConfigureTagsType'
      required:
        - id
        - type
      type: object
    MetricBulkTagConfigResponse:
      description: Wrapper for a single bulk tag configuration status response.
      properties:
        data:
          $ref: '#/components/schemas/MetricBulkTagConfigStatus'
      type: object
    MetricBulkTagConfigDeleteAttributes:
      description: Optional parameters for bulk deleting metric tag configurations.
      properties:
        emails:
          $ref: '#/components/schemas/MetricBulkTagConfigEmailList'
      type: object
    MetricBulkTagConfigDelete:
      description: >-
        Request object to bulk delete all tag configurations for metrics
        matching the given prefix.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricBulkTagConfigDeleteAttributes'
        id:
          $ref: '#/components/schemas/MetricBulkTagConfigNamePrefix'
        type:
          $ref: '#/components/schemas/MetricBulkConfigureTagsType'
      required:
        - id
        - type
      type: object
    MetricBulkTagConfigDeleteRequest:
      description: Wrapper object for a single bulk tag deletion request.
      properties:
        data:
          $ref: '#/components/schemas/MetricBulkTagConfigDelete'
      required:
        - data
      type: object
    MetricSuggestedAggregations:
      description: List of aggregation combinations that have been actively queried.
      example:
        - space: sum
          time: sum
        - space: sum
          time: count
      items:
        $ref: '#/components/schemas/MetricCustomAggregation'
      type: array
    MetricSuggestedTagsAttributes:
      description: >-
        Object containing the definition of a metric's actively queried tags and
        aggregations.
      properties:
        active_aggregations:
          $ref: '#/components/schemas/MetricSuggestedAggregations'
        active_tags:
          description: List of tag keys that have been actively queried.
          example:
            - app
            - datacenter
          items:
            description: Actively queried tag keys.
            type: string
          type: array
      type: object
    MetricActiveConfigurationType:
      default: actively_queried_configurations
      description: The metric actively queried configuration resource type.
      enum:
        - actively_queried_configurations
      example: actively_queried_configurations
      type: string
      x-enum-varnames:
        - ACTIVELY_QUERIED_CONFIGURATIONS
    MetricSuggestedTagsAndAggregations:
      description: Object for a single metric's actively queried tags and aggregations.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricSuggestedTagsAttributes'
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricActiveConfigurationType'
      type: object
    MetricSuggestedTagsAndAggregationsResponse:
      description: >-
        Response object that includes a single metric's actively queried tags
        and aggregations.
      properties:
        data:
          $ref: '#/components/schemas/MetricSuggestedTagsAndAggregations'
      readOnly: true
      type: object
    MetricAllTagsAttributes:
      description: Object containing the definition of a metric's tags.
      properties:
        tags:
          description: List of indexed tag value pairs.
          example:
            - sport:golf
            - sport:football
            - animal:dog
          items:
            description: Tag key-value pairs.
            type: string
          type: array
      type: object
    MetricAllTags:
      description: Object for a single metric's indexed tags.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricAllTagsAttributes'
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricType'
      type: object
    MetricAllTagsResponse:
      description: Response object that includes a single metric's indexed tags.
      properties:
        data:
          $ref: '#/components/schemas/MetricAllTags'
      readOnly: true
      type: object
    MetricDashboardID:
      description: The related dashboard's ID.
      example: xxx-yyy-zzz
      type: string
    MetricDashboardType:
      description: Dashboard resource type.
      enum:
        - dashboards
      example: dashboards
      type: string
      x-enum-varnames:
        - DASHBOARDS
    MetricAssetDashboardRelationship:
      description: >-
        An object of type `dashboard` that can be referenced in the `included`
        data.
      properties:
        id:
          $ref: '#/components/schemas/MetricDashboardID'
        type:
          $ref: '#/components/schemas/MetricDashboardType'
      type: object
    MetricAssetDashboardRelationships:
      description: >-
        An object containing the list of dashboards that can be referenced in
        the `included` data.
      properties:
        data:
          description: A list of dashboards that can be referenced in the `included` data.
          items:
            $ref: '#/components/schemas/MetricAssetDashboardRelationship'
          type: array
      type: object
    MetricMonitorID:
      description: The related monitor's ID.
      example: '1775073'
      type: string
    MetricMonitorType:
      description: Monitor resource type.
      enum:
        - monitors
      example: monitors
      type: string
      x-enum-varnames:
        - MONITORS
    MetricAssetMonitorRelationship:
      description: >-
        An object of type `monitor` that can be referenced in the `included`
        data.
      properties:
        id:
          $ref: '#/components/schemas/MetricMonitorID'
        type:
          $ref: '#/components/schemas/MetricMonitorType'
      type: object
    MetricAssetMonitorRelationships:
      description: >-
        A object containing the list of monitors that can be referenced in the
        `included` data.
      properties:
        data:
          description: A list of monitors that can be referenced in the `included` data.
          items:
            $ref: '#/components/schemas/MetricAssetMonitorRelationship'
          type: array
      type: object
    MetricNotebookID:
      description: The related notebook's ID.
      example: '12345'
      type: string
    MetricNotebookType:
      description: Notebook resource type.
      enum:
        - notebooks
      example: notebooks
      type: string
      x-enum-varnames:
        - NOTEBOOKS
    MetricAssetNotebookRelationship:
      description: >-
        An object of type `notebook` that can be referenced in the `included`
        data.
      properties:
        id:
          $ref: '#/components/schemas/MetricNotebookID'
        type:
          $ref: '#/components/schemas/MetricNotebookType'
      type: object
    MetricAssetNotebookRelationships:
      description: >-
        An object containing the list of notebooks that can be referenced in the
        `included` data.
      properties:
        data:
          description: A list of notebooks that can be referenced in the `included` data.
          items:
            $ref: '#/components/schemas/MetricAssetNotebookRelationship'
          type: array
      type: object
    MetricSLOID:
      description: The SLO ID.
      example: 9ffef113b389520db54391d67d652dfb
      type: string
    MetricSLOType:
      description: SLO resource type.
      enum:
        - slos
      example: slos
      type: string
      x-enum-varnames:
        - SLOS
    MetricAssetSLORelationship:
      description: An object of type `slos` that can be referenced in the `included` data.
      properties:
        id:
          $ref: '#/components/schemas/MetricSLOID'
        type:
          $ref: '#/components/schemas/MetricSLOType'
      type: object
    MetricAssetSLORelationships:
      description: >-
        An object containing a list of SLOs that can be referenced in the
        `included` data.
      properties:
        data:
          description: A list of SLOs that can be referenced in the `included` data.
          items:
            $ref: '#/components/schemas/MetricAssetSLORelationship'
          type: array
      type: object
    MetricAssetResponseRelationships:
      description: Relationships to assets related to the metric.
      properties:
        dashboards:
          $ref: '#/components/schemas/MetricAssetDashboardRelationships'
        monitors:
          $ref: '#/components/schemas/MetricAssetMonitorRelationships'
        notebooks:
          $ref: '#/components/schemas/MetricAssetNotebookRelationships'
        slos:
          $ref: '#/components/schemas/MetricAssetSLORelationships'
      type: object
    MetricAssetResponseData:
      description: Metric assets response data.
      properties:
        id:
          $ref: '#/components/schemas/MetricName'
        relationships:
          $ref: '#/components/schemas/MetricAssetResponseRelationships'
        type:
          $ref: '#/components/schemas/MetricType'
      required:
        - id
        - type
      type: object
    MetricDashboardAttributes:
      description: >-
        Attributes related to the dashboard, including title, popularity, and
        url.
      properties:
        popularity:
          description: Value from 0 to 5 that ranks popularity of the dashboard.
          format: double
          maximum: 5
          minimum: 0
          type: number
        title:
          description: Title of the asset.
          type: string
        url:
          description: URL path of the asset.
          type: string
      type: object
    MetricDashboardAsset:
      description: A dashboard object with title and popularity.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricDashboardAttributes'
        id:
          $ref: '#/components/schemas/MetricDashboardID'
        type:
          $ref: '#/components/schemas/MetricDashboardType'
      required:
        - id
        - type
      type: object
    MetricAssetAttributes:
      description: Assets related to the object, including title and url.
      properties:
        title:
          description: Title of the asset.
          type: string
        url:
          description: URL path of the asset.
          type: string
      type: object
    MetricMonitorAsset:
      description: A monitor object with title.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricAssetAttributes'
        id:
          $ref: '#/components/schemas/MetricMonitorID'
        type:
          $ref: '#/components/schemas/MetricMonitorType'
      required:
        - id
        - type
      type: object
    MetricNotebookAsset:
      description: A notebook object with title.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricAssetAttributes'
        id:
          $ref: '#/components/schemas/MetricNotebookID'
        type:
          $ref: '#/components/schemas/MetricNotebookType'
      required:
        - id
        - type
      type: object
    MetricSLOAsset:
      description: A SLO object with title.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricAssetAttributes'
        id:
          $ref: '#/components/schemas/MetricSLOID'
        type:
          $ref: '#/components/schemas/MetricSLOType'
      required:
        - id
        - type
      type: object
    MetricAssetResponseIncluded:
      description: List of included assets with full set of attributes.
      oneOf:
        - $ref: '#/components/schemas/MetricDashboardAsset'
        - $ref: '#/components/schemas/MetricMonitorAsset'
        - $ref: '#/components/schemas/MetricNotebookAsset'
        - $ref: '#/components/schemas/MetricSLOAsset'
    MetricAssetsResponse:
      description: >-
        Response object that includes related dashboards, monitors, notebooks,
        and SLOs.
      properties:
        data:
          $ref: '#/components/schemas/MetricAssetResponseData'
        included:
          description: Array of objects related to the metric assets.
          items:
            $ref: '#/components/schemas/MetricAssetResponseIncluded'
          type: array
      type: object
    MetricEstimateType:
      default: count_or_gauge
      description: >-
        Estimate type based on the queried configuration. By default,
        `count_or_gauge` is returned. `distribution` is returned for
        distribution metrics without percentiles enabled. Lastly, `percentile`
        is returned if `filter[pct]=true` is queried with a distribution metric.
      enum:
        - count_or_gauge
        - distribution
        - percentile
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT_OR_GAUGE
        - DISTRIBUTION
        - PERCENTILE
    MetricEstimateAttributes:
      description: Object containing the definition of a metric estimate attribute.
      properties:
        estimate_type:
          $ref: '#/components/schemas/MetricEstimateType'
        estimated_at:
          description: Timestamp when the cardinality estimate was requested.
          example: '2022-04-27T09:48:37.463835Z'
          format: date-time
          type: string
        estimated_output_series:
          description: >-
            Estimated cardinality of the metric based on the queried
            configuration.
          example: 50
          format: int64
          type: integer
      type: object
    MetricEstimateResourceType:
      default: metric_cardinality_estimate
      description: The metric estimate resource type.
      enum:
        - metric_cardinality_estimate
      example: metric_cardinality_estimate
      type: string
      x-enum-varnames:
        - METRIC_CARDINALITY_ESTIMATE
    MetricEstimate:
      description: Object for a metric cardinality estimate.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricEstimateAttributes'
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricEstimateResourceType'
      type: object
    MetricEstimateResponse:
      description: Response object that includes metric cardinality estimates.
      properties:
        data:
          $ref: '#/components/schemas/MetricEstimate'
      type: object
    MetricTagConfigurationResponse:
      description: Response object which includes a single metric's tag configuration.
      properties:
        data:
          $ref: '#/components/schemas/MetricTagConfiguration'
      readOnly: true
      type: object
    MetricTagConfigurationCreateAttributes:
      description: >-
        Object containing the definition of a metric tag configuration to be
        created.
      properties:
        aggregations:
          $ref: '#/components/schemas/MetricCustomAggregations'
        exclude_tags_mode:
          description: >-
            When set to true, the configuration will exclude the configured tags
            and include any other submitted tags.

            When set to false, the configuration will include the configured
            tags and exclude any other submitted tags.

            Defaults to false. Requires `tags` property.
          type: boolean
        include_percentiles:
          description: >-
            Toggle to include/exclude percentiles for a distribution metric.

            Defaults to false. Can only be applied to metrics that have a
            `metric_type` of `distribution`.
          example: true
          type: boolean
        metric_type:
          $ref: '#/components/schemas/MetricTagConfigurationMetricTypes'
        tags:
          default: []
          description: A list of tag keys that will be queryable for your metric.
          example:
            - app
            - datacenter
          items:
            description: Tag keys to group by.
            type: string
          type: array
      required:
        - tags
        - metric_type
      type: object
    MetricTagConfigurationCreateData:
      description: Object for a single metric to be configure tags on.
      example:
        attributes:
          include_percentiles: false
          metric_type: distribution
          tags:
            - app
            - datacenter
        id: http.endpoint.request
        type: manage_tags
      properties:
        attributes:
          $ref: '#/components/schemas/MetricTagConfigurationCreateAttributes'
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricTagConfigurationType'
      required:
        - id
        - type
      type: object
    MetricTagConfigurationCreateRequest:
      description: >-
        Request object that includes the metric that you would like to configure
        tags for.
      properties:
        data:
          $ref: '#/components/schemas/MetricTagConfigurationCreateData'
      required:
        - data
      type: object
    MetricTagConfigurationUpdateAttributes:
      description: >-
        Object containing the definition of a metric tag configuration to be
        updated.
      properties:
        aggregations:
          $ref: '#/components/schemas/MetricCustomAggregations'
        exclude_tags_mode:
          description: >-
            When set to true, the configuration will exclude the configured tags
            and include any other submitted tags.

            When set to false, the configuration will include the configured
            tags and exclude any other submitted tags.

            Defaults to false. Requires `tags` property.
          type: boolean
        include_percentiles:
          description: >-
            Toggle to include/exclude percentiles for a distribution metric.

            Defaults to false. Can only be applied to metrics that have a
            `metric_type` of `distribution`.
          example: true
          type: boolean
        tags:
          default: []
          description: A list of tag keys that will be queryable for your metric.
          example:
            - app
            - datacenter
          items:
            description: Tag keys to group by.
            type: string
          type: array
      type: object
    MetricTagConfigurationUpdateData:
      description: Object for a single tag configuration to be edited.
      example:
        attributes:
          group_by:
            - app
            - datacenter
          include_percentiles: false
        id: http.endpoint.request
        type: manage_tags
      properties:
        attributes:
          $ref: '#/components/schemas/MetricTagConfigurationUpdateAttributes'
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricTagConfigurationType'
      required:
        - id
        - type
      type: object
    MetricTagConfigurationUpdateRequest:
      description: >-
        Request object that includes the metric that you would like to edit the
        tag configuration on.
      properties:
        data:
          $ref: '#/components/schemas/MetricTagConfigurationUpdateData'
      required:
        - data
      type: object
    MetricDistinctVolumeAttributes:
      description: Object containing the definition of a metric's distinct volume.
      properties:
        distinct_volume:
          description: Distinct volume for the given metric.
          example: 10
          format: int64
          type: integer
      type: object
    MetricDistinctVolumeType:
      default: distinct_metric_volumes
      description: The metric distinct volume type.
      enum:
        - distinct_metric_volumes
      example: distinct_metric_volumes
      type: string
      x-enum-varnames:
        - DISTINCT_METRIC_VOLUMES
    MetricDistinctVolume:
      description: Object for a single metric's distinct volume.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricDistinctVolumeAttributes'
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricDistinctVolumeType'
      type: object
    MetricIngestedIndexedVolumeAttributes:
      description: >-
        Object containing the definition of a metric's ingested and indexed
        volume.
      properties:
        indexed_volume:
          description: Indexed volume for the given metric.
          example: 10
          format: int64
          type: integer
        ingested_volume:
          description: Ingested volume for the given metric.
          example: 20
          format: int64
          type: integer
      type: object
    MetricIngestedIndexedVolumeType:
      default: metric_volumes
      description: The metric ingested and indexed volume type.
      enum:
        - metric_volumes
      example: metric_volumes
      type: string
      x-enum-varnames:
        - METRIC_VOLUMES
    MetricIngestedIndexedVolume:
      description: Object for a single metric's ingested and indexed volume.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricIngestedIndexedVolumeAttributes'
        id:
          $ref: '#/components/schemas/MetricName'
        type:
          $ref: '#/components/schemas/MetricIngestedIndexedVolumeType'
      type: object
    MetricVolumes:
      description: Possible response objects for a metric's volume.
      oneOf:
        - $ref: '#/components/schemas/MetricDistinctVolume'
        - $ref: '#/components/schemas/MetricIngestedIndexedVolume'
    MetricVolumesResponse:
      description: Response object which includes a single metric's volume.
      properties:
        data:
          $ref: '#/components/schemas/MetricVolumes'
      readOnly: true
      type: object
    MonitorNotificationRuleFilterTags:
      additionalProperties: false
      description: Filter monitors by tags. Monitors must match all tags.
      properties:
        tags:
          description: A list of monitor tags.
          example:
            - team:product
            - host:abc
          items:
            maxLength: 255
            type: string
          maxItems: 20
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - tags
      type: object
    MonitorNotificationRuleFilter:
      description: Filter used to associate the notification rule with monitors.
      oneOf:
        - $ref: '#/components/schemas/MonitorNotificationRuleFilterTags'
    MonitorNotificationRuleName:
      description: The name of the monitor notification rule.
      example: A notification rule name
      maxLength: 1000
      minLength: 1
      type: string
    MonitorNotificationRuleRecipients:
      description: >-
        A list of recipients to notify. Uses the same format as the monitor
        `message` field. Must not start with an '@'.
      example:
        - slack-test-channel
        - jira-test
      items:
        description: individual recipient.
        maxLength: 255
        type: string
      maxItems: 20
      minItems: 1
      type: array
      uniqueItems: true
    MonitorNotificationRuleResponseAttributes:
      additionalProperties: {}
      description: Attributes of the monitor notification rule.
      properties:
        created:
          description: Creation time of the monitor notification rule.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          type: string
        filter:
          $ref: '#/components/schemas/MonitorNotificationRuleFilter'
        modified:
          description: Time the monitor notification rule was last modified.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          type: string
        name:
          $ref: '#/components/schemas/MonitorNotificationRuleName'
        recipients:
          $ref: '#/components/schemas/MonitorNotificationRuleRecipients'
      type: object
    MonitorNotificationRuleId:
      description: The ID of the monitor notification rule.
      example: 00000000-0000-1234-0000-000000000000
      type: string
    MonitorNotificationRuleRelationshipsCreatedByData:
      description: Data for the user who created the monitor notification rule.
      nullable: true
      properties:
        id:
          description: User ID of the monitor notification rule creator.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    MonitorNotificationRuleRelationshipsCreatedBy:
      description: The user who created the monitor notification rule.
      properties:
        data:
          $ref: >-
            #/components/schemas/MonitorNotificationRuleRelationshipsCreatedByData
      type: object
    MonitorNotificationRuleRelationships:
      description: All relationships associated with monitor notification rule.
      properties:
        created_by:
          $ref: '#/components/schemas/MonitorNotificationRuleRelationshipsCreatedBy'
      type: object
    MonitorNotificationRuleResourceType:
      default: monitor-notification-rule
      description: Monitor notification rule resource type.
      enum:
        - monitor-notification-rule
      example: monitor-notification-rule
      type: string
      x-enum-varnames:
        - MONITOR_NOTIFICATION_RULE
    MonitorNotificationRuleData:
      description: Monitor notification rule data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorNotificationRuleResponseAttributes'
        id:
          $ref: '#/components/schemas/MonitorNotificationRuleId'
        relationships:
          $ref: '#/components/schemas/MonitorNotificationRuleRelationships'
        type:
          $ref: '#/components/schemas/MonitorNotificationRuleResourceType'
      type: object
    MonitorNotificationRuleResponseIncludedItem:
      description: An object related to a monitor notification rule.
      oneOf:
        - $ref: '#/components/schemas/User'
    MonitorNotificationRuleListResponse:
      description: Response for retrieving all monitor notification rules.
      properties:
        data:
          description: A list of monitor notification rules.
          items:
            $ref: '#/components/schemas/MonitorNotificationRuleData'
          type: array
        included:
          description: Array of objects related to the monitor notification rules.
          items:
            $ref: '#/components/schemas/MonitorNotificationRuleResponseIncludedItem'
          type: array
      type: object
    MonitorNotificationRuleAttributes:
      additionalProperties: false
      description: Attributes of the monitor notification rule.
      properties:
        filter:
          $ref: '#/components/schemas/MonitorNotificationRuleFilter'
        name:
          $ref: '#/components/schemas/MonitorNotificationRuleName'
        recipients:
          $ref: '#/components/schemas/MonitorNotificationRuleRecipients'
      required:
        - name
        - recipients
      type: object
    MonitorNotificationRuleCreateRequestData:
      description: Object to create a monitor notification rule.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorNotificationRuleAttributes'
        type:
          $ref: '#/components/schemas/MonitorNotificationRuleResourceType'
      required:
        - attributes
      type: object
    MonitorNotificationRuleCreateRequest:
      description: Request for creating a monitor notification rule.
      properties:
        data:
          $ref: '#/components/schemas/MonitorNotificationRuleCreateRequestData'
      required:
        - data
      type: object
    MonitorNotificationRuleResponse:
      description: A monitor notification rule.
      properties:
        data:
          $ref: '#/components/schemas/MonitorNotificationRuleData'
        included:
          description: >-
            Array of objects related to the monitor notification rule that the
            user requested.
          items:
            $ref: '#/components/schemas/MonitorNotificationRuleResponseIncludedItem'
          type: array
      type: object
    MonitorNotificationRuleUpdateRequestData:
      description: Object to update a monitor notification rule.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorNotificationRuleAttributes'
        id:
          $ref: '#/components/schemas/MonitorNotificationRuleId'
        type:
          $ref: '#/components/schemas/MonitorNotificationRuleResourceType'
      required:
        - id
        - attributes
      type: object
    MonitorNotificationRuleUpdateRequest:
      description: Request for updating a monitor notification rule.
      properties:
        data:
          $ref: '#/components/schemas/MonitorNotificationRuleUpdateRequestData'
      required:
        - data
      type: object
    MonitorConfigPolicyTagPolicy:
      description: Tag attributes of a monitor configuration policy.
      properties:
        tag_key:
          description: The key of the tag.
          example: datacenter
          maxLength: 255
          type: string
        tag_key_required:
          description: If a tag key is required for monitor creation.
          example: true
          type: boolean
        valid_tag_values:
          description: Valid values for the tag.
          example:
            - prod
            - staging
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    MonitorConfigPolicyPolicy:
      description: Configuration for the policy.
      oneOf:
        - $ref: '#/components/schemas/MonitorConfigPolicyTagPolicy'
    MonitorConfigPolicyType:
      default: tag
      description: The monitor configuration policy type.
      enum:
        - tag
      example: tag
      type: string
      x-enum-varnames:
        - TAG
    MonitorConfigPolicyAttributeResponse:
      description: Policy and policy type for a monitor configuration policy.
      properties:
        policy:
          $ref: '#/components/schemas/MonitorConfigPolicyPolicy'
        policy_type:
          $ref: '#/components/schemas/MonitorConfigPolicyType'
      type: object
    MonitorConfigPolicyResourceType:
      default: monitor-config-policy
      description: Monitor configuration policy resource type.
      enum:
        - monitor-config-policy
      example: monitor-config-policy
      type: string
      x-enum-varnames:
        - MONITOR_CONFIG_POLICY
    MonitorConfigPolicyResponseData:
      description: A monitor configuration policy data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorConfigPolicyAttributeResponse'
        id:
          description: ID of this monitor configuration policy.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/MonitorConfigPolicyResourceType'
      type: object
    MonitorConfigPolicyListResponse:
      description: Response for retrieving all monitor configuration policies.
      properties:
        data:
          description: An array of monitor configuration policies.
          items:
            $ref: '#/components/schemas/MonitorConfigPolicyResponseData'
          type: array
      type: object
    MonitorConfigPolicyTagPolicyCreateRequest:
      description: Tag attributes of a monitor configuration policy.
      properties:
        tag_key:
          description: The key of the tag.
          example: datacenter
          maxLength: 255
          type: string
        tag_key_required:
          description: If a tag key is required for monitor creation.
          example: true
          type: boolean
        valid_tag_values:
          description: Valid values for the tag.
          example:
            - prod
            - staging
          items:
            maxLength: 255
            type: string
          type: array
      required:
        - tag_key
        - tag_key_required
        - valid_tag_values
      type: object
    MonitorConfigPolicyPolicyCreateRequest:
      description: Configuration for the policy.
      oneOf:
        - $ref: '#/components/schemas/MonitorConfigPolicyTagPolicyCreateRequest'
    MonitorConfigPolicyAttributeCreateRequest:
      description: Policy and policy type for a monitor configuration policy.
      properties:
        policy:
          $ref: '#/components/schemas/MonitorConfigPolicyPolicyCreateRequest'
        policy_type:
          $ref: '#/components/schemas/MonitorConfigPolicyType'
      required:
        - policy_type
        - policy
      type: object
    MonitorConfigPolicyCreateData:
      description: A monitor configuration policy data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorConfigPolicyAttributeCreateRequest'
        type:
          $ref: '#/components/schemas/MonitorConfigPolicyResourceType'
      required:
        - type
        - attributes
      type: object
    MonitorConfigPolicyCreateRequest:
      description: Request for creating a monitor configuration policy.
      properties:
        data:
          $ref: '#/components/schemas/MonitorConfigPolicyCreateData'
      required:
        - data
      type: object
    MonitorConfigPolicyResponse:
      description: Response for retrieving a monitor configuration policy.
      properties:
        data:
          $ref: '#/components/schemas/MonitorConfigPolicyResponseData'
      type: object
    MonitorConfigPolicyAttributeEditRequest:
      description: Policy and policy type for a monitor configuration policy.
      properties:
        policy:
          $ref: '#/components/schemas/MonitorConfigPolicyPolicy'
        policy_type:
          $ref: '#/components/schemas/MonitorConfigPolicyType'
      required:
        - policy_type
        - policy
      type: object
    MonitorConfigPolicyEditData:
      description: A monitor configuration policy data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorConfigPolicyAttributeEditRequest'
        id:
          description: ID of this monitor configuration policy.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/MonitorConfigPolicyResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    MonitorConfigPolicyEditRequest:
      description: Request for editing a monitor configuration policy.
      properties:
        data:
          $ref: '#/components/schemas/MonitorConfigPolicyEditData'
      required:
        - data
      type: object
    MonitorDowntimeMatchResponseAttributes:
      description: Downtime match details.
      properties:
        end:
          description: The end of the downtime.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          nullable: true
          type: string
        groups:
          description: An array of groups associated with the downtime.
          example:
            - service:postgres
            - team:frontend
          items:
            description: An array of groups.
            example: service:postgres
            type: string
          type: array
        scope:
          $ref: '#/components/schemas/DowntimeScope'
        start:
          description: The start of the downtime.
          example: '2020-01-02 03:04:00+00:00'
          format: date-time
          type: string
      type: object
    MonitorDowntimeMatchResourceType:
      default: downtime_match
      description: Monitor Downtime Match resource type.
      enum:
        - downtime_match
      example: downtime_match
      type: string
      x-enum-varnames:
        - DOWNTIME_MATCH
    MonitorDowntimeMatchResponseData:
      description: A downtime match.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorDowntimeMatchResponseAttributes'
        id:
          description: The downtime ID.
          example: 00000000-0000-1234-0000-000000000000
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/MonitorDowntimeMatchResourceType'
      type: object
    MonitorDowntimeMatchResponse:
      description: Response for retrieving all downtime matches for a monitor.
      properties:
        data:
          description: An array of downtime matches.
          items:
            $ref: '#/components/schemas/MonitorDowntimeMatchResponseData'
          type: array
        meta:
          $ref: '#/components/schemas/DowntimeMeta'
      type: object
    DeviceAttributesInterfaceStatuses:
      description: Count of the device interfaces by status
      example:
        down: 1
        'off': 2
        up: 12
        warning: 5
      properties:
        down:
          description: The number of interfaces that are down
          format: int64
          type: integer
        'off':
          description: The number of interfaces that are off
          format: int64
          type: integer
        up:
          description: The number of interfaces that are up
          format: int64
          type: integer
        warning:
          description: The number of interfaces that are in a warning state
          format: int64
          type: integer
      type: object
    DeviceAttributes:
      description: The device attributes
      properties:
        description:
          description: The device description
          example: a device monitored with NDM
          type: string
        device_type:
          description: The device type
          example: other
          type: string
        integration:
          description: The device integration
          example: snmp
          type: string
        interface_statuses:
          $ref: '#/components/schemas/DeviceAttributesInterfaceStatuses'
        ip_address:
          description: The device IP address
          example: 1.2.3.4
          type: string
        location:
          description: The device location
          example: paris
          type: string
        model:
          description: The device model
          example: xx-123
          type: string
        name:
          description: The device name
          example: example device
          type: string
        os_hostname:
          description: The device OS hostname
          type: string
        os_name:
          description: The device OS name
          example: example OS
          type: string
        os_version:
          description: The device OS version
          example: 1.0.2
          type: string
        ping_status:
          description: The device ping status
          example: unmonitored
          type: string
        product_name:
          description: The device product name
          example: example device
          type: string
        serial_number:
          description: The device serial number
          example: X12345
          type: string
        status:
          description: The device SNMP status
          example: ok
          type: string
        subnet:
          description: The device subnet
          example: 1.2.3.4/24
          type: string
        sys_object_id:
          description: The device `sys_object_id`
          example: 1.3.6.1.4.1.99999
          type: string
        tags:
          description: The list of device tags
          example:
            - device_ip:1.2.3.4
            - device_id:example:1.2.3.4
          items:
            type: string
          type: array
        vendor:
          description: The device vendor
          example: example vendor
          type: string
        version:
          description: The device version
          example: 1.2.3
          type: string
      type: object
    DevicesListData:
      description: The devices list data
      properties:
        attributes:
          $ref: '#/components/schemas/DeviceAttributes'
        id:
          description: The device ID
          example: example:1.2.3.4
          type: string
        type:
          description: The type of the resource. The value should always be device.
          type: string
      type: object
    ListDevicesResponseMetadataPage:
      description: Pagination object.
      properties:
        total_filtered_count:
          description: Total count of devices matched by the filter.
          example: 1
          format: int64
          type: integer
      type: object
    ListDevicesResponseMetadata:
      description: Object describing meta attributes of response.
      properties:
        page:
          $ref: '#/components/schemas/ListDevicesResponseMetadataPage'
      type: object
    ListDevicesResponse:
      description: List devices response.
      properties:
        data:
          description: The list devices response data.
          items:
            $ref: '#/components/schemas/DevicesListData'
          type: array
        meta:
          $ref: '#/components/schemas/ListDevicesResponseMetadata'
      type: object
    GetDeviceAttributes:
      description: The device attributes
      properties:
        description:
          description: A description of the device.
          example: a device monitored with NDM
          type: string
        device_type:
          description: The type of the device.
          example: other
          type: string
        integration:
          description: The integration of the device.
          example: snmp
          type: string
        ip_address:
          description: The IP address of the device.
          example: 1.2.3.4
          type: string
        location:
          description: The location of the device.
          example: paris
          type: string
        model:
          description: The model of the device.
          example: xx-123
          type: string
        name:
          description: The name of the device.
          example: example device
          type: string
        os_hostname:
          description: The operating system hostname of the device.
          example: 1.0.2
          type: string
        os_name:
          description: The operating system name of the device.
          example: example OS
          type: string
        os_version:
          description: The operating system version of the device.
          example: 1.0.2
          type: string
        ping_status:
          description: The ping status of the device.
          example: unmonitored
          type: string
        product_name:
          description: The product name of the device.
          example: example device
          type: string
        serial_number:
          description: The serial number of the device.
          example: X12345
          type: string
        status:
          description: The status of the device.
          example: ok
          type: string
        subnet:
          description: The subnet of the device.
          example: 1.2.3.4/24
          type: string
        sys_object_id:
          description: The device `sys_object_id`.
          example: 1.3.6.1.4.1.99999
          type: string
        tags:
          description: A list of tags associated with the device.
          example:
            - device_ip:1.2.3.4
            - device_id:example:1.2.3.4
          items:
            type: string
          type: array
        vendor:
          description: The vendor of the device.
          example: example vendor
          type: string
        version:
          description: The version of the device.
          example: 1.2.3
          type: string
      type: object
    GetDeviceData:
      description: Get device response data.
      properties:
        attributes:
          $ref: '#/components/schemas/GetDeviceAttributes'
        id:
          description: The device ID
          example: example:1.2.3.4
          type: string
        type:
          description: The type of the resource. The value should always be device.
          type: string
      type: object
    GetDeviceResponse:
      description: The `GetDevice` operation's response.
      properties:
        data:
          $ref: '#/components/schemas/GetDeviceData'
      type: object
    InterfaceAttributesStatus:
      description: The interface status
      enum:
        - up
        - down
        - warning
        - 'off'
      example: up
      type: string
      x-enum-varnames:
        - UP
        - DOWN
        - WARNING
        - 'OFF'
    InterfaceAttributes:
      description: The interface attributes
      properties:
        alias:
          description: The interface alias
          example: interface_0
          type: string
        description:
          description: The interface description
          example: a network interface
          type: string
        index:
          description: The interface index
          example: 0
          format: int64
          type: integer
        ip_addresses:
          description: The interface IP addresses
          example:
            - 1.1.1.1
            - 1.1.1.2
          items:
            type: string
          type: array
        mac_address:
          description: The interface MAC address
          example: '00:00:00:00:00:00'
          type: string
        name:
          description: The interface name
          example: if0
          type: string
        status:
          $ref: '#/components/schemas/InterfaceAttributesStatus'
      type: object
    GetInterfacesData:
      description: The interfaces list data
      properties:
        attributes:
          $ref: '#/components/schemas/InterfaceAttributes'
        id:
          description: The interface ID
          example: example:1.2.3.4:99
          type: string
        type:
          description: The type of the resource. The value should always be interface.
          type: string
      type: object
    GetInterfacesResponse:
      description: The `GetInterfaces` operation's response.
      properties:
        data:
          description: Get Interfaces response
          items:
            $ref: '#/components/schemas/GetInterfacesData'
          type: array
      type: object
    ListTagsResponseDataAttributes:
      description: The definition of ListTagsResponseDataAttributes object.
      properties:
        tags:
          description: The list of tags
          example:
            - tag:test
            - tag:testbis
          items:
            type: string
          type: array
      type: object
    ListTagsResponseData:
      description: The list tags response data.
      properties:
        attributes:
          $ref: '#/components/schemas/ListTagsResponseDataAttributes'
        id:
          description: The device ID
          example: example:1.2.3.4
          type: string
        type:
          description: The type of the resource. The value should always be tags.
          type: string
      type: object
    ListTagsResponse:
      description: List tags response.
      properties:
        data:
          $ref: '#/components/schemas/ListTagsResponseData'
      type: object
    SingleAggregatedConnectionResponseDataAttributes:
      description: Attributes for an aggregated connection.
      properties:
        bytes_sent_by_client:
          description: The total number of bytes sent by the client over the given period.
          format: int64
          type: integer
        bytes_sent_by_server:
          description: The total number of bytes sent by the server over the given period.
          format: int64
          type: integer
        group_bys:
          additionalProperties:
            description: The values for each group by.
            items:
              type: string
            type: array
          description: The key, value pairs for each group by.
          type: object
        packets_sent_by_client:
          description: >-
            The total number of packets sent by the client over the given
            period.
          format: int64
          type: integer
        packets_sent_by_server:
          description: >-
            The total number of packets sent by the server over the given
            period.
          format: int64
          type: integer
        rtt_micro_seconds:
          description: >-
            Measured as TCP smoothed round trip time in microseconds (the time
            between a TCP frame being sent and acknowledged).
          format: int64
          type: integer
        tcp_closed_connections:
          description: >-
            The number of TCP connections in a closed state. Measured in
            connections per second from the client.
          format: int64
          type: integer
        tcp_established_connections:
          description: >-
            The number of TCP connections in an established state. Measured in
            connections per second from the client.
          format: int64
          type: integer
        tcp_refusals:
          description: >-
            The number of TCP connections that were refused by the server.
            Typically this indicates an attempt to connect to an IP/port that is
            not receiving connections, or a firewall/security misconfiguration.
          format: int64
          type: integer
        tcp_resets:
          description: The number of TCP connections that were reset by the server.
          format: int64
          type: integer
        tcp_retransmits:
          description: >-
            TCP Retransmits represent detected failures that are retransmitted
            to ensure delivery. Measured in count of retransmits from the
            client.
          format: int64
          type: integer
        tcp_timeouts:
          description: >-
            The number of TCP connections that timed out from the perspective of
            the operating system. This can indicate general connectivity and
            latency issues.
          format: int64
          type: integer
      type: object
    SingleAggregatedConnectionResponseDataType:
      default: aggregated_connection
      description: Aggregated connection resource type.
      enum:
        - aggregated_connection
      type: string
      x-enum-varnames:
        - AGGREGATED_CONNECTION
    SingleAggregatedConnectionResponseData:
      description: Object describing an aggregated connection.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/SingleAggregatedConnectionResponseDataAttributes
        id:
          description: >-
            A unique identifier for the aggregated connection based on the group
            by values.
          type: string
        type:
          $ref: '#/components/schemas/SingleAggregatedConnectionResponseDataType'
      type: object
    SingleAggregatedConnectionResponseArray:
      description: List of aggregated connections.
      example:
        data:
          - attributes:
              bytes_sent_by_client: 100
              bytes_sent_by_server: 200
              group_bys:
                client_team:
                  - networks
                server_service:
                  - hucklebuck
              packets_sent_by_client: 10
              packets_sent_by_server: 20
              rtt_micro_seconds: 800
              tcp_closed_connections: 30
              tcp_established_connections: 40
              tcp_refusals: 7
              tcp_resets: 5
              tcp_retransmits: 30
              tcp_timeouts: 6
            id: client_team:networks, server_service:hucklebuck
            type: aggregated_connection
      properties:
        data:
          description: Array of aggregated connection objects.
          items:
            $ref: '#/components/schemas/SingleAggregatedConnectionResponseData'
          type: array
      type: object
    EscalationPolicyCreateRequestDataAttributesStepsItemsAssignment:
      description: >-
        Specifies how this escalation step will assign targets (example
        `default` or `round-robin`).
      enum:
        - default
        - round-robin
      example: default
      type: string
      x-enum-varnames:
        - DEFAULT
        - ROUND_ROBIN
    EscalationPolicyCreateRequestDataAttributesStepsItemsTargetsItemsType:
      description: >-
        Specifies the type of escalation target (example `users`, `schedules`,
        or `teams`).
      enum:
        - users
        - schedules
        - teams
      example: users
      type: string
      x-enum-varnames:
        - USERS
        - SCHEDULES
        - TEAMS
    EscalationPolicyCreateRequestDataAttributesStepsItemsTargetsItems:
      description: >-
        Defines a single escalation target within a step for an escalation
        policy creation request. Contains `id` and `type`.
      properties:
        id:
          description: Specifies the unique identifier for this target.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: >-
            #/components/schemas/EscalationPolicyCreateRequestDataAttributesStepsItemsTargetsItemsType
      type: object
    EscalationPolicyCreateRequestDataAttributesStepsItems:
      description: >-
        Defines a single escalation step within an escalation policy creation
        request. Contains assignment strategy, escalation timeout, and a list of
        targets.
      properties:
        assignment:
          $ref: >-
            #/components/schemas/EscalationPolicyCreateRequestDataAttributesStepsItemsAssignment
        escalate_after_seconds:
          description: Defines how many seconds to wait before escalating to the next step.
          example: 3600
          format: int64
          type: integer
        targets:
          description: Specifies the collection of escalation targets for this step.
          items:
            $ref: >-
              #/components/schemas/EscalationPolicyCreateRequestDataAttributesStepsItemsTargetsItems
          type: array
      required:
        - targets
      type: object
    EscalationPolicyCreateRequestDataAttributes:
      description: >-
        Defines the attributes for creating an escalation policy, including its
        description, name, resolution behavior, retries, and steps.
      properties:
        description:
          description: Provides a detailed text description of the new escalation policy.
          type: string
        name:
          description: Specifies the name for the new escalation policy.
          example: On-call Escalation Policy
          type: string
        resolve_page_on_policy_end:
          description: >-
            Indicates whether the page is automatically resolved when the policy
            ends.
          type: boolean
        retries:
          description: >-
            Specifies how many times the escalation sequence is retried if there
            is no response.
          format: int64
          type: integer
        steps:
          description: >-
            A list of escalation steps, each defining assignment, escalation
            timeout, and targets for the new policy.
          items:
            $ref: >-
              #/components/schemas/EscalationPolicyCreateRequestDataAttributesStepsItems
          type: array
      required:
        - name
        - steps
      type: object
    EscalationPolicyCreateRequestDataRelationshipsTeamsDataItemsType:
      default: teams
      description: Indicates that the resource is of type `teams`.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    EscalationPolicyCreateRequestDataRelationshipsTeamsDataItems:
      description: >-
        Defines a single relationship to a team within an escalation policy
        creation request. Contains the team's `id` and `type`.
      properties:
        id:
          description: Specifies the unique identifier for the related team.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: >-
            #/components/schemas/EscalationPolicyCreateRequestDataRelationshipsTeamsDataItemsType
      required:
        - type
        - id
      type: object
    EscalationPolicyCreateRequestDataRelationshipsTeams:
      description: >-
        Defines the relationship to teams within an escalation policy creation
        request, referencing the teams to be associated with the policy.
      properties:
        data:
          description: An array of team references for the new escalation policy.
          items:
            $ref: >-
              #/components/schemas/EscalationPolicyCreateRequestDataRelationshipsTeamsDataItems
          type: array
      type: object
    EscalationPolicyCreateRequestDataRelationships:
      description: >-
        Represents relationships in an escalation policy creation request,
        including references to teams.
      properties:
        teams:
          $ref: >-
            #/components/schemas/EscalationPolicyCreateRequestDataRelationshipsTeams
      type: object
    EscalationPolicyCreateRequestDataType:
      default: policies
      description: Indicates that the resource is of type `policies`.
      enum:
        - policies
      example: policies
      type: string
      x-enum-varnames:
        - POLICIES
    EscalationPolicyCreateRequestData:
      description: >-
        Represents the data for creating an escalation policy, including its
        attributes, relationships, and resource type.
      properties:
        attributes:
          $ref: '#/components/schemas/EscalationPolicyCreateRequestDataAttributes'
        relationships:
          $ref: '#/components/schemas/EscalationPolicyCreateRequestDataRelationships'
        type:
          $ref: '#/components/schemas/EscalationPolicyCreateRequestDataType'
      required:
        - type
        - attributes
      type: object
    EscalationPolicyCreateRequest:
      description: >-
        Represents a request to create a new escalation policy, including the
        policy data.
      example:
        data:
          attributes:
            description: Escalation Policy 1 description
            name: Escalation Policy 1
            resolve_page_on_policy_end: true
            retries: 2
            steps:
              - assignment: default
                escalate_after_seconds: 3600
                targets:
                  - id: 00000000-aba1-0000-0000-000000000000
                    type: users
                  - id: 00000000-aba2-0000-0000-000000000000
                    type: schedules
                  - id: 00000000-aba3-0000-0000-000000000000
                    type: teams
              - assignment: round-robin
                escalate_after_seconds: 3600
                targets:
                  - id: 00000000-aba1-0000-0000-000000000000
                    type: users
                  - id: 00000000-abb1-0000-0000-000000000000
                    type: users
          relationships:
            teams:
              data:
                - id: 00000000-da3a-0000-0000-000000000000
                  type: teams
          type: policies
      properties:
        data:
          $ref: '#/components/schemas/EscalationPolicyCreateRequestData'
      required:
        - data
      type: object
    EscalationPolicyDataAttributes:
      description: >-
        Defines the main attributes of an escalation policy, such as its
        description, name, and behavior on policy end.
      properties:
        description:
          description: Provides a detailed text description of the escalation policy.
          type: string
        name:
          description: Specifies the name of the escalation policy.
          example: On-call Escalation Policy
          type: string
        resolve_page_on_policy_end:
          description: >-
            Indicates whether the page is automatically resolved when the policy
            ends.
          type: boolean
        retries:
          description: >-
            Specifies how many times the escalation sequence is retried if there
            is no response.
          format: int64
          type: integer
      required:
        - name
      type: object
    EscalationPolicyDataRelationshipsStepsDataItemsType:
      default: steps
      description: Indicates that the resource is of type `steps`.
      enum:
        - steps
      example: steps
      type: string
      x-enum-varnames:
        - STEPS
    EscalationPolicyDataRelationshipsStepsDataItems:
      description: >-
        Defines a relationship to a single step within an escalation policy.
        Contains the step's `id` and `type`.
      properties:
        id:
          description: Specifies the unique identifier for the step resource.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: >-
            #/components/schemas/EscalationPolicyDataRelationshipsStepsDataItemsType
      required:
        - type
        - id
      type: object
    EscalationPolicyDataRelationshipsSteps:
      description: >-
        Defines the relationship to a collection of steps within an escalation
        policy. Contains an array of step data references.
      properties:
        data:
          description: >-
            An array of references to the steps defined in this escalation
            policy.
          items:
            $ref: >-
              #/components/schemas/EscalationPolicyDataRelationshipsStepsDataItems
          type: array
      type: object
    EscalationPolicyDataRelationshipsTeamsDataItemsType:
      default: teams
      description: Indicates that the resource is of type `teams`.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    EscalationPolicyDataRelationshipsTeamsDataItems:
      description: >-
        Defines a relationship to a single team within an escalation policy.
        Contains the team's `id` and `type`.
      properties:
        id:
          description: Specifies the unique identifier for the team resource.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: >-
            #/components/schemas/EscalationPolicyDataRelationshipsTeamsDataItemsType
      required:
        - type
        - id
      type: object
    EscalationPolicyDataRelationshipsTeams:
      description: >-
        Defines the relationship to a collection of teams within an escalation
        policy. Contains an array of team data references.
      properties:
        data:
          description: >-
            An array of references to the teams associated with this escalation
            policy.
          items:
            $ref: >-
              #/components/schemas/EscalationPolicyDataRelationshipsTeamsDataItems
          type: array
      type: object
    EscalationPolicyDataRelationships:
      description: >-
        Represents the relationships for an escalation policy, including
        references to steps and teams.
      properties:
        steps:
          $ref: '#/components/schemas/EscalationPolicyDataRelationshipsSteps'
        teams:
          $ref: '#/components/schemas/EscalationPolicyDataRelationshipsTeams'
      required:
        - steps
      type: object
    EscalationPolicyDataType:
      default: policies
      description: Indicates that the resource is of type `policies`.
      enum:
        - policies
      example: policies
      type: string
      x-enum-varnames:
        - POLICIES
    EscalationPolicyData:
      description: >-
        Represents the data for a single escalation policy, including its
        attributes, ID, relationships, and resource type.
      properties:
        attributes:
          $ref: '#/components/schemas/EscalationPolicyDataAttributes'
        id:
          description: Specifies the unique identifier of the escalation policy.
          example: ab000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/EscalationPolicyDataRelationships'
        type:
          $ref: '#/components/schemas/EscalationPolicyDataType'
      required:
        - type
      type: object
    TeamReferenceAttributes:
      description: >-
        Encapsulates the basic attributes of a Team reference, such as name,
        handle, and an optional avatar or description.
      properties:
        avatar:
          description: URL or reference for the team's avatar (if available).
          type: string
        description:
          description: A short text describing the team.
          type: string
        handle:
          description: A unique handle/slug for the team.
          type: string
        name:
          description: The full, human-readable name of the team.
          type: string
      type: object
    TeamReferenceRelationshipsOncallUsersDataItemsType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    TeamReferenceRelationshipsOncallUsersDataItems:
      description: >-
        References a user who is on-call within this team, identified by `id`
        and `type`.
      properties:
        id:
          description: The unique identifier of the user.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: >-
            #/components/schemas/TeamReferenceRelationshipsOncallUsersDataItemsType
      required:
        - type
        - id
      type: object
    TeamReferenceRelationshipsOncallUsers:
      description: >-
        Defines which users are on-call within a team, stored as an array of
        references.
      properties:
        data:
          description: The list of user references who are on-call for this team.
          items:
            $ref: >-
              #/components/schemas/TeamReferenceRelationshipsOncallUsersDataItems
          type: array
      type: object
    TeamReferenceRelationships:
      description: >-
        Collects the key relationship fields for a team reference, specifically
        on-call users.
      properties:
        oncall_users:
          $ref: '#/components/schemas/TeamReferenceRelationshipsOncallUsers'
      type: object
    TeamReferenceType:
      default: teams
      description: Teams resource type.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    TeamReference:
      description: >-
        Provides a reference to a team, including ID, type, and basic
        attributes/relationships.
      properties:
        attributes:
          $ref: '#/components/schemas/TeamReferenceAttributes'
        id:
          description: The team's unique identifier.
          type: string
        relationships:
          $ref: '#/components/schemas/TeamReferenceRelationships'
        type:
          $ref: '#/components/schemas/TeamReferenceType'
      required:
        - type
      type: object
    EscalationPolicyStepAttributesAssignment:
      description: >-
        Specifies how this escalation step will assign targets (example
        `default` or `round-robin`).
      enum:
        - default
        - round-robin
      type: string
      x-enum-varnames:
        - DEFAULT
        - ROUND_ROBIN
    EscalationPolicyStepAttributes:
      description: >-
        Defines attributes for an escalation policy step, such as assignment
        strategy and escalation timeout.
      properties:
        assignment:
          $ref: '#/components/schemas/EscalationPolicyStepAttributesAssignment'
        escalate_after_seconds:
          description: >-
            Specifies how many seconds to wait before escalating to the next
            step.
          format: int64
          type: integer
      type: object
    TeamTargetType:
      default: teams
      description: Indicates that the resource is of type `teams`.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    TeamTarget:
      description: >-
        Represents a team target for an escalation policy step, including the
        team's ID and resource type.
      properties:
        id:
          description: Specifies the unique identifier of the team resource.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/TeamTargetType'
      required:
        - type
        - id
      type: object
    UserTargetType:
      default: users
      description: Indicates that the resource is of type `users`.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    UserTarget:
      description: >-
        Represents a user target for an escalation policy step, including the
        user's ID and resource type.
      properties:
        id:
          description: Specifies the unique identifier of the user resource.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UserTargetType'
      required:
        - type
        - id
      type: object
    ScheduleTargetType:
      default: schedules
      description: Indicates that the resource is of type `schedules`.
      enum:
        - schedules
      example: schedules
      type: string
      x-enum-varnames:
        - SCHEDULES
    ScheduleTarget:
      description: >-
        Represents a schedule target for an escalation policy step, including
        its ID and resource type.
      properties:
        id:
          description: Specifies the unique identifier of the schedule resource.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/ScheduleTargetType'
      required:
        - type
        - id
      type: object
    EscalationTarget:
      description: Represents an escalation target, which can be a team, user, or schedule.
      oneOf:
        - $ref: '#/components/schemas/TeamTarget'
        - $ref: '#/components/schemas/UserTarget'
        - $ref: '#/components/schemas/ScheduleTarget'
    EscalationPolicyStepRelationships:
      description: Represents the relationship of an escalation policy step to its targets.
      properties:
        targets:
          $ref: '#/components/schemas/EscalationTarget'
      type: object
    EscalationPolicyStepType:
      default: steps
      description: Indicates that the resource is of type `steps`.
      enum:
        - steps
      example: steps
      type: string
      x-enum-varnames:
        - STEPS
    EscalationPolicyStep:
      description: >-
        Represents a single step in an escalation policy, including its
        attributes, relationships, and resource type.
      properties:
        attributes:
          $ref: '#/components/schemas/EscalationPolicyStepAttributes'
        id:
          description: Specifies the unique identifier of this escalation policy step.
          type: string
        relationships:
          $ref: '#/components/schemas/EscalationPolicyStepRelationships'
        type:
          $ref: '#/components/schemas/EscalationPolicyStepType'
      required:
        - type
      type: object
    EscalationPolicyIncluded:
      description: >-
        Represents included related resources when retrieving an escalation
        policy, such as teams, steps, or targets.
      oneOf:
        - $ref: '#/components/schemas/TeamReference'
        - $ref: '#/components/schemas/EscalationPolicyStep'
        - $ref: '#/components/schemas/UserTarget'
        - $ref: '#/components/schemas/ScheduleTarget'
        - $ref: '#/components/schemas/TeamTarget'
    EscalationPolicy:
      description: >-
        Represents a complete escalation policy response, including policy data
        and optionally included related resources.
      example:
        data:
          attributes:
            description: Escalation Policy 1 description
            name: Escalation Policy 1
            resolve_page_on_policy_end: true
            retries: 2
          id: 00000000-aba1-0000-0000-000000000000
          relationships:
            steps:
              data:
                - id: 00000000-aba1-0000-0000-000000000000
                  type: steps
            teams:
              data:
                - id: 00000000-da3a-0000-0000-000000000000
                  type: teams
          type: policies
        included:
          - attributes:
              avatar: ''
              description: Team 1 description
              handle: team1
              name: Team 1
            id: 00000000-da3a-0000-0000-000000000000
            type: teams
          - attributes:
              assignment: default
              escalate_after_seconds: 3600
            id: 00000000-aba1-0000-0000-000000000000
            relationships:
              targets:
                data:
                  - id: 00000000-aba1-0000-0000-000000000000
                    type: users
                  - id: 00000000-aba2-0000-0000-000000000000
                    type: schedules
                  - id: 00000000-aba3-0000-0000-000000000000
                    type: teams
            type: steps
          - id: 00000000-aba1-0000-0000-000000000000
            type: users
          - id: 00000000-aba2-0000-0000-000000000000
            type: schedules
          - id: 00000000-aba3-0000-0000-000000000000
            type: teams
      properties:
        data:
          $ref: '#/components/schemas/EscalationPolicyData'
        included:
          description: >-
            Provides any included related resources, such as steps or targets,
            returned with the policy.
          items:
            $ref: '#/components/schemas/EscalationPolicyIncluded'
          type: array
      type: object
    EscalationPolicyUpdateRequestDataAttributesStepsItemsAssignment:
      description: >-
        Specifies how this escalation step will assign targets (example
        `default` or `round-robin`).
      enum:
        - default
        - round-robin
      example: default
      type: string
      x-enum-varnames:
        - DEFAULT
        - ROUND_ROBIN
    EscalationPolicyUpdateRequestDataAttributesStepsItemsTargetsItemsType:
      description: >-
        Specifies the type of escalation target (example `users`, `schedules`,
        or `teams`).
      enum:
        - users
        - schedules
        - teams
      example: users
      type: string
      x-enum-varnames:
        - USERS
        - SCHEDULES
        - TEAMS
    EscalationPolicyUpdateRequestDataAttributesStepsItemsTargetsItems:
      description: >-
        Defines a single escalation target within a step for an escalation
        policy update request. Contains `id` and `type`.
      properties:
        id:
          description: Specifies the unique identifier for this target.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: >-
            #/components/schemas/EscalationPolicyUpdateRequestDataAttributesStepsItemsTargetsItemsType
      type: object
    EscalationPolicyUpdateRequestDataAttributesStepsItems:
      description: >-
        Defines a single escalation step within an escalation policy update
        request. Contains assignment strategy, escalation timeout, an optional
        step ID, and a list of targets.
      properties:
        assignment:
          $ref: >-
            #/components/schemas/EscalationPolicyUpdateRequestDataAttributesStepsItemsAssignment
        escalate_after_seconds:
          description: Defines how many seconds to wait before escalating to the next step.
          example: 3600
          format: int64
          type: integer
        id:
          description: Specifies the unique identifier of this step.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        targets:
          description: Specifies the collection of escalation targets for this step.
          items:
            $ref: >-
              #/components/schemas/EscalationPolicyUpdateRequestDataAttributesStepsItemsTargetsItems
          type: array
      required:
        - targets
      type: object
    EscalationPolicyUpdateRequestDataAttributes:
      description: >-
        Defines the attributes that can be updated for an escalation policy,
        such as description, name, resolution behavior, retries, and steps.
      properties:
        description:
          description: Provides a detailed text description of the escalation policy.
          type: string
        name:
          description: Specifies the name of the escalation policy.
          example: On-call Escalation Policy
          type: string
        resolve_page_on_policy_end:
          description: >-
            Indicates whether the page is automatically resolved when the policy
            ends.
          type: boolean
        retries:
          description: >-
            Specifies how many times the escalation sequence is retried if there
            is no response.
          format: int64
          type: integer
        steps:
          description: >-
            A list of escalation steps, each defining assignment, escalation
            timeout, and targets.
          items:
            $ref: >-
              #/components/schemas/EscalationPolicyUpdateRequestDataAttributesStepsItems
          type: array
      required:
        - name
        - steps
      type: object
    EscalationPolicyUpdateRequestDataRelationshipsTeamsDataItemsType:
      default: teams
      description: Indicates that the resource is of type `teams`.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    EscalationPolicyUpdateRequestDataRelationshipsTeamsDataItems:
      description: >-
        Defines a single relationship to a team within an escalation policy
        update request. Contains the team's `id` and `type`.
      properties:
        id:
          description: Specifies the unique identifier for the related team.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: >-
            #/components/schemas/EscalationPolicyUpdateRequestDataRelationshipsTeamsDataItemsType
      required:
        - type
        - id
      type: object
    EscalationPolicyUpdateRequestDataRelationshipsTeams:
      description: >-
        Defines the relationship to teams within an escalation policy update
        request, referencing the teams to be associated with or removed from the
        policy.
      properties:
        data:
          description: An array of team references for the escalation policy update.
          items:
            $ref: >-
              #/components/schemas/EscalationPolicyUpdateRequestDataRelationshipsTeamsDataItems
          type: array
      type: object
    EscalationPolicyUpdateRequestDataRelationships:
      description: >-
        Represents relationships in an escalation policy update request,
        including references to teams.
      properties:
        teams:
          $ref: >-
            #/components/schemas/EscalationPolicyUpdateRequestDataRelationshipsTeams
      type: object
    EscalationPolicyUpdateRequestDataType:
      default: policies
      description: Indicates that the resource is of type `policies`.
      enum:
        - policies
      example: policies
      type: string
      x-enum-varnames:
        - POLICIES
    EscalationPolicyUpdateRequestData:
      description: >-
        Represents the data for updating an existing escalation policy,
        including its ID, attributes, relationships, and resource type.
      properties:
        attributes:
          $ref: '#/components/schemas/EscalationPolicyUpdateRequestDataAttributes'
        id:
          description: >-
            Specifies the unique identifier of the escalation policy being
            updated.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/EscalationPolicyUpdateRequestDataRelationships'
        type:
          $ref: '#/components/schemas/EscalationPolicyUpdateRequestDataType'
      required:
        - type
        - id
        - attributes
      type: object
    EscalationPolicyUpdateRequest:
      description: >-
        Represents a request to update an existing escalation policy, including
        the updated policy data.
      example:
        data:
          attributes:
            description: Escalation Policy 1 description
            name: Escalation Policy 1
            resolve_page_on_policy_end: false
            retries: 2
            steps:
              - assignment: default
                escalate_after_seconds: 3600
                id: 00000000-aba1-0000-0000-000000000000
                targets:
                  - id: 00000000-aba1-0000-0000-000000000000
                    type: users
                  - id: 00000000-aba2-0000-0000-000000000000
                    type: schedules
          id: a3000000-0000-0000-0000-000000000000
          relationships:
            teams:
              data:
                - id: 00000000-da3a-0000-0000-000000000000
                  type: teams
          type: policies
      properties:
        data:
          $ref: '#/components/schemas/EscalationPolicyUpdateRequestData'
      required:
        - data
      type: object
    ScheduleCreateRequestDataAttributesLayersItemsInterval:
      description: >-
        Defines how frequently the rotation repeats, using days and/or seconds
        (up to certain limits).
      properties:
        days:
          description: The number of full days in each rotation period.
          example: 1
          format: int32
          maximum: 400
          type: integer
        seconds:
          description: >-
            Extra seconds that may be added to extend the rotation beyond whole
            days.
          example: 300
          format: int64
          maximum: 2592000
          type: integer
      type: object
    ScheduleCreateRequestDataAttributesLayersItemsMembersItemsUser:
      description: >-
        Identifies the user participating in this layer as a single object with
        an `id`.
      properties:
        id:
          description: The user's ID.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
      type: object
    ScheduleCreateRequestDataAttributesLayersItemsMembersItems:
      description: >-
        Defines a single member within a schedule layer, including the reference
        to the underlying user.
      properties:
        user:
          $ref: >-
            #/components/schemas/ScheduleCreateRequestDataAttributesLayersItemsMembersItemsUser
      type: object
    ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItemsEndDay:
      description: The weekday when the restriction period ends (Monday through Sunday).
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      type: string
      x-enum-varnames:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItemsStartDay:
      description: The weekday when the restriction period starts (Monday through Sunday).
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      type: string
      x-enum-varnames:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItems:
      description: >-
        Defines a time restriction for a schedule layer, including which day of
        the week

        it starts and ends, along with start/end times.
      properties:
        end_day:
          $ref: >-
            #/components/schemas/ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItemsEndDay
        end_time:
          description: The time of day when the restriction ends (hh:mm:ss).
          type: string
        start_day:
          $ref: >-
            #/components/schemas/ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItemsStartDay
        start_time:
          description: The time of day when the restriction begins (hh:mm:ss).
          type: string
      type: object
    ScheduleCreateRequestDataAttributesLayersItems:
      description: >-
        Describes a schedule layer, including rotation intervals, members,
        restrictions, and timeline settings.
      properties:
        effective_date:
          description: The date/time when this layer becomes active (in ISO 8601).
          example: '2025-01-01T00:00:00Z'
          format: date-time
          type: string
        end_date:
          description: >-
            The date/time after which this layer no longer applies (in ISO
            8601).
          format: date-time
          type: string
        interval:
          $ref: >-
            #/components/schemas/ScheduleCreateRequestDataAttributesLayersItemsInterval
        members:
          description: A list of members who participate in this layer's rotation.
          items:
            $ref: >-
              #/components/schemas/ScheduleCreateRequestDataAttributesLayersItemsMembersItems
          type: array
        name:
          description: The name of this layer.
          example: Primary On-Call Layer
          type: string
        restrictions:
          description: >-
            Zero or more time-based restrictions (for example, only weekdays,
            during business hours).
          items:
            $ref: >-
              #/components/schemas/ScheduleCreateRequestDataAttributesLayersItemsRestrictionsItems
          type: array
        rotation_start:
          description: The date/time when the rotation for this layer starts (in ISO 8601).
          example: '2025-01-01T00:00:00Z'
          format: date-time
          type: string
      required:
        - name
        - interval
        - rotation_start
        - effective_date
        - members
      type: object
    ScheduleCreateRequestDataAttributes:
      description: >-
        Describes the main attributes for creating a new schedule, including
        name, layers, time zone, and tags.
      properties:
        layers:
          description: >-
            The layers of on-call coverage that define rotation intervals and
            restrictions.
          items:
            $ref: >-
              #/components/schemas/ScheduleCreateRequestDataAttributesLayersItems
          type: array
        name:
          description: A human-readable name for the new schedule.
          example: Team A On-Call
          type: string
        tags:
          description: A list of tags for categorizing or filtering the schedule.
          items:
            type: string
          type: array
        time_zone:
          description: The time zone in which the schedule is defined.
          example: America/New_York
          type: string
      required:
        - name
        - time_zone
        - layers
      type: object
    ScheduleCreateRequestDataRelationshipsTeamsDataItemsType:
      default: teams
      description: Teams resource type.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    ScheduleCreateRequestDataRelationshipsTeamsDataItems:
      description: |-
        Holds the relationship data linking this schedule to a particular team,
        identified by `id` and `type`.
      properties:
        id:
          description: A unique identifier for the team.
          example: ''
          type: string
        type:
          $ref: >-
            #/components/schemas/ScheduleCreateRequestDataRelationshipsTeamsDataItemsType
      required:
        - type
        - id
      type: object
    ScheduleCreateRequestDataRelationshipsTeams:
      description: Associates the new schedule with one or more teams.
      properties:
        data:
          description: An array of team references for this schedule.
          items:
            $ref: >-
              #/components/schemas/ScheduleCreateRequestDataRelationshipsTeamsDataItems
          type: array
      type: object
    ScheduleCreateRequestDataRelationships:
      description: >-
        Gathers relationship objects for the schedule creation request,
        including the teams to associate.
      properties:
        teams:
          $ref: '#/components/schemas/ScheduleCreateRequestDataRelationshipsTeams'
      type: object
    ScheduleCreateRequestDataType:
      default: schedules
      description: Schedules resource type.
      enum:
        - schedules
      example: schedules
      type: string
      x-enum-varnames:
        - SCHEDULES
    ScheduleCreateRequestData:
      description: >-
        The core data wrapper for creating a schedule, encompassing attributes,
        relationships, and the resource type.
      properties:
        attributes:
          $ref: '#/components/schemas/ScheduleCreateRequestDataAttributes'
        relationships:
          $ref: '#/components/schemas/ScheduleCreateRequestDataRelationships'
        type:
          $ref: '#/components/schemas/ScheduleCreateRequestDataType'
      required:
        - type
        - attributes
      type: object
    ScheduleCreateRequest:
      description: >-
        The top-level request body for schedule creation, wrapping a `data`
        object.
      example:
        data:
          attributes:
            layers:
              - effective_date: '2025-02-03T05:00:00Z'
                end_date: '2025-12-31T00:00:00Z'
                interval:
                  days: 1
                members:
                  - user:
                      id: 00000000-aba1-0000-0000-000000000000
                name: Layer 1
                restrictions:
                  - end_day: friday
                    end_time: '17:00:00'
                    start_day: monday
                    start_time: '09:00:00'
                rotation_start: '2025-02-01T00:00:00Z'
            name: On-Call Schedule
            tags:
              - tag1
              - tag2
            time_zone: America/New_York
          relationships:
            teams:
              data:
                - id: 00000000-da3a-0000-0000-000000000000
                  type: teams
          type: schedules
      properties:
        data:
          $ref: '#/components/schemas/ScheduleCreateRequestData'
      required:
        - data
      type: object
    ScheduleDataAttributes:
      description: >-
        Provides core properties of a schedule object, such as its name, time
        zone, and tags.
      properties:
        name:
          description: A short name for the schedule.
          example: Primary On-Call
          type: string
        tags:
          description: A list of tags associated with this schedule.
          items:
            type: string
          type: array
        time_zone:
          description: The time zone in which this schedule operates.
          example: America/New_York
          type: string
      type: object
    ScheduleDataRelationshipsLayersDataItemsType:
      default: layers
      description: Layers resource type.
      enum:
        - layers
      example: layers
      type: string
      x-enum-varnames:
        - LAYERS
    ScheduleDataRelationshipsLayersDataItems:
      description: >-
        Relates a layer to this schedule, identified by `id` and `type` (must be
        `layers`).
      properties:
        id:
          description: The unique identifier of the layer in this relationship.
          example: 00000000-0000-0000-0000-000000000001
          type: string
        type:
          $ref: '#/components/schemas/ScheduleDataRelationshipsLayersDataItemsType'
      required:
        - type
        - id
      type: object
    ScheduleDataRelationshipsLayers:
      description: Associates layers with this schedule in a data structure.
      properties:
        data:
          description: An array of layer references for this schedule.
          items:
            $ref: '#/components/schemas/ScheduleDataRelationshipsLayersDataItems'
          type: array
      type: object
    ScheduleDataRelationshipsTeamsDataItemsType:
      default: teams
      description: Teams resource type.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    ScheduleDataRelationshipsTeamsDataItems:
      description: >-
        Relates a team to this schedule, identified by `id` and `type` (must be
        `teams`).
      properties:
        id:
          description: The unique identifier of the team in this relationship.
          example: 00000000-da3a-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/ScheduleDataRelationshipsTeamsDataItemsType'
      required:
        - type
        - id
      type: object
    ScheduleDataRelationshipsTeams:
      description: Associates teams with this schedule in a data structure.
      properties:
        data:
          description: An array of team references for this schedule.
          items:
            $ref: '#/components/schemas/ScheduleDataRelationshipsTeamsDataItems'
          type: array
      type: object
    ScheduleDataRelationships:
      description: >-
        Groups the relationships for a schedule object, referencing layers and
        teams.
      properties:
        layers:
          $ref: '#/components/schemas/ScheduleDataRelationshipsLayers'
        teams:
          $ref: '#/components/schemas/ScheduleDataRelationshipsTeams'
      type: object
    ScheduleDataType:
      default: schedules
      description: Schedules resource type.
      enum:
        - schedules
      example: schedules
      type: string
      x-enum-varnames:
        - SCHEDULES
    ScheduleData:
      description: >-
        Represents the primary data object for a schedule, linking attributes
        and relationships.
      properties:
        attributes:
          $ref: '#/components/schemas/ScheduleDataAttributes'
        id:
          description: The schedule's unique identifier.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        relationships:
          $ref: '#/components/schemas/ScheduleDataRelationships'
        type:
          $ref: '#/components/schemas/ScheduleDataType'
      required:
        - type
      type: object
    LayerAttributesInterval:
      description: >-
        Defines how often the rotation repeats, using a combination of days and
        optional seconds.
      properties:
        days:
          description: The number of days in each rotation cycle.
          example: 1
          format: int32
          maximum: 400
          type: integer
        seconds:
          description: Any additional seconds for the rotation cycle (up to 30 days).
          example: 300
          format: int64
          maximum: 2592000
          type: integer
      type: object
    LayerAttributesRestrictionsItemsEndDay:
      description: Defines the end day of the restriction within a Layer.
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      type: string
      x-enum-varnames:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    LayerAttributesRestrictionsItemsStartDay:
      description: Defines the start day of the restriction within a Layer.
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      type: string
      x-enum-varnames:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    LayerAttributesRestrictionsItems:
      description: >-
        Represents a time restriction within a layer, specifying the days and
        times

        when this layer is active or inactive.
      properties:
        end_day:
          $ref: '#/components/schemas/LayerAttributesRestrictionsItemsEndDay'
        end_time:
          description: The time of day the restriction ends (hh:mm:ss).
          example: '17:00:00'
          type: string
        start_day:
          $ref: '#/components/schemas/LayerAttributesRestrictionsItemsStartDay'
        start_time:
          description: The time of day the restriction begins (hh:mm:ss).
          example: '09:00:00'
          type: string
      type: object
    LayerAttributes:
      description: >-
        Describes key properties of a Layer, including rotation details, name,
        start/end times, and any restrictions.
      properties:
        effective_date:
          description: When the layer becomes active (ISO 8601).
          format: date-time
          type: string
        end_date:
          description: When the layer ceases to be active (ISO 8601).
          format: date-time
          type: string
        interval:
          $ref: '#/components/schemas/LayerAttributesInterval'
        name:
          description: The name of this layer.
          example: Weekend Layer
          type: string
        restrictions:
          description: >-
            An optional list of time restrictions for when this layer is in
            effect.
          items:
            $ref: '#/components/schemas/LayerAttributesRestrictionsItems'
          type: array
        rotation_start:
          description: The date/time when the rotation starts (ISO 8601).
          format: date-time
          type: string
      type: object
    LayerRelationshipsMembersDataItemsType:
      default: members
      description: Members resource type.
      enum:
        - members
      example: members
      type: string
      x-enum-varnames:
        - MEMBERS
    LayerRelationshipsMembersDataItems:
      description: >-
        Represents a single member object in a layer's `members` array,
        referencing

        a unique Datadog user ID.
      properties:
        id:
          description: The unique user ID of the layer member.
          example: 00000000-0000-0000-0000-000000000002
          type: string
        type:
          $ref: '#/components/schemas/LayerRelationshipsMembersDataItemsType'
      required:
        - type
        - id
      type: object
    LayerRelationshipsMembers:
      description: >-
        Holds an array of references to the members of a Layer, each containing
        member IDs.
      properties:
        data:
          description: The list of members who belong to this layer.
          items:
            $ref: '#/components/schemas/LayerRelationshipsMembersDataItems'
          type: array
      type: object
    LayerRelationships:
      description: >-
        Holds references to objects related to the Layer entity, such as its
        members.
      properties:
        members:
          $ref: '#/components/schemas/LayerRelationshipsMembers'
      type: object
    LayerType:
      default: layers
      description: Layers resource type.
      enum:
        - layers
      example: layers
      type: string
      x-enum-varnames:
        - LAYERS
    Layer:
      description: >-
        Encapsulates a layer resource, holding attributes like rotation details,
        plus relationships to the members covering that layer.
      properties:
        attributes:
          $ref: '#/components/schemas/LayerAttributes'
        id:
          description: A unique identifier for this layer.
          type: string
        relationships:
          $ref: '#/components/schemas/LayerRelationships'
        type:
          $ref: '#/components/schemas/LayerType'
      required:
        - type
      type: object
    ScheduleMemberRelationshipsUserDataType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    ScheduleMemberRelationshipsUserData:
      description: >-
        Points to the user data associated with this schedule member, including
        an ID and type.
      properties:
        id:
          description: The user's unique identifier.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/ScheduleMemberRelationshipsUserDataType'
      required:
        - type
        - id
      type: object
    ScheduleMemberRelationshipsUser:
      description: Wraps the user data reference for a schedule member.
      properties:
        data:
          $ref: '#/components/schemas/ScheduleMemberRelationshipsUserData'
      required:
        - data
      type: object
    ScheduleMemberRelationships:
      description: >-
        Defines relationships for a schedule member, primarily referencing a
        single user.
      properties:
        user:
          $ref: '#/components/schemas/ScheduleMemberRelationshipsUser'
      type: object
    ScheduleMemberType:
      default: members
      description: Schedule Members resource type.
      enum:
        - members
      example: members
      type: string
      x-enum-varnames:
        - MEMBERS
    ScheduleMember:
      description: >-
        Represents a single member entry in a schedule, referencing a specific
        user.
      properties:
        id:
          description: The unique identifier for this schedule member.
          type: string
        relationships:
          $ref: '#/components/schemas/ScheduleMemberRelationships'
        type:
          $ref: '#/components/schemas/ScheduleMemberType'
      required:
        - type
      type: object
    ScheduleUserAttributes:
      description: >-
        Provides basic user information for a schedule, including a name and
        email address.
      properties:
        email:
          description: The user's email address.
          example: jane.doe@example.com
          type: string
        name:
          description: The user's name.
          example: Jane Doe
          type: string
      type: object
    ScheduleUserType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    ScheduleUser:
      description: >-
        Represents a user object in the context of a schedule, including their
        `id`, type, and basic attributes.
      properties:
        attributes:
          $ref: '#/components/schemas/ScheduleUserAttributes'
        id:
          description: The unique user identifier.
          type: string
        type:
          $ref: '#/components/schemas/ScheduleUserType'
      required:
        - type
      type: object
    ScheduleDataIncludedItem:
      description: >-
        Any additional resources related to this schedule, such as teams and
        layers.
      oneOf:
        - $ref: '#/components/schemas/TeamReference'
        - $ref: '#/components/schemas/Layer'
        - $ref: '#/components/schemas/ScheduleMember'
        - $ref: '#/components/schemas/ScheduleUser'
    Schedule:
      description: >-
        Top-level container for a schedule object, including both the `data`
        payload and any related `included` resources (such as teams, layers, or
        members).
      example:
        data:
          attributes:
            name: On-Call Schedule
            tags:
              - tag1
              - tag2
            time_zone: America/New_York
          id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          relationships:
            layers:
              data:
                - id: 00000000-0000-0000-0000-000000000001
                  type: layers
            teams:
              data:
                - id: 00000000-da3a-0000-0000-000000000000
                  type: teams
          type: schedules
        included:
          - attributes:
              avatar: ''
              description: Team 1 description
              handle: team1
              name: Team 1
            id: 00000000-da3a-0000-0000-000000000000
            type: teams
          - attributes:
              effective_date: '2025-02-03T05:00:00Z'
              end_date: '2025-12-31T00:00:00Z'
              interval:
                days: 1
              name: Layer 1
              restrictions:
                - end_day: friday
                  end_time: '17:00:00'
                  start_day: monday
                  start_time: '09:00:00'
              rotation_start: '2025-02-01T00:00:00Z'
            id: 00000000-0000-0000-0000-000000000001
            relationships:
              members:
                data:
                  - id: 00000000-0000-0000-0000-000000000002
                    type: members
            type: layers
          - id: 00000000-0000-0000-0000-000000000002
            relationships:
              user:
                data:
                  id: 00000000-aba1-0000-0000-000000000000
                  type: users
            type: members
          - attributes:
              email: foo@bar.com
              name: User 1
            id: 00000000-aba1-0000-0000-000000000000
            type: users
      properties:
        data:
          $ref: '#/components/schemas/ScheduleData'
        included:
          description: >-
            Any additional resources related to this schedule, such as teams and
            layers.
          items:
            $ref: '#/components/schemas/ScheduleDataIncludedItem'
          type: array
      type: object
    ScheduleUpdateRequestDataAttributesLayersItemsInterval:
      description: >-
        Specifies how the rotation repeats: number of days, plus optional
        seconds, up to the given maximums.
      properties:
        days:
          description: How many days each rotation cycle should span.
          example: 1
          format: int32
          maximum: 400
          type: integer
        seconds:
          description: >-
            Additional seconds to add to the rotation cycle (for example,
            partial days).
          example: 300
          format: int64
          maximum: 2592000
          type: integer
      type: object
    ScheduleUpdateRequestDataAttributesLayersItemsMembersItemsUser:
      description: >-
        Identifies the user who is assigned to this member object. Only `id` is
        required.
      properties:
        id:
          description: The user's ID.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
      type: object
    ScheduleUpdateRequestDataAttributesLayersItemsMembersItems:
      description: >-
        Defines a single member within a layer during an update request,
        referring

        to a specific user.
      properties:
        user:
          $ref: >-
            #/components/schemas/ScheduleUpdateRequestDataAttributesLayersItemsMembersItemsUser
      type: object
    ScheduleUpdateRequestDataAttributesLayersItemsRestrictionsItemsEndDay:
      description: Defines the day of the week on which the time restriction ends.
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      type: string
      x-enum-varnames:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    ScheduleUpdateRequestDataAttributesLayersItemsRestrictionsItemsStartDay:
      description: Defines the day of the week on which the time restriction starts.
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
      type: string
      x-enum-varnames:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    ScheduleUpdateRequestDataAttributesLayersItemsRestrictionsItems:
      description: >-
        Defines a time restriction object for a layer within a schedule update,
        including

        start and end days, as well as times.
      properties:
        end_day:
          $ref: >-
            #/components/schemas/ScheduleUpdateRequestDataAttributesLayersItemsRestrictionsItemsEndDay
        end_time:
          description: The time at which this restriction ends (hh:mm:ss).
          example: '17:00:00'
          type: string
        start_day:
          $ref: >-
            #/components/schemas/ScheduleUpdateRequestDataAttributesLayersItemsRestrictionsItemsStartDay
        start_time:
          description: The time at which this restriction starts (hh:mm:ss).
          example: '09:00:00'
          type: string
      type: object
    ScheduleUpdateRequestDataAttributesLayersItems:
      description: >-
        Represents a layer within a schedule update, including rotation details,
        members,

        and optional restrictions.
      properties:
        effective_date:
          description: When this updated layer takes effect (ISO 8601 format).
          example: '2025-02-03T05:00:00Z'
          format: date-time
          type: string
        end_date:
          description: When this updated layer should stop being active (ISO 8601 format).
          example: '2025-12-31T00:00:00Z'
          format: date-time
          type: string
        id:
          description: A unique identifier for the layer being updated.
          example: 00000000-0000-0000-0000-000000000001
          type: string
        interval:
          $ref: >-
            #/components/schemas/ScheduleUpdateRequestDataAttributesLayersItemsInterval
        members:
          description: The members assigned to this layer.
          items:
            $ref: >-
              #/components/schemas/ScheduleUpdateRequestDataAttributesLayersItemsMembersItems
          type: array
        name:
          description: The name for this layer (for example, "Secondary Coverage").
          example: Primary On-Call Layer
          type: string
        restrictions:
          description: Any time restrictions that define when this layer is active.
          items:
            $ref: >-
              #/components/schemas/ScheduleUpdateRequestDataAttributesLayersItemsRestrictionsItems
          type: array
        rotation_start:
          description: The date/time at which the rotation begins (ISO 8601 format).
          example: '2025-02-01T00:00:00Z'
          format: date-time
          type: string
      required:
        - effective_date
        - interval
        - members
        - name
        - rotation_start
      type: object
    ScheduleUpdateRequestDataAttributes:
      description: >-
        Defines the updatable attributes for a schedule, such as name, time
        zone, tags, and layers.
      properties:
        layers:
          description: The updated list of layers (rotations) for this schedule.
          items:
            $ref: >-
              #/components/schemas/ScheduleUpdateRequestDataAttributesLayersItems
          type: array
        name:
          description: A short name for the schedule.
          example: Primary On-Call
          type: string
        tags:
          description: A list of tags that you can associate with this schedule.
          example:
            - front-end
            - team-a
          items:
            type: string
          type: array
        time_zone:
          description: The time zone used when interpreting rotation times.
          example: America/New_York
          type: string
      required:
        - name
        - time_zone
        - layers
      type: object
    ScheduleUpdateRequestDataRelationshipsTeamsDataItemsType:
      default: teams
      description: Teams resource type.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    ScheduleUpdateRequestDataRelationshipsTeamsDataItems:
      description: >-
        Links the schedule to a team within an update request, identified by
        `id` and `type`.
      properties:
        id:
          description: The unique team identifier.
          example: 00000000-aba1-0000-0000-000000000000
          type: string
        type:
          $ref: >-
            #/components/schemas/ScheduleUpdateRequestDataRelationshipsTeamsDataItemsType
      required:
        - type
        - id
      type: object
    ScheduleUpdateRequestDataRelationshipsTeams:
      description: Defines the teams that this schedule update is associated with.
      properties:
        data:
          description: An array of team references.
          items:
            $ref: >-
              #/components/schemas/ScheduleUpdateRequestDataRelationshipsTeamsDataItems
          type: array
      type: object
    ScheduleUpdateRequestDataRelationships:
      description: >-
        Houses relationships for the schedule update, typically referencing
        teams.
      properties:
        teams:
          $ref: '#/components/schemas/ScheduleUpdateRequestDataRelationshipsTeams'
      type: object
    ScheduleUpdateRequestDataType:
      default: schedules
      description: Schedules resource type.
      enum:
        - schedules
      example: schedules
      type: string
      x-enum-varnames:
        - SCHEDULES
    ScheduleUpdateRequestData:
      description: >-
        Contains all data needed to update an existing schedule, including its
        attributes (such as name, layers, or tags) and any relationships to
        teams.
      properties:
        attributes:
          $ref: '#/components/schemas/ScheduleUpdateRequestDataAttributes'
        id:
          description: The ID of the schedule to be updated.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        relationships:
          $ref: '#/components/schemas/ScheduleUpdateRequestDataRelationships'
        type:
          $ref: '#/components/schemas/ScheduleUpdateRequestDataType'
      required:
        - type
        - id
        - attributes
      type: object
    ScheduleUpdateRequest:
      description: >-
        A top-level wrapper for a schedule update request, referring to the
        `data` object with the new details.
      example:
        data:
          attributes:
            layers:
              - effective_date: '2025-02-03T05:00:00Z'
                end_date: '2025-12-31T00:00:00Z'
                interval:
                  seconds: 300
                members:
                  - user:
                      id: 00000000-aba1-0000-0000-000000000000
                name: Layer 1
                restrictions:
                  - end_day: friday
                    end_time: '17:00:00'
                    start_day: monday
                    start_time: '09:00:00'
                rotation_start: '2025-02-01T00:00:00Z'
            name: On-Call Schedule Updated
            tags:
              - tag1
              - tag2
              - tag3
            time_zone: America/New_York
          id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          relationships:
            teams:
              data:
                - id: 00000000-da3a-0000-0000-000000000000
                  type: teams
          type: schedules
      properties:
        data:
          $ref: '#/components/schemas/ScheduleUpdateRequestData'
      required:
        - data
      type: object
    OrgConfigReadAttributes:
      description: Readable attributes of an Org Config.
      properties:
        description:
          description: The description of an Org Config.
          example: Frobulate the turbo encabulator manifold
          type: string
        modified_at:
          description: The timestamp of the last Org Config update (if any).
          format: date-time
          nullable: true
          type: string
        name:
          description: The machine-friendly name of an Org Config.
          example: monitor_timezone
          type: string
        value:
          description: The value of an Org Config.
        value_type:
          description: The type of an Org Config value.
          example: bool
          type: string
      required:
        - name
        - description
        - value_type
        - value
      type: object
    OrgConfigType:
      description: Data type of an Org Config.
      enum:
        - org_configs
      example: org_configs
      type: string
      x-enum-varnames:
        - ORG_CONFIGS
    OrgConfigRead:
      description: A single Org Config.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgConfigReadAttributes'
        id:
          description: A unique identifier for an Org Config.
          example: abcd1234
          type: string
        type:
          $ref: '#/components/schemas/OrgConfigType'
      required:
        - id
        - type
        - attributes
      type: object
    OrgConfigListResponse:
      description: A response with multiple Org Configs.
      properties:
        data:
          description: An array of Org Configs.
          items:
            $ref: '#/components/schemas/OrgConfigRead'
          type: array
      required:
        - data
      type: object
    OrgConfigGetResponse:
      description: A response with a single Org Config.
      properties:
        data:
          $ref: '#/components/schemas/OrgConfigRead'
      required:
        - data
      type: object
    OrgConfigWriteAttributes:
      description: Writable attributes of an Org Config.
      properties:
        value:
          description: The value of an Org Config.
      required:
        - value
      type: object
    OrgConfigWrite:
      description: An Org Config write operation.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgConfigWriteAttributes'
        type:
          $ref: '#/components/schemas/OrgConfigType'
      required:
        - type
        - attributes
      type: object
    OrgConfigWriteRequest:
      description: A request to update an Org Config.
      properties:
        data:
          $ref: '#/components/schemas/OrgConfigWrite'
      required:
        - data
      type: object
    PermissionAttributes:
      description: Attributes of a permission.
      properties:
        created:
          description: Creation time of the permission.
          format: date-time
          type: string
        description:
          description: Description of the permission.
          type: string
        display_name:
          description: Displayed name for the permission.
          type: string
        display_type:
          description: Display type.
          type: string
        group_name:
          description: Name of the permission group.
          type: string
        name:
          description: Name of the permission.
          type: string
        restricted:
          description: Whether or not the permission is restricted.
          type: boolean
      type: object
    Permission:
      description: Permission object.
      properties:
        attributes:
          $ref: '#/components/schemas/PermissionAttributes'
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      required:
        - type
      type: object
    PermissionsResponse:
      description: Payload with API-returned permissions.
      properties:
        data:
          description: Array of permissions.
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    FindingEvaluation:
      description: The evaluation of the finding.
      enum:
        - pass
        - fail
      example: pass
      type: string
      x-enum-varnames:
        - PASS
        - FAIL
    FindingStatus:
      description: The status of the finding.
      enum:
        - critical
        - high
        - medium
        - low
        - info
      example: critical
      type: string
      x-enum-varnames:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
        - INFO
    FindingVulnerabilityType:
      description: The vulnerability type of the finding.
      enum:
        - misconfiguration
        - attack_path
        - identity_risk
        - api_security
      example: misconfiguration
      type: string
      x-enum-varnames:
        - MISCONFIGURATION
        - ATTACK_PATH
        - IDENTITY_RISK
        - API_SECURITY
    FindingEvaluationChangedAt:
      description: The date on which the evaluation for this finding changed (Unix ms).
      example: 1678721573794
      format: int64
      minimum: 1
      type: integer
    FindingMuteReason:
      description: The reason why this finding is muted or unmuted.
      enum:
        - PENDING_FIX
        - FALSE_POSITIVE
        - ACCEPTED_RISK
        - NO_PENDING_FIX
        - HUMAN_ERROR
        - NO_LONGER_ACCEPTED_RISK
        - OTHER
      example: ACCEPTED_RISK
      type: string
      x-enum-varnames:
        - PENDING_FIX
        - FALSE_POSITIVE
        - ACCEPTED_RISK
        - NO_PENDING_FIX
        - HUMAN_ERROR
        - NO_LONGER_ACCEPTED_RISK
        - OTHER
    FindingMute:
      additionalProperties: false
      description: Information about the mute status of this finding.
      properties:
        description:
          description: >-
            Additional information about the reason why this finding is muted or
            unmuted.
          example: To be resolved later
          type: string
        expiration_date:
          description: The expiration date of the mute or unmute action (Unix ms).
          example: 1778721573794
          format: int64
          type: integer
        muted:
          description: Whether this finding is muted or unmuted.
          example: true
          type: boolean
        reason:
          $ref: '#/components/schemas/FindingMuteReason'
        start_date:
          description: The start of the mute period.
          example: 1678721573794
          format: int64
          type: integer
        uuid:
          description: The ID of the user who muted or unmuted this finding.
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
      type: object
    FindingResource:
      description: The resource name of this finding.
      example: my_resource_name
      type: string
    FindingResourceDiscoveryDate:
      description: The date on which the resource was discovered (Unix ms).
      example: 1678721573794
      format: int64
      minimum: 1
      type: integer
    FindingResourceType:
      description: The resource type of this finding.
      example: azure_storage_account
      type: string
    FindingRule:
      additionalProperties: false
      description: The rule that triggered this finding.
      properties:
        id:
          description: The ID of the rule that triggered this finding.
          example: dv2-jzf-41i
          type: string
        name:
          description: The name of the rule that triggered this finding.
          example: Soft delete is enabled for Azure Storage
          type: string
      type: object
    FindingTags:
      description: The tags associated with this finding.
      example:
        - cloud_provider:aws
        - myTag:myValue
      items:
        description: The list of tags.
        type: string
      type: array
    FindingAttributes:
      description: The JSON:API attributes of the finding.
      properties:
        evaluation:
          $ref: '#/components/schemas/FindingEvaluation'
        evaluation_changed_at:
          $ref: '#/components/schemas/FindingEvaluationChangedAt'
        mute:
          $ref: '#/components/schemas/FindingMute'
        resource:
          $ref: '#/components/schemas/FindingResource'
        resource_discovery_date:
          $ref: '#/components/schemas/FindingResourceDiscoveryDate'
        resource_type:
          $ref: '#/components/schemas/FindingResourceType'
        rule:
          $ref: '#/components/schemas/FindingRule'
        status:
          $ref: '#/components/schemas/FindingStatus'
        tags:
          $ref: '#/components/schemas/FindingTags'
        vulnerability_type:
          $ref: '#/components/schemas/FindingVulnerabilityType'
      type: object
    FindingID:
      description: The unique ID for this finding.
      example: ZGVmLTAwcC1pZXJ-aS0wZjhjNjMyZDNmMzRlZTgzNw==
      type: string
    FindingType:
      default: finding
      description: The JSON:API type for findings.
      enum:
        - finding
      example: finding
      type: string
      x-enum-varnames:
        - FINDING
    Finding:
      description: A single finding without the message and resource configuration.
      properties:
        attributes:
          $ref: '#/components/schemas/FindingAttributes'
        id:
          $ref: '#/components/schemas/FindingID'
        type:
          $ref: '#/components/schemas/FindingType'
      type: object
    ListFindingsData:
      description: Array of findings.
      items:
        $ref: '#/components/schemas/Finding'
      type: array
    ListFindingsPage:
      additionalProperties: false
      description: Pagination and findings count information.
      properties:
        cursor:
          description: The cursor used to paginate requests.
          example: >-
            eyJhZnRlciI6IkFRQUFBWWJiaEJXQS1OY1dqUUFBQUFCQldXSmlhRUpYUVVGQlJFSktkbTlDTUdaWFRVbDNRVUUiLCJ2YWx1ZXMiOlsiY3JpdGljYWwiXX0=
          type: string
        total_filtered_count:
          description: The total count of findings after the filter has been applied.
          example: 213
          format: int64
          type: integer
      type: object
    ListFindingsMeta:
      additionalProperties: false
      description: Metadata for pagination.
      properties:
        page:
          $ref: '#/components/schemas/ListFindingsPage'
        snapshot_timestamp:
          description: The point in time corresponding to the listed findings.
          example: 1678721573794
          format: int64
          minimum: 1
          type: integer
      type: object
    ListFindingsResponse:
      description: The expected response schema when listing findings.
      properties:
        data:
          $ref: '#/components/schemas/ListFindingsData'
        meta:
          $ref: '#/components/schemas/ListFindingsMeta'
      required:
        - data
        - meta
      type: object
    BulkMuteFindingsRequestProperties:
      additionalProperties: false
      description: Object containing the new mute properties of the findings.
      properties:
        description:
          description: >-
            Additional information about the reason why those findings are muted
            or unmuted. This field has a maximum limit of 280 characters.
          type: string
        expiration_date:
          description: >
            The expiration date of the mute or unmute action (Unix ms). It must
            be set to a value greater than the current timestamp.

            If this field is not provided, the finding will be muted or unmuted
            indefinitely, which is equivalent to setting the expiration date to
            9999999999999.
          example: 1778721573794
          format: int64
          type: integer
        muted:
          description: Whether those findings should be muted or unmuted.
          example: true
          type: boolean
        reason:
          $ref: '#/components/schemas/FindingMuteReason'
      required:
        - muted
        - reason
      type: object
    BulkMuteFindingsRequestAttributes:
      additionalProperties: false
      description: The mute properties to be updated.
      properties:
        mute:
          $ref: '#/components/schemas/BulkMuteFindingsRequestProperties'
      required:
        - mute
      type: object
    BulkMuteFindingsRequestMetaFindings:
      description: Finding object containing the finding information.
      properties:
        finding_id:
          $ref: '#/components/schemas/FindingID'
      type: object
    BulkMuteFindingsRequestMeta:
      description: Meta object containing the findings to be updated.
      properties:
        findings:
          description: Array of findings.
          items:
            $ref: '#/components/schemas/BulkMuteFindingsRequestMetaFindings'
          type: array
      type: object
    BulkMuteFindingsRequestData:
      description: Data object containing the new bulk mute properties of the finding.
      properties:
        attributes:
          $ref: '#/components/schemas/BulkMuteFindingsRequestAttributes'
        id:
          description: UUID to identify the request
          example: dbe5f567-192b-4404-b908-29b70e1c9f76
          type: string
        meta:
          $ref: '#/components/schemas/BulkMuteFindingsRequestMeta'
        type:
          $ref: '#/components/schemas/FindingType'
      required:
        - id
        - type
        - attributes
        - meta
      type: object
    BulkMuteFindingsRequest:
      description: The new bulk mute finding request.
      properties:
        data:
          $ref: '#/components/schemas/BulkMuteFindingsRequestData'
      required:
        - data
      type: object
    BulkMuteFindingsResponseData:
      description: Data object containing the ID of the request that was updated.
      properties:
        id:
          description: UUID used to identify the request
          example: 93bfeb70-af47-424d-908a-948d3f08e37f
          type: string
        type:
          $ref: '#/components/schemas/FindingType'
      type: object
    BulkMuteFindingsResponse:
      description: The expected response schema.
      properties:
        data:
          $ref: '#/components/schemas/BulkMuteFindingsResponseData'
      required:
        - data
      type: object
    DetailedFindingAttributes:
      description: The JSON:API attributes of the detailed finding.
      properties:
        evaluation:
          $ref: '#/components/schemas/FindingEvaluation'
        evaluation_changed_at:
          $ref: '#/components/schemas/FindingEvaluationChangedAt'
        message:
          description: The remediation message for this finding.
          example: >-
            ## Remediation


            ### From the console


            1. Go to Storage Account

            2. For each Storage Account, navigate to Data Protection

            3. Select Set soft delete enabled and enter the number of days to
            retain soft deleted data.
          type: string
        mute:
          $ref: '#/components/schemas/FindingMute'
        resource:
          $ref: '#/components/schemas/FindingResource'
        resource_configuration:
          description: The resource configuration for this finding.
          type: object
        resource_discovery_date:
          $ref: '#/components/schemas/FindingResourceDiscoveryDate'
        resource_type:
          $ref: '#/components/schemas/FindingResourceType'
        rule:
          $ref: '#/components/schemas/FindingRule'
        status:
          $ref: '#/components/schemas/FindingStatus'
        tags:
          $ref: '#/components/schemas/FindingTags'
      type: object
    DetailedFindingType:
      default: detailed_finding
      description: >-
        The JSON:API type for findings that have the message and resource
        configuration.
      enum:
        - detailed_finding
      example: detailed_finding
      type: string
      x-enum-varnames:
        - DETAILED_FINDING
    DetailedFinding:
      description: A single finding with with message and resource configuration.
      properties:
        attributes:
          $ref: '#/components/schemas/DetailedFindingAttributes'
        id:
          $ref: '#/components/schemas/FindingID'
        type:
          $ref: '#/components/schemas/DetailedFindingType'
      type: object
    GetFindingResponse:
      description: The expected response schema when getting a finding.
      properties:
        data:
          $ref: '#/components/schemas/DetailedFinding'
      required:
        - data
      type: object
    PowerpackInnerWidgetLayout:
      description: Powerpack inner widget layout.
      properties:
        height:
          description: The height of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        width:
          description: The width of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        x:
          description: >-
            The position of the widget on the x (horizontal) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        'y':
          description: >-
            The position of the widget on the y (vertical) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
      required:
        - x
        - 'y'
        - width
        - height
      type: object
    PowerpackInnerWidgets:
      description: Powerpack group widget definition of individual widgets.
      properties:
        definition:
          additionalProperties: {}
          description: Information about widget.
          example:
            definition:
              content: example
              type: note
          type: object
        layout:
          $ref: '#/components/schemas/PowerpackInnerWidgetLayout'
      required:
        - definition
      type: object
    PowerpackGroupWidgetDefinition:
      description: Powerpack group widget object.
      properties:
        layout_type:
          description: Layout type of widgets.
          example: ordered
          type: string
        show_title:
          description: >-
            Boolean indicating whether powerpack group title should be visible
            or not.
          example: true
          type: boolean
        title:
          description: Name for the group widget.
          example: Sample Powerpack
          type: string
        type:
          description: Type of widget, must be group.
          example: group
          type: string
        widgets:
          description: Widgets inside the powerpack.
          example:
            - definition:
                content: example
                type: note
              layout:
                height: 5
                width: 10
                x: 0
                'y': 0
          items:
            $ref: '#/components/schemas/PowerpackInnerWidgets'
          type: array
      required:
        - widgets
        - layout_type
        - type
      type: object
    PowerpackGroupWidgetLayout:
      description: Powerpack group widget layout.
      properties:
        height:
          description: The height of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        width:
          description: The width of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        x:
          description: >-
            The position of the widget on the x (horizontal) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        'y':
          description: >-
            The position of the widget on the y (vertical) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
      required:
        - x
        - 'y'
        - width
        - height
      type: object
    WidgetLiveSpan:
      description: The available timeframes depend on the widget you are using.
      enum:
        - 1m
        - 5m
        - 10m
        - 15m
        - 30m
        - 1h
        - 4h
        - 1d
        - 2d
        - 1w
        - 1mo
        - 3mo
        - 6mo
        - 1y
        - alert
      example: 5m
      type: string
      x-enum-varnames:
        - PAST_ONE_MINUTE
        - PAST_FIVE_MINUTES
        - PAST_TEN_MINUTES
        - PAST_FIFTEEN_MINUTES
        - PAST_THIRTY_MINUTES
        - PAST_ONE_HOUR
        - PAST_FOUR_HOURS
        - PAST_ONE_DAY
        - PAST_TWO_DAYS
        - PAST_ONE_WEEK
        - PAST_ONE_MONTH
        - PAST_THREE_MONTHS
        - PAST_SIX_MONTHS
        - PAST_ONE_YEAR
        - ALERT
    PowerpackGroupWidget:
      description: Powerpack group widget definition object.
      properties:
        definition:
          $ref: '#/components/schemas/PowerpackGroupWidgetDefinition'
        layout:
          $ref: '#/components/schemas/PowerpackGroupWidgetLayout'
        live_span:
          $ref: '#/components/schemas/WidgetLiveSpan'
      required:
        - definition
      type: object
    PowerpackTemplateVariable:
      description: Powerpack template variables.
      properties:
        available_values:
          description: >-
            The list of values that the template variable drop-down is limited
            to.
          example:
            - my-host
            - host1
            - host2
          items:
            description: Template variable value.
            type: string
          nullable: true
          type: array
        defaults:
          description: >-
            One or many template variable default values within the saved view,
            which are unioned together using `OR` if more than one is specified.
          items:
            description: One or many default values of the template variable.
            minLength: 1
            type: string
          type: array
        name:
          description: The name of the variable.
          example: datacenter
          type: string
        prefix:
          description: >-
            The tag prefix associated with the variable. Only tags with this
            prefix appear in the variable drop-down.
          example: host
          nullable: true
          type: string
      required:
        - name
      type: object
    PowerpackAttributes:
      description: Powerpack attribute object.
      properties:
        description:
          description: Description of this powerpack.
          example: Powerpack for ABC
          type: string
        group_widget:
          $ref: '#/components/schemas/PowerpackGroupWidget'
        name:
          description: Name of the powerpack.
          example: Sample Powerpack
          type: string
        tags:
          description: List of tags to identify this powerpack.
          example:
            - tag:foo1
          items:
            maxLength: 80
            type: string
          maxItems: 8
          type: array
        template_variables:
          description: List of template variables for this powerpack.
          example:
            - defaults:
                - '*'
              name: test
          items:
            $ref: '#/components/schemas/PowerpackTemplateVariable'
          type: array
      required:
        - group_widget
        - name
      type: object
    PowerpackRelationships:
      description: Powerpack relationship object.
      properties:
        author:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    PowerpackData:
      description: Powerpack data object.
      properties:
        attributes:
          $ref: '#/components/schemas/PowerpackAttributes'
        id:
          description: ID of the powerpack.
          type: string
        relationships:
          $ref: '#/components/schemas/PowerpackRelationships'
        type:
          description: Type of widget, must be powerpack.
          example: powerpack
          type: string
      type: object
    PowerpackResponseLinks:
      description: Links attributes.
      properties:
        first:
          description: Link to last page.
          type: string
        last:
          description: Link to first page.
          example: >-
            https://app.datadoghq.com/api/v2/powerpacks?page[offset]=0&page[limit]=25
          nullable: true
          type: string
        next:
          description: Link for the next set of results.
          example: >-
            https://app.datadoghq.com/api/v2/powerpacks?page[offset]=25&page[limit]=25
          type: string
        prev:
          description: Link for the previous set of results.
          nullable: true
          type: string
        self:
          description: Link to current page.
          example: https://app.datadoghq.com/api/v2/powerpacks
          type: string
      type: object
    PowerpacksResponseMetaPagination:
      description: Powerpack response pagination metadata.
      properties:
        first_offset:
          description: The first offset.
          format: int64
          type: integer
        last_offset:
          description: The last offset.
          format: int64
          nullable: true
          type: integer
        limit:
          description: Pagination limit.
          format: int64
          type: integer
        next_offset:
          description: The next offset.
          format: int64
          type: integer
        offset:
          description: The offset.
          format: int64
          type: integer
        prev_offset:
          description: The previous offset.
          format: int64
          type: integer
        total:
          description: Total results.
          format: int64
          type: integer
        type:
          description: Offset type.
          type: string
      type: object
    PowerpacksResponseMeta:
      description: Powerpack response metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/PowerpacksResponseMetaPagination'
      type: object
    ListPowerpacksResponse:
      description: Response object which includes all powerpack configurations.
      properties:
        data:
          description: List of powerpack definitions.
          items:
            $ref: '#/components/schemas/PowerpackData'
          type: array
        included:
          description: Array of objects related to the users.
          items:
            $ref: '#/components/schemas/User'
          type: array
        links:
          $ref: '#/components/schemas/PowerpackResponseLinks'
        meta:
          $ref: '#/components/schemas/PowerpacksResponseMeta'
      type: object
    Powerpack:
      description: >-
        Powerpacks are templated groups of dashboard widgets you can save from
        an existing dashboard and turn into reusable packs in the widget tray.
      properties:
        data:
          $ref: '#/components/schemas/PowerpackData'
      type: object
    PowerpackResponse:
      description: Response object which includes a single powerpack configuration.
      properties:
        data:
          $ref: '#/components/schemas/PowerpackData'
        included:
          description: Array of objects related to the users.
          items:
            $ref: '#/components/schemas/User'
          type: array
      readOnly: true
      type: object
    ProcessSummaryAttributes:
      description: Attributes for a process summary.
      properties:
        cmdline:
          description: Process command line.
          type: string
        host:
          description: Host running the process.
          type: string
        pid:
          description: Process ID.
          format: int64
          type: integer
        ppid:
          description: Parent process ID.
          format: int64
          type: integer
        start:
          description: Time the process was started.
          type: string
        tags:
          description: List of tags associated with the process.
          items:
            description: A tag associated with the process.
            type: string
          type: array
        timestamp:
          description: Time the process was seen.
          type: string
        user:
          description: Process owner.
          type: string
      type: object
    ProcessSummaryType:
      default: process
      description: Type of process summary.
      enum:
        - process
      example: process
      type: string
      x-enum-varnames:
        - PROCESS
    ProcessSummary:
      description: Process summary object.
      properties:
        attributes:
          $ref: '#/components/schemas/ProcessSummaryAttributes'
        id:
          description: Process ID.
          type: string
        type:
          $ref: '#/components/schemas/ProcessSummaryType'
      type: object
    ProcessSummariesMetaPage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor used to get the next results, if any. To make the next
            request, use the same

            parameters with the addition of the `page[cursor]`.
          example: 911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd
          type: string
        size:
          description: Number of results returned.
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
      type: object
    ProcessSummariesMeta:
      description: Response metadata object.
      properties:
        page:
          $ref: '#/components/schemas/ProcessSummariesMetaPage'
      type: object
    ProcessSummariesResponse:
      description: List of process summaries.
      properties:
        data:
          description: Array of process summary objects.
          items:
            $ref: '#/components/schemas/ProcessSummary'
          type: array
        meta:
          $ref: '#/components/schemas/ProcessSummariesMeta'
      type: object
    FormulaLimit:
      description: >-
        Message for specifying limits to the number of values returned by a
        query.

        This limit is only for scalar queries and has no effect on timeseries
        queries.
      properties:
        count:
          description: The number of results to which to limit.
          example: 10
          format: int32
          maximum: 2147483647
          type: integer
        order:
          $ref: '#/components/schemas/QuerySortOrder'
      type: object
    QueryFormula:
      description: A formula for calculation based on one or more queries.
      properties:
        formula:
          description: >-
            Formula string, referencing one or more queries with their name
            property.
          example: a+b
          type: string
        limit:
          $ref: '#/components/schemas/FormulaLimit'
      required:
        - formula
      type: object
    MetricsAggregator:
      default: avg
      description: The type of aggregation that can be performed on metrics-based queries.
      enum:
        - avg
        - min
        - max
        - sum
        - last
        - percentile
        - mean
        - l2norm
        - area
      example: avg
      type: string
      x-enum-varnames:
        - AVG
        - MIN
        - MAX
        - SUM
        - LAST
        - PERCENTILE
        - MEAN
        - L2NORM
        - AREA
    MetricsDataSource:
      default: metrics
      description: A data source that is powered by the Metrics platform.
      enum:
        - metrics
        - cloud_cost
      example: metrics
      type: string
      x-enum-varnames:
        - METRICS
        - CLOUD_COST
    MetricsScalarQuery:
      description: An individual scalar metrics query.
      properties:
        aggregator:
          $ref: '#/components/schemas/MetricsAggregator'
        data_source:
          $ref: '#/components/schemas/MetricsDataSource'
        name:
          description: The variable name for use in formulas.
          type: string
        query:
          description: A classic metrics query string.
          example: avg:system.cpu.user{*} by {env}
          type: string
      required:
        - data_source
        - query
        - aggregator
      type: object
    EventsAggregation:
      default: count
      description: The type of aggregation that can be performed on events-based queries.
      enum:
        - count
        - cardinality
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
      example: count
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - PC75
        - PC90
        - PC95
        - PC98
        - PC99
        - SUM
        - MIN
        - MAX
        - AVG
    EventsCompute:
      description: The instructions for what to compute for this query.
      properties:
        aggregation:
          $ref: '#/components/schemas/EventsAggregation'
        interval:
          description: Interval for compute in milliseconds.
          example: 60000
          format: int64
          type: integer
        metric:
          description: The "measure" attribute on which to perform the computation.
          type: string
      required:
        - aggregation
      type: object
    EventsDataSource:
      default: logs
      description: A data source that is powered by the Events Platform.
      enum:
        - logs
        - rum
      example: logs
      type: string
      x-enum-varnames:
        - LOGS
        - RUM
    EventsSortType:
      description: The type of sort to use on the calculated value.
      enum:
        - alphabetical
        - measure
      type: string
      x-enum-varnames:
        - ALPHABETICAL
        - MEASURE
    EventsGroupBySort:
      description: The dimension by which to sort a query's results.
      properties:
        aggregation:
          $ref: '#/components/schemas/EventsAggregation'
        metric:
          description: >-
            The metric's calculated value which should be used to define the
            sort order of a query's results.
          example: '@duration'
          type: string
        order:
          $ref: '#/components/schemas/QuerySortOrder'
        type:
          $ref: '#/components/schemas/EventsSortType'
      required:
        - aggregation
      type: object
    EventsGroupBy:
      description: A dimension on which to split a query's results.
      properties:
        facet:
          description: The facet by which to split groups.
          example: '@error.type'
          type: string
        limit:
          default: 10
          description: >-
            The maximum buckets to return for this group by. Note: at most 10000
            buckets are allowed.

            If grouping by multiple facets, the product of limits must not
            exceed 10000.
          example: 10
          format: int32
          maximum: 10000
          type: integer
        sort:
          $ref: '#/components/schemas/EventsGroupBySort'
      required:
        - facet
      type: object
    EventsQueryGroupBys:
      description: The list of facets on which to split results.
      items:
        $ref: '#/components/schemas/EventsGroupBy'
      type: array
    EventsSearch:
      description: Configuration of the search/filter for an events query.
      properties:
        query:
          description: The search/filter string for an events query.
          example: status:warn service:foo
          type: string
      type: object
    EventsScalarQuery:
      description: An individual scalar events query.
      properties:
        compute:
          $ref: '#/components/schemas/EventsCompute'
        data_source:
          $ref: '#/components/schemas/EventsDataSource'
        group_by:
          $ref: '#/components/schemas/EventsQueryGroupBys'
        indexes:
          description: The indexes in which to search.
          example:
            - main
          items:
            description: The unique index name.
            example: main
            type: string
          type: array
        name:
          description: The variable name for use in formulas.
          type: string
        search:
          $ref: '#/components/schemas/EventsSearch'
      required:
        - data_source
        - compute
      type: object
    ScalarQuery:
      description: An individual scalar query to one of the basic Datadog data sources.
      example:
        aggregator: avg
        data_source: metrics
        query: avg:system.cpu.user{*} by {env}
      oneOf:
        - $ref: '#/components/schemas/MetricsScalarQuery'
        - $ref: '#/components/schemas/EventsScalarQuery'
    ScalarFormulaRequestQueries:
      description: List of queries to be run and used as inputs to the formulas.
      example:
        - aggregator: avg
          data_source: metrics
          query: avg:system.cpu.user{*} by {env}
      items:
        $ref: '#/components/schemas/ScalarQuery'
      type: array
    ScalarFormulaRequestAttributes:
      description: The object describing a scalar formula request.
      properties:
        formulas:
          description: List of formulas to be calculated and returned as responses.
          items:
            $ref: '#/components/schemas/QueryFormula'
          type: array
        from:
          description: >-
            Start date (inclusive) of the query in milliseconds since the Unix
            epoch.
          example: 1568899800000
          format: int64
          type: integer
        queries:
          $ref: '#/components/schemas/ScalarFormulaRequestQueries'
        to:
          description: >-
            End date (exclusive) of the query in milliseconds since the Unix
            epoch.
          example: 1568923200000
          format: int64
          type: integer
      required:
        - to
        - from
        - queries
      type: object
    ScalarFormulaRequestType:
      default: scalar_request
      description: The type of the resource. The value should always be scalar_request.
      enum:
        - scalar_request
      example: scalar_request
      type: string
      x-enum-varnames:
        - SCALAR_REQUEST
    ScalarFormulaRequest:
      description: A single scalar query to be executed.
      properties:
        attributes:
          $ref: '#/components/schemas/ScalarFormulaRequestAttributes'
        type:
          $ref: '#/components/schemas/ScalarFormulaRequestType'
      required:
        - type
        - attributes
      type: object
    ScalarFormulaQueryRequest:
      description: A wrapper request around one scalar query to be executed.
      properties:
        data:
          $ref: '#/components/schemas/ScalarFormulaRequest'
      required:
        - data
      type: object
    ScalarColumnTypeGroup:
      default: group
      description: The type of column present for groups.
      enum:
        - group
      example: group
      type: string
      x-enum-varnames:
        - GROUP
    GroupScalarColumn:
      description: A column containing the tag keys and values in a group.
      properties:
        name:
          description: The name of the tag key or group.
          example: env
          type: string
        type:
          $ref: '#/components/schemas/ScalarColumnTypeGroup'
        values:
          description: >-
            The array of tag values for each group found for the results of the
            formulas or queries.
          example:
            - - production
            - - staging
          items:
            description: An individual tag value for a given group column.
            items:
              description: One tag value within a values array.
              example: production
              type: string
            type: array
          type: array
      type: object
    Unit:
      description: >-
        Object containing the metric unit family, scale factor, name, and short
        name.
      nullable: true
      properties:
        family:
          description: >-
            Unit family, allows for conversion between units of the same family,
            for scaling.
          example: time
          type: string
        name:
          description: Unit name
          example: minute
          type: string
        plural:
          description: Plural form of the unit name.
          example: minutes
          type: string
        scale_factor:
          description: Factor for scaling between units of the same family.
          example: 60
          format: double
          type: number
        short_name:
          description: Abbreviation of the unit.
          example: min
          type: string
      type: object
    ScalarMeta:
      description: Metadata for the resulting numerical values.
      properties:
        unit:
          description: >-
            Detailed information about the unit.

            First element describes the "primary unit" (for example, `bytes` in
            `bytes per second`).

            The second element describes the "per unit" (for example, `second`
            in `bytes per second`).

            If the second element is not present, the API returns null.
          items:
            $ref: '#/components/schemas/Unit'
          nullable: true
          type: array
      type: object
    ScalarColumnTypeNumber:
      default: number
      description: The type of column present for numbers.
      enum:
        - number
      example: number
      type: string
      x-enum-varnames:
        - NUMBER
    DataScalarColumn:
      description: A column containing the numerical results for a formula or query.
      properties:
        meta:
          $ref: '#/components/schemas/ScalarMeta'
        name:
          description: The name referencing the formula or query for this column.
          example: a
          type: string
        type:
          $ref: '#/components/schemas/ScalarColumnTypeNumber'
        values:
          description: The array of numerical values for one formula or query.
          example:
            - 0.5
          items:
            description: An individual value for a given column and group-by.
            example: 0.5
            format: double
            nullable: true
            type: number
          type: array
      type: object
    ScalarColumn:
      description: A single column in a scalar query response.
      oneOf:
        - $ref: '#/components/schemas/GroupScalarColumn'
        - $ref: '#/components/schemas/DataScalarColumn'
    ScalarFormulaResponseAtrributes:
      description: The object describing a scalar response.
      properties:
        columns:
          description: >-
            List of response columns, each corresponding to an individual
            formula or query in the request and with values in parallel arrays
            matching the series list.
          items:
            $ref: '#/components/schemas/ScalarColumn'
          type: array
      type: object
    ScalarFormulaResponseType:
      default: scalar_response
      description: The type of the resource. The value should always be scalar_response.
      enum:
        - scalar_response
      example: scalar_response
      type: string
      x-enum-varnames:
        - SCALAR_RESPONSE
    ScalarResponse:
      description: A message containing the response to a scalar query.
      properties:
        attributes:
          $ref: '#/components/schemas/ScalarFormulaResponseAtrributes'
        type:
          $ref: '#/components/schemas/ScalarFormulaResponseType'
      type: object
    ScalarFormulaQueryResponse:
      description: A message containing one or more responses to scalar queries.
      properties:
        data:
          $ref: '#/components/schemas/ScalarResponse'
        errors:
          description: An error generated when processing a request.
          type: string
      type: object
    MetricsTimeseriesQuery:
      description: An individual timeseries metrics query.
      properties:
        data_source:
          $ref: '#/components/schemas/MetricsDataSource'
        name:
          description: The variable name for use in formulas.
          type: string
        query:
          description: A classic metrics query string.
          example: avg:system.cpu.user{*} by {env}
          type: string
      required:
        - data_source
        - query
      type: object
    EventsTimeseriesQuery:
      description: An individual timeseries events query.
      properties:
        compute:
          $ref: '#/components/schemas/EventsCompute'
        data_source:
          $ref: '#/components/schemas/EventsDataSource'
        group_by:
          $ref: '#/components/schemas/EventsQueryGroupBys'
        indexes:
          description: The indexes in which to search.
          example:
            - main
          items:
            description: The unique index name.
            example: main
            type: string
          type: array
        name:
          description: The variable name for use in formulas.
          type: string
        search:
          $ref: '#/components/schemas/EventsSearch'
      required:
        - data_source
        - compute
      type: object
    TimeseriesQuery:
      description: An individual timeseries query to one of the basic Datadog data sources.
      example:
        data_source: metrics
        query: avg:system.cpu.user{*} by {env}
      oneOf:
        - $ref: '#/components/schemas/MetricsTimeseriesQuery'
        - $ref: '#/components/schemas/EventsTimeseriesQuery'
    TimeseriesFormulaRequestQueries:
      description: List of queries to be run and used as inputs to the formulas.
      example:
        - data_source: metrics
          query: avg:system.cpu.user{*} by {env}
      items:
        $ref: '#/components/schemas/TimeseriesQuery'
      type: array
    TimeseriesFormulaRequestAttributes:
      description: The object describing a timeseries formula request.
      properties:
        formulas:
          description: List of formulas to be calculated and returned as responses.
          items:
            $ref: '#/components/schemas/QueryFormula'
          type: array
        from:
          description: >-
            Start date (inclusive) of the query in milliseconds since the Unix
            epoch.
          example: 1568899800000
          format: int64
          type: integer
        interval:
          description: |-
            A time interval in milliseconds.
            May be overridden by a larger interval if the query would result in
            too many points for the specified timeframe.
            Defaults to a reasonable interval for the given timeframe.
          example: 5000
          format: int64
          type: integer
        queries:
          $ref: '#/components/schemas/TimeseriesFormulaRequestQueries'
        to:
          description: >-
            End date (exclusive) of the query in milliseconds since the Unix
            epoch.
          example: 1568923200000
          format: int64
          type: integer
      required:
        - to
        - from
        - queries
      type: object
    TimeseriesFormulaRequestType:
      default: timeseries_request
      description: The type of the resource. The value should always be timeseries_request.
      enum:
        - timeseries_request
      example: timeseries_request
      type: string
      x-enum-varnames:
        - TIMESERIES_REQUEST
    TimeseriesFormulaRequest:
      description: A single timeseries query to be executed.
      properties:
        attributes:
          $ref: '#/components/schemas/TimeseriesFormulaRequestAttributes'
        type:
          $ref: '#/components/schemas/TimeseriesFormulaRequestType'
      required:
        - type
        - attributes
      type: object
    TimeseriesFormulaQueryRequest:
      description: A request wrapper around a single timeseries query to be executed.
      properties:
        data:
          $ref: '#/components/schemas/TimeseriesFormulaRequest'
      required:
        - data
      type: object
    GroupTags:
      description: List of tags that apply to a single response value.
      items:
        description: A single tag that applies to a single response value.
        example: env:production
        type: string
      type: array
    TimeseriesResponseSeries:
      description: ''
      properties:
        group_tags:
          $ref: '#/components/schemas/GroupTags'
        query_index:
          description: >-
            The index of the query in the "formulas" array (or "queries" array
            if no "formulas" was specified).
          example: 0
          format: int32
          maximum: 2147483647
          type: integer
        unit:
          description: >-
            Detailed information about the unit.

            The first element describes the "primary unit" (for example, `bytes`
            in `bytes per second`).

            The second element describes the "per unit" (for example, `second`
            in `bytes per second`).

            If the second element is not present, the API returns null.
          items:
            $ref: '#/components/schemas/Unit'
          nullable: true
          type: array
      type: object
    TimeseriesResponseSeriesList:
      description: >-
        Array of response series. The index here corresponds to the index in the
        `formulas` or `queries` array from the request.
      items:
        $ref: '#/components/schemas/TimeseriesResponseSeries'
      type: array
    TimeseriesResponseTimes:
      description: Array of times, 1-1 match with individual values arrays.
      items:
        description: Start date (inclusive) of the query in seconds since the Unix epoch.
        example: 1568899800000
        format: int64
        type: integer
      type: array
    TimeseriesResponseValues:
      description: Array of values for an individual formula or query.
      example:
        - 1575317847
        - 0.5
      items:
        description: An individual value for a given time.
        format: double
        nullable: true
        type: number
      type: array
    TimeseriesResponseValuesList:
      description: >-
        Array of value-arrays. The index here corresponds to the index in the
        `formulas` or `queries` array from the request.
      items:
        $ref: '#/components/schemas/TimeseriesResponseValues'
      type: array
    TimeseriesResponseAttributes:
      description: The object describing a timeseries response.
      properties:
        series:
          $ref: '#/components/schemas/TimeseriesResponseSeriesList'
        times:
          $ref: '#/components/schemas/TimeseriesResponseTimes'
        values:
          $ref: '#/components/schemas/TimeseriesResponseValuesList'
      type: object
    TimeseriesFormulaResponseType:
      default: timeseries_response
      description: >-
        The type of the resource. The value should always be
        timeseries_response.
      enum:
        - timeseries_response
      example: timeseries_response
      type: string
      x-enum-varnames:
        - TIMESERIES_RESPONSE
    TimeseriesResponse:
      description: A message containing the response to a timeseries query.
      properties:
        attributes:
          $ref: '#/components/schemas/TimeseriesResponseAttributes'
        type:
          $ref: '#/components/schemas/TimeseriesFormulaResponseType'
      type: object
    TimeseriesFormulaQueryResponse:
      description: >-
        A message containing one response to a timeseries query made with
        timeseries formula query request.
      properties:
        data:
          $ref: '#/components/schemas/TimeseriesResponse'
        errors:
          description: The error generated by the request.
          type: string
      type: object
    ApplicationSecurityWafCustomRuleActionAction:
      default: block_request
      description: >-
        Override the default action to take when the WAF custom rule would
        block.
      enum:
        - redirect_request
        - block_request
      example: block_request
      type: string
      x-enum-varnames:
        - REDIRECT_REQUEST
        - BLOCK_REQUEST
    ApplicationSecurityWafCustomRuleActionParameters:
      description: >-
        The definition of `ApplicationSecurityWafCustomRuleActionParameters`
        object.
      properties:
        location:
          description: The location to redirect to when the WAF custom rule triggers.
          example: /blocking
          type: string
        status_code:
          default: 403
          description: The status code to return when the WAF custom rule triggers.
          example: 403
          format: int64
          type: integer
      type: object
    ApplicationSecurityWafCustomRuleAction:
      description: The definition of `ApplicationSecurityWafCustomRuleAction` object.
      properties:
        action:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleActionAction'
        parameters:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleActionParameters
      type: object
    ApplicationSecurityWafCustomRuleConditionOperator:
      description: Operator to use for the WAF Condition.
      enum:
        - match_regex
        - '!match_regex'
        - phrase_match
        - '!phrase_match'
        - is_xss
        - is_sqli
        - exact_match
        - '!exact_match'
        - ip_match
        - '!ip_match'
        - capture_data
      example: match_regex
      type: string
      x-enum-varnames:
        - MATCH_REGEX
        - NOT_MATCH_REGEX
        - PHRASE_MATCH
        - NOT_PHRASE_MATCH
        - IS_XSS
        - IS_SQLI
        - EXACT_MATCH
        - NOT_EXACT_MATCH
        - IP_MATCH
        - NOT_IP_MATCH
        - CAPTURE_DATA
    ApplicationSecurityWafCustomRuleConditionInputAddress:
      description: Input from the request on which the condition should apply.
      enum:
        - server.db.statement
        - server.io.fs.file
        - server.io.net.url
        - server.sys.shell.cmd
        - server.request.method
        - server.request.uri.raw
        - server.request.path_params
        - server.request.query
        - server.request.headers.no_cookies
        - server.request.cookies
        - server.request.trailers
        - server.request.body
        - server.response.status
        - server.response.headers.no_cookies
        - server.response.trailers
        - grpc.server.request.metadata
        - grpc.server.request.message
        - grpc.server.method
        - graphql.server.all_resolvers
        - usr.id
        - http.client_ip
      example: server.db.statement
      type: string
      x-enum-varnames:
        - SERVER_DB_STATEMENT
        - SERVER_IO_FS_FILE
        - SERVER_IO_NET_URL
        - SERVER_SYS_SHELL_CMD
        - SERVER_REQUEST_METHOD
        - SERVER_REQUEST_URI_RAW
        - SERVER_REQUEST_PATH_PARAMS
        - SERVER_REQUEST_QUERY
        - SERVER_REQUEST_HEADERS_NO_COOKIES
        - SERVER_REQUEST_COOKIES
        - SERVER_REQUEST_TRAILERS
        - SERVER_REQUEST_BODY
        - SERVER_RESPONSE_STATUS
        - SERVER_RESPONSE_HEADERS_NO_COOKIES
        - SERVER_RESPONSE_TRAILERS
        - GRPC_SERVER_REQUEST_METADATA
        - GRPC_SERVER_REQUEST_MESSAGE
        - GRPC_SERVER_METHOD
        - GRAPHQL_SERVER_ALL_RESOLVERS
        - USR_ID
        - HTTP_CLIENT_IP
    ApplicationSecurityWafCustomRuleConditionInput:
      description: Input from the request on which the condition should apply.
      properties:
        address:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleConditionInputAddress
        key_path:
          description: Specific path for the input.
          items:
            type: string
          type: array
      required:
        - address
      type: object
    ApplicationSecurityWafCustomRuleConditionOptions:
      description: Options for the operator of this condition.
      properties:
        case_sensitive:
          default: false
          description: Evaluate the value as case sensitive.
          type: boolean
        min_length:
          default: 0
          description: >-
            Only evaluate this condition if the value has a minimum amount of
            characters.
          format: int64
          type: integer
      type: object
    ApplicationSecurityWafCustomRuleConditionParameters:
      description: The scope of the WAF custom rule.
      properties:
        data:
          description: >-
            Identifier of a list of data from the denylist. Can only be used as
            substitution from the list parameter.
          example: blocked_users
          type: string
        inputs:
          description: >-
            List of inputs on which at least one should match with the given
            operator.
          items:
            $ref: >-
              #/components/schemas/ApplicationSecurityWafCustomRuleConditionInput
          type: array
        list:
          description: >-
            List of value to use with the condition. Only used with the
            phrase_match, !phrase_match, exact_match and

            !exact_match operator.
          items:
            type: string
          type: array
        options:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleConditionOptions
        regex:
          description: >-
            Regex to use with the condition. Only used with match_regex and
            !match_regex operator.
          example: path.*
          type: string
        value:
          description: >-
            Store the captured value in the specified tag name. Only used with
            the capture_data operator.
          example: custom_tag
          type: string
      required:
        - inputs
      type: object
    ApplicationSecurityWafCustomRuleCondition:
      description: One condition of the WAF Custom Rule.
      properties:
        operator:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleConditionOperator
        parameters:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleConditionParameters
      required:
        - operator
        - parameters
      type: object
    ApplicationSecurityWafCustomRuleMetadata:
      description: Metadata associated with the WAF Custom Rule.
      properties:
        added_at:
          description: The date and time the WAF custom rule was created.
          example: '2021-01-01T00:00:00Z'
          format: date-time
          type: string
        added_by:
          description: The handle of the user who created the WAF custom rule.
          example: john.doe@datadoghq.com
          type: string
        added_by_name:
          description: The name of the user who created the WAF custom rule.
          example: John Doe
          type: string
        modified_at:
          description: The date and time the WAF custom rule was last updated.
          example: '2021-01-01T00:00:00Z'
          format: date-time
          type: string
        modified_by:
          description: The handle of the user who last updated the WAF custom rule.
          example: john.doe@datadoghq.com
          type: string
        modified_by_name:
          description: The name of the user who last updated the WAF custom rule.
          example: John Doe
          type: string
      readOnly: true
      type: object
    ApplicationSecurityWafCustomRuleScope:
      description: The scope of the WAF custom rule.
      properties:
        env:
          description: The environment scope for the WAF custom rule.
          example: prod
          type: string
        service:
          description: The service scope for the WAF custom rule.
          example: billing-service
          type: string
      required:
        - service
        - env
      type: object
    ApplicationSecurityWafCustomRuleTagsCategory:
      description: >-
        The category of the WAF Rule, can be either `business_logic`,
        `attack_attempt` or `security_response`.
      enum:
        - attack_attempt
        - business_logic
        - security_response
      example: business_logic
      type: string
      x-enum-varnames:
        - ATTACK_ATTEMPT
        - BUSINESS_LOGIC
        - SECURITY_RESPONSE
    ApplicationSecurityWafCustomRuleTags:
      additionalProperties:
        type: string
      description: >-
        Tags associated with the WAF Custom Rule. The concatenation of category
        and type will form the security

        activity field associated with the traces.
      maxProperties: 32
      properties:
        category:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleTagsCategory'
        type:
          description: >-
            The type of the WAF rule, associated with the category will form the
            security activity.
          example: users.login.success
          type: string
      required:
        - category
        - type
      type: object
    ApplicationSecurityWafCustomRuleAttributes:
      description: A WAF custom rule.
      properties:
        action:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleAction'
        blocking:
          description: Indicates whether the WAF custom rule will block the request.
          example: false
          type: boolean
        conditions:
          description: >-
            Conditions for which the WAF Custom Rule will triggers, all
            conditions needs to match in order for the WAF

            rule to trigger.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleCondition'
          type: array
        enabled:
          description: Indicates whether the WAF custom rule is enabled.
          example: false
          type: boolean
        metadata:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleMetadata'
        name:
          description: The Name of the WAF custom rule.
          example: Block request from bad useragent
          type: string
        path_glob:
          description: The path glob for the WAF custom rule.
          example: /api/search/*
          type: string
        scope:
          description: The scope of the WAF custom rule.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleScope'
          type: array
        tags:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleTags'
      required:
        - enabled
        - blocking
        - name
        - tags
        - conditions
      type: object
    ApplicationSecurityWafCustomRuleType:
      default: custom_rule
      description: The type of the resource. The value should always be `custom_rule`.
      enum:
        - custom_rule
      example: custom_rule
      type: string
      x-enum-varnames:
        - CUSTOM_RULE
    ApplicationSecurityWafCustomRuleData:
      description: Object for a single WAF custom rule.
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleAttributes'
        id:
          description: The ID of the custom rule.
          example: 2857c47d-1e3a-4300-8b2f-dc24089c084b
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleType'
      type: object
    ApplicationSecurityWafCustomRuleListResponse:
      description: Response object that includes a list of WAF custom rules.
      properties:
        data:
          description: The WAF custom rule data.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleData'
          type: array
      type: object
    ApplicationSecurityWafCustomRuleCreateAttributes:
      description: Create a new WAF custom rule.
      properties:
        action:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleAction'
        blocking:
          description: Indicates whether the WAF custom rule will block the request.
          example: false
          type: boolean
        conditions:
          description: >-
            Conditions for which the WAF Custom Rule will triggers, all
            conditions needs to match in order for the WAF

            rule to trigger
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleCondition'
          type: array
        enabled:
          description: Indicates whether the WAF custom rule is enabled.
          example: false
          type: boolean
        name:
          description: The Name of the WAF custom rule.
          example: Block request from a bad useragent
          type: string
        path_glob:
          description: The path glob for the WAF custom rule.
          example: /api/search/*
          type: string
        scope:
          description: The scope of the WAF custom rule.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleScope'
          type: array
        tags:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleTags'
      required:
        - enabled
        - blocking
        - name
        - tags
        - conditions
      type: object
    ApplicationSecurityWafCustomRuleCreateData:
      description: Object for a single WAF custom rule.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleCreateAttributes
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleType'
      required:
        - attributes
        - type
      type: object
    ApplicationSecurityWafCustomRuleCreateRequest:
      description: Request object that includes the custom rule to create.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleCreateData'
      required:
        - data
      type: object
    ApplicationSecurityWafCustomRuleResponse:
      description: Response object that includes a single WAF custom rule.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleData'
      type: object
    ApplicationSecurityWafCustomRuleUpdateAttributes:
      description: Update a WAF custom rule.
      properties:
        action:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleAction'
        blocking:
          description: Indicates whether the WAF custom rule will block the request.
          example: false
          type: boolean
        conditions:
          description: >-
            Conditions for which the WAF Custom Rule will triggers, all
            conditions needs to match in order for the WAF

            rule to trigger.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleCondition'
          type: array
        enabled:
          description: Indicates whether the WAF custom rule is enabled.
          example: false
          type: boolean
        name:
          description: The Name of the WAF custom rule.
          example: Block request from bad useragent
          type: string
        path_glob:
          description: The path glob for the WAF custom rule.
          example: /api/search/*
          type: string
        scope:
          description: The scope of the WAF custom rule.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleScope'
          type: array
        tags:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleTags'
      required:
        - enabled
        - blocking
        - name
        - tags
        - conditions
      type: object
    ApplicationSecurityWafCustomRuleUpdateData:
      description: Object for a single WAF Custom Rule.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleUpdateAttributes
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleType'
      required:
        - attributes
        - type
      type: object
    ApplicationSecurityWafCustomRuleUpdateRequest:
      description: Request object that includes the Custom Rule to update.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleUpdateData'
      required:
        - data
      type: object
    ApplicationSecurityWafExclusionFilterMetadata:
      description: Extra information about the exclusion filter.
      properties:
        added_at:
          description: The creation date of the exclusion filter.
          format: date-time
          type: string
        added_by:
          description: The handle of the user who created the exclusion filter.
          type: string
        added_by_name:
          description: The name of the user who created the exclusion filter.
          type: string
        modified_at:
          description: The last modification date of the exclusion filter.
          format: date-time
          type: string
        modified_by:
          description: The handle of the user who last modified the exclusion filter.
          type: string
        modified_by_name:
          description: The name of the user who last modified the exclusion filter.
          type: string
      readOnly: true
      type: object
    ApplicationSecurityWafExclusionFilterOnMatch:
      description: >-
        The action taken when the exclusion filter matches. When set to
        `monitor`, security traces are emitted but the requests are not blocked.
        By default, security traces are not emitted and the requests are not
        blocked.
      enum:
        - monitor
      type: string
      x-enum-varnames:
        - MONITOR
    ApplicationSecurityWafExclusionFilterRulesTargetTags:
      additionalProperties:
        type: string
      description: Target multiple WAF rules based on their tags.
      properties:
        category:
          description: The category of the targeted WAF rules.
          example: attack_attempt
          type: string
        type:
          description: The type of the targeted WAF rules.
          example: lfi
          type: string
      type: object
    ApplicationSecurityWafExclusionFilterRulesTarget:
      description: Target WAF rules based either on an identifier or tags.
      properties:
        rule_id:
          description: Target a single WAF rule based on its identifier.
          example: dog-913-009
          type: string
        tags:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafExclusionFilterRulesTargetTags
      type: object
    ApplicationSecurityWafExclusionFilterScope:
      description: Deploy on services based on their environment and/or service name.
      properties:
        env:
          description: Deploy on this environment.
          example: www
          type: string
        service:
          description: Deploy on this service.
          example: prod
          type: string
      type: object
    ApplicationSecurityWafExclusionFilterAttributes:
      description: Attributes describing a WAF exclusion filter.
      properties:
        description:
          description: A description for the exclusion filter.
          example: Exclude false positives on a path
          type: string
        enabled:
          description: Indicates whether the exclusion filter is enabled.
          example: true
          type: boolean
        event_query:
          description: >-
            The event query matched by the legacy exclusion filter. Cannot be
            created nor updated.
          type: string
        ip_list:
          description: >-
            The client IP addresses matched by the exclusion filter (CIDR
            notation is supported).
          items:
            example: 198.51.100.72
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterMetadata'
        on_match:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterOnMatch'
        parameters:
          description: >-
            A list of parameters matched by the exclusion filter in the HTTP
            query string and HTTP request body. Nested parameters can be matched
            by joining fields with a dot character.
          items:
            example: list.search.query
            type: string
          type: array
        path_glob:
          description: The HTTP path glob expression matched by the exclusion filter.
          example: /accounts/*
          type: string
        rules_target:
          description: The WAF rules targeted by the exclusion filter.
          items:
            $ref: >-
              #/components/schemas/ApplicationSecurityWafExclusionFilterRulesTarget
          type: array
        scope:
          description: The services where the exclusion filter is deployed.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterScope'
          type: array
        search_query:
          description: >-
            Generated event search query for traces matching the exclusion
            filter.
          readOnly: true
          type: string
      type: object
    ApplicationSecurityWafExclusionFilterID:
      description: The identifier of the WAF exclusion filter.
      example: 3dd-0uc-h1s
      readOnly: true
      type: string
    ApplicationSecurityWafExclusionFilterType:
      default: exclusion_filter
      description: Type of the resource. The value should always be `exclusion_filter`.
      enum:
        - exclusion_filter
      example: exclusion_filter
      type: string
      x-enum-varnames:
        - EXCLUSION_FILTER
    ApplicationSecurityWafExclusionFilterResource:
      description: A JSON:API resource for an WAF exclusion filter.
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterAttributes'
        id:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterID'
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterType'
      type: object
    ApplicationSecurityWafExclusionFiltersResponse:
      description: Response object for multiple WAF exclusion filters.
      properties:
        data:
          description: A list of WAF exclusion filters.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterResource'
          type: array
      type: object
    ApplicationSecurityWafExclusionFilterCreateAttributes:
      description: Attributes for creating a WAF exclusion filter.
      properties:
        description:
          description: A description for the exclusion filter.
          example: Exclude false positives on a path
          type: string
        enabled:
          description: Indicates whether the exclusion filter is enabled.
          example: true
          type: boolean
        ip_list:
          description: >-
            The client IP addresses matched by the exclusion filter (CIDR
            notation is supported).
          items:
            example: 198.51.100.72
            type: string
          type: array
        on_match:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterOnMatch'
        parameters:
          description: >-
            A list of parameters matched by the exclusion filter in the HTTP
            query string and HTTP request body. Nested parameters can be matched
            by joining fields with a dot character.
          items:
            example: list.search.query
            type: string
          type: array
        path_glob:
          description: The HTTP path glob expression matched by the exclusion filter.
          example: /accounts/*
          type: string
        rules_target:
          description: The WAF rules targeted by the exclusion filter.
          items:
            $ref: >-
              #/components/schemas/ApplicationSecurityWafExclusionFilterRulesTarget
          type: array
        scope:
          description: The services where the exclusion filter is deployed.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterScope'
          type: array
      required:
        - description
        - enabled
      type: object
    ApplicationSecurityWafExclusionFilterCreateData:
      description: Object for creating a single WAF exclusion filter.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafExclusionFilterCreateAttributes
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterType'
      required:
        - attributes
        - type
      type: object
    ApplicationSecurityWafExclusionFilterCreateRequest:
      description: Request object for creating a single WAF exclusion filter.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterCreateData'
      required:
        - data
      type: object
    ApplicationSecurityWafExclusionFilterResponse:
      description: Response object for a single WAF exclusion filter.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterResource'
      type: object
    ApplicationSecurityWafExclusionFilterUpdateAttributes:
      description: Attributes for updating a WAF exclusion filter.
      properties:
        description:
          description: A description for the exclusion filter.
          example: Exclude false positives on a path
          type: string
        enabled:
          description: Indicates whether the exclusion filter is enabled.
          example: true
          type: boolean
        ip_list:
          description: >-
            The client IP addresses matched by the exclusion filter (CIDR
            notation is supported).
          items:
            example: 198.51.100.72
            type: string
          type: array
        on_match:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterOnMatch'
        parameters:
          description: >-
            A list of parameters matched by the exclusion filter in the HTTP
            query string and HTTP request body. Nested parameters can be matched
            by joining fields with a dot character.
          items:
            example: list.search.query
            type: string
          type: array
        path_glob:
          description: The HTTP path glob expression matched by the exclusion filter.
          example: /accounts/*
          type: string
        rules_target:
          description: The WAF rules targeted by the exclusion filter.
          items:
            $ref: >-
              #/components/schemas/ApplicationSecurityWafExclusionFilterRulesTarget
          type: array
        scope:
          description: The services where the exclusion filter is deployed.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterScope'
          type: array
      required:
        - description
        - enabled
      type: object
    ApplicationSecurityWafExclusionFilterUpdateData:
      description: Object for updating a single WAF exclusion filter.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafExclusionFilterUpdateAttributes
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterType'
      required:
        - attributes
        - type
      type: object
    ApplicationSecurityWafExclusionFilterUpdateRequest:
      description: Request object for updating a single WAF exclusion filter.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterUpdateData'
      required:
        - data
      type: object
    CloudWorkloadSecurityAgentRuleKill:
      description: Kill system call applied on the container matching the rule
      properties:
        signal:
          description: Supported signals for the kill system call.
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleAction:
      description: The action the rule can perform if triggered.
      properties:
        filter:
          description: SECL expression used to target the container to apply the action on
          type: string
        kill:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleKill'
      type: object
    CloudWorkloadSecurityAgentRuleActions:
      description: The array of actions the rule can perform if triggered.
      items:
        $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleAction'
      nullable: true
      type: array
    CloudWorkloadSecurityAgentRuleCreatorAttributes:
      description: The attributes of the user who created the Agent rule.
      properties:
        handle:
          description: The handle of the user.
          example: datadog.user@example.com
          type: string
        name:
          description: The name of the user.
          example: Datadog User
          nullable: true
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleUpdaterAttributes:
      description: The attributes of the user who last updated the Agent rule.
      properties:
        handle:
          description: The handle of the user.
          example: datadog.user@example.com
          type: string
        name:
          description: The name of the user.
          example: Datadog User
          nullable: true
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleAttributes:
      description: A Cloud Workload Security Agent rule returned by the API.
      properties:
        actions:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleActions'
        agentConstraint:
          description: The version of the agent.
          type: string
        category:
          description: The category of the Agent rule.
          example: Process Activity
          type: string
        creationAuthorUuId:
          description: The ID of the user who created the rule.
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
        creationDate:
          description: When the Agent rule was created, timestamp in milliseconds.
          example: 1624366480320
          format: int64
          type: integer
        creator:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreatorAttributes'
        defaultRule:
          description: Whether the rule is included by default.
          example: false
          type: boolean
        description:
          description: The description of the Agent rule.
          example: My Agent rule
          type: string
        enabled:
          description: Whether the Agent rule is enabled.
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule.
          example: exec.file.name == \"sh\"
          type: string
        filters:
          description: The platforms the Agent rule is supported on.
          items:
            type: string
          type: array
        name:
          description: The name of the Agent rule.
          example: my_agent_rule
          type: string
        updateAuthorUuId:
          description: The ID of the user who updated the rule.
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
        updateDate:
          description: Timestamp in milliseconds when the Agent rule was last updated.
          example: 1624366480320
          format: int64
          type: integer
        updatedAt:
          description: When the Agent rule was last updated, timestamp in milliseconds.
          example: 1624366480320
          format: int64
          type: integer
        updater:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdaterAttributes'
        version:
          description: The version of the Agent rule.
          example: 23
          format: int64
          type: integer
      type: object
    CloudWorkloadSecurityAgentRuleType:
      default: agent_rule
      description: The type of the resource. The value should always be `agent_rule`.
      enum:
        - agent_rule
      example: agent_rule
      type: string
      x-enum-varnames:
        - AGENT_RULE
    CloudWorkloadSecurityAgentRuleData:
      description: Object for a single Agent rule.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleAttributes'
        id:
          description: The ID of the Agent rule.
          example: 3dd-0uc-h1s
          type: string
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      type: object
    CloudWorkloadSecurityAgentRulesListResponse:
      description: Response object that includes a list of Agent rule.
      properties:
        data:
          description: A list of Agent rules objects.
          items:
            $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleData'
          type: array
      type: object
    CloudWorkloadSecurityAgentRuleCreateAttributes:
      description: Create a new Cloud Workload Security Agent rule.
      properties:
        description:
          description: The description of the Agent rule.
          example: My Agent rule
          type: string
        enabled:
          description: Whether the Agent rule is enabled.
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule.
          example: exec.file.name == \"sh\"
          type: string
        filters:
          description: The platforms the Agent rule is supported on.
          items:
            type: string
          type: array
        name:
          description: The name of the Agent rule.
          example: my_agent_rule
          type: string
      required:
        - name
        - expression
      type: object
    CloudWorkloadSecurityAgentRuleCreateData:
      description: Object for a single Agent rule.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateAttributes'
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      required:
        - attributes
        - type
      type: object
    CloudWorkloadSecurityAgentRuleCreateRequest:
      description: Request object that includes the Agent rule to create.
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateData'
      required:
        - data
      type: object
    CloudWorkloadSecurityAgentRuleResponse:
      description: Response object that includes an Agent rule.
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleData'
      type: object
    CloudWorkloadSecurityAgentRuleUpdateAttributes:
      description: Update an existing Cloud Workload Security Agent rule.
      properties:
        description:
          description: The description of the Agent rule.
          example: My Agent rule
          type: string
        enabled:
          description: Whether the Agent rule is enabled.
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule.
          example: exec.file.name == \"sh\"
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the agent rule.
      example: 3dd-0uc-h1s
      type: string
    CloudWorkloadSecurityAgentRuleUpdateData:
      description: Object for a single Agent rule.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateAttributes'
        id:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleID'
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      required:
        - attributes
        - type
      type: object
    CloudWorkloadSecurityAgentRuleUpdateRequest:
      description: >-
        Request object that includes the Agent rule with the attributes to
        update.
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateData'
      required:
        - data
      type: object
    ObservabilityPipelineDatadogLogsDestinationType:
      default: datadog_logs
      description: The destination type. The value should always be `datadog_logs`.
      enum:
        - datadog_logs
      example: datadog_logs
      type: string
      x-enum-varnames:
        - DATADOG_LOGS
    ObservabilityPipelineDatadogLogsDestination:
      description: The `datadog_logs` destination forwards logs to Datadog Log Management.
      properties:
        id:
          description: The unique identifier for this component.
          example: datadog-logs-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineDatadogLogsDestinationType'
      required:
        - id
        - type
        - inputs
      type: object
    ObservabilityPipelineConfigDestinationItem:
      description: A destination for the pipeline.
      oneOf:
        - $ref: '#/components/schemas/ObservabilityPipelineDatadogLogsDestination'
    ObservabilityPipelineFilterProcessorType:
      default: filter
      description: The processor type. The value should always be `filter`.
      enum:
        - filter
      example: filter
      type: string
      x-enum-varnames:
        - FILTER
    ObservabilityPipelineFilterProcessor:
      description: >-
        The `filter` processor allows conditional processing of logs based on a
        Datadog search query. Logs that match the `include` query are passed
        through; others are discarded.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: filter-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs should pass
            through the filter. Logs that match this query continue to
            downstream components; others are dropped.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineFilterProcessorType'
      required:
        - id
        - type
        - include
        - inputs
      type: object
    ObservabilityPipelineParseJSONProcessorType:
      default: parse_json
      description: The processor type. The value should always be `parse_json`.
      enum:
        - parse_json
      example: parse_json
      type: string
      x-enum-varnames:
        - PARSE_JSON
    ObservabilityPipelineParseJSONProcessor:
      description: >-
        The `parse_json` processor extracts JSON from a specified field and
        flattens it into the event. This is useful when logs contain embedded
        JSON as a string.
      properties:
        field:
          description: The name of the log field that contains a JSON string.
          example: message
          type: string
        id:
          description: >-
            A unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: parse-json-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineParseJSONProcessorType'
      required:
        - id
        - type
        - include
        - field
        - inputs
      type: object
    ObservabilityPipelineQuotaProcessorLimitEnforceType:
      description: Unit for quota enforcement in bytes for data size or events for count.
      enum:
        - bytes
        - events
      example: bytes
      type: string
      x-enum-varnames:
        - BYTES
        - EVENTS
    ObservabilityPipelineQuotaProcessorLimit:
      description: >-
        The maximum amount of data or number of events allowed before the quota
        is enforced. Can be specified in bytes or events.
      properties:
        enforce:
          $ref: >-
            #/components/schemas/ObservabilityPipelineQuotaProcessorLimitEnforceType
        limit:
          description: The limit for quota enforcement.
          example: 1000
          format: int64
          type: integer
      required:
        - enforce
        - limit
      type: object
    ObservabilityPipelineFieldValue:
      description: Represents a static key-value pair used in various processors.
      properties:
        name:
          description: The field name.
          example: field_name
          type: string
        value:
          description: The field value.
          example: field_value
          type: string
      required:
        - name
        - value
      type: object
    ObservabilityPipelineQuotaProcessorOverride:
      description: >-
        Defines a custom quota limit that applies to specific log events based
        on matching field values.
      properties:
        fields:
          description: >-
            A list of field matchers used to apply a specific override. If an
            event matches all listed key-value pairs, the corresponding override
            limit is enforced.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineFieldValue'
          type: array
        limit:
          $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessorLimit'
      required:
        - fields
        - limit
      type: object
    ObservabilityPipelineQuotaProcessorType:
      default: quota
      description: The processor type. The value should always be `quota`.
      enum:
        - quota
      example: quota
      type: string
      x-enum-varnames:
        - QUOTA
    ObservabilityPipelineQuotaProcessor:
      description: >-
        The Quota Processor measures logging traffic for logs that match a
        specified filter. When the configured daily quota is met, the processor
        can drop or alert.
      properties:
        drop_events:
          description: >-
            If set to `true`, logs that matched the quota filter and sent after
            the quota has been met are dropped; only logs that did not match the
            filter query continue through the pipeline.
          example: false
          type: boolean
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: quota-processor
          type: string
        ignore_when_missing_partitions:
          description: >-
            If `true`, the processor skips quota checks when partition fields
            are missing from the logs.
          type: boolean
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        limit:
          $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessorLimit'
        name:
          description: Name for identifying the processor.
          example: MyPipelineQuotaProcessor
          type: string
        overrides:
          description: >-
            A list of alternate quota rules that apply to specific sets of
            events, identified by matching field values. Each override can
            define a custom limit.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessorOverride'
          type: array
        partition_fields:
          description: >-
            A list of fields used to segment log traffic for quota enforcement.
            Quotas are tracked independently by unique combinations of these
            field values.
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessorType'
      required:
        - id
        - type
        - include
        - name
        - drop_events
        - limit
        - inputs
      type: object
    ObservabilityPipelineAddFieldsProcessorType:
      default: add_fields
      description: The processor type. The value should always be `add_fields`.
      enum:
        - add_fields
      example: add_fields
      type: string
      x-enum-varnames:
        - ADD_FIELDS
    ObservabilityPipelineAddFieldsProcessor:
      description: The `add_fields` processor adds static key-value fields to logs.
      properties:
        fields:
          description: >-
            A list of static fields (key-value pairs) that is added to each log
            event processed by this component.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineFieldValue'
          type: array
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: add-fields-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineAddFieldsProcessorType'
      required:
        - id
        - type
        - include
        - fields
        - inputs
      type: object
    ObservabilityPipelineRemoveFieldsProcessorType:
      default: remove_fields
      description: The processor type. The value should always be `remove_fields`.
      enum:
        - remove_fields
      example: remove_fields
      type: string
      x-enum-varnames:
        - REMOVE_FIELDS
    ObservabilityPipelineRemoveFieldsProcessor:
      description: The `remove_fields` processor deletes specified fields from logs.
      properties:
        fields:
          description: A list of field names to be removed from each log event.
          example:
            - field1
            - field2
          items:
            type: string
          type: array
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: remove-fields-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: The `PipelineRemoveFieldsProcessor` `inputs`.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineRemoveFieldsProcessorType'
      required:
        - id
        - type
        - include
        - fields
        - inputs
      type: object
    ObservabilityPipelineRenameFieldsProcessorField:
      description: Defines how to rename a field in log events.
      properties:
        destination:
          description: The field name to assign the renamed value to.
          example: destination_field
          type: string
        preserve_source:
          description: >-
            Indicates whether the original field, that is received from the
            source, should be kept (`true`) or removed (`false`) after renaming.
          example: false
          type: boolean
        source:
          description: The original field name in the log event that should be renamed.
          example: source_field
          type: string
      required:
        - source
        - destination
        - preserve_source
      type: object
    ObservabilityPipelineRenameFieldsProcessorType:
      default: rename_fields
      description: The processor type. The value should always be `rename_fields`.
      enum:
        - rename_fields
      example: rename_fields
      type: string
      x-enum-varnames:
        - RENAME_FIELDS
    ObservabilityPipelineRenameFieldsProcessor:
      description: The `rename_fields` processor changes field names.
      properties:
        fields:
          description: >-
            A list of rename rules specifying which fields to rename in the
            event, what to rename them to, and whether to preserve the original
            fields.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineRenameFieldsProcessorField
          type: array
        id:
          description: >-
            A unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: rename-fields-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineRenameFieldsProcessorType'
      required:
        - id
        - type
        - include
        - fields
        - inputs
      type: object
    ObservabilityPipelineConfigProcessorItem:
      description: A processor for the pipeline.
      oneOf:
        - $ref: '#/components/schemas/ObservabilityPipelineFilterProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineParseJSONProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineAddFieldsProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineRemoveFieldsProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineRenameFieldsProcessor'
    ObservabilityPipelineKafkaSourceLibrdkafkaOption:
      description: >-
        Represents a key-value pair used to configure low-level `librdkafka`
        client options for Kafka sources, such as timeouts, buffer sizes, and
        security settings.
      properties:
        name:
          description: The name of the `librdkafka` configuration option to set.
          example: fetch.message.max.bytes
          type: string
        value:
          description: >-
            The value assigned to the specified `librdkafka` configuration
            option.
          example: '1048576'
          type: string
      required:
        - name
        - value
      type: object
    ObservabilityPipelinePipelineKafkaSourceSaslMechanism:
      description: SASL mechanism used for Kafka authentication.
      enum:
        - PLAIN
        - SCRAM-SHA-256
        - SCRAM-SHA-512
      type: string
      x-enum-varnames:
        - PLAIN
        - SCRAMNOT_SHANOT_256
        - SCRAMNOT_SHANOT_512
    ObservabilityPipelineKafkaSourceSasl:
      description: Specifies the SASL mechanism for authenticating with a Kafka cluster.
      properties:
        mechanism:
          $ref: >-
            #/components/schemas/ObservabilityPipelinePipelineKafkaSourceSaslMechanism
      type: object
    ObservabilityPipelineTls:
      description: Configuration for enabling TLS encryption.
      properties:
        ca_file:
          description: >-
            Path to the Certificate Authority (CA) file used to validate the
            server’s TLS certificate.
          type: string
        crt_file:
          description: >-
            Path to the TLS client certificate file used to authenticate the
            pipeline component with upstream or downstream services.
          example: /path/to/cert.crt
          type: string
        key_file:
          description: >-
            Path to the private key file associated with the TLS client
            certificate. Used for mutual TLS authentication.
          type: string
      required:
        - crt_file
      type: object
    ObservabilityPipelineKafkaSourceType:
      default: kafka
      description: The source type. The value should always be `kafka`.
      enum:
        - kafka
      example: kafka
      type: string
      x-enum-varnames:
        - KAFKA
    ObservabilityPipelineKafkaSource:
      description: The `kafka` source ingests data from Apache Kafka topics.
      properties:
        group_id:
          description: Consumer group ID used by the Kafka client.
          example: consumer-group-0
          type: string
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: kafka-source
          type: string
        librdkafka_options:
          description: >-
            Optional list of advanced Kafka client configuration options,
            defined as key-value pairs.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineKafkaSourceLibrdkafkaOption
          type: array
        sasl:
          $ref: '#/components/schemas/ObservabilityPipelineKafkaSourceSasl'
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        topics:
          description: >-
            A list of Kafka topic names to subscribe to. The source ingests
            messages from each topic specified.
          example:
            - topic1
            - topic2
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineKafkaSourceType'
      required:
        - id
        - type
        - group_id
        - topics
      type: object
    ObservabilityPipelineDatadogAgentSourceType:
      default: datadog_agent
      description: The source type. The value should always be `datadog_agent`.
      enum:
        - datadog_agent
      example: datadog_agent
      type: string
      x-enum-varnames:
        - DATADOG_AGENT
    ObservabilityPipelineDatadogAgentSource:
      description: The `datadog_agent` source collects logs from the Datadog Agent.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: datadog-agent-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineDatadogAgentSourceType'
      required:
        - id
        - type
      type: object
    ObservabilityPipelineConfigSourceItem:
      description: A data source for the pipeline.
      oneOf:
        - $ref: '#/components/schemas/ObservabilityPipelineKafkaSource'
        - $ref: '#/components/schemas/ObservabilityPipelineDatadogAgentSource'
    ObservabilityPipelineConfig:
      description: >-
        Specifies the pipeline's configuration, including its sources,
        processors, and destinations.
      properties:
        destinations:
          description: A list of destination components where processed logs are sent.
          example:
            - id: datadog-logs-destination
              inputs:
                - filter-processor
              type: datadog_logs
          items:
            $ref: '#/components/schemas/ObservabilityPipelineConfigDestinationItem'
          type: array
        processors:
          description: A list of processors that transform or enrich log data.
          example:
            - id: filter-processor
              include: service:my-service
              inputs:
                - datadog-agent-source
              type: filter
          items:
            $ref: '#/components/schemas/ObservabilityPipelineConfigProcessorItem'
          type: array
        sources:
          description: A list of configured data sources for the pipeline.
          example:
            - id: datadog-agent-source
              type: datadog_agent
          items:
            $ref: '#/components/schemas/ObservabilityPipelineConfigSourceItem'
          type: array
      required:
        - sources
        - processors
        - destinations
      type: object
    ObservabilityPipelineDataAttributes:
      description: >-
        Defines the pipeline’s name and its components (sources, processors, and
        destinations).
      properties:
        config:
          $ref: '#/components/schemas/ObservabilityPipelineConfig'
        name:
          description: Name of the pipeline.
          example: Main Observability Pipeline
          type: string
      required:
        - name
        - config
      type: object
    ObservabilityPipelineCreateRequestData:
      description: Contains the pipeline’s ID, type, and configuration attributes.
      properties:
        attributes:
          $ref: '#/components/schemas/ObservabilityPipelineDataAttributes'
        type:
          default: pipelines
          description: >-
            The resource type identifier. For pipeline resources, this should
            always be set to `pipelines`.
          example: pipelines
          type: string
      required:
        - type
        - attributes
      type: object
    ObservabilityPipelineCreateRequest:
      description: Top-level schema representing a pipeline.
      properties:
        data:
          $ref: '#/components/schemas/ObservabilityPipelineCreateRequestData'
      required:
        - data
      type: object
    ObservabilityPipelineData:
      description: Contains the pipeline’s ID, type, and configuration attributes.
      properties:
        attributes:
          $ref: '#/components/schemas/ObservabilityPipelineDataAttributes'
        id:
          description: Unique identifier for the pipeline.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          type: string
        type:
          default: pipelines
          description: >-
            The resource type identifier. For pipeline resources, this should
            always be set to `pipelines`.
          example: pipelines
          type: string
      required:
        - id
        - type
        - attributes
      type: object
    ObservabilityPipeline:
      description: Top-level schema representing a pipeline.
      properties:
        data:
          $ref: '#/components/schemas/ObservabilityPipelineData'
      required:
        - data
      type: object
    RestrictionPolicyBinding:
      description: Specifies which principals are associated with a relation.
      properties:
        principals:
          description: >-
            An array of principals. A principal is a subject or group of
            subjects.

            Each principal is formatted as `type:id`. Supported types: `role`,
            `team`, `user`, and `org`.

            The org ID can be obtained through the api/v2/current_user API.

            The user principal type accepts service account IDs.
          example:
            - role:00000000-0000-1111-0000-000000000000
          items:
            description: >-
              Subject or group of subjects. Each principal is formatted as
              `type:id`.

              Supported types: `role`, `team`, `user`, and `org`.

              The org ID can be obtained through the api/v2/current_user API.

              The user principal type accepts service account IDs.
            type: string
          type: array
        relation:
          description: The role/level of access.
          example: editor
          type: string
      required:
        - relation
        - principals
      type: object
    RestrictionPolicyAttributes:
      description: Restriction policy attributes.
      example:
        bindings: []
      properties:
        bindings:
          description: An array of bindings.
          items:
            $ref: '#/components/schemas/RestrictionPolicyBinding'
          type: array
      required:
        - bindings
      type: object
    RestrictionPolicyType:
      default: restriction_policy
      description: Restriction policy type.
      enum:
        - restriction_policy
      example: restriction_policy
      type: string
      x-enum-varnames:
        - RESTRICTION_POLICY
    RestrictionPolicy:
      description: Restriction policy object.
      properties:
        attributes:
          $ref: '#/components/schemas/RestrictionPolicyAttributes'
        id:
          description: >-
            The identifier, always equivalent to the value specified in the
            `resource_id` path parameter.
          example: dashboard:abc-def-ghi
          type: string
        type:
          $ref: '#/components/schemas/RestrictionPolicyType'
      required:
        - type
        - id
        - attributes
      type: object
    RestrictionPolicyResponse:
      description: Response containing information about a single restriction policy.
      properties:
        data:
          $ref: '#/components/schemas/RestrictionPolicy'
      required:
        - data
      type: object
    RestrictionPolicyUpdateRequest:
      description: Update request for a restriction policy.
      properties:
        data:
          $ref: '#/components/schemas/RestrictionPolicy'
      required:
        - data
      type: object
    RolesSort:
      default: name
      description: Sorting options for roles.
      enum:
        - name
        - '-name'
        - modified_at
        - '-modified_at'
        - user_count
        - '-user_count'
      type: string
      x-enum-varnames:
        - NAME_ASCENDING
        - NAME_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - USER_COUNT_ASCENDING
        - USER_COUNT_DESCENDING
    RoleCreateAttributes:
      description: Attributes of the created role.
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the role.
          example: developers
          type: string
      required:
        - name
      type: object
    RoleRelationships:
      description: Relationships of the role object.
      properties:
        permissions:
          $ref: '#/components/schemas/RelationshipToPermissions'
      type: object
    RoleCreateData:
      description: Data related to the creation of a role.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleCreateAttributes'
        relationships:
          $ref: '#/components/schemas/RoleRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - attributes
      type: object
    RoleCreateRequest:
      description: Create a role.
      properties:
        data:
          $ref: '#/components/schemas/RoleCreateData'
      required:
        - data
      type: object
    RoleCreateResponseData:
      description: Role object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleCreateAttributes'
        id:
          description: The unique identifier of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    RoleCreateResponse:
      description: Response containing information about a created role.
      properties:
        data:
          $ref: '#/components/schemas/RoleCreateResponseData'
      type: object
    RoleResponse:
      description: Response containing information about a single role.
      properties:
        data:
          $ref: '#/components/schemas/Role'
      type: object
    RoleUpdateAttributes:
      description: Attributes of the role.
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the role.
          type: string
        user_count:
          description: The user count.
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    RoleUpdateData:
      description: Data related to the update of a role.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleUpdateAttributes'
        id:
          description: The unique identifier of the role.
          example: 00000000-0000-1111-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/RoleRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - attributes
        - type
        - id
      type: object
    RoleUpdateRequest:
      description: Update a role.
      properties:
        data:
          $ref: '#/components/schemas/RoleUpdateData'
      required:
        - data
      type: object
    RoleUpdateResponseData:
      description: Role object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleUpdateAttributes'
        id:
          description: The unique identifier of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    RoleUpdateResponse:
      description: Response containing information about an updated role.
      properties:
        data:
          $ref: '#/components/schemas/RoleUpdateResponseData'
      type: object
    RoleCloneAttributes:
      description: Attributes required to create a new role by cloning an existing one.
      properties:
        name:
          description: Name of the new role that is cloned.
          example: cloned-role
          type: string
      required:
        - name
      type: object
    RoleClone:
      description: Data for the clone role request.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleCloneAttributes'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
        - attributes
      type: object
    RoleCloneRequest:
      description: Request to create a role by cloning an existing role.
      properties:
        data:
          $ref: '#/components/schemas/RoleClone'
      required:
        - data
      type: object
    RelationshipToPermission:
      description: Relationship to a permissions object.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToPermissionData'
      type: object
    OrganizationAttributes:
      description: Attributes of the organization.
      properties:
        created_at:
          description: Creation time of the organization.
          format: date-time
          type: string
        description:
          description: Description of the organization.
          type: string
        disabled:
          description: Whether or not the organization is disabled.
          type: boolean
        modified_at:
          description: Time of last organization modification.
          format: date-time
          type: string
        name:
          description: Name of the organization.
          type: string
        public_id:
          description: Public ID of the organization.
          type: string
        sharing:
          description: Sharing type of the organization.
          type: string
        url:
          description: URL of the site that this organization exists at.
          type: string
      type: object
    Organization:
      description: Organization object.
      properties:
        attributes:
          $ref: '#/components/schemas/OrganizationAttributes'
        id:
          description: ID of the organization.
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - type
      type: object
    UserResponseIncludedItem:
      description: An object related to a user.
      oneOf:
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/Permission'
        - $ref: '#/components/schemas/Role'
    UsersResponse:
      description: Response containing information about multiple users.
      properties:
        data:
          description: Array of returned users.
          items:
            $ref: '#/components/schemas/User'
          type: array
        included:
          description: Array of objects related to the users.
          items:
            $ref: '#/components/schemas/UserResponseIncludedItem'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      readOnly: true
      type: object
    RUMAggregationFunction:
      description: An aggregation function.
      enum:
        - count
        - cardinality
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
        - median
      example: pc90
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - PERCENTILE_75
        - PERCENTILE_90
        - PERCENTILE_95
        - PERCENTILE_98
        - PERCENTILE_99
        - SUM
        - MIN
        - MAX
        - AVG
        - MEDIAN
    RUMComputeType:
      default: total
      description: The type of compute.
      enum:
        - timeseries
        - total
      type: string
      x-enum-varnames:
        - TIMESERIES
        - TOTAL
    RUMCompute:
      description: A compute rule to compute metrics or timeseries.
      properties:
        aggregation:
          $ref: '#/components/schemas/RUMAggregationFunction'
        interval:
          description: |-
            The time buckets' size (only used for type=timeseries)
            Defaults to a resolution of 150 points.
          example: 5m
          type: string
        metric:
          description: The metric to use.
          example: '@duration'
          type: string
        type:
          $ref: '#/components/schemas/RUMComputeType'
      required:
        - aggregation
      type: object
    RUMQueryFilter:
      description: The search and filter query settings.
      properties:
        from:
          default: now-15m
          description: >-
            The minimum time for the requested events; supports date (in [ISO
            8601](https://www.w3.org/TR/NOTE-datetime) format with full date,
            hours, minutes, and the `Z` UTC indicator - seconds and fractional
            seconds are optional), math, and regular timestamps (in
            milliseconds).
          example: now-15m
          type: string
        query:
          default: '*'
          description: The search query following the RUM search syntax.
          example: '@type:session AND @session.type:user'
          type: string
        to:
          default: now
          description: >-
            The maximum time for the requested events; supports date (in [ISO
            8601](https://www.w3.org/TR/NOTE-datetime) format with full date,
            hours, minutes, and the `Z` UTC indicator - seconds and fractional
            seconds are optional), math, and regular timestamps (in
            milliseconds).
          example: now
          type: string
      type: object
    RUMGroupByHistogram:
      description: >-
        Used to perform a histogram computation (only for measure facets).

        Note: At most 100 buckets are allowed, the number of buckets is (max -
        min)/interval.
      properties:
        interval:
          description: The bin size of the histogram buckets.
          example: 10
          format: double
          type: number
        max:
          description: |-
            The maximum value for the measure used in the histogram
            (values greater than this one are filtered out).
          example: 100
          format: double
          type: number
        min:
          description: |-
            The minimum value for the measure used in the histogram
            (values smaller than this one are filtered out).
          example: 50
          format: double
          type: number
      required:
        - interval
        - min
        - max
      type: object
    RUMGroupByMissingString:
      description: The missing value to use if there is string valued facet.
      type: string
    RUMGroupByMissingNumber:
      description: The missing value to use if there is a number valued facet.
      format: double
      type: number
    RUMGroupByMissing:
      description: The value to use for logs that don't have the facet used to group by.
      oneOf:
        - $ref: '#/components/schemas/RUMGroupByMissingString'
        - $ref: '#/components/schemas/RUMGroupByMissingNumber'
    RUMSortOrder:
      description: The order to use, ascending or descending.
      enum:
        - asc
        - desc
      example: asc
      type: string
      x-enum-varnames:
        - ASCENDING
        - DESCENDING
    RUMAggregateSortType:
      default: alphabetical
      description: The type of sorting algorithm.
      enum:
        - alphabetical
        - measure
      type: string
      x-enum-varnames:
        - ALPHABETICAL
        - MEASURE
    RUMAggregateSort:
      description: A sort rule.
      example:
        aggregation: count
        order: asc
      properties:
        aggregation:
          $ref: '#/components/schemas/RUMAggregationFunction'
        metric:
          description: The metric to sort by (only used for `type=measure`).
          example: '@duration'
          type: string
        order:
          $ref: '#/components/schemas/RUMSortOrder'
        type:
          $ref: '#/components/schemas/RUMAggregateSortType'
      type: object
    RUMGroupByTotalBoolean:
      description: If set to true, creates an additional bucket labeled "$facet_total".
      type: boolean
    RUMGroupByTotalString:
      description: A string to use as the key value for the total bucket.
      type: string
    RUMGroupByTotalNumber:
      description: A number to use as the key value for the total bucket.
      format: double
      type: number
    RUMGroupByTotal:
      default: false
      description: >-
        A resulting object to put the given computes in over all the matching
        records.
      oneOf:
        - $ref: '#/components/schemas/RUMGroupByTotalBoolean'
        - $ref: '#/components/schemas/RUMGroupByTotalString'
        - $ref: '#/components/schemas/RUMGroupByTotalNumber'
    RUMGroupBy:
      description: A group-by rule.
      properties:
        facet:
          description: The name of the facet to use (required).
          example: '@view.time_spent'
          type: string
        histogram:
          $ref: '#/components/schemas/RUMGroupByHistogram'
        limit:
          default: 10
          description: The maximum buckets to return for this group-by.
          format: int64
          type: integer
        missing:
          $ref: '#/components/schemas/RUMGroupByMissing'
        sort:
          $ref: '#/components/schemas/RUMAggregateSort'
        total:
          $ref: '#/components/schemas/RUMGroupByTotal'
      required:
        - facet
      type: object
    RUMQueryOptions:
      description: >-
        Global query options that are used during the query.

        Note: Only supply timezone or time offset, not both. Otherwise, the
        query fails.
      properties:
        time_offset:
          description: The time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: >-
            The timezone can be specified as GMT, UTC, an offset from UTC (like
            UTC+1), or as a Timezone Database identifier (like
            America/New_York).
          example: GMT
          type: string
      type: object
    RUMQueryPageOptions:
      description: Paging attributes for listing events.
      properties:
        cursor:
          description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of events in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    RUMAggregateRequest:
      description: >-
        The object sent with the request to retrieve aggregation buckets of RUM
        events from your organization.
      properties:
        compute:
          description: >-
            The list of metrics or timeseries to compute for the retrieved
            buckets.
          items:
            $ref: '#/components/schemas/RUMCompute'
          type: array
        filter:
          $ref: '#/components/schemas/RUMQueryFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/RUMGroupBy'
          type: array
        options:
          $ref: '#/components/schemas/RUMQueryOptions'
        page:
          $ref: '#/components/schemas/RUMQueryPageOptions'
      type: object
    RUMAggregateBucketValueSingleString:
      description: A single string value.
      type: string
    RUMAggregateBucketValueSingleNumber:
      description: A single number value.
      format: double
      type: number
    RUMAggregateBucketValueTimeseriesPoint:
      description: A timeseries point.
      properties:
        time:
          description: The time value for this point.
          example: '2020-06-08T11:55:00.123Z'
          format: date-time
          type: string
        value:
          description: The value for this point.
          example: 19
          format: double
          type: number
      type: object
    RUMAggregateBucketValueTimeseries:
      description: A timeseries array.
      items:
        $ref: '#/components/schemas/RUMAggregateBucketValueTimeseriesPoint'
      type: array
      x-generate-alias-as-model: true
    RUMAggregateBucketValue:
      description: A bucket value, can be either a timeseries or a single value.
      oneOf:
        - $ref: '#/components/schemas/RUMAggregateBucketValueSingleString'
        - $ref: '#/components/schemas/RUMAggregateBucketValueSingleNumber'
        - $ref: '#/components/schemas/RUMAggregateBucketValueTimeseries'
    RUMBucketResponse:
      description: Bucket values.
      properties:
        by:
          additionalProperties:
            description: The values for each group-by.
            type: string
          description: The key-value pairs for each group-by.
          example:
            '@session.type': user
            '@type': view
          type: object
        computes:
          additionalProperties:
            $ref: '#/components/schemas/RUMAggregateBucketValue'
          description: >-
            A map of the metric name to value for regular compute, or a list of
            values for a timeseries.
          type: object
      type: object
    RUMAggregationBucketsResponse:
      description: The query results.
      properties:
        buckets:
          description: The list of matching buckets, one item per bucket.
          items:
            $ref: '#/components/schemas/RUMBucketResponse'
          type: array
      type: object
    RUMResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            Link for the next set of results. Note that the request can also be
            made using the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/rum/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    RUMResponsePage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same parameters with the addition of
            `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    RUMResponseStatus:
      description: The status of the response.
      enum:
        - done
        - timeout
      example: done
      type: string
      x-enum-varnames:
        - DONE
        - TIMEOUT
    RUMWarning:
      description: A warning message indicating something that went wrong with the query.
      properties:
        code:
          description: A unique code for this type of warning.
          example: unknown_index
          type: string
        detail:
          description: A detailed explanation of this specific warning.
          example: 'indexes: foo, bar'
          type: string
        title:
          description: A short human-readable summary of the warning.
          example: >-
            One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    RUMResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: The time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/RUMResponsePage'
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/RUMResponseStatus'
        warnings:
          description: >-
            A list of warnings (non-fatal errors) encountered. Partial results
            may return if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/RUMWarning'
          type: array
      type: object
    RUMAnalyticsAggregateResponse:
      description: The response object for the RUM events aggregate API endpoint.
      properties:
        data:
          $ref: '#/components/schemas/RUMAggregationBucketsResponse'
        links:
          $ref: '#/components/schemas/RUMResponseLinks'
        meta:
          $ref: '#/components/schemas/RUMResponseMetadata'
      type: object
    RUMApplicationListAttributes:
      description: RUM application list attributes.
      properties:
        application_id:
          description: ID of the RUM application.
          example: abcd1234-0000-0000-abcd-1234abcd5678
          type: string
        created_at:
          description: Timestamp in ms of the creation date.
          example: 1659479836169
          format: int64
          type: integer
        created_by_handle:
          description: Handle of the creator user.
          example: john.doe
          type: string
        hash:
          description: Hash of the RUM application. Optional.
          type: string
        is_active:
          description: Indicates if the RUM application is active.
          example: true
          type: boolean
        name:
          description: Name of the RUM application.
          example: my_rum_application
          type: string
        org_id:
          description: Org ID of the RUM application.
          example: 999
          format: int32
          maximum: 2147483647
          type: integer
        type:
          description: >-
            Type of the RUM application. Supported values are `browser`, `ios`,
            `android`, `react-native`, `flutter`, `roku`, `electron`, `unity`,
            `kotlin-multiplatform`.
          example: browser
          type: string
        updated_at:
          description: Timestamp in ms of the last update date.
          example: 1659479836169
          format: int64
          type: integer
        updated_by_handle:
          description: Handle of the updater user.
          example: jane.doe
          type: string
      required:
        - application_id
        - created_at
        - created_by_handle
        - name
        - org_id
        - type
        - updated_at
        - updated_by_handle
      type: object
    RUMApplicationListType:
      default: rum_application
      description: RUM application list type.
      enum:
        - rum_application
      example: rum_application
      type: string
      x-enum-varnames:
        - RUM_APPLICATION
    RUMApplicationList:
      description: RUM application list.
      properties:
        attributes:
          $ref: '#/components/schemas/RUMApplicationListAttributes'
        id:
          description: RUM application ID.
          example: abcd1234-0000-0000-abcd-1234abcd5678
          type: string
        type:
          $ref: '#/components/schemas/RUMApplicationListType'
      required:
        - attributes
        - type
      type: object
    RUMApplicationsResponse:
      description: RUM applications response.
      properties:
        data:
          description: RUM applications array response.
          items:
            $ref: '#/components/schemas/RUMApplicationList'
          type: array
      type: object
    RUMApplicationCreateAttributes:
      description: RUM application creation attributes.
      properties:
        name:
          description: Name of the RUM application.
          example: my_new_rum_application
          type: string
        type:
          description: >-
            Type of the RUM application. Supported values are `browser`, `ios`,
            `android`, `react-native`, `flutter`, `roku`, `electron`, `unity`,
            `kotlin-multiplatform`.
          example: browser
          type: string
      required:
        - name
      type: object
    RUMApplicationCreateType:
      default: rum_application_create
      description: RUM application creation type.
      enum:
        - rum_application_create
      example: rum_application_create
      type: string
      x-enum-varnames:
        - RUM_APPLICATION_CREATE
    RUMApplicationCreate:
      description: RUM application creation.
      properties:
        attributes:
          $ref: '#/components/schemas/RUMApplicationCreateAttributes'
        type:
          $ref: '#/components/schemas/RUMApplicationCreateType'
      required:
        - attributes
        - type
      type: object
    RUMApplicationCreateRequest:
      description: RUM application creation request attributes.
      properties:
        data:
          $ref: '#/components/schemas/RUMApplicationCreate'
      required:
        - data
      type: object
    RUMApplicationAttributes:
      description: RUM application attributes.
      properties:
        application_id:
          description: ID of the RUM application.
          example: abcd1234-0000-0000-abcd-1234abcd5678
          type: string
        client_token:
          description: Client token of the RUM application.
          example: abcd1234efgh5678ijkl90abcd1234efgh0
          type: string
        created_at:
          description: Timestamp in ms of the creation date.
          example: 1659479836169
          format: int64
          type: integer
        created_by_handle:
          description: Handle of the creator user.
          example: john.doe
          type: string
        hash:
          description: Hash of the RUM application. Optional.
          type: string
        is_active:
          description: Indicates if the RUM application is active.
          example: true
          type: boolean
        name:
          description: Name of the RUM application.
          example: my_rum_application
          type: string
        org_id:
          description: Org ID of the RUM application.
          example: 999
          format: int32
          maximum: 2147483647
          type: integer
        type:
          description: >-
            Type of the RUM application. Supported values are `browser`, `ios`,
            `android`, `react-native`, `flutter`, `roku`, `electron`, `unity`,
            `kotlin-multiplatform`.
          example: browser
          type: string
        updated_at:
          description: Timestamp in ms of the last update date.
          example: 1659479836169
          format: int64
          type: integer
        updated_by_handle:
          description: Handle of the updater user.
          example: jane.doe
          type: string
      required:
        - application_id
        - client_token
        - created_at
        - created_by_handle
        - name
        - org_id
        - type
        - updated_at
        - updated_by_handle
      type: object
    RUMApplicationType:
      default: rum_application
      description: RUM application response type.
      enum:
        - rum_application
      example: rum_application
      type: string
      x-enum-varnames:
        - RUM_APPLICATION
    RUMApplication:
      description: RUM application.
      properties:
        attributes:
          $ref: '#/components/schemas/RUMApplicationAttributes'
        id:
          description: RUM application ID.
          example: abcd1234-0000-0000-abcd-1234abcd5678
          type: string
        type:
          $ref: '#/components/schemas/RUMApplicationType'
      required:
        - attributes
        - id
        - type
      type: object
    RUMApplicationResponse:
      description: RUM application response.
      properties:
        data:
          $ref: '#/components/schemas/RUMApplication'
      type: object
    RumRetentionFilterID:
      description: ID of retention filter in UUID.
      example: 051601eb-54a0-abc0-03f9-cc02efa18892
      type: string
    RumRetentionFilterType:
      default: retention_filters
      description: The type of the resource. The value should always be retention_filters.
      enum:
        - retention_filters
      example: retention_filters
      type: string
      x-enum-varnames:
        - RETENTION_FILTERS
    RumRetentionFiltersOrderData:
      description: The RUM retention filter data for ordering.
      properties:
        id:
          $ref: '#/components/schemas/RumRetentionFilterID'
        type:
          $ref: '#/components/schemas/RumRetentionFilterType'
      required:
        - id
        - type
      type: object
    RumRetentionFiltersOrderRequest:
      description: >-
        The list of RUM retention filter IDs along with their corresponding type
        to reorder.

        All retention filter IDs should be included in the list created for a
        RUM application.
      properties:
        data:
          description: A list of RUM retention filter IDs along with type.
          items:
            $ref: '#/components/schemas/RumRetentionFiltersOrderData'
          type: array
      type: object
    RumRetentionFiltersOrderResponse:
      description: The list of RUM retention filter IDs along with type.
      properties:
        data:
          description: A list of RUM retention filter IDs along with type.
          items:
            $ref: '#/components/schemas/RumRetentionFiltersOrderData'
          type: array
      type: object
    RumRetentionFilterEnabled:
      description: Whether the retention filter is enabled.
      example: true
      type: boolean
    RumRetentionFilterEventType:
      description: The type of RUM events to filter on.
      enum:
        - session
        - view
        - action
        - error
        - resource
        - long_task
        - vital
      example: session
      type: string
      x-enum-varnames:
        - SESSION
        - VIEW
        - ACTION
        - ERROR
        - RESOURCE
        - LONG_TASK
        - VITAL
    RunRetentionFilterName:
      description: The name of a RUM retention filter.
      example: Retention filter for session
      type: string
    RumRetentionFilterQuery:
      description: The query string for a RUM retention filter.
      example: '@session.has_replay:true'
      type: string
    RumRetentionFilterSampleRate:
      description: The sample rate for a RUM retention filter, between 0 and 100.
      example: 25
      format: int64
      maximum: 100
      minimum: 0
      type: integer
    RumRetentionFilterAttributes:
      description: The object describing attributes of a RUM retention filter.
      properties:
        enabled:
          $ref: '#/components/schemas/RumRetentionFilterEnabled'
        event_type:
          $ref: '#/components/schemas/RumRetentionFilterEventType'
        name:
          $ref: '#/components/schemas/RunRetentionFilterName'
        query:
          $ref: '#/components/schemas/RumRetentionFilterQuery'
        sample_rate:
          $ref: '#/components/schemas/RumRetentionFilterSampleRate'
      type: object
    RumRetentionFilterData:
      description: The RUM retention filter.
      properties:
        attributes:
          $ref: '#/components/schemas/RumRetentionFilterAttributes'
        id:
          $ref: '#/components/schemas/RumRetentionFilterID'
        type:
          $ref: '#/components/schemas/RumRetentionFilterType'
      type: object
    RumRetentionFiltersResponse:
      description: All RUM retention filters for a RUM application.
      properties:
        data:
          description: A list of RUM retention filters.
          items:
            $ref: '#/components/schemas/RumRetentionFilterData'
          type: array
      type: object
    RumRetentionFilterCreateAttributes:
      description: The object describing attributes of a RUM retention filter to create.
      properties:
        enabled:
          $ref: '#/components/schemas/RumRetentionFilterEnabled'
        event_type:
          $ref: '#/components/schemas/RumRetentionFilterEventType'
        name:
          $ref: '#/components/schemas/RunRetentionFilterName'
        query:
          $ref: '#/components/schemas/RumRetentionFilterQuery'
        sample_rate:
          $ref: '#/components/schemas/RumRetentionFilterSampleRate'
      required:
        - event_type
        - name
        - sample_rate
      type: object
    RumRetentionFilterCreateData:
      description: The new RUM retention filter properties to create.
      properties:
        attributes:
          $ref: '#/components/schemas/RumRetentionFilterCreateAttributes'
        type:
          $ref: '#/components/schemas/RumRetentionFilterType'
      required:
        - type
        - attributes
      type: object
    RumRetentionFilterCreateRequest:
      description: The RUM retention filter body to create.
      properties:
        data:
          $ref: '#/components/schemas/RumRetentionFilterCreateData'
      required:
        - data
      type: object
    RumRetentionFilterResponse:
      description: The RUM retention filter object.
      properties:
        data:
          $ref: '#/components/schemas/RumRetentionFilterData'
      type: object
    RumRetentionFilterUpdateAttributes:
      description: The object describing attributes of a RUM retention filter to update.
      properties:
        enabled:
          $ref: '#/components/schemas/RumRetentionFilterEnabled'
        event_type:
          $ref: '#/components/schemas/RumRetentionFilterEventType'
        name:
          $ref: '#/components/schemas/RunRetentionFilterName'
        query:
          $ref: '#/components/schemas/RumRetentionFilterQuery'
        sample_rate:
          $ref: '#/components/schemas/RumRetentionFilterSampleRate'
      type: object
    RumRetentionFilterUpdateData:
      description: The new RUM retention filter properties to update.
      properties:
        attributes:
          $ref: '#/components/schemas/RumRetentionFilterUpdateAttributes'
        id:
          $ref: '#/components/schemas/RumRetentionFilterID'
        type:
          $ref: '#/components/schemas/RumRetentionFilterType'
      required:
        - id
        - type
        - attributes
      type: object
    RumRetentionFilterUpdateRequest:
      description: The RUM retention filter body to update.
      properties:
        data:
          $ref: '#/components/schemas/RumRetentionFilterUpdateData'
      required:
        - data
      type: object
    RUMApplicationUpdateAttributes:
      description: RUM application update attributes.
      properties:
        name:
          description: Name of the RUM application.
          example: updated_name_for_my_existing_rum_application
          type: string
        type:
          description: >-
            Type of the RUM application. Supported values are `browser`, `ios`,
            `android`, `react-native`, `flutter`, `roku`, `electron`, `unity`,
            `kotlin-multiplatform`.
          example: browser
          type: string
      type: object
    RUMApplicationUpdateType:
      default: rum_application_update
      description: RUM application update type.
      enum:
        - rum_application_update
      example: rum_application_update
      type: string
      x-enum-varnames:
        - RUM_APPLICATION_UPDATE
    RUMApplicationUpdate:
      description: RUM application update.
      properties:
        attributes:
          $ref: '#/components/schemas/RUMApplicationUpdateAttributes'
        id:
          description: RUM application ID.
          example: abcd1234-0000-0000-abcd-1234abcd5678
          type: string
        type:
          $ref: '#/components/schemas/RUMApplicationUpdateType'
      required:
        - id
        - type
      type: object
    RUMApplicationUpdateRequest:
      description: RUM application update request.
      properties:
        data:
          $ref: '#/components/schemas/RUMApplicationUpdate'
      required:
        - data
      type: object
    RumMetricComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    RumMetricComputeIncludePercentiles:
      description: >-
        Toggle to include or exclude percentile aggregations for distribution
        metrics.

        Only present when `aggregation_type` is `distribution`.
      example: true
      type: boolean
    RumMetricResponseCompute:
      description: The compute rule to compute the rum-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/RumMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/RumMetricComputeIncludePercentiles'
        path:
          description: |-
            The path to the value the rum-based metric will aggregate on.
            Only present when `aggregation_type` is `distribution`.
          example: '@duration'
          type: string
      type: object
    RumMetricEventType:
      description: The type of RUM events to filter on.
      enum:
        - session
        - view
        - action
        - error
        - resource
        - long_task
        - vital
      example: session
      type: string
      x-enum-varnames:
        - SESSION
        - VIEW
        - ACTION
        - ERROR
        - RESOURCE
        - LONG_TASK
        - VITAL
    RumMetricResponseFilter:
      description: >-
        The rum-based metric filter. RUM events matching this filter will be
        aggregated in this metric.
      properties:
        query:
          description: The search query - following the RUM search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    RumMetricResponseGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the rum-based metric will be aggregated over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, `path` is
            used as the tag name.
          example: status_code
          type: string
      type: object
    RumMetricUniquenessWhen:
      description: >-
        When to count updatable events. `match` when the event is first seen, or
        `end` when the event is complete.
      enum:
        - match
        - end
      example: match
      type: string
      x-enum-varnames:
        - WHEN_MATCH
        - WHEN_END
    RumMetricResponseUniqueness:
      description: >-
        The rule to count updatable events. Is only set if `event_type` is
        `session` or `view`.
      properties:
        when:
          $ref: '#/components/schemas/RumMetricUniquenessWhen'
      type: object
    RumMetricResponseAttributes:
      description: The object describing a Datadog rum-based metric.
      properties:
        compute:
          $ref: '#/components/schemas/RumMetricResponseCompute'
        event_type:
          $ref: '#/components/schemas/RumMetricEventType'
        filter:
          $ref: '#/components/schemas/RumMetricResponseFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/RumMetricResponseGroupBy'
          type: array
        uniqueness:
          $ref: '#/components/schemas/RumMetricResponseUniqueness'
      type: object
    RumMetricID:
      description: The name of the rum-based metric.
      example: rum.sessions.webui.count
      type: string
    RumMetricType:
      default: rum_metrics
      description: The type of the resource. The value should always be rum_metrics.
      enum:
        - rum_metrics
      example: rum_metrics
      type: string
      x-enum-varnames:
        - RUM_METRICS
    RumMetricResponseData:
      description: The rum-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/RumMetricResponseAttributes'
        id:
          $ref: '#/components/schemas/RumMetricID'
        type:
          $ref: '#/components/schemas/RumMetricType'
      type: object
    RumMetricsResponse:
      description: All the available rum-based metric objects.
      properties:
        data:
          description: A list of rum-based metric objects.
          items:
            $ref: '#/components/schemas/RumMetricResponseData'
          type: array
      type: object
    RumMetricCompute:
      description: The compute rule to compute the rum-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/RumMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/RumMetricComputeIncludePercentiles'
        path:
          description: |-
            The path to the value the rum-based metric will aggregate on.
            Only present when `aggregation_type` is `distribution`.
          example: '@duration'
          type: string
      required:
        - aggregation_type
      type: object
    RumMetricFilter:
      description: >-
        The rum-based metric filter. Events matching this filter will be
        aggregated in this metric.
      properties:
        query:
          default: '*'
          description: The search query - following the RUM search syntax.
          example: '@service:web-ui: '
          type: string
      required:
        - query
      type: object
    RumMetricGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the rum-based metric will be aggregated over.
          example: '@browser.name'
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, `path` is
            used as the tag name.
          example: browser_name
          type: string
      required:
        - path
      type: object
    RumMetricUniqueness:
      description: >-
        The rule to count updatable events. Is only set if `event_type` is
        `sessions` or `views`.
      properties:
        when:
          $ref: '#/components/schemas/RumMetricUniquenessWhen'
      required:
        - when
      type: object
    RumMetricCreateAttributes:
      description: The object describing the Datadog rum-based metric to create.
      properties:
        compute:
          $ref: '#/components/schemas/RumMetricCompute'
        event_type:
          $ref: '#/components/schemas/RumMetricEventType'
        filter:
          $ref: '#/components/schemas/RumMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/RumMetricGroupBy'
          type: array
        uniqueness:
          $ref: '#/components/schemas/RumMetricUniqueness'
      required:
        - event_type
        - compute
      type: object
    RumMetricCreateData:
      description: The new rum-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/RumMetricCreateAttributes'
        id:
          $ref: '#/components/schemas/RumMetricID'
        type:
          $ref: '#/components/schemas/RumMetricType'
      required:
        - id
        - type
        - attributes
      type: object
    RumMetricCreateRequest:
      description: The new rum-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/RumMetricCreateData'
      required:
        - data
      type: object
    RumMetricResponse:
      description: The rum-based metric object.
      properties:
        data:
          $ref: '#/components/schemas/RumMetricResponseData'
      type: object
    RumMetricUpdateCompute:
      description: The compute rule to compute the rum-based metric.
      properties:
        include_percentiles:
          $ref: '#/components/schemas/RumMetricComputeIncludePercentiles'
      type: object
    RumMetricUpdateAttributes:
      description: The rum-based metric properties that will be updated.
      properties:
        compute:
          $ref: '#/components/schemas/RumMetricUpdateCompute'
        filter:
          $ref: '#/components/schemas/RumMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/RumMetricGroupBy'
          type: array
      type: object
    RumMetricUpdateData:
      description: The new rum-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/RumMetricUpdateAttributes'
        id:
          $ref: '#/components/schemas/RumMetricID'
        type:
          $ref: '#/components/schemas/RumMetricType'
      required:
        - type
        - attributes
      type: object
    RumMetricUpdateRequest:
      description: The new rum-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/RumMetricUpdateData'
      required:
        - data
      type: object
    RUMSort:
      description: Sort parameters when querying events.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    RUMEventAttributes:
      description: JSON object containing all event attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from RUM events.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        service:
          description: >-
            The name of the application or service generating RUM events.

            It is used to switch from RUM to APM, so make sure you define the
            same

            value when you use both products.
          example: web-app
          type: string
        tags:
          description: Array of tags associated with your event.
          example:
            - team:A
          items:
            description: Tag associated with your event.
            type: string
          type: array
        timestamp:
          description: Timestamp of your event.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    RUMEventType:
      default: rum
      description: Type of the event.
      enum:
        - rum
      example: rum
      type: string
      x-enum-varnames:
        - RUM
    RUMEvent:
      description: >-
        Object description of a RUM event after being processed and stored by
        Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/RUMEventAttributes'
        id:
          description: Unique ID of the event.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/RUMEventType'
      type: object
    RUMEventsResponse:
      description: >-
        Response object with all events matching the request and pagination
        information.
      properties:
        data:
          description: Array of events matching the request.
          items:
            $ref: '#/components/schemas/RUMEvent'
          type: array
        links:
          $ref: '#/components/schemas/RUMResponseLinks'
        meta:
          $ref: '#/components/schemas/RUMResponseMetadata'
      type: object
    RUMSearchEventsRequest:
      description: The request for a RUM events list.
      properties:
        filter:
          $ref: '#/components/schemas/RUMQueryFilter'
        options:
          $ref: '#/components/schemas/RUMQueryOptions'
        page:
          $ref: '#/components/schemas/RUMQueryPageOptions'
        sort:
          $ref: '#/components/schemas/RUMSort'
      type: object
    IdPMetadataFormData:
      description: The form data submitted to upload IdP metadata
      properties:
        idp_file:
          description: The IdP metadata XML file
          format: binary
          type: string
          x-mimetype: application/xml
      type: object
    State:
      description: The state of the rule evaluation.
      enum:
        - pass
        - fail
        - skip
      example: pass
      type: string
      x-enum-varnames:
        - PASS
        - FAIL
        - SKIP
    OutcomesBatchResponseAttributes:
      description: The JSON:API attributes for an outcome.
      properties:
        created_at:
          description: Creation time of the rule outcome.
          format: date-time
          type: string
        modified_at:
          description: Time of last rule outcome modification.
          format: date-time
          type: string
        remarks:
          description: >-
            Any remarks regarding the scorecard rule's evaluation, and supports
            HTML hyperlinks.
          example: 'See: <a href="https://app.datadoghq.com/services">Services</a>'
          type: string
        service_name:
          description: The unique name for a service in the catalog.
          example: my-service
          type: string
        state:
          $ref: '#/components/schemas/State'
      type: object
    RuleId:
      description: The unique ID for a scorecard rule.
      example: q8MQxk8TCqrHnWkx
      type: string
    RuleType:
      default: rule
      description: The JSON:API type for scorecard rules.
      enum:
        - rule
      example: rule
      type: string
      x-enum-varnames:
        - RULE
    RelationshipToOutcomeData:
      description: >-
        The JSON:API relationship to an outcome, which returns the related rule
        id.
      properties:
        id:
          $ref: '#/components/schemas/RuleId'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    RelationshipToOutcome:
      description: The JSON:API relationship to a scorecard outcome.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOutcomeData'
      type: object
    RuleOutcomeRelationships:
      description: The JSON:API relationship to a scorecard rule.
      properties:
        rule:
          $ref: '#/components/schemas/RelationshipToOutcome'
      type: object
    OutcomeType:
      default: outcome
      description: The JSON:API type for an outcome.
      enum:
        - outcome
      example: outcome
      type: string
      x-enum-varnames:
        - OUTCOME
    OutcomesResponseDataItem:
      description: A single rule outcome.
      properties:
        attributes:
          $ref: '#/components/schemas/OutcomesBatchResponseAttributes'
        id:
          description: The unique ID for a rule outcome.
          type: string
        relationships:
          $ref: '#/components/schemas/RuleOutcomeRelationships'
        type:
          $ref: '#/components/schemas/OutcomeType'
      type: object
    OutcomesResponseData:
      description: List of rule outcomes.
      items:
        $ref: '#/components/schemas/OutcomesResponseDataItem'
      type: array
    OutcomesResponseIncludedRuleAttributes:
      description: Details of a rule.
      properties:
        name:
          description: Name of the rule.
          example: Team Defined
          type: string
        scorecard_name:
          description: The scorecard name to which this rule must belong.
          example: Observability Best Practices
          type: string
      type: object
    OutcomesResponseIncludedItem:
      description: Attributes of the included rule.
      properties:
        attributes:
          $ref: '#/components/schemas/OutcomesResponseIncludedRuleAttributes'
        id:
          $ref: '#/components/schemas/RuleId'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    OutcomesResponseIncluded:
      description: Array of rule details.
      items:
        $ref: '#/components/schemas/OutcomesResponseIncludedItem'
      type: array
    OutcomesResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: Link for the next set of results.
          example: >-
            /api/v2/scorecard/outcomes?include=rule&page%5Blimit%5D=100&page%5Boffset%5D=100
          type: string
      type: object
    OutcomesResponse:
      description: Scorecard outcomes - the result of a rule for a service.
      properties:
        data:
          $ref: '#/components/schemas/OutcomesResponseData'
        included:
          $ref: '#/components/schemas/OutcomesResponseIncluded'
        links:
          $ref: '#/components/schemas/OutcomesResponseLinks'
      type: object
    OutcomesBatchRequestItem:
      description: >-
        Scorecard outcome for a specific rule, for a given service within a
        batched update.
      properties:
        remarks:
          description: >-
            Any remarks regarding the scorecard rule's evaluation, and supports
            HTML hyperlinks.
          example: 'See: <a href="https://app.datadoghq.com/services">Services</a>'
          type: string
        rule_id:
          $ref: '#/components/schemas/RuleId'
        service_name:
          description: The unique name for a service in the catalog.
          example: my-service
          type: string
        state:
          $ref: '#/components/schemas/State'
      required:
        - rule_id
        - service_name
        - state
      type: object
    OutcomesBatchAttributes:
      description: The JSON:API attributes for a batched set of scorecard outcomes.
      properties:
        results:
          description: Set of scorecard outcomes to update.
          items:
            $ref: '#/components/schemas/OutcomesBatchRequestItem'
          type: array
      type: object
    OutcomesBatchType:
      default: batched-outcome
      description: The JSON:API type for scorecard outcomes.
      enum:
        - batched-outcome
      example: batched-outcome
      type: string
      x-enum-varnames:
        - BATCHED_OUTCOME
    OutcomesBatchRequestData:
      description: Scorecard outcomes batch request data.
      properties:
        attributes:
          $ref: '#/components/schemas/OutcomesBatchAttributes'
        type:
          $ref: '#/components/schemas/OutcomesBatchType'
      type: object
    OutcomesBatchRequest:
      description: Scorecard outcomes batch request.
      properties:
        data:
          $ref: '#/components/schemas/OutcomesBatchRequestData'
      type: object
    OutcomesBatchResponseData:
      description: List of rule outcomes which were affected during the bulk operation.
      items:
        $ref: '#/components/schemas/OutcomesResponseDataItem'
      type: array
    OutcomesBatchResponseMeta:
      description: Metadata pertaining to the bulk operation.
      properties:
        total_received:
          description: >-
            Total number of scorecard results received during the bulk
            operation.
          format: int64
          type: integer
        total_updated:
          description: >-
            Total number of scorecard results modified during the bulk
            operation.
          format: int64
          type: integer
      type: object
    OutcomesBatchResponse:
      description: Scorecard outcomes batch response.
      properties:
        data:
          $ref: '#/components/schemas/OutcomesBatchResponseData'
        meta:
          $ref: '#/components/schemas/OutcomesBatchResponseMeta'
      required:
        - data
        - meta
      type: object
    RuleAttributes:
      description: Details of a rule.
      properties:
        category:
          deprecated: true
          description: The scorecard name to which this rule must belong.
          type: string
        created_at:
          description: Creation time of the rule outcome.
          format: date-time
          type: string
        custom:
          description: Defines if the rule is a custom rule.
          type: boolean
        description:
          description: Explanation of the rule.
          type: string
        enabled:
          description: If enabled, the rule is calculated as part of the score.
          example: true
          type: boolean
        modified_at:
          description: Time of the last rule outcome modification.
          format: date-time
          type: string
        name:
          description: Name of the rule.
          example: Team Defined
          type: string
        owner:
          description: Owner of the rule.
          type: string
        scorecard_name:
          description: The scorecard name to which this rule must belong.
          example: Deployments automated via Deployment Trains
          type: string
      type: object
    ScorecardType:
      default: scorecard
      description: The JSON:API type for scorecard.
      enum:
        - scorecard
      example: scorecard
      type: string
      x-enum-varnames:
        - SCORECARD
    RelationshipToRuleDataObject:
      description: Rule relationship data.
      properties:
        id:
          description: The unique ID for a scorecard.
          example: q8MQxk8TCqrHnWkp
          type: string
        type:
          $ref: '#/components/schemas/ScorecardType'
      type: object
    RelationshipToRuleData:
      description: Relationship data for a rule.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToRuleDataObject'
      type: object
    RelationshipToRule:
      description: Scorecard create rule response relationship.
      properties:
        scorecard:
          $ref: '#/components/schemas/RelationshipToRuleData'
      type: object
    ListRulesResponseDataItem:
      description: Rule details.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        id:
          $ref: '#/components/schemas/RuleId'
        relationships:
          $ref: '#/components/schemas/RelationshipToRule'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    ListRulesResponseData:
      description: Array of rule details.
      items:
        $ref: '#/components/schemas/ListRulesResponseDataItem'
      type: array
    ListRulesResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: Link for the next set of rules.
          example: >-
            /api/v2/scorecard/rules?page%5Blimit%5D=2&page%5Boffset%5D=2&page%5Bsize%5D=2
          type: string
      type: object
    ListRulesResponse:
      description: Scorecard rules response.
      properties:
        data:
          $ref: '#/components/schemas/ListRulesResponseData'
        links:
          $ref: '#/components/schemas/ListRulesResponseLinks'
      type: object
    CreateRuleRequestData:
      description: Scorecard create rule request data.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    CreateRuleRequest:
      description: Scorecard create rule request.
      properties:
        data:
          $ref: '#/components/schemas/CreateRuleRequestData'
      type: object
    CreateRuleResponseData:
      description: Create rule response data.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        id:
          $ref: '#/components/schemas/RuleId'
        relationships:
          $ref: '#/components/schemas/RelationshipToRule'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    CreateRuleResponse:
      description: Created rule in response.
      properties:
        data:
          $ref: '#/components/schemas/CreateRuleResponseData'
      type: object
    UpdateRuleRequestData:
      description: Data for the request to update a scorecard rule.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    UpdateRuleRequest:
      description: Request to update a scorecard rule.
      properties:
        data:
          $ref: '#/components/schemas/UpdateRuleRequestData'
      type: object
    UpdateRuleResponseData:
      description: The data for a rule update response.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleAttributes'
        id:
          $ref: '#/components/schemas/RuleId'
        relationships:
          $ref: '#/components/schemas/RelationshipToRule'
        type:
          $ref: '#/components/schemas/RuleType'
      type: object
    UpdateRuleResponse:
      description: The response from a rule update request.
      properties:
        data:
          $ref: '#/components/schemas/UpdateRuleResponseData'
      type: object
    AssetType:
      description: The asset type
      enum:
        - Repository
        - Service
        - Host
        - HostImage
        - Image
      example: Repository
      type: string
      x-enum-varnames:
        - REPOSITORY
        - SERVICE
        - HOST
        - HOSTIMAGE
        - IMAGE
    AssetOperatingSystem:
      description: Asset operating system.
      properties:
        description:
          description: Operating system version.
          example: '24.04'
          type: string
        name:
          description: Operating system name.
          example: ubuntu
          type: string
      required:
        - name
      type: object
    AssetRisks:
      description: Asset risks.
      properties:
        has_access_to_sensitive_data:
          description: Whether the asset has access to sensitive data or not.
          example: false
          type: boolean
        has_privileged_access:
          description: Whether the asset has privileged access or not.
          example: false
          type: boolean
        in_production:
          description: Whether the asset is in production or not.
          example: false
          type: boolean
        is_publicly_accessible:
          description: Whether the asset is publicly accessible or not.
          example: false
          type: boolean
        under_attack:
          description: Whether the asset is under attack or not.
          example: false
          type: boolean
      required:
        - in_production
      type: object
    AssetVersion:
      description: Asset version.
      properties:
        first:
          description: Asset first version.
          example: _latest
          type: string
        last:
          description: Asset last version.
          example: _latest
          type: string
      type: object
    AssetAttributes:
      description: The JSON:API attributes of the asset.
      properties:
        arch:
          description: Asset architecture.
          example: arm64
          type: string
        environments:
          description: List of environments where the asset is deployed.
          example:
            - staging
          items:
            example: staging
            type: string
          type: array
        name:
          description: Asset name.
          example: github.com/DataDog/datadog-agent.git
          type: string
        operating_system:
          $ref: '#/components/schemas/AssetOperatingSystem'
        risks:
          $ref: '#/components/schemas/AssetRisks'
        type:
          $ref: '#/components/schemas/AssetType'
        version:
          $ref: '#/components/schemas/AssetVersion'
      required:
        - name
        - type
        - risks
        - environments
      type: object
    AssetEntityType:
      description: The JSON:API type.
      enum:
        - assets
      example: assets
      type: string
      x-enum-varnames:
        - ASSETS
    Asset:
      description: A single vulnerable asset
      properties:
        attributes:
          $ref: '#/components/schemas/AssetAttributes'
        id:
          description: The unique ID for this asset.
          example: Repository|github.com/DataDog/datadog-agent.git
          type: string
        type:
          $ref: '#/components/schemas/AssetEntityType'
      required:
        - id
        - type
        - attributes
      type: object
    Links:
      description: The JSON:API links related to pagination.
      properties:
        first:
          description: First page link.
          example: >-
            https://api.datadoghq.com/api/v2/security/vulnerabilities?page%5Bnumber%5D=1&page%5Btoken%5D=b82cef018aab81ed1d4bb4xb35xxfc065da7efa685fbcecdbd338f3015e3afabbbfa3a911b4984_721ee28a-zecb-4e45-9960-c42065b574f4
          type: string
        last:
          description: Last page link.
          example: >-
            https://api.datadoghq.com/api/v2/security/vulnerabilities?page%5Bnumber%5D=15&page%5Btoken%5D=b82cef018aab81ed1d4bb4xb35xxfc065da7efa685fbcecdbd338f3015e3afabbbfa3a911b4984_721ee28a-zecb-4e45-9960-c42065b574f4
          type: string
        next:
          description: Next page link.
          example: >-
            https://api.datadoghq.com/api/v2/security/vulnerabilities?page%5Bnumber%5D=16&page%5Btoken%5D=b82cef018aab81ed1d4bb4xb35xxfc065da7efa685fbcecdbd338f3015e3afabbbfa3a911b4984_721ee28a-zecb-4e45-9960-c42065b574f4
          type: string
        previous:
          description: Previous page link.
          example: >-
            https://api.datadoghq.com/api/v2/security/vulnerabilities?page%5Bnumber%5D=14&page%5Btoken%5D=b82cef018aab81ed1d4bb4xb35xxfc065da7efa685fbcecdbd338f3015e3afabbbfa3a911b4984_721ee28a-zecb-4e45-9960-c42065b574f4
          type: string
        self:
          description: Request link.
          example: >-
            https://api.datadoghq.com/api/v2/security/vulnerabilities?filter%5Btool%5D=Infra
          type: string
      required:
        - self
        - first
        - last
      type: object
    Metadata:
      description: The metadata related to this request.
      properties:
        count:
          description: Number of entities included in the response.
          example: 150
          format: int64
          type: integer
        token:
          description: The token that identifies the request.
          example: >-
            b82cef018aab81ed1d4bb4xb35xxfc065da7efa685fbcecdbd338f3015e3afabbbfa3a911b4984_721ee28a-zecb-4e45-9960-c42065b574f4
          type: string
        total:
          description: Total number of entities across all pages.
          example: 152431
          format: int64
          type: integer
      required:
        - count
        - total
        - token
      type: object
    ListVulnerableAssetsResponse:
      description: The expected response schema when listing vulnerable assets.
      properties:
        data:
          description: List of vulnerable assets.
          items:
            $ref: '#/components/schemas/Asset'
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Metadata'
      required:
        - data
      type: object
    SBOMComponentType:
      description: The SBOM component type
      enum:
        - application
        - container
        - data
        - device
        - device-driver
        - file
        - firmware
        - framework
        - library
        - machine-learning-model
        - operating-system
        - platform
      example: application
      type: string
      x-enum-varnames:
        - APPLICATION
        - CONTAINER
        - DATA
        - DEVICE
        - DEVICE_DRIVER
        - FILE
        - FIRMWARE
        - FRAMEWORK
        - LIBRARY
        - MACHINE_LEARNING_MODEL
        - OPERATING_SYSTEM
        - PLATFORM
    SBOMComponent:
      description: Software or hardware component.
      properties:
        bom-ref:
          description: >-
            An optional identifier that can be used to reference the component
            elsewhere in the BOM.
          example: pkg:golang/google.golang.org/grpc@1.68.1
          type: string
        name:
          description: >-
            The name of the component. This will often be a shortened, single
            name of the component.
          example: google.golang.org/grpc
          type: string
        purl:
          description: >-
            Specifies the package-url (purl). The purl, if specified, MUST be
            valid and conform to the
            [specification](https://github.com/package-url/purl-spec).
          example: pkg:golang/google.golang.org/grpc@1.68.1
          type: string
        type:
          $ref: '#/components/schemas/SBOMComponentType'
        version:
          description: The component version.
          example: 1.68.1
          type: string
      required:
        - type
        - name
        - version
      type: object
    SBOMMetadataComponent:
      description: The component that the BOM describes.
      properties:
        name:
          description: >-
            The name of the component. This will often be a shortened, single
            name of the component.
          example: github.com/datadog/datadog-agent
          type: string
        type:
          description: Specifies the type of the component.
          example: application
          type: string
      type: object
    SBOMMetadata:
      description: Provides additional information about a BOM.
      properties:
        component:
          $ref: '#/components/schemas/SBOMMetadataComponent'
      type: object
    SpecVersion:
      description: The version of the CycloneDX specification a BOM conforms to.
      enum:
        - '1.0'
        - '1.1'
        - '1.2'
        - '1.3'
        - '1.4'
        - '1.5'
      example: '1.5'
      type: string
      x-enum-varnames:
        - ONE_ZERO
        - ONE_ONE
        - ONE_TWO
        - ONE_THREE
        - ONE_FOUR
        - ONE_FIVE
    SBOMAttributes:
      description: The JSON:API attributes of the SBOM.
      properties:
        bomFormat:
          description: >-
            Specifies the format of the BOM. This helps to identify the file as
            CycloneDX since BOM do not have a filename convention nor does JSON
            schema support namespaces. This value MUST be `CycloneDX`.
          example: CycloneDX
          type: string
        components:
          description: A list of software and hardware components.
          items:
            $ref: '#/components/schemas/SBOMComponent'
          type: array
        metadata:
          $ref: '#/components/schemas/SBOMMetadata'
        serialNumber:
          description: >-
            Every BOM generated has a unique serial number, even if the contents
            of the BOM have not changed overt time. The serial number follows
            [RFC-4122](https://datatracker.ietf.org/doc/html/rfc4122)
          example: urn:uuid:f7119d2f-1vgh-24b5-91f0-12010db72da7
          type: string
        specVersion:
          $ref: '#/components/schemas/SpecVersion'
        version:
          description: It increments when a BOM is modified. The default value is 1.
          example: 1
          format: int64
          type: integer
      required:
        - bomFormat
        - specVersion
        - components
        - metadata
        - serialNumber
        - version
      type: object
    SBOMType:
      description: The JSON:API type.
      enum:
        - sboms
      example: sboms
      type: string
      x-enum-varnames:
        - SBOMS
    SBOM:
      description: A single SBOM
      properties:
        attributes:
          $ref: '#/components/schemas/SBOMAttributes'
        id:
          description: >-
            The unique ID for this SBOM (it is equivalent to the `asset_name` or
            `asset_name@repo_digest` (Image)
          example: github.com/datadog/datadog-agent
          type: string
        type:
          $ref: '#/components/schemas/SBOMType'
      type: object
    GetSBOMResponse:
      description: The expected response schema when getting an SBOM.
      properties:
        data:
          $ref: '#/components/schemas/SBOM'
      required:
        - data
      type: object
    Date:
      description: Date as Unix timestamp in milliseconds.
      example: 1722439510282
      format: int64
      type: integer
    RuleUser:
      description: User creating or modifying a rule.
      properties:
        handle:
          description: The user handle.
          example: john.doe@domain.com
          type: string
        name:
          description: The user name.
          example: John Doe
          type: string
      type: object
    Enabled:
      description: Field used to enable or disable the rule.
      example: true
      type: boolean
    RuleName:
      description: Name of the notification rule.
      example: Rule 1
      type: string
    NotificationRuleQuery:
      description: >-
        The query is composed of one or several key:value pairs, which can be
        used to filter security issues on tags and attributes.
      example: (source:production_service OR env:prod)
      type: string
    RuleTypesItems:
      description: >-
        Security rule type which can be used in security rules.

        Signal-based notification rules can filter signals based on rule types
        application_security, log_detection,

        workload_security, signal_correlation, cloud_configuration and
        infrastructure_configuration.

        Vulnerability-based notification rules can filter vulnerabilities based
        on rule types application_code_vulnerability,

        application_library_vulnerability, attack_path,
        container_image_vulnerability, identity_risk, misconfiguration, and
        api_security.
      enum:
        - application_security
        - log_detection
        - workload_security
        - signal_correlation
        - cloud_configuration
        - infrastructure_configuration
        - application_code_vulnerability
        - application_library_vulnerability
        - attack_path
        - container_image_vulnerability
        - identity_risk
        - misconfiguration
        - api_security
      type: string
      x-enum-varnames:
        - APPLICATION_SECURITY
        - LOG_DETECTION
        - WORKLOAD_SECURITY
        - SIGNAL_CORRELATION
        - CLOUD_CONFIGURATION
        - INFRASTRUCTURE_CONFIGURATION
        - APPLICATION_CODE_VULNERABILITY
        - APPLICATION_LIBRARY_VULNERABILITY
        - ATTACK_PATH
        - CONTAINER_IMAGE_VULNERABILITY
        - IDENTITY_RISK
        - MISCONFIGURATION
        - API_SECURITY
    RuleTypes:
      description: Security rule types used as filters in security rules.
      example:
        - misconfiguration
        - attack_path
      items:
        $ref: '#/components/schemas/RuleTypesItems'
      type: array
    RuleSeverity:
      description: Severity of a security rule.
      enum:
        - critical
        - high
        - medium
        - low
        - unknown
        - info
      example: critical
      type: string
      x-enum-varnames:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
        - UNKNOWN
        - INFO
    TriggerSource:
      description: >-
        The type of security issues on which the rule applies. Notification
        rules based on security signals need to use the trigger source
        "security_signals",

        while notification rules based on security vulnerabilities need to use
        the trigger source "security_findings".
      enum:
        - security_findings
        - security_signals
      example: security_findings
      type: string
      x-enum-varnames:
        - SECURITY_FINDINGS
        - SECURITY_SIGNALS
    Selectors:
      description: >-
        Selectors are used to filter security issues for which notifications
        should be generated.

        Users can specify rule severities, rule types, a query to filter
        security issues on tags and attributes, and the trigger source.

        Only the trigger_source field is required.
      properties:
        query:
          $ref: '#/components/schemas/NotificationRuleQuery'
        rule_types:
          $ref: '#/components/schemas/RuleTypes'
        severities:
          description: The security rules severities to consider.
          items:
            $ref: '#/components/schemas/RuleSeverity'
          type: array
        trigger_source:
          $ref: '#/components/schemas/TriggerSource'
      required:
        - trigger_source
      type: object
    Targets:
      description: >-
        List of recipients to notify when a notification rule is triggered. Many
        different target types are supported,

        such as email addresses, Slack channels, and PagerDuty services.

        The appropriate integrations need to be properly configured to send
        notifications to the specified targets.
      example:
        - '@john.doe@email.com'
      items:
        description: Recipients to notify.
        type: string
      type: array
    TimeAggregation:
      description: >-
        Time aggregation period (in seconds) is used to aggregate the results of
        the notification rule evaluation.

        Results are aggregated over a selected time frame using a rolling
        window, which updates with each new evaluation.

        Notifications are only sent for new issues discovered during the window.

        Time aggregation is only available for vulnerability-based notification
        rules. When omitted or set to 0, no aggregation

        is done.
      example: 86400
      format: int64
      type: integer
    Version:
      description: >-
        Version of the notification rule. It is updated when the rule is
        modified.
      example: 1
      format: int64
      type: integer
    NotificationRuleAttributes:
      description: Attributes of the notification rule.
      properties:
        created_at:
          $ref: '#/components/schemas/Date'
        created_by:
          $ref: '#/components/schemas/RuleUser'
        enabled:
          $ref: '#/components/schemas/Enabled'
        modified_at:
          $ref: '#/components/schemas/Date'
        modified_by:
          $ref: '#/components/schemas/RuleUser'
        name:
          $ref: '#/components/schemas/RuleName'
        selectors:
          $ref: '#/components/schemas/Selectors'
        targets:
          $ref: '#/components/schemas/Targets'
        time_aggregation:
          $ref: '#/components/schemas/TimeAggregation'
        version:
          $ref: '#/components/schemas/Version'
      required:
        - created_at
        - created_by
        - enabled
        - modified_at
        - modified_by
        - name
        - selectors
        - targets
        - version
      type: object
    ID:
      description: The ID of a notification rule.
      example: aaa-bbb-ccc
      type: string
    NotificationRulesType:
      description: The rule type associated to notification rules.
      enum:
        - notification_rules
      example: notification_rules
      type: string
      x-enum-varnames:
        - NOTIFICATION_RULES
    NotificationRule:
      description: >
        Notification rules allow full control over notifications generated by
        the various Datadog security products.

        They allow users to define the conditions under which a notification
        should be generated (based on rule severities,

        rule types, rule tags, and so on), and the targets to notify.

        A notification rule is composed of a rule ID, a rule type, and the rule
        attributes. All fields are required.
      properties:
        attributes:
          $ref: '#/components/schemas/NotificationRuleAttributes'
        id:
          $ref: '#/components/schemas/ID'
        type:
          $ref: '#/components/schemas/NotificationRulesType'
      required:
        - attributes
        - id
        - type
      type: object
    CreateNotificationRuleParametersDataAttributes:
      description: Attributes of the notification rule create request.
      properties:
        enabled:
          $ref: '#/components/schemas/Enabled'
        name:
          $ref: '#/components/schemas/RuleName'
        selectors:
          $ref: '#/components/schemas/Selectors'
        targets:
          $ref: '#/components/schemas/Targets'
        time_aggregation:
          $ref: '#/components/schemas/TimeAggregation'
      required:
        - selectors
        - name
        - targets
      type: object
    CreateNotificationRuleParametersData:
      description: >-
        Data of the notification rule create request: the rule type, and the
        rule attributes. All fields are required.
      properties:
        attributes:
          $ref: '#/components/schemas/CreateNotificationRuleParametersDataAttributes'
        type:
          $ref: '#/components/schemas/NotificationRulesType'
      required:
        - attributes
        - type
      type: object
    CreateNotificationRuleParameters:
      description: Body of the notification rule create request.
      properties:
        data:
          $ref: '#/components/schemas/CreateNotificationRuleParametersData'
      type: object
    NotificationRuleResponse:
      description: Response object which includes a notification rule.
      properties:
        data:
          $ref: '#/components/schemas/NotificationRule'
      type: object
    PatchNotificationRuleParametersDataAttributes:
      description: >-
        Attributes of the notification rule patch request. It is required to
        update the version of the rule when patching it.
      properties:
        enabled:
          $ref: '#/components/schemas/Enabled'
        name:
          $ref: '#/components/schemas/RuleName'
        selectors:
          $ref: '#/components/schemas/Selectors'
        targets:
          $ref: '#/components/schemas/Targets'
        time_aggregation:
          $ref: '#/components/schemas/TimeAggregation'
        version:
          $ref: '#/components/schemas/Version'
      type: object
    PatchNotificationRuleParametersData:
      description: >-
        Data of the notification rule patch request: the rule ID, the rule type,
        and the rule attributes. All fields are required.
      properties:
        attributes:
          $ref: '#/components/schemas/PatchNotificationRuleParametersDataAttributes'
        id:
          $ref: '#/components/schemas/ID'
        type:
          $ref: '#/components/schemas/NotificationRulesType'
      required:
        - attributes
        - id
        - type
      type: object
    PatchNotificationRuleParameters:
      description: Body of the notification rule patch request.
      properties:
        data:
          $ref: '#/components/schemas/PatchNotificationRuleParametersData'
      type: object
    VulnerabilityType:
      description: The vulnerability type.
      enum:
        - AdminConsoleActive
        - CodeInjection
        - CommandInjection
        - ComponentWithKnownVulnerability
        - DangerousWorkflows
        - DefaultAppDeployed
        - DefaultHtmlEscapeInvalid
        - DirectoryListingLeak
        - EmailHtmlInjection
        - EndOfLife
        - HardcodedPassword
        - HardcodedSecret
        - HeaderInjection
        - HstsHeaderMissing
        - InsecureAuthProtocol
        - InsecureCookie
        - InsecureJspLayout
        - LdapInjection
        - MaliciousPackage
        - MandatoryRemediation
        - NoHttpOnlyCookie
        - NoSameSiteCookie
        - NoSqlMongoDbInjection
        - PathTraversal
        - ReflectionInjection
        - RiskyLicense
        - SessionRewriting
        - SessionTimeout
        - SqlInjection
        - Ssrf
        - StackTraceLeak
        - TrustBoundaryViolation
        - Unmaintained
        - UntrustedDeserialization
        - UnvalidatedRedirect
        - VerbTampering
        - WeakCipher
        - WeakHash
        - WeakRandomness
        - XContentTypeHeaderMissing
        - XPathInjection
        - Xss
      example: WeakCipher
      type: string
      x-enum-varnames:
        - ADMIN_CONSOLE_ACTIVE
        - CODE_INJECTION
        - COMMAND_INJECTION
        - COMPONENT_WITH_KNOWN_VULNERABILITY
        - DANGEROUS_WORKFLOWS
        - DEFAULT_APP_DEPLOYED
        - DEFAULT_HTML_ESCAPE_INVALID
        - DIRECTORY_LISTING_LEAK
        - EMAIL_HTML_INJECTION
        - END_OF_LIFE
        - HARDCODED_PASSWORD
        - HARDCODED_SECRET
        - HEADER_INJECTION
        - HSTS_HEADER_MISSING
        - INSECURE_AUTH_PROTOCOL
        - INSECURE_COOKIE
        - INSECURE_JSP_LAYOUT
        - LDAP_INJECTION
        - MALICIOUS_PACKAGE
        - MANDATORY_REMEDIATION
        - NO_HTTP_ONLY_COOKIE
        - NO_SAME_SITE_COOKIE
        - NO_SQL_MONGO_DB_INJECTION
        - PATH_TRAVERSAL
        - REFLECTION_INJECTION
        - RISKY_LICENSE
        - SESSION_REWRITING
        - SESSION_TIMEOUT
        - SQL_INJECTION
        - SSRF
        - STACK_TRACE_LEAK
        - TRUST_BOUNDARY_VIOLATION
        - UNMAINTAINED
        - UNTRUSTED_DESERIALIZATION
        - UNVALIDATED_REDIRECT
        - VERB_TAMPERING
        - WEAK_CIPHER
        - WEAK_HASH
        - WEAK_RANDOMNESS
        - X_CONTENT_TYPE_HEADER_MISSING
        - X_PATH_INJECTION
        - XSS
    VulnerabilitySeverity:
      description: The vulnerability severity.
      enum:
        - Unknown
        - None
        - Low
        - Medium
        - High
        - Critical
      example: Medium
      type: string
      x-enum-varnames:
        - UNKNOWN
        - NONE
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    VulnerabilityStatus:
      description: The vulnerability status.
      enum:
        - Open
        - Muted
        - Remediated
        - InProgress
        - AutoClosed
      example: Open
      type: string
      x-enum-varnames:
        - OPEN
        - MUTED
        - REMEDIATED
        - INPROGRESS
        - AUTOCLOSED
    VulnerabilityTool:
      description: The vulnerability tool.
      enum:
        - IAST
        - SCA
        - Infra
      example: SCA
      type: string
      x-enum-varnames:
        - IAST
        - SCA
        - INFRA
    VulnerabilityEcosystem:
      description: The related vulnerability asset ecosystem.
      enum:
        - PyPI
        - Maven
        - NuGet
        - Npm
        - RubyGems
        - Go
        - Packagist
        - Ddeb
        - Rpm
        - Apk
        - Windows
      type: string
      x-enum-varnames:
        - PYPI
        - MAVEN
        - NUGET
        - NPM
        - RUBY_GEMS
        - GO
        - PACKAGIST
        - D_DEB
        - RPM
        - APK
        - WINDOWS
    CodeLocation:
      description: Code vulnerability location.
      properties:
        file_path:
          description: Vulnerability location file path.
          example: src/Class.java:100
          type: string
        location:
          description: Vulnerability extracted location.
          example: com.example.Class:100
          type: string
        method:
          description: Vulnerability location method.
          example: FooBar
          type: string
      required:
        - location
      type: object
    CVSS:
      description: Vulnerability severity.
      properties:
        score:
          description: Vulnerability severity score.
          example: 4.5
          format: double
          type: number
        severity:
          $ref: '#/components/schemas/VulnerabilitySeverity'
        vector:
          description: Vulnerability CVSS vector.
          example: CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
          type: string
      required:
        - score
        - severity
        - vector
      type: object
    VulnerabilityCvss:
      description: Vulnerability severities.
      properties:
        base:
          $ref: '#/components/schemas/CVSS'
        datadog:
          $ref: '#/components/schemas/CVSS'
      required:
        - base
        - datadog
      type: object
    DependencyLocation:
      description: Static library vulnerability location.
      properties:
        column_end:
          description: Location column end.
          example: 140
          format: int64
          type: integer
        column_start:
          description: Location column start.
          example: 5
          format: int64
          type: integer
        file_name:
          description: Location file name.
          example: src/go.mod
          type: string
        line_end:
          description: Location line end.
          example: 10
          format: int64
          type: integer
        line_start:
          description: Location line start.
          example: 1
          format: int64
          type: integer
      required:
        - file_name
        - line_start
        - line_end
        - column_start
        - column_end
      type: object
    VulnerabilityDependencyLocations:
      description: Static library vulnerability location.
      properties:
        block:
          $ref: '#/components/schemas/DependencyLocation'
        name:
          $ref: '#/components/schemas/DependencyLocation'
        version:
          $ref: '#/components/schemas/DependencyLocation'
      required:
        - block
      type: object
    Library:
      description: Vulnerability library.
      properties:
        name:
          description: Vulnerability library name.
          example: linux-aws-5.15
          type: string
        version:
          description: Vulnerability library version.
          example: 5.15.0
          type: string
      required:
        - name
      type: object
    Advisory:
      description: Advisory.
      properties:
        base_severity:
          description: Advisory base severity.
          example: Critical
          type: string
        id:
          description: Advisory id.
          example: GHSA-4wrc-f8pq-fpqp
          type: string
        severity:
          description: Advisory Datadog severity.
          example: Medium
          type: string
      required:
        - id
        - base_severity
      type: object
    Remediation:
      description: Vulnerability remediation.
      properties:
        auto_solvable:
          description: >-
            Whether the vulnerability can be resolved when recompiling the
            package or not.
          example: false
          type: boolean
        avoided_advisories:
          description: Avoided advisories.
          items:
            $ref: '#/components/schemas/Advisory'
          type: array
        fixed_advisories:
          description: Remediation fixed advisories.
          items:
            $ref: '#/components/schemas/Advisory'
          type: array
        library_name:
          description: Library name remediating the vulnerability.
          example: stdlib
          type: string
        library_version:
          description: Library version remediating the vulnerability.
          example: Upgrade to a version >= 1.20.0
          type: string
        new_advisories:
          description: New advisories.
          items:
            $ref: '#/components/schemas/Advisory'
          type: array
        remaining_advisories:
          description: Remaining advisories.
          items:
            $ref: '#/components/schemas/Advisory'
          type: array
        type:
          description: Remediation type.
          example: text
          type: string
      required:
        - type
        - library_name
        - library_version
        - auto_solvable
        - fixed_advisories
        - remaining_advisories
        - new_advisories
        - avoided_advisories
      type: object
    EPSS:
      description: Vulnerability EPSS severity.
      properties:
        score:
          description: Vulnerability EPSS severity score.
          example: 0.2
          format: double
          type: number
        severity:
          $ref: '#/components/schemas/VulnerabilitySeverity'
      required:
        - score
        - severity
      type: object
    VulnerabilityRisks:
      description: Vulnerability risks.
      properties:
        epss:
          $ref: '#/components/schemas/EPSS'
        exploit_available:
          description: Vulnerability public exploit availability.
          example: false
          type: boolean
        exploit_sources:
          description: Vulnerability exploit sources.
          example:
            - NIST
          items:
            example: NIST
            type: string
          type: array
        exploitation_probability:
          description: Vulnerability exploitation probability.
          example: false
          type: boolean
        poc_exploit_available:
          description: Vulnerability POC exploit availability.
          example: false
          type: boolean
      required:
        - exploitation_probability
        - poc_exploit_available
        - exploit_available
        - exploit_sources
      type: object
    VulnerabilityAttributes:
      description: The JSON:API attributes of the vulnerability.
      properties:
        advisory_id:
          description: Vulnerability advisory ID.
          example: TRIVY-CVE-2023-0615
          type: string
        code_location:
          $ref: '#/components/schemas/CodeLocation'
        cve_list:
          description: Vulnerability CVE list.
          example:
            - CVE-2023-0615
          items:
            example: CVE-2023-0615
            type: string
          type: array
        cvss:
          $ref: '#/components/schemas/VulnerabilityCvss'
        dependency_locations:
          $ref: '#/components/schemas/VulnerabilityDependencyLocations'
        description:
          description: Vulnerability description.
          example: >-
            LDAP Injection is a security vulnerability that occurs when
            untrusted user input is improperly handled and directly incorporated
            into LDAP queries without appropriate sanitization or validation.
            This vulnerability enables attackers to manipulate LDAP queries and
            potentially gain unauthorized access, modify data, or extract
            sensitive information from the directory server. By exploiting the
            LDAP injection vulnerability, attackers can execute malicious
            commands, bypass authentication mechanisms, and perform unauthorized
            actions within the directory service.
          type: string
        ecosystem:
          $ref: '#/components/schemas/VulnerabilityEcosystem'
        exposure_time:
          description: Vulnerability exposure time in seconds.
          example: 5618604
          format: int64
          type: integer
        first_detection:
          description: >-
            First detection of the vulnerability in [RFC
            3339](https://datatracker.ietf.org/doc/html/rfc3339) format
          example: '2024-09-19 21:23:08+00:00'
          type: string
        fix_available:
          description: Whether the vulnerability has a remediation or not.
          example: false
          type: boolean
        language:
          description: Vulnerability language.
          example: ubuntu
          type: string
        last_detection:
          description: >-
            Last detection of the vulnerability in [RFC
            3339](https://datatracker.ietf.org/doc/html/rfc3339) format
          example: '2024-09-01 21:23:08+00:00'
          type: string
        library:
          $ref: '#/components/schemas/Library'
        remediations:
          description: List of remediations.
          items:
            $ref: '#/components/schemas/Remediation'
          type: array
        repo_digests:
          description: >-
            Vulnerability `repo_digest` list (when the vulnerability is related
            to `Image` asset).
          items:
            example: >-
              sha256:0ae7da091191787229d321e3638e39c319a97d6e20f927d465b519d699215bf7
            type: string
          type: array
        risks:
          $ref: '#/components/schemas/VulnerabilityRisks'
        status:
          $ref: '#/components/schemas/VulnerabilityStatus'
        title:
          description: Vulnerability title.
          example: LDAP Injection
          type: string
        tool:
          $ref: '#/components/schemas/VulnerabilityTool'
        type:
          $ref: '#/components/schemas/VulnerabilityType'
      required:
        - type
        - cvss
        - status
        - tool
        - title
        - description
        - cve_list
        - risks
        - language
        - first_detection
        - last_detection
        - exposure_time
        - remediations
        - fix_available
      type: object
    VulnerabilityRelationshipsAffectsData:
      description: Asset affected by this vulnerability.
      properties:
        id:
          description: The unique ID for this related asset.
          example: Repository|github.com/DataDog/datadog-agent.git
          type: string
        type:
          $ref: '#/components/schemas/AssetEntityType'
      required:
        - id
        - type
      type: object
    VulnerabilityRelationshipsAffects:
      description: Relationship type.
      properties:
        data:
          $ref: '#/components/schemas/VulnerabilityRelationshipsAffectsData'
      required:
        - data
      type: object
    VulnerabilityRelationships:
      description: Related entities object.
      properties:
        affects:
          $ref: '#/components/schemas/VulnerabilityRelationshipsAffects'
      required:
        - affects
      type: object
    VulnerabilitiesType:
      description: The JSON:API type.
      enum:
        - vulnerabilities
      example: vulnerabilities
      type: string
      x-enum-varnames:
        - VULNERABILITIES
    Vulnerability:
      description: A single vulnerability
      properties:
        attributes:
          $ref: '#/components/schemas/VulnerabilityAttributes'
        id:
          description: The unique ID for this vulnerability.
          example: 3ecdfea798f2ce8f6e964805a344945f
          type: string
        relationships:
          $ref: '#/components/schemas/VulnerabilityRelationships'
        type:
          $ref: '#/components/schemas/VulnerabilitiesType'
      required:
        - id
        - type
        - attributes
        - relationships
      type: object
    ListVulnerabilitiesResponse:
      description: The expected response schema when listing vulnerabilities.
      properties:
        data:
          description: List of vulnerabilities.
          items:
            $ref: '#/components/schemas/Vulnerability'
          type: array
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Metadata'
      required:
        - data
      type: object
    SecurityFilterExclusionFilterResponse:
      description: A single exclusion filter.
      properties:
        name:
          description: The exclusion filter name.
          example: Exclude staging
          type: string
        query:
          description: The exclusion filter query.
          example: source:staging
          type: string
      type: object
    SecurityFilterFilteredDataType:
      description: The filtered data type.
      enum:
        - logs
      example: logs
      type: string
      x-enum-varnames:
        - LOGS
    SecurityFilterAttributes:
      description: The object describing a security filter.
      properties:
        exclusion_filters:
          description: The list of exclusion filters applied in this security filter.
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilterResponse'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_builtin:
          description: Whether the security filter is the built-in filter.
          example: false
          type: boolean
        is_enabled:
          description: Whether the security filter is enabled.
          example: false
          type: boolean
        name:
          description: The security filter name.
          example: Custom security filter
          type: string
        query:
          description: >-
            The security filter query. Logs accepted by this query will be
            accepted by this filter.
          example: service:api
          type: string
        version:
          description: The version of the security filter.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityFilterID:
      description: The ID of the security filter.
      example: 3dd-0uc-h1s
      type: string
    SecurityFilterType:
      default: security_filters
      description: The type of the resource. The value should always be `security_filters`.
      enum:
        - security_filters
      example: security_filters
      type: string
      x-enum-varnames:
        - SECURITY_FILTERS
    SecurityFilter:
      description: The security filter's properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterAttributes'
        id:
          $ref: '#/components/schemas/SecurityFilterID'
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      type: object
    SecurityFilterMeta:
      description: Optional metadata associated to the response.
      properties:
        warning:
          description: A warning message.
          example: >-
            All the security filters are disabled. As a result, no logs are
            being analyzed.
          type: string
      type: object
    SecurityFiltersResponse:
      description: All the available security filters objects.
      properties:
        data:
          description: A list of security filters objects.
          items:
            $ref: '#/components/schemas/SecurityFilter'
          type: array
        meta:
          $ref: '#/components/schemas/SecurityFilterMeta'
      type: object
    SecurityFilterExclusionFilter:
      description: Exclusion filter for the security filter.
      example:
        name: Exclude staging
        query: source:staging
      properties:
        name:
          description: Exclusion filter name.
          example: Exclude staging
          type: string
        query:
          description: >-
            Exclusion filter query. Logs that match this query are excluded from
            the security filter.
          example: source:staging
          type: string
      required:
        - name
        - query
      type: object
    SecurityFilterCreateAttributes:
      description: Object containing the attributes of the security filter to be created.
      properties:
        exclusion_filters:
          description: Exclusion filters to exclude some logs from the security filter.
          example:
            - name: Exclude staging
              query: source:staging
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilter'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_enabled:
          description: Whether the security filter is enabled.
          example: true
          type: boolean
        name:
          description: The name of the security filter.
          example: Custom security filter
          type: string
        query:
          description: The query of the security filter.
          example: service:api
          type: string
      required:
        - name
        - query
        - exclusion_filters
        - filtered_data_type
        - is_enabled
      type: object
    SecurityFilterCreateData:
      description: Object for a single security filter.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterCreateAttributes'
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      required:
        - type
        - attributes
      type: object
    SecurityFilterCreateRequest:
      description: >-
        Request object that includes the security filter that you would like to
        create.
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilterCreateData'
      required:
        - data
      type: object
    SecurityFilterResponse:
      description: Response object which includes a single security filter.
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilter'
        meta:
          $ref: '#/components/schemas/SecurityFilterMeta'
      type: object
    SecurityFilterUpdateAttributes:
      description: The security filters properties to be updated.
      properties:
        exclusion_filters:
          description: Exclusion filters to exclude some logs from the security filter.
          example: []
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilter'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_enabled:
          description: Whether the security filter is enabled.
          example: true
          type: boolean
        name:
          description: The name of the security filter.
          example: Custom security filter
          type: string
        query:
          description: The query of the security filter.
          example: service:api
          type: string
        version:
          description: The version of the security filter to update.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityFilterUpdateData:
      description: The new security filter properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterUpdateAttributes'
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      required:
        - type
        - attributes
      type: object
    SecurityFilterUpdateRequest:
      description: The new security filter body.
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilterUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringUser:
      description: A user.
      properties:
        handle:
          description: The handle of the user.
          example: john.doe@datadoghq.com
          type: string
        name:
          description: The name of the user.
          example: John Doe
          nullable: true
          type: string
      type: object
    SecurityMonitoringSuppressionAttributes:
      description: The attributes of the suppression rule.
      properties:
        creation_date:
          description: >-
            A Unix millisecond timestamp given the creation date of the
            suppression rule.
          format: int64
          type: integer
        creator:
          $ref: '#/components/schemas/SecurityMonitoringUser'
        data_exclusion_query:
          description: >-
            An exclusion query on the input data of the security rules, which
            could be logs, Agent events, or other types of data based on the
            security rule. Events matching this query are ignored by any
            detection rules referenced in the suppression rule.
          example: source:cloudtrail account_id:12345
          type: string
        description:
          description: A description for the suppression rule.
          example: This rule suppresses low-severity signals in staging environments.
          type: string
        editable:
          description: Whether the suppression rule is editable.
          example: true
          type: boolean
        enabled:
          description: Whether the suppression rule is enabled.
          example: true
          type: boolean
        expiration_date:
          description: >-
            A Unix millisecond timestamp giving an expiration date for the
            suppression rule. After this date, it won't suppress signals
            anymore.
          example: 1703187336000
          format: int64
          type: integer
        name:
          description: The name of the suppression rule.
          example: Custom suppression
          type: string
        rule_query:
          description: >-
            The rule query of the suppression rule, with the same syntax as the
            search bar for detection rules.
          example: type:log_detection source:cloudtrail
          type: string
        start_date:
          description: >-
            A Unix millisecond timestamp giving the start date for the
            suppression rule. After this date, it starts suppressing signals.
          example: 1703187336000
          format: int64
          type: integer
        suppression_query:
          description: >-
            The suppression query of the suppression rule. If a signal matches
            this query, it is suppressed and not triggered. Same syntax as the
            queries to search signals in the signal explorer.
          example: env:staging status:low
          type: string
        update_date:
          description: >-
            A Unix millisecond timestamp given the update date of the
            suppression rule.
          format: int64
          type: integer
        updater:
          $ref: '#/components/schemas/SecurityMonitoringUser'
        version:
          description: >-
            The version of the suppression rule; it starts at 1, and is
            incremented at each update.
          example: 42
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityMonitoringSuppressionID:
      description: The ID of the suppression rule.
      example: 3dd-0uc-h1s
      type: string
    SecurityMonitoringSuppressionType:
      default: suppressions
      description: The type of the resource. The value should always be `suppressions`.
      enum:
        - suppressions
      example: suppressions
      type: string
      x-enum-varnames:
        - SUPPRESSIONS
    SecurityMonitoringSuppression:
      description: The suppression rule's properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionAttributes'
        id:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionID'
        type:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionType'
      type: object
    SecurityMonitoringSuppressionsResponse:
      description: Response object containing the available suppression rules.
      properties:
        data:
          description: A list of suppressions objects.
          items:
            $ref: '#/components/schemas/SecurityMonitoringSuppression'
          type: array
      type: object
    SecurityMonitoringSuppressionCreateAttributes:
      description: Object containing the attributes of the suppression rule to be created.
      properties:
        data_exclusion_query:
          description: >-
            An exclusion query on the input data of the security rules, which
            could be logs, Agent events, or other types of data based on the
            security rule. Events matching this query are ignored by any
            detection rules referenced in the suppression rule.
          example: source:cloudtrail account_id:12345
          type: string
        description:
          description: A description for the suppression rule.
          example: This rule suppresses low-severity signals in staging environments.
          type: string
        enabled:
          description: Whether the suppression rule is enabled.
          example: true
          type: boolean
        expiration_date:
          description: >-
            A Unix millisecond timestamp giving an expiration date for the
            suppression rule. After this date, it won't suppress signals
            anymore.
          example: 1703187336000
          format: int64
          type: integer
        name:
          description: The name of the suppression rule.
          example: Custom suppression
          type: string
        rule_query:
          description: >-
            The rule query of the suppression rule, with the same syntax as the
            search bar for detection rules.
          example: type:log_detection source:cloudtrail
          type: string
        start_date:
          description: >-
            A Unix millisecond timestamp giving the start date for the
            suppression rule. After this date, it starts suppressing signals.
          example: 1703187336000
          format: int64
          type: integer
        suppression_query:
          description: >-
            The suppression query of the suppression rule. If a signal matches
            this query, it is suppressed and is not triggered. It uses the same
            syntax as the queries to search signals in the Signals Explorer.
          example: env:staging status:low
          type: string
      required:
        - name
        - enabled
        - rule_query
      type: object
    SecurityMonitoringSuppressionCreateData:
      description: Object for a single suppression rule.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionCreateAttributes'
        type:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionType'
      required:
        - type
        - attributes
      type: object
    SecurityMonitoringSuppressionCreateRequest:
      description: >-
        Request object that includes the suppression rule that you would like to
        create.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionCreateData'
      required:
        - data
      type: object
    SecurityMonitoringSuppressionResponse:
      description: Response object containing a single suppression rule.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSuppression'
      type: object
    SecurityMonitoringSuppressionUpdateAttributes:
      description: The suppression rule properties to be updated.
      properties:
        data_exclusion_query:
          description: >-
            An exclusion query on the input data of the security rules, which
            could be logs, Agent events, or other types of data based on the
            security rule. Events matching this query are ignored by any
            detection rules referenced in the suppression rule.
          example: source:cloudtrail account_id:12345
          type: string
        description:
          description: A description for the suppression rule.
          example: This rule suppresses low-severity signals in staging environments.
          type: string
        enabled:
          description: Whether the suppression rule is enabled.
          example: true
          type: boolean
        expiration_date:
          description: >-
            A Unix millisecond timestamp giving an expiration date for the
            suppression rule. After this date, it won't suppress signals
            anymore. If unset, the expiration date of the suppression rule is
            left untouched. If set to `null`, the expiration date is removed.
          example: 1703187336000
          format: int64
          nullable: true
          type: integer
        name:
          description: The name of the suppression rule.
          example: Custom suppression
          type: string
        rule_query:
          description: >-
            The rule query of the suppression rule, with the same syntax as the
            search bar for detection rules.
          example: type:log_detection source:cloudtrail
          type: string
        start_date:
          description: >-
            A Unix millisecond timestamp giving the start date for the
            suppression rule. After this date, it starts suppressing signals. If
            unset, the start date of the suppression rule is left untouched. If
            set to `null`, the start date is removed.
          example: 1703187336000
          format: int64
          nullable: true
          type: integer
        suppression_query:
          description: >-
            The suppression query of the suppression rule. If a signal matches
            this query, it is suppressed and not triggered. Same syntax as the
            queries to search signals in the signal explorer.
          example: env:staging status:low
          type: string
        version:
          description: >-
            The current version of the suppression. This is optional, but it can
            help prevent concurrent modifications.
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityMonitoringSuppressionUpdateData:
      description: The new suppression properties; partial updates are supported.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionUpdateAttributes'
        type:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionType'
      required:
        - type
        - attributes
      type: object
    SecurityMonitoringSuppressionUpdateRequest:
      description: Request object containing the fields to update on the suppression rule.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSuppressionUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringRuleCaseActionOptionsUserBehaviorName:
      description: >-
        Used with the case action of type 'user_behavior'. The value specified
        in this field is applied as a risk tag to all users affected by the
        rule.
      type: string
    SecurityMonitoringRuleCaseActionOptions:
      additionalProperties: {}
      description: Options for the rule action
      properties:
        duration:
          description: Duration of the action in seconds. 0 indicates no expiration.
          example: 0
          format: int64
          minimum: 0
          type: integer
        userBehaviorName:
          $ref: >-
            #/components/schemas/SecurityMonitoringRuleCaseActionOptionsUserBehaviorName
      type: object
    SecurityMonitoringRuleCaseActionType:
      description: The action type.
      enum:
        - block_ip
        - block_user
        - user_behavior
      type: string
      x-enum-varnames:
        - BLOCK_IP
        - BLOCK_USER
        - USER_BEHAVIOR
    SecurityMonitoringRuleCaseAction:
      description: >-
        Action to perform when a signal is triggered. Only available for
        Application Security rule type.
      properties:
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleCaseActionOptions'
        type:
          $ref: '#/components/schemas/SecurityMonitoringRuleCaseActionType'
      type: object
    SecurityMonitoringRuleSeverity:
      description: Severity of the Security Signal.
      enum:
        - info
        - low
        - medium
        - high
        - critical
      example: critical
      type: string
      x-enum-varnames:
        - INFO
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    SecurityMonitoringRuleCase:
      description: Case when signal is generated.
      properties:
        actions:
          description: Action to perform for each rule case.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseAction'
          type: array
        condition:
          description: >-
            A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to
            determine if a signal should be generated

            based on the event counts in the previously defined queries.
          type: string
        name:
          description: Name of the case.
          type: string
        notifications:
          description: Notification targets for each rule case.
          items:
            description: Notification.
            type: string
          type: array
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      type: object
    CloudConfigurationRuleComplianceSignalOptions:
      description: >-
        How to generate compliance signals. Useful for cloud_configuration rules
        only.
      properties:
        defaultActivationStatus:
          description: The default activation status.
          nullable: true
          type: boolean
        defaultGroupByFields:
          description: The default group by fields.
          items:
            type: string
          nullable: true
          type: array
        userActivationStatus:
          description: Whether signals will be sent.
          nullable: true
          type: boolean
        userGroupByFields:
          description: Fields to use to group findings by when sending signals.
          items:
            type: string
          nullable: true
          type: array
      type: object
    SecurityMonitoringFilterAction:
      description: The type of filtering action.
      enum:
        - require
        - suppress
      type: string
      x-enum-varnames:
        - REQUIRE
        - SUPPRESS
    SecurityMonitoringFilter:
      description: The rule's suppression filter.
      properties:
        action:
          $ref: '#/components/schemas/SecurityMonitoringFilterAction'
        query:
          description: Query for selecting logs to apply the filtering action.
          type: string
      type: object
    CloudConfigurationRegoRule:
      description: Rule details.
      properties:
        policy:
          description: >-
            The policy written in `rego`, see:
            https://www.openpolicyagent.org/docs/latest/policy-language/
          example: |
            package datadog

            import data.datadog.output as dd_output
            import future.keywords.contains
            import future.keywords.if
            import future.keywords.in

            eval(resource) = "skip" if {
              # Logic that evaluates to true if the resource should be skipped
              true
            } else = "pass" {
              # Logic that evaluates to true if the resource is compliant
              true
            } else = "fail" {
              # Logic that evaluates to true if the resource is not compliant
              true
            }

            # This part remains unchanged for all rules
            results contains result if {
              some resource in input.resources[input.main_resource_type]
              result := dd_output.format(resource, eval(resource))
            }
          type: string
        resourceTypes:
          description: >-
            List of resource types that will be evaluated upon. Must have at
            least one element.
          example:
            - gcp_iam_service_account
            - gcp_iam_policy
          items:
            type: string
          type: array
      required:
        - policy
        - resourceTypes
      type: object
    CloudConfigurationComplianceRuleOptions:
      additionalProperties: {}
      description: >
        Options for cloud_configuration rules.

        Fields `resourceType` and `regoRule` are mandatory when managing custom
        `cloud_configuration` rules.
      properties:
        complexRule:
          description: >
            Whether the rule is a complex one.

            Must be set to true if `regoRule.resourceTypes` contains more than
            one item. Defaults to false.
          type: boolean
        regoRule:
          $ref: '#/components/schemas/CloudConfigurationRegoRule'
        resourceType:
          description: >
            Main resource type to be checked by the rule. It should be specified
            again in `regoRule.resourceTypes`.
          example: aws_acm
          type: string
      type: object
    SecurityMonitoringRuleDecreaseCriticalityBasedOnEnv:
      description: >-
        If true, signals in non-production environments have a lower severity
        than what is defined by the rule case, which can reduce signal noise.

        The severity is decreased by one level: `CRITICAL` in production becomes
        `HIGH` in non-production, `HIGH` becomes `MEDIUM` and so on. `INFO`
        remains `INFO`.

        The decrement is applied when the environment tag of the signal starts
        with `staging`, `test` or `dev`.
      example: false
      type: boolean
    SecurityMonitoringRuleDetectionMethod:
      description: The detection method.
      enum:
        - threshold
        - new_value
        - anomaly_detection
        - impossible_travel
        - hardcoded
        - third_party
        - anomaly_threshold
      type: string
      x-enum-varnames:
        - THRESHOLD
        - NEW_VALUE
        - ANOMALY_DETECTION
        - IMPOSSIBLE_TRAVEL
        - HARDCODED
        - THIRD_PARTY
        - ANOMALY_THRESHOLD
    SecurityMonitoringRuleEvaluationWindow:
      description: >-
        A time window is specified to match when at least one of the cases
        matches true. This is a sliding window

        and evaluates in real time. For third party detection method, this field
        is not used.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
        - 10800
        - 21600
        - 43200
        - 86400
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
        - THREE_HOURS
        - SIX_HOURS
        - TWELVE_HOURS
        - ONE_DAY
    SecurityMonitoringRuleHardcodedEvaluatorType:
      description: Hardcoded evaluator type.
      enum:
        - log4shell
      type: string
      x-enum-varnames:
        - LOG4SHELL
    SecurityMonitoringRuleImpossibleTravelOptionsBaselineUserLocations:
      description: >-
        If true, signals are suppressed for the first 24 hours. In that time,
        Datadog learns the user's regular

        access locations. This can be helpful to reduce noise and infer VPN
        usage or credentialed API access.
      example: true
      type: boolean
    SecurityMonitoringRuleImpossibleTravelOptions:
      description: Options on impossible travel detection method.
      properties:
        baselineUserLocations:
          $ref: >-
            #/components/schemas/SecurityMonitoringRuleImpossibleTravelOptionsBaselineUserLocations
      type: object
    SecurityMonitoringRuleKeepAlive:
      description: >-
        Once a signal is generated, the signal will remain “open” if a case is
        matched at least once within

        this keep alive window. For third party detection method, this field is
        not used.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
        - 10800
        - 21600
        - 43200
        - 86400
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
        - THREE_HOURS
        - SIX_HOURS
        - TWELVE_HOURS
        - ONE_DAY
    SecurityMonitoringRuleMaxSignalDuration:
      description: >-
        A signal will “close” regardless of the query being matched once the
        time exceeds the maximum duration.

        This time is calculated from the first seen timestamp.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
        - 10800
        - 21600
        - 43200
        - 86400
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
        - THREE_HOURS
        - SIX_HOURS
        - TWELVE_HOURS
        - ONE_DAY
    SecurityMonitoringRuleNewValueOptionsForgetAfter:
      description: The duration in days after which a learned value is forgotten.
      enum:
        - 1
        - 2
        - 7
        - 14
        - 21
        - 28
      format: int32
      type: integer
      x-enum-varnames:
        - ONE_DAY
        - TWO_DAYS
        - ONE_WEEK
        - TWO_WEEKS
        - THREE_WEEKS
        - FOUR_WEEKS
    SecurityMonitoringRuleNewValueOptionsLearningDuration:
      default: 0
      description: >-
        The duration in days during which values are learned, and after which
        signals will be generated for values that

        weren't learned. If set to 0, a signal will be generated for all new
        values after the first value is learned.
      enum:
        - 0
        - 1
        - 7
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_DAYS
        - ONE_DAY
        - SEVEN_DAYS
    SecurityMonitoringRuleNewValueOptionsLearningMethod:
      default: duration
      description: >-
        The learning method used to determine when signals should be generated
        for values that weren't learned.
      enum:
        - duration
        - threshold
      type: string
      x-enum-varnames:
        - DURATION
        - THRESHOLD
    SecurityMonitoringRuleNewValueOptionsLearningThreshold:
      default: 0
      description: >-
        A number of occurrences after which signals will be generated for values
        that weren't learned.
      enum:
        - 0
        - 1
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_OCCURRENCES
        - ONE_OCCURRENCE
    SecurityMonitoringRuleNewValueOptions:
      description: Options on new value detection method.
      properties:
        forgetAfter:
          $ref: >-
            #/components/schemas/SecurityMonitoringRuleNewValueOptionsForgetAfter
        learningDuration:
          $ref: >-
            #/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningDuration
        learningMethod:
          $ref: >-
            #/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningMethod
        learningThreshold:
          $ref: >-
            #/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningThreshold
      type: object
    SecurityMonitoringThirdPartyRootQuery:
      description: A query to be combined with the third party case query.
      properties:
        groupByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        query:
          description: Query to run on logs.
          example: source:cloudtrail
          type: string
      type: object
    SecurityMonitoringRuleThirdPartyOptions:
      description: Options on third party detection method.
      properties:
        defaultNotifications:
          description: >-
            Notification targets for the logs that do not correspond to any of
            the cases.
          items:
            description: Notification.
            type: string
          type: array
        defaultStatus:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
        rootQueries:
          description: >-
            Queries to be combined with third party case queries. Each of them
            can have different group by fields, to aggregate differently based
            on the type of alert.
          items:
            $ref: '#/components/schemas/SecurityMonitoringThirdPartyRootQuery'
          type: array
        signalTitleTemplate:
          description: >-
            A template for the signal title; if omitted, the title is generated
            based on the case name.
          type: string
      type: object
    SecurityMonitoringRuleOptions:
      description: Options.
      properties:
        complianceRuleOptions:
          $ref: '#/components/schemas/CloudConfigurationComplianceRuleOptions'
        decreaseCriticalityBasedOnEnv:
          $ref: >-
            #/components/schemas/SecurityMonitoringRuleDecreaseCriticalityBasedOnEnv
        detectionMethod:
          $ref: '#/components/schemas/SecurityMonitoringRuleDetectionMethod'
        evaluationWindow:
          $ref: '#/components/schemas/SecurityMonitoringRuleEvaluationWindow'
        hardcodedEvaluatorType:
          $ref: '#/components/schemas/SecurityMonitoringRuleHardcodedEvaluatorType'
        impossibleTravelOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleImpossibleTravelOptions'
        keepAlive:
          $ref: '#/components/schemas/SecurityMonitoringRuleKeepAlive'
        maxSignalDuration:
          $ref: '#/components/schemas/SecurityMonitoringRuleMaxSignalDuration'
        newValueOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptions'
        thirdPartyRuleOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleThirdPartyOptions'
      type: object
    SecurityMonitoringRuleQueryAggregation:
      description: The aggregation type.
      enum:
        - count
        - cardinality
        - sum
        - max
        - new_value
        - geo_data
        - event_count
        - none
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - SUM
        - MAX
        - NEW_VALUE
        - GEO_DATA
        - EVENT_COUNT
        - NONE
    SecurityMonitoringStandardDataSource:
      default: logs
      description: Source of events, either logs or audit trail.
      enum:
        - logs
        - audit
        - app_sec_spans
        - spans
        - security_runtime
        - network
      example: logs
      type: string
      x-enum-varnames:
        - LOGS
        - AUDIT
        - APP_SEC_SPANS
        - SPANS
        - SECURITY_RUNTIME
        - NETWORK
    SecurityMonitoringStandardRuleQuery:
      description: Query for matching rule.
      properties:
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        dataSource:
          $ref: '#/components/schemas/SecurityMonitoringStandardDataSource'
        distinctFields:
          description: Field for which the cardinality is measured. Sent as an array.
          items:
            description: Field.
            type: string
          type: array
        groupByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        hasOptionalGroupByFields:
          description: >-
            When false, events without a group-by value are ignored by the rule.
            When true, events with missing group-by fields are processed with
            `N/A`, replacing the missing values.
          example: false
          readOnly: true
          type: boolean
        metric:
          deprecated: true
          description: >-
            (Deprecated) The target field to aggregate over when using the sum
            or max

            aggregations. `metrics` field should be used instead.
          type: string
        metrics:
          description: >-
            Group of target fields to aggregate over when using the sum, max,
            geo data, or new value aggregations. The sum, max, and geo data
            aggregations only accept one value in this list, whereas the new
            value aggregation accepts up to five values.
          items:
            description: Field.
            type: string
          type: array
        name:
          description: Name of the query.
          type: string
        query:
          description: Query to run on logs.
          example: a > 3
          type: string
      type: object
    SecurityMonitoringReferenceTable:
      description: Reference tables used in the queries.
      properties:
        checkPresence:
          description: Whether to include or exclude the matched values.
          type: boolean
        columnName:
          description: The name of the column in the reference table.
          type: string
        logFieldPath:
          description: The field in the log to match against the reference table.
          type: string
        ruleQueryName:
          description: The name of the query to apply the reference table to.
          type: string
        tableName:
          description: The name of the reference table.
          type: string
      type: object
    SecurityMonitoringThirdPartyRuleCase:
      description: Case when signal is generated by a third party rule.
      properties:
        name:
          description: Name of the case.
          type: string
        notifications:
          description: Notification targets for each rule case.
          items:
            description: Notification.
            type: string
          type: array
        query:
          description: A query to map a third party event to this case.
          type: string
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      type: object
    SecurityMonitoringRuleTypeRead:
      description: The rule type.
      enum:
        - log_detection
        - infrastructure_configuration
        - workload_security
        - cloud_configuration
        - application_security
      type: string
      x-enum-varnames:
        - LOG_DETECTION
        - INFRASTRUCTURE_CONFIGURATION
        - WORKLOAD_SECURITY
        - CLOUD_CONFIGURATION
        - APPLICATION_SECURITY
    SecurityMonitoringStandardRuleResponse:
      description: Rule.
      properties:
        cases:
          description: Cases for generating signals.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCase'
          type: array
        complianceSignalOptions:
          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'
        createdAt:
          description: When the rule was created, timestamp in milliseconds.
          format: int64
          type: integer
        creationAuthorId:
          description: User ID of the user who created the rule.
          format: int64
          type: integer
        defaultTags:
          description: Default Tags for default rules (included in tags)
          example:
            - security:attacks
          items:
            description: Default Tag.
            type: string
          type: array
        deprecationDate:
          description: When the rule will be deprecated, timestamp in milliseconds.
          format: int64
          type: integer
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed. This field is deprecated for log detection, signal
            correlation, and workload security rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        groupSignalsBy:
          description: >-
            Additional grouping to perform on top of the existing groups in the
            query section. Must be a subset of the existing groups.
          example:
            - service
          items:
            description: Field to group by.
            type: string
          type: array
        hasExtendedTitle:
          description: >-
            Whether the notifications include the triggering group-by values in
            their title.
          type: boolean
        id:
          description: The ID of the rule.
          type: string
        isDefault:
          description: Whether the rule is included by default.
          type: boolean
        isDeleted:
          description: Whether the rule has been deleted.
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          type: boolean
        message:
          description: Message for generated signals.
          type: string
        name:
          description: The name of the rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'
          type: array
        referenceTables:
          description: Reference tables for the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringReferenceTable'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            description: Tag.
            type: string
          type: array
        thirdPartyCases:
          description: >-
            Cases for generating signals from third-party rules. Only available
            for third-party rules.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringThirdPartyRuleCase'
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringRuleTypeRead'
        updateAuthorId:
          description: User ID of the user who updated the rule.
          format: int64
          type: integer
        updatedAt:
          description: The date the rule was last updated, in milliseconds.
          format: int64
          type: integer
        version:
          description: The version of the rule.
          format: int64
          type: integer
      type: object
    SecurityMonitoringSignalRuleResponseQuery:
      description: Query for matching rule on signals.
      properties:
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        correlatedByFields:
          description: Fields to correlate by.
          items:
            description: Field.
            type: string
          type: array
        correlatedQueryIndex:
          description: Index of the rule query used to retrieve the correlated field.
          format: int32
          maximum: 9
          type: integer
        defaultRuleId:
          description: Default Rule ID to match on signals.
          example: d3f-ru1-e1d
          type: string
        distinctFields:
          description: Field for which the cardinality is measured. Sent as an array.
          items:
            description: Field.
            type: string
          type: array
        groupByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        metrics:
          description: Group of target fields to aggregate over.
          items:
            description: Field.
            type: string
          type: array
        name:
          description: Name of the query.
          type: string
        ruleId:
          description: Rule ID to match on signals.
          example: org-ru1-e1d
          type: string
      type: object
    SecurityMonitoringSignalRuleType:
      description: The rule type.
      enum:
        - signal_correlation
      type: string
      x-enum-varnames:
        - SIGNAL_CORRELATION
    SecurityMonitoringSignalRuleResponse:
      description: Rule.
      properties:
        cases:
          description: Cases for generating signals.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCase'
          type: array
        createdAt:
          description: When the rule was created, timestamp in milliseconds.
          format: int64
          type: integer
        creationAuthorId:
          description: User ID of the user who created the rule.
          format: int64
          type: integer
        deprecationDate:
          description: When the rule will be deprecated, timestamp in milliseconds.
          format: int64
          type: integer
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed. This field is deprecated for log detection, signal
            correlation, and workload security rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: >-
            Whether the notifications include the triggering group-by values in
            their title.
          type: boolean
        id:
          description: The ID of the rule.
          type: string
        isDefault:
          description: Whether the rule is included by default.
          type: boolean
        isDeleted:
          description: Whether the rule has been deleted.
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          type: boolean
        message:
          description: Message for generated signals.
          type: string
        name:
          description: The name of the rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringSignalRuleResponseQuery'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalRuleType'
        updateAuthorId:
          description: User ID of the user who updated the rule.
          format: int64
          type: integer
        version:
          description: The version of the rule.
          format: int64
          type: integer
      type: object
    SecurityMonitoringRuleResponse:
      description: Create a new rule.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRuleResponse'
        - $ref: '#/components/schemas/SecurityMonitoringSignalRuleResponse'
    SecurityMonitoringListRulesResponse:
      description: List of rules.
      properties:
        data:
          description: Array containing the list of rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    SecurityMonitoringRuleCaseCreate:
      description: Case when signal is generated.
      properties:
        actions:
          description: Action to perform for each rule case.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseAction'
          type: array
        condition:
          description: >-
            A case contains logical operations (`>`,`>=`, `&&`, `||`) to
            determine if a signal should be generated

            based on the event counts in the previously defined queries.
          type: string
        name:
          description: Name of the case.
          type: string
        notifications:
          description: Notification targets.
          items:
            description: Notification.
            type: string
          type: array
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      required:
        - status
      type: object
    SecurityMonitoringThirdPartyRuleCaseCreate:
      description: Case when a signal is generated by a third party rule.
      properties:
        name:
          description: Name of the case.
          type: string
        notifications:
          description: Notification targets for each case.
          items:
            description: Notification.
            type: string
          type: array
        query:
          description: A query to map a third party event to this case.
          type: string
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      required:
        - status
      type: object
    SecurityMonitoringRuleTypeCreate:
      description: The rule type.
      enum:
        - application_security
        - log_detection
        - workload_security
      type: string
      x-enum-varnames:
        - APPLICATION_SECURITY
        - LOG_DETECTION
        - WORKLOAD_SECURITY
    SecurityMonitoringStandardRuleCreatePayload:
      description: Create a new rule.
      properties:
        cases:
          description: Cases for generating signals.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed. This field is deprecated for log detection, signal
            correlation, and workload security rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        groupSignalsBy:
          description: >-
            Additional grouping to perform on top of the existing groups in the
            query section. Must be a subset of the existing groups.
          example:
            - service
          items:
            description: Field to group by.
            type: string
          type: array
        hasExtendedTitle:
          description: >-
            Whether the notifications include the triggering group-by values in
            their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message for generated signals.
          example: ''
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'
          type: array
        referenceTables:
          description: Reference tables for the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringReferenceTable'
          type: array
        tags:
          description: Tags for generated signals.
          example:
            - env:prod
            - team:security
          items:
            description: Tag.
            type: string
          type: array
        thirdPartyCases:
          description: >-
            Cases for generating signals from third-party rules. Only available
            for third-party rules.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringThirdPartyRuleCaseCreate'
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringRuleTypeCreate'
      required:
        - name
        - isEnabled
        - queries
        - options
        - cases
        - message
      type: object
    SecurityMonitoringSignalRuleQuery:
      description: Query for matching rule on signals.
      properties:
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        correlatedByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        correlatedQueryIndex:
          description: Index of the rule query used to retrieve the correlated field.
          format: int32
          maximum: 9
          type: integer
        metrics:
          description: Group of target fields to aggregate over.
          items:
            description: Field.
            type: string
          type: array
        name:
          description: Name of the query.
          type: string
        ruleId:
          description: Rule ID to match on signals.
          example: org-ru1-e1d
          type: string
      required:
        - ruleId
      type: object
    SecurityMonitoringSignalRuleCreatePayload:
      description: Create a new signal correlation rule.
      properties:
        cases:
          description: Cases for generating signals.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed. This field is deprecated for log detection, signal
            correlation, and workload security rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: >-
            Whether the notifications include the triggering group-by values in
            their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message for generated signals.
          example: ''
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting signals which are part of the rule.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringSignalRuleQuery'
          type: array
        tags:
          description: Tags for generated signals.
          example:
            - env:prod
            - team:security
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalRuleType'
      required:
        - name
        - isEnabled
        - queries
        - options
        - cases
        - message
      type: object
    CloudConfigurationRuleCaseCreate:
      description: Description of signals.
      properties:
        notifications:
          description: Notification targets for each rule case.
          items:
            description: Notification.
            type: string
          type: array
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      required:
        - status
      type: object
    CloudConfigurationRuleOptions:
      description: Options on cloud configuration rules.
      properties:
        complianceRuleOptions:
          $ref: '#/components/schemas/CloudConfigurationComplianceRuleOptions'
      required:
        - complianceRuleOptions
      type: object
    CloudConfigurationRuleType:
      description: The rule type.
      enum:
        - cloud_configuration
      type: string
      x-enum-varnames:
        - CLOUD_CONFIGURATION
    CloudConfigurationRuleCreatePayload:
      description: Create a new cloud configuration rule.
      properties:
        cases:
          description: >
            Description of generated findings and signals (severity and channels
            to be notified in case of a signal). Must contain exactly one item.
          items:
            $ref: '#/components/schemas/CloudConfigurationRuleCaseCreate'
          type: array
        complianceSignalOptions:
          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message in markdown format for generated findings and signals.
          example: |
            #Description
            Explanation of the rule.

            #Remediation
            How to fix the security issue.
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/CloudConfigurationRuleOptions'
        tags:
          description: Tags for generated findings and signals.
          example:
            - env:prod
            - team:security
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/CloudConfigurationRuleType'
      required:
        - name
        - isEnabled
        - options
        - complianceSignalOptions
        - cases
        - message
      type: object
    SecurityMonitoringRuleCreatePayload:
      description: Create a new rule.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRuleCreatePayload'
        - $ref: '#/components/schemas/SecurityMonitoringSignalRuleCreatePayload'
        - $ref: '#/components/schemas/CloudConfigurationRuleCreatePayload'
    SecurityMonitoringStandardRulePayload:
      description: The payload of a rule.
      properties:
        cases:
          description: Cases for generating signals.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed. This field is deprecated for log detection, signal
            correlation, and workload security rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        groupSignalsBy:
          description: >-
            Additional grouping to perform on top of the existing groups in the
            query section. Must be a subset of the existing groups.
          example:
            - service
          items:
            description: Field to group by.
            type: string
          type: array
        hasExtendedTitle:
          description: >-
            Whether the notifications include the triggering group-by values in
            their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message for generated signals.
          example: ''
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'
          type: array
        referenceTables:
          description: Reference tables for the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringReferenceTable'
          type: array
        tags:
          description: Tags for generated signals.
          example:
            - env:prod
            - team:security
          items:
            description: Tag.
            type: string
          type: array
        thirdPartyCases:
          description: >-
            Cases for generating signals from third-party rules. Only available
            for third-party rules.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringThirdPartyRuleCaseCreate'
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringRuleTypeCreate'
      required:
        - name
        - isEnabled
        - queries
        - options
        - cases
        - message
      type: object
    SecurityMonitoringSignalRulePayload:
      description: The payload of a signal correlation rule.
      properties:
        cases:
          description: Cases for generating signals.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed. This field is deprecated for log detection, signal
            correlation, and workload security rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: >-
            Whether the notifications include the triggering group-by values in
            their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message for generated signals.
          example: ''
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting signals which are part of the rule.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringSignalRuleQuery'
          type: array
        tags:
          description: Tags for generated signals.
          example:
            - env:prod
            - team:security
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalRuleType'
      required:
        - name
        - isEnabled
        - queries
        - options
        - cases
        - message
      type: object
    SecurityMonitoringRuleConvertPayload:
      description: Convert a rule from JSON to Terraform.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRulePayload'
        - $ref: '#/components/schemas/SecurityMonitoringSignalRulePayload'
    SecurityMonitoringRuleConvertResponse:
      description: Result of the convert rule request containing Terraform content.
      properties:
        terraformContent:
          description: Terraform string as a result of converting the rule from JSON.
          type: string
      type: object
    SecurityMonitoringRuleTypeTest:
      description: The rule type.
      enum:
        - log_detection
      type: string
      x-enum-varnames:
        - LOG_DETECTION
    SecurityMonitoringStandardRuleTestPayload:
      description: The payload of a rule to test
      properties:
        cases:
          description: Cases for generating signals.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed. This field is deprecated for log detection, signal
            correlation, and workload security rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        groupSignalsBy:
          description: >-
            Additional grouping to perform on top of the existing groups in the
            query section. Must be a subset of the existing groups.
          example:
            - service
          items:
            description: Field to group by.
            type: string
          type: array
        hasExtendedTitle:
          description: >-
            Whether the notifications include the triggering group-by values in
            their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message for generated signals.
          example: ''
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'
          type: array
        referenceTables:
          description: Reference tables for the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringReferenceTable'
          type: array
        tags:
          description: Tags for generated signals.
          example:
            - env:prod
            - team:security
          items:
            description: Tag.
            type: string
          type: array
        thirdPartyCases:
          description: >-
            Cases for generating signals from third-party rules. Only available
            for third-party rules.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringThirdPartyRuleCaseCreate'
          type: array
        type:
          $ref: '#/components/schemas/SecurityMonitoringRuleTypeTest'
      required:
        - name
        - isEnabled
        - queries
        - options
        - cases
        - message
      type: object
    SecurityMonitoringRuleTestPayload:
      description: Test a rule.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRuleTestPayload'
    SecurityMonitoringRuleQueryPayloadData:
      additionalProperties: {}
      description: Payload used to test the rule query.
      properties:
        ddsource:
          description: Source of the payload.
          example: nginx
          type: string
        ddtags:
          description: Tags associated with your data.
          example: env:staging,version:5.1
          type: string
        hostname:
          description: The name of the originating host of the log.
          example: i-012345678
          type: string
        message:
          description: The message of the payload.
          example: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
          type: string
        service:
          description: The name of the application or service generating the data.
          example: payment
          type: string
      type: object
    SecurityMonitoringRuleQueryPayload:
      description: Payload to test a rule query with the expected result.
      properties:
        expectedResult:
          description: Expected result of the test.
          example: true
          type: boolean
        index:
          description: Index of the query under test.
          example: 0
          format: int64
          minimum: 0
          type: integer
        payload:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryPayloadData'
      type: object
    SecurityMonitoringRuleTestRequest:
      description: >-
        Test the rule queries of a rule (rule property is ignored when applied
        to an existing rule)
      properties:
        rule:
          $ref: '#/components/schemas/SecurityMonitoringRuleTestPayload'
        ruleQueryPayloads:
          description: Data payloads used to test rules query with the expected result.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleQueryPayload'
          type: array
      type: object
    SecurityMonitoringRuleTestResponse:
      description: Result of the test of the rule queries.
      properties:
        results:
          description: >-
            Assert results are returned in the same order as the rule query
            payloads.

            For each payload, it returns True if the result matched the expected
            result,

            False otherwise.
          items:
            type: boolean
          type: array
      type: object
    CloudConfigurationRulePayload:
      description: The payload of a cloud configuration rule.
      properties:
        cases:
          description: >
            Description of generated findings and signals (severity and channels
            to be notified in case of a signal). Must contain exactly one item.
          items:
            $ref: '#/components/schemas/CloudConfigurationRuleCaseCreate'
          type: array
        complianceSignalOptions:
          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message in markdown format for generated findings and signals.
          example: |
            #Description
            Explanation of the rule.

            #Remediation
            How to fix the security issue.
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/CloudConfigurationRuleOptions'
        tags:
          description: Tags for generated findings and signals.
          example:
            - env:prod
            - team:security
          items:
            description: Tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/CloudConfigurationRuleType'
      required:
        - name
        - isEnabled
        - options
        - complianceSignalOptions
        - cases
        - message
      type: object
    SecurityMonitoringRuleValidatePayload:
      description: Validate a rule.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRulePayload'
        - $ref: '#/components/schemas/SecurityMonitoringSignalRulePayload'
        - $ref: '#/components/schemas/CloudConfigurationRulePayload'
    SecurityMonitoringRuleQuery:
      description: Query for matching rule.
      oneOf:
        - $ref: '#/components/schemas/SecurityMonitoringStandardRuleQuery'
        - $ref: '#/components/schemas/SecurityMonitoringSignalRuleQuery'
    SecurityMonitoringRuleUpdatePayload:
      description: Update an existing rule.
      properties:
        cases:
          description: Cases for generating signals.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCase'
          type: array
        complianceSignalOptions:
          $ref: '#/components/schemas/CloudConfigurationRuleComplianceSignalOptions'
        filters:
          description: >-
            Additional queries to filter matched events before they are
            processed. This field is deprecated for log detection, signal
            correlation, and workload security rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        groupSignalsBy:
          description: >-
            Additional grouping to perform on top of the existing groups in the
            query section. Must be a subset of the existing groups.
          example:
            - service
          items:
            description: Field to group by.
            type: string
          type: array
        hasExtendedTitle:
          description: >-
            Whether the notifications include the triggering group-by values in
            their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          type: boolean
        message:
          description: Message for generated signals.
          type: string
        name:
          description: Name of the rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleQuery'
          type: array
        referenceTables:
          description: Reference tables for the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringReferenceTable'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            description: Tag.
            type: string
          type: array
        thirdPartyCases:
          description: >-
            Cases for generating signals from third-party rules. Only available
            for third-party rules.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringThirdPartyRuleCase'
          type: array
        version:
          description: The version of the rule being updated.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    RuleVersionUpdateType:
      description: The type of change.
      enum:
        - create
        - update
        - delete
      type: string
      x-enum-varnames:
        - CREATE
        - UPDATE
        - DELETE
    RuleVersionUpdate:
      description: A change in a rule version.
      properties:
        change:
          description: The new value of the field.
          example: cloud_provider:aws
          type: string
        field:
          description: The field that was changed.
          example: Tags
          type: string
        type:
          $ref: '#/components/schemas/RuleVersionUpdateType'
      type: object
    RuleVersions:
      description: A rule version with a list of updates.
      properties:
        changes:
          description: A list of changes.
          items:
            $ref: '#/components/schemas/RuleVersionUpdate'
          type: array
        rule:
          $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
      type: object
    RuleVersionHistory:
      description: Response object containing the version history of a rule.
      properties:
        count:
          description: The number of rule versions.
          format: int32
          maximum: 2147483647
          type: integer
        data:
          additionalProperties:
            $ref: '#/components/schemas/RuleVersions'
            description: A rule version with a list of updates.
          description: The `RuleVersionHistory` `data`.
          type: object
      type: object
    GetRuleVersionHistoryDataType:
      description: Type of data.
      enum:
        - GetRuleVersionHistoryResponse
      type: string
      x-enum-varnames:
        - GETRULEVERSIONHISTORYRESPONSE
    GetRuleVersionHistoryData:
      description: Data for the rule version history.
      properties:
        attributes:
          $ref: '#/components/schemas/RuleVersionHistory'
        id:
          description: ID of the rule.
          type: string
        type:
          $ref: '#/components/schemas/GetRuleVersionHistoryDataType'
      type: object
    GetRuleVersionHistoryResponse:
      description: Response for getting the rule version history.
      properties:
        data:
          $ref: '#/components/schemas/GetRuleVersionHistoryData'
      type: object
    SecurityMonitoringSignalsSort:
      description: The sort parameters used for querying security signals.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    SecurityMonitoringSignalAttributes:
      additionalProperties: {}
      description: |-
        The object containing all signal attributes and their
        associated values.
      properties:
        custom:
          additionalProperties: {}
          description: A JSON object of attributes in the security signal.
          example:
            workflow:
              first_seen: '2020-06-23T14:46:01.000Z'
              last_seen: '2020-06-23T14:46:49.000Z'
              rule:
                id: 0f5-e0c-805
                name: 'Brute Force Attack Grouped By User '
                version: 12
          type: object
        message:
          description: >-
            The message in the security signal defined by the rule that
            generated the signal.
          example: Detect Account Take Over (ATO) through brute force attempts
          type: string
        tags:
          description: An array of tags associated with the security signal.
          example:
            - security:attack
            - technique:T1110-brute-force
          items:
            description: The tag associated with the security signal.
            type: string
          type: array
        timestamp:
          description: The timestamp of the security signal.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    SecurityMonitoringSignalType:
      default: signal
      description: The type of event.
      enum:
        - signal
      example: signal
      type: string
      x-enum-varnames:
        - SIGNAL
    SecurityMonitoringSignal:
      description: Object description of a security signal.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignalAttributes'
        id:
          description: The unique ID of the security signal.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalType'
      type: object
    SecurityMonitoringSignalsListResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            The link for the next set of results. **Note**: The request can also
            be made using the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    SecurityMonitoringSignalsListResponseMetaPage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor used to get the next results, if any. To make the next
            request, use the same

            parameters with the addition of the `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    SecurityMonitoringSignalsListResponseMeta:
      description: Meta attributes.
      properties:
        page:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseMetaPage'
      type: object
    SecurityMonitoringSignalsListResponse:
      description: |-
        The response object with all security signals matching the request
        and pagination information.
      properties:
        data:
          description: An array of security signals matching the request.
          items:
            $ref: '#/components/schemas/SecurityMonitoringSignal'
          type: array
        links:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseLinks'
        meta:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponseMeta'
      type: object
    SecurityMonitoringSignalListRequestFilter:
      description: Search filters for listing security signals.
      properties:
        from:
          description: The minimum timestamp for requested security signals.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
        query:
          description: Search query for listing security signals.
          example: security:attack status:high
          type: string
        to:
          description: The maximum timestamp for requested security signals.
          example: '2019-01-03T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    SecurityMonitoringSignalListRequestPage:
      description: The paging attributes for listing security signals.
      properties:
        cursor:
          description: A list of results using the cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: The maximum number of security signals in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    SecurityMonitoringSignalListRequest:
      description: The request for a security signal list.
      properties:
        filter:
          $ref: '#/components/schemas/SecurityMonitoringSignalListRequestFilter'
        page:
          $ref: '#/components/schemas/SecurityMonitoringSignalListRequestPage'
        sort:
          $ref: '#/components/schemas/SecurityMonitoringSignalsSort'
      type: object
    SecurityMonitoringSignalResponse:
      description: Security Signal response data object.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignal'
      type: object
    SecurityMonitoringTriageUser:
      description: Object representing a given user entity.
      properties:
        handle:
          description: The handle for this user account.
          type: string
        icon:
          description: Gravatar icon associated to the user.
          example: /path/to/matching/gravatar/icon
          readOnly: true
          type: string
        id:
          description: Numerical ID assigned by Datadog to this user account.
          format: int64
          type: integer
        name:
          description: The name for this user account.
          nullable: true
          type: string
        uuid:
          description: UUID assigned by Datadog to this user account.
          example: 773b045d-ccf8-4808-bd3b-955ef6a8c940
          type: string
      required:
        - uuid
      type: object
    SecurityMonitoringSignalVersion:
      description: >-
        Version of the updated signal. If server side version is higher, update
        will be rejected.
      format: int64
      type: integer
    SecurityMonitoringSignalAssigneeUpdateAttributes:
      description: Attributes describing the new assignee of a security signal.
      properties:
        assignee:
          $ref: '#/components/schemas/SecurityMonitoringTriageUser'
        version:
          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'
      required:
        - assignee
      type: object
    SecurityMonitoringSignalAssigneeUpdateData:
      description: Data containing the patch for changing the assignee of a signal.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/SecurityMonitoringSignalAssigneeUpdateAttributes
      required:
        - attributes
      type: object
    SecurityMonitoringSignalAssigneeUpdateRequest:
      description: >-
        Request body for changing the assignee of a given security monitoring
        signal.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignalAssigneeUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringSignalArchiveComment:
      description: Optional comment to display on archived signals.
      type: string
    SecurityMonitoringSignalArchiveReason:
      description: Reason a signal is archived.
      enum:
        - none
        - false_positive
        - testing_or_maintenance
        - investigated_case_opened
        - other
      type: string
      x-enum-varnames:
        - NONE
        - FALSE_POSITIVE
        - TESTING_OR_MAINTENANCE
        - INVESTIGATED_CASE_OPENED
        - OTHER
    SecurityMonitoringSignalIncidentIds:
      description: Array of incidents that are associated with this signal.
      example:
        - 2066
      items:
        description: >-
          Public ID attribute of the incident that is associated with the
          signal.
        example: 2066
        format: int64
        type: integer
      type: array
    SecurityMonitoringSignalState:
      description: The new triage state of the signal.
      enum:
        - open
        - archived
        - under_review
      example: open
      type: string
      x-enum-varnames:
        - OPEN
        - ARCHIVED
        - UNDER_REVIEW
    SecurityMonitoringSignalTriageAttributes:
      description: >-
        Attributes describing a triage state update operation over a security
        signal.
      properties:
        archive_comment:
          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveComment'
        archive_comment_timestamp:
          description: Timestamp of the last edit to the comment.
          format: int64
          minimum: 0
          type: integer
        archive_comment_user:
          $ref: '#/components/schemas/SecurityMonitoringTriageUser'
        archive_reason:
          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveReason'
        assignee:
          $ref: '#/components/schemas/SecurityMonitoringTriageUser'
        incident_ids:
          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentIds'
        state:
          $ref: '#/components/schemas/SecurityMonitoringSignalState'
        state_update_timestamp:
          description: Timestamp of the last update to the signal state.
          format: int64
          minimum: 0
          type: integer
        state_update_user:
          $ref: '#/components/schemas/SecurityMonitoringTriageUser'
      required:
        - assignee
        - state
        - incident_ids
      type: object
    SecurityMonitoringSignalMetadataType:
      default: signal_metadata
      description: The type of event.
      enum:
        - signal_metadata
      example: signal_metadata
      type: string
      x-enum-varnames:
        - SIGNAL_METADATA
    SecurityMonitoringSignalTriageUpdateData:
      description: Data containing the updated triage attributes of the signal.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignalTriageAttributes'
        id:
          description: The unique ID of the security signal.
          type: string
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalMetadataType'
      type: object
    SecurityMonitoringSignalTriageUpdateResponse:
      description: >-
        The response returned after all triage operations, containing the
        updated signal triage data.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignalTriageUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringSignalIncidentsUpdateAttributes:
      description: >-
        Attributes describing the new list of related signals for a security
        signal.
      properties:
        incident_ids:
          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentIds'
        version:
          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'
      required:
        - incident_ids
      type: object
    SecurityMonitoringSignalIncidentsUpdateData:
      description: >-
        Data containing the patch for changing the related incidents of a
        signal.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/SecurityMonitoringSignalIncidentsUpdateAttributes
      required:
        - attributes
      type: object
    SecurityMonitoringSignalIncidentsUpdateRequest:
      description: >-
        Request body for changing the related incidents of a given security
        monitoring signal.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignalIncidentsUpdateData'
      required:
        - data
      type: object
    SecurityMonitoringSignalStateUpdateAttributes:
      description: Attributes describing the change of state of a security signal.
      properties:
        archive_comment:
          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveComment'
        archive_reason:
          $ref: '#/components/schemas/SecurityMonitoringSignalArchiveReason'
        state:
          $ref: '#/components/schemas/SecurityMonitoringSignalState'
        version:
          $ref: '#/components/schemas/SecurityMonitoringSignalVersion'
      required:
        - state
      type: object
    SecurityMonitoringSignalStateUpdateData:
      description: Data containing the patch for changing the state of a signal.
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateAttributes'
        id:
          description: The unique ID of the security signal.
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalMetadataType'
      required:
        - attributes
      type: object
    SecurityMonitoringSignalStateUpdateRequest:
      description: >-
        Request body for changing the state of a given security monitoring
        signal.
      properties:
        data:
          $ref: '#/components/schemas/SecurityMonitoringSignalStateUpdateData'
      required:
        - data
      type: object
    SensitiveDataScannerGroupType:
      default: sensitive_data_scanner_group
      description: Sensitive Data Scanner group type.
      enum:
        - sensitive_data_scanner_group
      example: sensitive_data_scanner_group
      type: string
      x-enum-varnames:
        - SENSITIVE_DATA_SCANNER_GROUP
    SensitiveDataScannerGroupItem:
      description: Data related to a Sensitive Data Scanner Group.
      properties:
        id:
          description: ID of the group.
          type: string
        type:
          $ref: '#/components/schemas/SensitiveDataScannerGroupType'
      type: object
    SensitiveDataScannerGroupList:
      description: List of groups, ordered.
      properties:
        data:
          description: List of groups. The order is important.
          items:
            $ref: '#/components/schemas/SensitiveDataScannerGroupItem'
          type: array
      type: object
    SensitiveDataScannerConfigurationRelationships:
      description: Relationships of the configuration.
      properties:
        groups:
          $ref: '#/components/schemas/SensitiveDataScannerGroupList'
      type: object
    SensitiveDataScannerConfigurationType:
      default: sensitive_data_scanner_configuration
      description: Sensitive Data Scanner configuration type.
      enum:
        - sensitive_data_scanner_configuration
      example: sensitive_data_scanner_configuration
      type: string
      x-enum-varnames:
        - SENSITIVE_DATA_SCANNER_CONFIGURATIONS
    SensitiveDataScannerGetConfigResponseData:
      description: Response data related to the scanning groups.
      properties:
        attributes:
          additionalProperties: {}
          description: Attributes of the Sensitive Data configuration.
          type: object
        id:
          description: ID of the configuration.
          type: string
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerConfigurationRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerConfigurationType'
      type: object
    SensitiveDataScannerIncludedKeywordConfiguration:
      description: >-
        Object defining a set of keywords and a number of characters that help
        reduce noise.

        You can provide a list of keywords you would like to check within a
        defined proximity of the matching pattern.

        If any of the keywords are found within the proximity check, the match
        is kept.

        If none are found, the match is discarded.
      properties:
        character_count:
          description: >-
            The number of characters behind a match detected by Sensitive Data
            Scanner to look for the keywords defined.

            `character_count` should be greater than the maximum length of a
            keyword defined for a rule.
          example: 30
          format: int64
          maximum: 50
          minimum: 1
          type: integer
        keywords:
          description: >-
            Keyword list that will be checked during scanning in order to
            validate a match.

            The number of keywords in the list must be less than or equal to 30.
          example:
            - credit card
            - cc
          items:
            type: string
          type: array
        use_recommended_keywords:
          description: >-
            Should the rule use the underlying standard pattern keyword
            configuration. If set to `true`, the rule must be tied

            to a standard pattern. If set to `false`, the specified keywords and
            `character_count` are applied.
          type: boolean
      required:
        - keywords
        - character_count
      type: object
    SensitiveDataScannerTextReplacementType:
      default: none
      description: >-
        Type of the replacement text. None means no replacement.

        hash means the data will be stubbed. replacement_string means that

        one can chose a text to replace the data.
        partial_replacement_from_beginning

        allows a user to partially replace the data from the beginning, and

        partial_replacement_from_end on the other hand, allows to replace data
        from

        the end.
      enum:
        - none
        - hash
        - replacement_string
        - partial_replacement_from_beginning
        - partial_replacement_from_end
      type: string
      x-enum-varnames:
        - NONE
        - HASH
        - REPLACEMENT_STRING
        - PARTIAL_REPLACEMENT_FROM_BEGINNING
        - PARTIAL_REPLACEMENT_FROM_END
    SensitiveDataScannerTextReplacement:
      description: Object describing how the scanned event will be replaced.
      properties:
        number_of_chars:
          description: |-
            Required if type == 'partial_replacement_from_beginning'
            or 'partial_replacement_from_end'. It must be > 0.
          format: int64
          minimum: 0
          type: integer
        replacement_string:
          description: Required if type == 'replacement_string'.
          type: string
        type:
          $ref: '#/components/schemas/SensitiveDataScannerTextReplacementType'
      type: object
    SensitiveDataScannerRuleAttributes:
      description: Attributes of the Sensitive Data Scanner rule.
      properties:
        description:
          description: Description of the rule.
          type: string
        excluded_namespaces:
          description: >-
            Attributes excluded from the scan. If namespaces is provided, it has
            to be a sub-path of the namespaces array.
          example:
            - admin.name
          items:
            type: string
          type: array
        included_keyword_configuration:
          $ref: >-
            #/components/schemas/SensitiveDataScannerIncludedKeywordConfiguration
        is_enabled:
          description: Whether or not the rule is enabled.
          type: boolean
        name:
          description: Name of the rule.
          type: string
        namespaces:
          description: >-
            Attributes included in the scan. If namespaces is empty or missing,
            all attributes except excluded_namespaces are scanned.

            If both are missing the whole event is scanned.
          example:
            - admin
          items:
            type: string
          type: array
        pattern:
          description: Not included if there is a relationship to a standard pattern.
          type: string
        priority:
          description: Integer from 1 (high) to 5 (low) indicating rule issue severity.
          format: int64
          maximum: 5
          minimum: 1
          type: integer
        tags:
          description: List of tags.
          items:
            type: string
          type: array
        text_replacement:
          $ref: '#/components/schemas/SensitiveDataScannerTextReplacement'
      type: object
    SensitiveDataScannerGroup:
      description: A scanning group.
      properties:
        id:
          description: ID of the group.
          type: string
        type:
          $ref: '#/components/schemas/SensitiveDataScannerGroupType'
      type: object
    SensitiveDataScannerGroupData:
      description: A scanning group data.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerGroup'
      type: object
    SensitiveDataScannerStandardPatternType:
      default: sensitive_data_scanner_standard_pattern
      description: Sensitive Data Scanner standard pattern type.
      enum:
        - sensitive_data_scanner_standard_pattern
      example: sensitive_data_scanner_standard_pattern
      type: string
      x-enum-varnames:
        - SENSITIVE_DATA_SCANNER_STANDARD_PATTERN
    SensitiveDataScannerStandardPattern:
      description: Data containing the standard pattern id.
      properties:
        id:
          description: ID of the standard pattern.
          type: string
        type:
          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternType'
      type: object
    SensitiveDataScannerStandardPatternData:
      description: A standard pattern.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerStandardPattern'
      type: object
    SensitiveDataScannerRuleRelationships:
      description: Relationships of a scanning rule.
      properties:
        group:
          $ref: '#/components/schemas/SensitiveDataScannerGroupData'
        standard_pattern:
          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternData'
      type: object
    SensitiveDataScannerRuleType:
      default: sensitive_data_scanner_rule
      description: Sensitive Data Scanner rule type.
      enum:
        - sensitive_data_scanner_rule
      example: sensitive_data_scanner_rule
      type: string
      x-enum-varnames:
        - SENSITIVE_DATA_SCANNER_RULE
    SensitiveDataScannerRuleIncludedItem:
      description: A Scanning Rule included item.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerRuleAttributes'
        id:
          description: ID of the rule.
          type: string
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerRuleRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerRuleType'
      type: object
    SensitiveDataScannerFilter:
      description: Filter for the Scanning Group.
      properties:
        query:
          description: Query to filter the events.
          type: string
      type: object
    SensitiveDataScannerProduct:
      default: logs
      description: Datadog product onto which Sensitive Data Scanner can be activated.
      enum:
        - logs
        - rum
        - events
        - apm
      type: string
      x-enum-varnames:
        - LOGS
        - RUM
        - EVENTS
        - APM
    SensitiveDataScannerGroupAttributes:
      description: Attributes of the Sensitive Data Scanner group.
      properties:
        description:
          description: Description of the group.
          type: string
        filter:
          $ref: '#/components/schemas/SensitiveDataScannerFilter'
        is_enabled:
          description: Whether or not the group is enabled.
          type: boolean
        name:
          description: Name of the group.
          type: string
        product_list:
          description: List of products the scanning group applies.
          items:
            $ref: '#/components/schemas/SensitiveDataScannerProduct'
          type: array
      type: object
    SensitiveDataScannerConfiguration:
      description: A Sensitive Data Scanner configuration.
      properties:
        id:
          description: ID of the configuration.
          type: string
        type:
          $ref: '#/components/schemas/SensitiveDataScannerConfigurationType'
      type: object
    SensitiveDataScannerConfigurationData:
      description: A Sensitive Data Scanner configuration data.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerConfiguration'
      type: object
    SensitiveDataScannerRule:
      description: Rule item included in the group.
      properties:
        id:
          description: ID of the rule.
          type: string
        type:
          $ref: '#/components/schemas/SensitiveDataScannerRuleType'
      type: object
    SensitiveDataScannerRuleData:
      description: Rules included in the group.
      properties:
        data:
          description: Rules included in the group. The order is important.
          items:
            $ref: '#/components/schemas/SensitiveDataScannerRule'
          type: array
      type: object
    SensitiveDataScannerGroupRelationships:
      description: Relationships of the group.
      properties:
        configuration:
          $ref: '#/components/schemas/SensitiveDataScannerConfigurationData'
        rules:
          $ref: '#/components/schemas/SensitiveDataScannerRuleData'
      type: object
    SensitiveDataScannerGroupIncludedItem:
      description: A Scanning Group included item.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerGroupAttributes'
        id:
          description: ID of the group.
          type: string
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerGroupRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerGroupType'
      type: object
    SensitiveDataScannerGetConfigIncludedItem:
      description: An object related to the configuration.
      oneOf:
        - $ref: '#/components/schemas/SensitiveDataScannerRuleIncludedItem'
        - $ref: '#/components/schemas/SensitiveDataScannerGroupIncludedItem'
    SensitiveDataScannerGetConfigIncludedArray:
      description: Included objects from relationships.
      items:
        $ref: '#/components/schemas/SensitiveDataScannerGetConfigIncludedItem'
      type: array
    SensitiveDataScannerMeta:
      description: Meta response containing information about the API.
      properties:
        count_limit:
          description: Maximum number of scanning rules allowed for the org.
          format: int64
          type: integer
        group_count_limit:
          description: Maximum number of scanning groups allowed for the org.
          format: int64
          type: integer
        has_highlight_enabled:
          default: true
          deprecated: true
          description: >-
            (Deprecated) Whether or not scanned events are highlighted in Logs
            or RUM for the org.
          type: boolean
        has_multi_pass_enabled:
          deprecated: true
          description: (Deprecated) Whether or not scanned events have multi-pass enabled.
          type: boolean
        is_pci_compliant:
          description: >-
            Whether or not the org is compliant to the payment card industry
            standard.
          type: boolean
        version:
          description: Version of the API.
          example: 0
          format: int64
          minimum: 0
          type: integer
      type: object
    SensitiveDataScannerGetConfigResponse:
      description: Get all groups response.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerGetConfigResponseData'
        included:
          $ref: '#/components/schemas/SensitiveDataScannerGetConfigIncludedArray'
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMeta'
      type: object
    SensitiveDataScannerReorderConfig:
      description: Data related to the reordering of scanning groups.
      properties:
        id:
          description: ID of the configuration.
          type: string
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerConfigurationRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerConfigurationType'
      type: object
    SensitiveDataScannerMetaVersionOnly:
      description: Meta payload containing information about the API.
      properties:
        version:
          description: Version of the API (optional).
          example: 0
          format: int64
          minimum: 0
          type: integer
      type: object
    SensitiveDataScannerConfigRequest:
      description: Group reorder request.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerReorderConfig'
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      required:
        - data
        - meta
      type: object
    SensitiveDataScannerReorderGroupsResponse:
      description: Group reorder response.
      properties:
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMeta'
      type: object
    SensitiveDataScannerGroupCreate:
      description: Data related to the creation of a group.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerGroupAttributes'
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerGroupRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerGroupType'
      required:
        - type
        - attributes
      type: object
    SensitiveDataScannerGroupCreateRequest:
      description: Create group request.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerGroupCreate'
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      type: object
    SensitiveDataScannerGroupResponse:
      description: Response data related to the creation of a group.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerGroupAttributes'
        id:
          description: ID of the group.
          type: string
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerGroupRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerGroupType'
      type: object
    SensitiveDataScannerCreateGroupResponse:
      description: Create group response.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerGroupResponse'
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      type: object
    SensitiveDataScannerGroupDeleteRequest:
      description: Delete group request.
      properties:
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      required:
        - meta
      type: object
    SensitiveDataScannerGroupDeleteResponse:
      description: Delete group response.
      properties:
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      type: object
    SensitiveDataScannerGroupUpdate:
      description: Data related to the update of a group.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerGroupAttributes'
        id:
          description: ID of the group.
          type: string
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerGroupRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerGroupType'
      type: object
    SensitiveDataScannerGroupUpdateRequest:
      description: Update group request.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerGroupUpdate'
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      required:
        - data
        - meta
      type: object
    SensitiveDataScannerGroupUpdateResponse:
      description: Update group response.
      properties:
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      type: object
    SensitiveDataScannerRuleCreate:
      description: Data related to the creation of a rule.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerRuleAttributes'
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerRuleRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerRuleType'
      required:
        - type
        - attributes
        - relationships
      type: object
    SensitiveDataScannerRuleCreateRequest:
      description: Create rule request.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerRuleCreate'
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      required:
        - data
        - meta
      type: object
    SensitiveDataScannerRuleResponse:
      description: Response data related to the creation of a rule.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerRuleAttributes'
        id:
          description: ID of the rule.
          type: string
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerRuleRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerRuleType'
      type: object
    SensitiveDataScannerCreateRuleResponse:
      description: Create rule response.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerRuleResponse'
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      type: object
    SensitiveDataScannerRuleDeleteRequest:
      description: Delete rule request.
      properties:
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      required:
        - meta
      type: object
    SensitiveDataScannerRuleDeleteResponse:
      description: Delete rule response.
      properties:
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      type: object
    SensitiveDataScannerRuleUpdate:
      description: Data related to the update of a rule.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerRuleAttributes'
        id:
          description: ID of the rule.
          type: string
        relationships:
          $ref: '#/components/schemas/SensitiveDataScannerRuleRelationships'
        type:
          $ref: '#/components/schemas/SensitiveDataScannerRuleType'
      type: object
    SensitiveDataScannerRuleUpdateRequest:
      description: Update rule request.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerRuleUpdate'
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      required:
        - data
        - meta
      type: object
    SensitiveDataScannerRuleUpdateResponse:
      description: Update rule response.
      properties:
        meta:
          $ref: '#/components/schemas/SensitiveDataScannerMetaVersionOnly'
      type: object
    SensitiveDataScannerStandardPatternAttributes:
      description: Attributes of the Sensitive Data Scanner standard pattern.
      properties:
        description:
          description: Description of the standard pattern.
          type: string
        included_keywords:
          description: List of included keywords.
          items:
            type: string
          type: array
        name:
          description: Name of the standard pattern.
          type: string
        pattern:
          deprecated: true
          description: >-
            (Deprecated) Regex to match, optionally documented for older
            standard rules. Refer to the `description` field to understand what
            the rule does.
          type: string
        priority:
          description: >-
            Integer from 1 (high) to 5 (low) indicating standard pattern issue
            severity.
          format: int64
          maximum: 5
          minimum: 1
          type: integer
        tags:
          description: List of tags.
          items:
            type: string
          type: array
      type: object
    SensitiveDataScannerStandardPatternsResponseItem:
      description: Standard pattern item.
      properties:
        attributes:
          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternAttributes'
        id:
          description: ID of the standard pattern.
          type: string
        type:
          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternType'
      type: object
    SensitiveDataScannerStandardPatternsResponse:
      description: List Standard patterns response.
      items:
        $ref: '#/components/schemas/SensitiveDataScannerStandardPatternsResponseItem'
      type: array
    SensitiveDataScannerStandardPatternsResponseData:
      description: List Standard patterns response data.
      properties:
        data:
          $ref: '#/components/schemas/SensitiveDataScannerStandardPatternsResponse'
      type: object
    MetricContentEncoding:
      default: deflate
      description: HTTP header used to compress the media-type.
      enum:
        - deflate
        - zstd1
        - gzip
      example: deflate
      type: string
      x-enum-varnames:
        - DEFLATE
        - ZSTD1
        - GZIP
    MetricOrigin:
      description: Metric origin information.
      properties:
        metric_type:
          default: 0
          description: The origin metric type code
          format: int32
          maximum: 1000
          type: integer
        product:
          default: 0
          description: The origin product code
          format: int32
          maximum: 1000
          type: integer
        service:
          default: 0
          description: The origin service code
          format: int32
          maximum: 1000
          type: integer
      type: object
    MetricMetadata:
      description: Metadata for the metric.
      properties:
        origin:
          $ref: '#/components/schemas/MetricOrigin'
      type: object
    MetricPoint:
      description: A point object is of the form `{POSIX_timestamp, numeric_value}`.
      example:
        timestamp: 1575317847
        value: 0.5
      properties:
        timestamp:
          description: >-
            The timestamp should be in seconds and current.

            Current is defined as not more than 10 minutes in the future or more
            than 1 hour in the past.
          format: int64
          type: integer
        value:
          description: The numeric value format should be a 64bit float gauge-type value.
          format: double
          type: number
      type: object
    MetricResource:
      description: Metric resource.
      example:
        name: dummyhost
        type: host
      properties:
        name:
          description: The name of the resource.
          type: string
        type:
          description: The type of the resource.
          type: string
      type: object
    MetricIntakeType:
      description: >-
        The type of metric. The available types are `0` (unspecified), `1`
        (count), `2` (rate), and `3` (gauge).
      enum:
        - 0
        - 1
        - 2
        - 3
      format: int32
      type: integer
      x-enum-varnames:
        - UNSPECIFIED
        - COUNT
        - RATE
        - GAUGE
    MetricSeries:
      description: >-
        A metric to submit to Datadog.

        See [Datadog
        metrics](https://docs.datadoghq.com/developers/metrics/#custom-metrics-properties).
      properties:
        interval:
          description: >-
            If the type of the metric is rate or count, define the corresponding
            interval in seconds.
          example: 20
          format: int64
          type: integer
        metadata:
          $ref: '#/components/schemas/MetricMetadata'
        metric:
          description: The name of the timeseries.
          example: system.load.1
          type: string
        points:
          description: >-
            Points relating to a metric. All points must be objects with
            timestamp and a scalar value (cannot be a string). Timestamps should
            be in POSIX time in seconds, and cannot be more than ten minutes in
            the future or more than one hour in the past.
          example:
            - timestamp: 1575317847
              value: 0.5
          items:
            $ref: '#/components/schemas/MetricPoint'
          type: array
        resources:
          description: A list of resources to associate with this metric.
          items:
            $ref: '#/components/schemas/MetricResource'
          type: array
        source_type_name:
          description: The source type name.
          example: datadog
          type: string
        tags:
          description: A list of tags associated with the metric.
          example:
            - environment:test
          items:
            description: Individual tags.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/MetricIntakeType'
        unit:
          description: The unit of point value.
          example: second
          type: string
      required:
        - metric
        - points
      type: object
    MetricPayload:
      description: The metrics' payload.
      properties:
        series:
          description: A list of timeseries to submit to Datadog.
          example:
            - metric: system.load.1
              points:
                - timestamp: 1475317847
                  value: 0.7
              resources:
                - name: dummyhost
                  type: host
          items:
            $ref: '#/components/schemas/MetricSeries'
          type: array
      required:
        - series
      type: object
    IntakePayloadAccepted:
      description: The payload accepted for intake.
      properties:
        errors:
          description: A list of errors.
          items:
            description: An empty error list.
            type: string
          type: array
      type: object
    ServiceAccountCreateAttributes:
      description: Attributes of the created user.
      properties:
        email:
          description: The email of the user.
          example: jane.doe@example.com
          type: string
        name:
          description: The name of the user.
          type: string
        service_account:
          description: Whether the user is a service account. Must be true.
          example: true
          type: boolean
        title:
          description: The title of the user.
          type: string
      required:
        - email
        - service_account
      type: object
    UserRelationships:
      description: Relationships of the user object.
      properties:
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    ServiceAccountCreateData:
      description: Object to create a service account User.
      properties:
        attributes:
          $ref: '#/components/schemas/ServiceAccountCreateAttributes'
        relationships:
          $ref: '#/components/schemas/UserRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - attributes
        - type
      type: object
    ServiceAccountCreateRequest:
      description: Create a service account.
      properties:
        data:
          $ref: '#/components/schemas/ServiceAccountCreateData'
      required:
        - data
      type: object
    UserResponse:
      description: Response containing information about a single user.
      properties:
        data:
          $ref: '#/components/schemas/User'
        included:
          description: Array of objects related to the user.
          items:
            $ref: '#/components/schemas/UserResponseIncludedItem'
          type: array
      type: object
    PartialApplicationKeyResponse:
      description: Response for retrieving a partial application key.
      properties:
        data:
          $ref: '#/components/schemas/PartialApplicationKey'
        included:
          description: Array of objects related to the application key.
          items:
            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'
          type: array
      type: object
    IncidentServiceResponseAttributes:
      description: The incident service's attributes from a response.
      properties:
        created:
          description: Timestamp of when the incident service was created.
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Timestamp of when the incident service was modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the incident service.
          example: service name
          type: string
      type: object
    IncidentServiceRelationships:
      description: The incident service's relationships.
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by:
          $ref: '#/components/schemas/RelationshipToUser'
      readOnly: true
      type: object
    IncidentServiceType:
      default: services
      description: Incident service resource type.
      enum:
        - services
      example: services
      type: string
      x-enum-varnames:
        - SERVICES
    IncidentServiceResponseData:
      description: Incident Service data from responses.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceResponseAttributes'
        id:
          description: The incident service's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - id
        - type
      type: object
    IncidentServiceIncludedItems:
      description: >-
        An object related to an incident service which is present in the
        included payload.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentServicesResponse:
      description: Response with a list of incident service payloads.
      properties:
        data:
          description: An array of incident services.
          example:
            - id: 00000000-0000-0000-0000-000000000000
              type: services
          items:
            $ref: '#/components/schemas/IncidentServiceResponseData'
          type: array
        included:
          description: Included related resources which the user requested.
          items:
            $ref: '#/components/schemas/IncidentServiceIncludedItems'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentServiceCreateAttributes:
      description: The incident service's attributes for a create request.
      properties:
        name:
          description: Name of the incident service.
          example: an example service name
          type: string
      required:
        - name
      type: object
    IncidentServiceCreateData:
      description: Incident Service payload for create requests.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - type
      type: object
    IncidentServiceCreateRequest:
      description: Create request with an incident service payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceCreateData'
      required:
        - data
      type: object
    IncidentServiceResponse:
      description: Response with an incident service payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceResponseData'
        included:
          description: Included objects from relationships.
          items:
            $ref: '#/components/schemas/IncidentServiceIncludedItems'
          readOnly: true
          type: array
      required:
        - data
      type: object
    ServiceDefinitionSchemaVersions:
      description: Schema versions
      enum:
        - v1
        - v2
        - v2.1
        - v2.2
      type: string
      x-enum-varnames:
        - V1
        - V2
        - V2_1
        - V2_2
    ServiceDefinitionMetaWarnings:
      description: Schema validation warnings.
      properties:
        instance-location:
          description: The warning instance location.
          type: string
        keyword-location:
          description: The warning keyword location.
          type: string
        message:
          description: The warning message.
          type: string
      type: object
    ServiceDefinitionMeta:
      description: Metadata about a service definition.
      properties:
        github-html-url:
          description: GitHub HTML URL.
          type: string
        ingested-schema-version:
          description: Ingestion schema version.
          type: string
        ingestion-source:
          description: Ingestion source of the service definition.
          type: string
        last-modified-time:
          description: Last modified time of the service definition.
          type: string
        origin:
          description: User defined origin of the service definition.
          type: string
        origin-detail:
          description: User defined origin's detail of the service definition.
          type: string
        warnings:
          description: A list of schema validation warnings.
          items:
            $ref: '#/components/schemas/ServiceDefinitionMetaWarnings'
          type: array
      type: object
    ServiceDefinitionV1Contact:
      description: Contact information about the service.
      properties:
        email:
          description: Service owner’s email.
          example: contact@datadoghq.com
          type: string
        slack:
          description: Service owner’s Slack channel.
          example: https://yourcompany.slack.com/archives/channel123
          type: string
      type: object
    ServiceDefinitionV1ResourceType:
      description: Link type.
      enum:
        - doc
        - wiki
        - runbook
        - url
        - repo
        - dashboard
        - oncall
        - code
        - link
      example: runbook
      type: string
      x-enum-varnames:
        - DOC
        - WIKI
        - RUNBOOK
        - URL
        - REPO
        - DASHBOARD
        - ONCALL
        - CODE
        - LINK
    ServiceDefinitionV1Resource:
      description: Service's external links.
      properties:
        name:
          description: Link name.
          example: Runbook
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV1ResourceType'
        url:
          description: Link URL.
          example: https://my-runbook
          type: string
      required:
        - name
        - type
        - url
      type: object
    ServiceDefinitionV1Info:
      description: Basic information about a service.
      properties:
        dd-service:
          description: >-
            Unique identifier of the service. Must be unique across all services
            and is used to match with a service in Datadog.
          example: myservice
          type: string
        description:
          description: A short description of the service.
          example: A shopping cart service
          type: string
        display-name:
          description: A friendly name of the service.
          example: My Service
          type: string
        service-tier:
          description: Service tier.
          example: Tier 1
          type: string
      required:
        - dd-service
      type: object
    ServiceDefinitionV1Pagerduty:
      description: PagerDuty service URL for the service.
      example: https://my-org.pagerduty.com/service-directory/PMyService
      type: string
    ServiceDefinitionV1Integrations:
      description: Third party integrations that Datadog supports.
      properties:
        pagerduty:
          $ref: '#/components/schemas/ServiceDefinitionV1Pagerduty'
      type: object
    ServiceDefinitionV1Org:
      description: Org related information about the service.
      properties:
        application:
          description: App feature this service supports.
          example: E-Commerce
          type: string
        team:
          description: Team that owns the service.
          example: my-team
          type: string
      type: object
    ServiceDefinitionV1Version:
      default: v1
      description: Schema version being used.
      enum:
        - v1
      example: v1
      type: string
      x-enum-varnames:
        - V1
    ServiceDefinitionV1:
      deprecated: true
      description: >-
        Deprecated - Service definition V1 for providing additional service
        metadata and integrations.
      properties:
        contact:
          $ref: '#/components/schemas/ServiceDefinitionV1Contact'
        extensions:
          additionalProperties: {}
          description: Extensions to V1 schema.
          example:
            myorg/extension: extensionValue
          type: object
        external-resources:
          description: A list of external links related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV1Resource'
          type: array
        info:
          $ref: '#/components/schemas/ServiceDefinitionV1Info'
        integrations:
          $ref: '#/components/schemas/ServiceDefinitionV1Integrations'
        org:
          $ref: '#/components/schemas/ServiceDefinitionV1Org'
        schema-version:
          $ref: '#/components/schemas/ServiceDefinitionV1Version'
        tags:
          description: A set of custom tags.
          example:
            - my:tag
            - service:tag
          items:
            type: string
          type: array
      required:
        - schema-version
        - info
      type: object
    ServiceDefinitionV2EmailType:
      description: Contact type.
      enum:
        - email
      example: email
      type: string
      x-enum-varnames:
        - EMAIL
    ServiceDefinitionV2Email:
      description: Service owner's email.
      properties:
        contact:
          description: Contact value.
          example: contact@datadoghq.com
          type: string
        name:
          description: Contact email.
          example: Team Email
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2EmailType'
      required:
        - type
        - contact
      type: object
    ServiceDefinitionV2SlackType:
      description: Contact type.
      enum:
        - slack
      example: slack
      type: string
      x-enum-varnames:
        - SLACK
    ServiceDefinitionV2Slack:
      description: Service owner's Slack channel.
      properties:
        contact:
          description: Slack Channel.
          example: https://yourcompany.slack.com/archives/channel123
          type: string
        name:
          description: Contact Slack.
          example: Team Slack
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2SlackType'
      required:
        - type
        - contact
      type: object
    ServiceDefinitionV2MSTeamsType:
      description: Contact type.
      enum:
        - microsoft-teams
      example: microsoft-teams
      type: string
      x-enum-varnames:
        - MICROSOFT_TEAMS
    ServiceDefinitionV2MSTeams:
      description: Service owner's Microsoft Teams.
      properties:
        contact:
          description: Contact value.
          example: https://teams.microsoft.com/myteam
          type: string
        name:
          description: Contact Microsoft Teams.
          example: My team channel
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2MSTeamsType'
      required:
        - type
        - contact
      type: object
    ServiceDefinitionV2Contact:
      description: Service owner's contacts information.
      oneOf:
        - $ref: '#/components/schemas/ServiceDefinitionV2Email'
        - $ref: '#/components/schemas/ServiceDefinitionV2Slack'
        - $ref: '#/components/schemas/ServiceDefinitionV2MSTeams'
    ServiceDefinitionV2Doc:
      description: Service documents.
      properties:
        name:
          description: Document name.
          example: Architecture
          type: string
        provider:
          description: Document provider.
          example: google drive
          type: string
        url:
          description: Document URL.
          example: https://gdrive/mydoc
          type: string
      required:
        - name
        - url
      type: object
    ServiceDefinitionV2OpsgenieRegion:
      description: Opsgenie instance region.
      enum:
        - US
        - EU
      example: US
      type: string
      x-enum-varnames:
        - US
        - EU
    ServiceDefinitionV2Opsgenie:
      description: Opsgenie integration for the service.
      properties:
        region:
          $ref: '#/components/schemas/ServiceDefinitionV2OpsgenieRegion'
        service-url:
          description: Opsgenie service url.
          example: >-
            https://my-org.opsgenie.com/service/123e4567-e89b-12d3-a456-426614174000
          type: string
      required:
        - service-url
      type: object
    ServiceDefinitionV2Pagerduty:
      description: PagerDuty service URL for the service.
      example: https://my-org.pagerduty.com/service-directory/PMyService
      type: string
    ServiceDefinitionV2Integrations:
      description: Third party integrations that Datadog supports.
      properties:
        opsgenie:
          $ref: '#/components/schemas/ServiceDefinitionV2Opsgenie'
        pagerduty:
          $ref: '#/components/schemas/ServiceDefinitionV2Pagerduty'
      type: object
    ServiceDefinitionV2LinkType:
      description: Link type.
      enum:
        - doc
        - wiki
        - runbook
        - url
        - repo
        - dashboard
        - oncall
        - code
        - link
      example: runbook
      type: string
      x-enum-varnames:
        - DOC
        - WIKI
        - RUNBOOK
        - URL
        - REPO
        - DASHBOARD
        - ONCALL
        - CODE
        - LINK
    ServiceDefinitionV2Link:
      description: Service's external links.
      properties:
        name:
          description: Link name.
          example: Runbook
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2LinkType'
        url:
          description: Link URL.
          example: https://my-runbook
          type: string
      required:
        - name
        - type
        - url
      type: object
    ServiceDefinitionV2Repo:
      description: Service code repositories.
      properties:
        name:
          description: Repository name.
          example: Source Code
          type: string
        provider:
          description: Repository provider.
          example: GitHub
          type: string
        url:
          description: Repository URL.
          example: https://github.com/DataDog/schema
          type: string
      required:
        - name
        - url
      type: object
    ServiceDefinitionV2Version:
      default: v2
      description: Schema version being used.
      enum:
        - v2
      example: v2
      type: string
      x-enum-varnames:
        - V2
    ServiceDefinitionV2:
      description: Service definition V2 for providing service metadata and integrations.
      properties:
        contacts:
          description: A list of contacts related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV2Contact'
          type: array
        dd-service:
          description: >-
            Unique identifier of the service. Must be unique across all services
            and is used to match with a service in Datadog.
          example: my-service
          type: string
        dd-team:
          description: >-
            Experimental feature. A Team handle that matches a Team in the
            Datadog Teams product.
          example: my-team
          type: string
        docs:
          description: A list of documentation related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV2Doc'
          type: array
        extensions:
          additionalProperties: {}
          description: Extensions to V2 schema.
          example:
            myorg/extension: extensionValue
          type: object
        integrations:
          $ref: '#/components/schemas/ServiceDefinitionV2Integrations'
        links:
          description: A list of links related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV2Link'
          type: array
        repos:
          description: A list of code repositories related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV2Repo'
          type: array
        schema-version:
          $ref: '#/components/schemas/ServiceDefinitionV2Version'
        tags:
          description: A set of custom tags.
          example:
            - my:tag
            - service:tag
          items:
            type: string
          type: array
        team:
          description: Team that owns the service.
          example: my-team
          type: string
      required:
        - schema-version
        - dd-service
      type: object
    ServiceDefinitionV2Dot1EmailType:
      description: Contact type.
      enum:
        - email
      example: email
      type: string
      x-enum-varnames:
        - EMAIL
    ServiceDefinitionV2Dot1Email:
      description: Service owner's email.
      properties:
        contact:
          description: Contact value.
          example: contact@datadoghq.com
          type: string
        name:
          description: Contact email.
          example: Team Email
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1EmailType'
      required:
        - type
        - contact
      type: object
    ServiceDefinitionV2Dot1SlackType:
      description: Contact type.
      enum:
        - slack
      example: slack
      type: string
      x-enum-varnames:
        - SLACK
    ServiceDefinitionV2Dot1Slack:
      description: Service owner's Slack channel.
      properties:
        contact:
          description: Slack Channel.
          example: https://yourcompany.slack.com/archives/channel123
          type: string
        name:
          description: Contact Slack.
          example: Team Slack
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1SlackType'
      required:
        - type
        - contact
      type: object
    ServiceDefinitionV2Dot1MSTeamsType:
      description: Contact type.
      enum:
        - microsoft-teams
      example: microsoft-teams
      type: string
      x-enum-varnames:
        - MICROSOFT_TEAMS
    ServiceDefinitionV2Dot1MSTeams:
      description: Service owner's Microsoft Teams.
      properties:
        contact:
          description: Contact value.
          example: https://teams.microsoft.com/myteam
          type: string
        name:
          description: Contact Microsoft Teams.
          example: My team channel
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1MSTeamsType'
      required:
        - type
        - contact
      type: object
    ServiceDefinitionV2Dot1Contact:
      description: Service owner's contacts information.
      oneOf:
        - $ref: '#/components/schemas/ServiceDefinitionV2Dot1Email'
        - $ref: '#/components/schemas/ServiceDefinitionV2Dot1Slack'
        - $ref: '#/components/schemas/ServiceDefinitionV2Dot1MSTeams'
    ServiceDefinitionV2Dot1OpsgenieRegion:
      description: Opsgenie instance region.
      enum:
        - US
        - EU
      example: US
      type: string
      x-enum-varnames:
        - US
        - EU
    ServiceDefinitionV2Dot1Opsgenie:
      description: Opsgenie integration for the service.
      properties:
        region:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1OpsgenieRegion'
        service-url:
          description: Opsgenie service url.
          example: >-
            https://my-org.opsgenie.com/service/123e4567-e89b-12d3-a456-426614174000
          type: string
      required:
        - service-url
      type: object
    ServiceDefinitionV2Dot1Pagerduty:
      description: PagerDuty integration for the service.
      properties:
        service-url:
          description: PagerDuty service url.
          example: https://my-org.pagerduty.com/service-directory/PMyService
          type: string
      type: object
    ServiceDefinitionV2Dot1Integrations:
      description: Third party integrations that Datadog supports.
      properties:
        opsgenie:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1Opsgenie'
        pagerduty:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1Pagerduty'
      type: object
    ServiceDefinitionV2Dot1LinkType:
      description: Link type.
      enum:
        - doc
        - repo
        - runbook
        - dashboard
        - other
      example: runbook
      type: string
      x-enum-varnames:
        - DOC
        - REPO
        - RUNBOOK
        - DASHBOARD
        - OTHER
    ServiceDefinitionV2Dot1Link:
      description: Service's external links.
      properties:
        name:
          description: Link name.
          example: Runbook
          type: string
        provider:
          description: Link provider.
          example: Github
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1LinkType'
        url:
          description: Link URL.
          example: https://my-runbook
          type: string
      required:
        - name
        - type
        - url
      type: object
    ServiceDefinitionV2Dot1Version:
      default: v2.1
      description: Schema version being used.
      enum:
        - v2.1
      example: v2.1
      type: string
      x-enum-varnames:
        - V2_1
    ServiceDefinitionV2Dot1:
      description: Service definition v2.1 for providing service metadata and integrations.
      properties:
        application:
          description: >-
            Identifier for a group of related services serving a product
            feature, which the service is a part of.
          example: my-app
          type: string
        contacts:
          description: A list of contacts related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV2Dot1Contact'
          type: array
        dd-service:
          description: >-
            Unique identifier of the service. Must be unique across all services
            and is used to match with a service in Datadog.
          example: my-service
          type: string
        description:
          description: A short description of the service.
          example: My service description
          type: string
        extensions:
          additionalProperties: {}
          description: Extensions to v2.1 schema.
          example:
            myorg/extension: extensionValue
          type: object
        integrations:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1Integrations'
        lifecycle:
          description: The current life cycle phase of the service.
          example: sandbox
          type: string
        links:
          description: A list of links related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV2Dot1Link'
          type: array
        schema-version:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot1Version'
        tags:
          description: A set of custom tags.
          example:
            - my:tag
            - service:tag
          items:
            type: string
          type: array
        team:
          description: >-
            Team that owns the service. It is used to locate a team defined in
            Datadog Teams if it exists.
          example: my-team
          type: string
        tier:
          description: Importance of the service.
          example: High
          type: string
      required:
        - schema-version
        - dd-service
      type: object
    ServiceDefinitionV2Dot2Contact:
      description: Service owner's contacts information.
      properties:
        contact:
          description: Contact value.
          example: https://teams.microsoft.com/myteam
          type: string
        name:
          description: Contact Name.
          example: My team channel
          type: string
        type:
          description: >-
            Contact type. Datadog recognizes the following types: `email`,
            `slack`, and `microsoft-teams`.
          example: slack
          type: string
      required:
        - type
        - contact
      type: object
    ServiceDefinitionV2Dot2OpsgenieRegion:
      description: Opsgenie instance region.
      enum:
        - US
        - EU
      example: US
      type: string
      x-enum-varnames:
        - US
        - EU
    ServiceDefinitionV2Dot2Opsgenie:
      description: Opsgenie integration for the service.
      properties:
        region:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot2OpsgenieRegion'
        service-url:
          description: Opsgenie service url.
          example: >-
            https://my-org.opsgenie.com/service/123e4567-e89b-12d3-a456-426614174000
          type: string
      required:
        - service-url
      type: object
    ServiceDefinitionV2Dot2Pagerduty:
      description: PagerDuty integration for the service.
      properties:
        service-url:
          description: PagerDuty service url.
          example: https://my-org.pagerduty.com/service-directory/PMyService
          type: string
      type: object
    ServiceDefinitionV2Dot2Integrations:
      description: Third party integrations that Datadog supports.
      properties:
        opsgenie:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot2Opsgenie'
        pagerduty:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot2Pagerduty'
      type: object
    ServiceDefinitionV2Dot2Link:
      description: Service's external links.
      properties:
        name:
          description: Link name.
          example: Runbook
          type: string
        provider:
          description: Link provider.
          example: Github
          type: string
        type:
          description: >-
            Link type. Datadog recognizes the following types: `runbook`, `doc`,
            `repo`, `dashboard`, and `other`.
          example: runbook
          type: string
        url:
          description: Link URL.
          example: https://my-runbook
          type: string
      required:
        - name
        - type
        - url
      type: object
    ServiceDefinitionV2Dot2Version:
      default: v2.2
      description: Schema version being used.
      enum:
        - v2.2
      example: v2.2
      type: string
      x-enum-varnames:
        - V2_2
    ServiceDefinitionV2Dot2Type:
      description: The type of service.
      example: web
      type: string
    ServiceDefinitionV2Dot2:
      description: Service definition v2.2 for providing service metadata and integrations.
      properties:
        application:
          description: >-
            Identifier for a group of related services serving a product
            feature, which the service is a part of.
          example: my-app
          type: string
        ci-pipeline-fingerprints:
          description: A set of CI fingerprints.
          example:
            - j88xdEy0J5lc
            - eZ7LMljCk8vo
          items:
            type: string
          type: array
        contacts:
          description: A list of contacts related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV2Dot2Contact'
          type: array
        dd-service:
          description: >-
            Unique identifier of the service. Must be unique across all services
            and is used to match with a service in Datadog.
          example: my-service
          type: string
        description:
          description: A short description of the service.
          example: My service description
          type: string
        extensions:
          additionalProperties: {}
          description: Extensions to v2.2 schema.
          example:
            myorg/extension: extensionValue
          type: object
        integrations:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot2Integrations'
        languages:
          description: >-
            The service's programming language. Datadog recognizes the following
            languages: `dotnet`, `go`, `java`, `js`, `php`, `python`, `ruby`,
            and `c++`.
          example:
            - dotnet
            - go
            - java
            - js
            - php
            - python
            - ruby
            - c++
          items:
            type: string
          type: array
        lifecycle:
          description: The current life cycle phase of the service.
          example: sandbox
          type: string
        links:
          description: A list of links related to the services.
          items:
            $ref: '#/components/schemas/ServiceDefinitionV2Dot2Link'
          type: array
        schema-version:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot2Version'
        tags:
          description: A set of custom tags.
          example:
            - my:tag
            - service:tag
          items:
            type: string
          type: array
        team:
          description: >-
            Team that owns the service. It is used to locate a team defined in
            Datadog Teams if it exists.
          example: my-team
          type: string
        tier:
          description: Importance of the service.
          example: High
          type: string
        type:
          $ref: '#/components/schemas/ServiceDefinitionV2Dot2Type'
      required:
        - schema-version
        - dd-service
      type: object
    ServiceDefinitionSchema:
      description: Service definition schema.
      oneOf:
        - $ref: '#/components/schemas/ServiceDefinitionV1'
        - $ref: '#/components/schemas/ServiceDefinitionV2'
        - $ref: '#/components/schemas/ServiceDefinitionV2Dot1'
        - $ref: '#/components/schemas/ServiceDefinitionV2Dot2'
    ServiceDefinitionDataAttributes:
      description: Service definition attributes.
      properties:
        meta:
          $ref: '#/components/schemas/ServiceDefinitionMeta'
        schema:
          $ref: '#/components/schemas/ServiceDefinitionSchema'
      type: object
    ServiceDefinitionData:
      description: Service definition data.
      properties:
        attributes:
          $ref: '#/components/schemas/ServiceDefinitionDataAttributes'
        id:
          description: Service definition id.
          type: string
        type:
          description: Service definition type.
          type: string
      type: object
    ServiceDefinitionsListResponse:
      description: Create service definitions response.
      properties:
        data:
          description: Data representing service definitions.
          items:
            $ref: '#/components/schemas/ServiceDefinitionData'
          type: array
      type: object
    ServiceDefinitionRaw:
      description: Service Definition in raw JSON/YAML representation.
      example: |
        ---
        schema-version: v2
        dd-service: my-service
      type: string
    ServiceDefinitionsCreateRequest:
      description: Create service definitions request.
      oneOf:
        - $ref: '#/components/schemas/ServiceDefinitionV2Dot2'
        - $ref: '#/components/schemas/ServiceDefinitionV2Dot1'
        - $ref: '#/components/schemas/ServiceDefinitionV2'
        - $ref: '#/components/schemas/ServiceDefinitionRaw'
    ServiceDefinitionCreateResponse:
      description: Create service definitions response.
      properties:
        data:
          description: Create service definitions response payload.
          items:
            $ref: '#/components/schemas/ServiceDefinitionData'
          type: array
      type: object
    ServiceDefinitionGetResponse:
      description: Get service definition response.
      properties:
        data:
          $ref: '#/components/schemas/ServiceDefinitionData'
      type: object
    IncidentServiceUpdateAttributes:
      description: The incident service's attributes for an update request.
      properties:
        name:
          description: Name of the incident service.
          example: an example service name
          type: string
      required:
        - name
      type: object
    IncidentServiceUpdateData:
      description: Incident Service payload for update requests.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceUpdateAttributes'
        id:
          description: The incident service's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - type
      type: object
    IncidentServiceUpdateRequest:
      description: Update request with an incident service payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceUpdateData'
      required:
        - data
      type: object
    CalculatedField:
      description: Calculated field.
      properties:
        expression:
          description: Expression.
          example: '@request_end_timestamp - @request_start_timestamp'
          type: string
        name:
          description: Field name.
          example: response_time
          type: string
      required:
        - name
        - expression
      type: object
    HistoricalJobOptions:
      description: Job options.
      properties:
        detectionMethod:
          $ref: '#/components/schemas/SecurityMonitoringRuleDetectionMethod'
        evaluationWindow:
          $ref: '#/components/schemas/SecurityMonitoringRuleEvaluationWindow'
        impossibleTravelOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleImpossibleTravelOptions'
        keepAlive:
          $ref: '#/components/schemas/SecurityMonitoringRuleKeepAlive'
        maxSignalDuration:
          $ref: '#/components/schemas/SecurityMonitoringRuleMaxSignalDuration'
        newValueOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptions'
        thirdPartyRuleOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleThirdPartyOptions'
      type: object
    HistoricalJobQuery:
      description: Query for selecting logs analyzed by the historical job.
      properties:
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        dataSource:
          $ref: '#/components/schemas/SecurityMonitoringStandardDataSource'
        distinctFields:
          description: Field for which the cardinality is measured. Sent as an array.
          items:
            description: Field.
            type: string
          type: array
        groupByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        hasOptionalGroupByFields:
          description: >-
            When false, events without a group-by value are ignored by the
            query. When true, events with missing group-by fields are processed
            with `N/A`, replacing the missing values.
          example: false
          readOnly: true
          type: boolean
        metrics:
          description: >-
            Group of target fields to aggregate over when using the sum, max,
            geo data, or new value aggregations. The sum, max, and geo data
            aggregations only accept one value in this list, whereas the new
            value aggregation accepts up to five values.
          items:
            description: Field.
            type: string
          type: array
        name:
          description: Name of the query.
          type: string
        query:
          description: Query to run on logs.
          example: a > 3
          type: string
      type: object
    JobDefinition:
      description: Definition of a historical job.
      properties:
        calculatedFields:
          description: Calculated fields.
          items:
            $ref: '#/components/schemas/CalculatedField'
          type: array
        cases:
          description: Cases used for generating job results.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        from:
          description: Starting time of data analyzed by the job.
          example: 1729843470000
          format: int64
          type: integer
        groupSignalsBy:
          description: >-
            Additional grouping to perform on top of the existing groups in the
            query section. Must be a subset of the existing groups.
          example:
            - service
          items:
            description: Field to group by.
            type: string
          type: array
        index:
          description: Index used to load the data.
          example: cloud_siem
          type: string
        message:
          description: Message for generated results.
          example: A large number of failed login attempts.
          type: string
        name:
          description: Job name.
          example: Excessive number of failed attempts.
          type: string
        options:
          $ref: '#/components/schemas/HistoricalJobOptions'
        queries:
          description: Queries for selecting logs analyzed by the job.
          items:
            $ref: '#/components/schemas/HistoricalJobQuery'
          type: array
        referenceTables:
          description: Reference tables used in the queries.
          items:
            $ref: '#/components/schemas/SecurityMonitoringReferenceTable'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            type: string
          type: array
        thirdPartyCases:
          description: >-
            Cases for generating results from third-party detection method. Only
            available for third-party detection method.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringThirdPartyRuleCaseCreate'
          type: array
        to:
          description: Ending time of data analyzed by the job.
          example: 1729847070000
          format: int64
          type: integer
        type:
          description: Job type.
          type: string
      required:
        - from
        - to
        - index
        - name
        - cases
        - queries
        - message
      type: object
    HistoricalJobResponseAttributes:
      description: Historical job attributes.
      properties:
        createdAt:
          description: Time when the job was created.
          type: string
        createdByHandle:
          description: The handle of the user who created the job.
          type: string
        createdByName:
          description: The name of the user who created the job.
          type: string
        createdFromRuleId:
          description: >-
            ID of the rule used to create the job (if it is created from a
            rule).
          type: string
        jobDefinition:
          $ref: '#/components/schemas/JobDefinition'
        jobName:
          description: Job name.
          type: string
        jobStatus:
          description: Job status.
          type: string
        modifiedAt:
          description: Last modification time of the job.
          type: string
      type: object
    HistoricalJobDataType:
      description: Type of payload.
      enum:
        - historicalDetectionsJob
      type: string
      x-enum-varnames:
        - HISTORICALDETECTIONSJOB
    HistoricalJobResponseData:
      description: Historical job response data.
      properties:
        attributes:
          $ref: '#/components/schemas/HistoricalJobResponseAttributes'
        id:
          description: ID of the job.
          type: string
        type:
          $ref: '#/components/schemas/HistoricalJobDataType'
      type: object
    HistoricalJobListMeta:
      description: Metadata about the list of jobs.
      properties:
        totalCount:
          description: Number of jobs in the list.
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    ListHistoricalJobsResponse:
      description: List of historical jobs.
      properties:
        data:
          description: Array containing the list of historical jobs.
          items:
            $ref: '#/components/schemas/HistoricalJobResponseData'
          type: array
        meta:
          $ref: '#/components/schemas/HistoricalJobListMeta'
      type: object
    JobDefinitionFromRule:
      description: Definition of a historical job based on a security monitoring rule.
      properties:
        caseIndex:
          description: Index of the rule case applied by the job.
          example: 0
          format: int32
          maximum: 9
          type: integer
        from:
          description: Starting time of data analyzed by the job.
          example: 1729843470000
          format: int64
          type: integer
        id:
          description: ID of the detection rule used to create the job.
          example: abc-def-ghi
          type: string
        index:
          description: Index used to load the data.
          example: cloud_siem
          type: string
        notifications:
          description: Notifications sent when the job is completed.
          example:
            - '@sns-cloudtrail-results'
          items:
            type: string
          type: array
        to:
          description: Ending time of data analyzed by the job.
          example: 1729847070000
          format: int64
          type: integer
      required:
        - id
        - from
        - to
        - index
        - caseIndex
      type: object
    RunHistoricalJobRequestAttributes:
      description: Run a historical job request.
      properties:
        fromRule:
          $ref: '#/components/schemas/JobDefinitionFromRule'
        id:
          description: Request ID.
          type: string
        jobDefinition:
          $ref: '#/components/schemas/JobDefinition'
      type: object
    RunHistoricalJobRequestDataType:
      description: Type of data.
      enum:
        - historicalDetectionsJobCreate
      type: string
      x-enum-varnames:
        - HISTORICALDETECTIONSJOBCREATE
    RunHistoricalJobRequestData:
      description: Data for running a historical job request.
      properties:
        attributes:
          $ref: '#/components/schemas/RunHistoricalJobRequestAttributes'
        type:
          $ref: '#/components/schemas/RunHistoricalJobRequestDataType'
      type: object
    RunHistoricalJobRequest:
      description: Run a historical job request.
      properties:
        data:
          $ref: '#/components/schemas/RunHistoricalJobRequestData'
      type: object
    JobCreateResponseData:
      description: The definition of `JobCreateResponseData` object.
      properties:
        id:
          description: ID of the created job.
          type: string
        type:
          $ref: '#/components/schemas/HistoricalJobDataType'
      type: object
    JobCreateResponse:
      description: Run a historical job response.
      properties:
        data:
          $ref: '#/components/schemas/JobCreateResponseData'
      type: object
    ConvertJobResultsToSignalsAttributes:
      description: Attributes for converting historical job results to signals.
      properties:
        id:
          description: Request ID.
          type: string
        jobResultIds:
          description: Job result IDs.
          example:
            - ''
          items:
            type: string
          type: array
        notifications:
          description: Notifications sent.
          example:
            - ''
          items:
            type: string
          type: array
        signalMessage:
          description: Message of generated signals.
          example: A large number of failed login attempts.
          type: string
        signalSeverity:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      required:
        - jobResultIds
        - signalSeverity
        - signalMessage
        - notifications
      type: object
    ConvertJobResultsToSignalsDataType:
      description: Type of payload.
      enum:
        - historicalDetectionsJobResultSignalConversion
      type: string
      x-enum-varnames:
        - HISTORICALDETECTIONSJOBRESULTSIGNALCONVERSION
    ConvertJobResultsToSignalsData:
      description: Data for converting historical job results to signals.
      properties:
        attributes:
          $ref: '#/components/schemas/ConvertJobResultsToSignalsAttributes'
        type:
          $ref: '#/components/schemas/ConvertJobResultsToSignalsDataType'
      type: object
    ConvertJobResultsToSignalsRequest:
      description: Request for converting historical job results to signals.
      properties:
        data:
          $ref: '#/components/schemas/ConvertJobResultsToSignalsData'
      type: object
    HistoricalJobResponse:
      description: Historical job response.
      properties:
        data:
          $ref: '#/components/schemas/HistoricalJobResponseData'
      type: object
    SLOReportInterval:
      description: The frequency at which report data is to be generated.
      enum:
        - daily
        - weekly
        - monthly
      example: weekly
      type: string
      x-enum-varnames:
        - DAILY
        - WEEKLY
        - MONTHLY
    SloReportCreateRequestAttributes:
      description: The attributes portion of the SLO report request.
      properties:
        from_ts:
          description: The `from` timestamp for the report in epoch seconds.
          example: 1690901870
          format: int64
          type: integer
        interval:
          $ref: '#/components/schemas/SLOReportInterval'
        query:
          description: >-
            The query string used to filter SLO results. Some examples of
            queries include `service:<service-name>` and `slo-name`.
          example: slo_type:metric
          type: string
        timezone:
          description: >-
            The timezone used to determine the start and end of each interval.
            For example, weekly intervals start at 12am on Sunday in the
            specified timezone.
          example: America/New_York
          type: string
        to_ts:
          description: The `to` timestamp for the report in epoch seconds.
          example: 1706803070
          format: int64
          type: integer
      required:
        - query
        - from_ts
        - to_ts
      type: object
    SloReportCreateRequestData:
      description: The data portion of the SLO report request.
      properties:
        attributes:
          $ref: '#/components/schemas/SloReportCreateRequestAttributes'
      required:
        - attributes
      type: object
    SloReportCreateRequest:
      description: The SLO report request body.
      properties:
        data:
          $ref: '#/components/schemas/SloReportCreateRequestData'
      required:
        - data
      type: object
    SLOReportPostResponseData:
      description: The data portion of the SLO report response.
      properties:
        id:
          description: The ID of the report job.
          example: dc8d92aa-e0af-11ee-af21-1feeaccaa3a3
          type: string
        type:
          description: The type of ID.
          example: report_id
          type: string
      type: object
    SLOReportPostResponse:
      description: The SLO report response.
      properties:
        data:
          $ref: '#/components/schemas/SLOReportPostResponseData'
      type: object
    SLOReportStatus:
      description: The status of the SLO report job.
      enum:
        - in_progress
        - completed
        - completed_with_errors
        - failed
      example: completed
      type: string
      x-enum-varnames:
        - IN_PROGRESS
        - COMPLETED
        - COMPLETED_WITH_ERRORS
        - FAILED
    SLOReportStatusGetResponseAttributes:
      description: The attributes portion of the SLO report status response.
      properties:
        status:
          $ref: '#/components/schemas/SLOReportStatus'
      type: object
    SLOReportStatusGetResponseData:
      description: The data portion of the SLO report status response.
      properties:
        attributes:
          $ref: '#/components/schemas/SLOReportStatusGetResponseAttributes'
        id:
          description: The ID of the report job.
          example: dc8d92aa-e0af-11ee-af21-1feeaccaa3a3
          type: string
        type:
          description: The type of ID.
          example: report_id
          type: string
      type: object
    SLOReportStatusGetResponse:
      description: The SLO report status response.
      properties:
        data:
          $ref: '#/components/schemas/SLOReportStatusGetResponseData'
      type: object
    SpansAggregationFunction:
      description: An aggregation function.
      enum:
        - count
        - cardinality
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
        - median
      example: pc90
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - PERCENTILE_75
        - PERCENTILE_90
        - PERCENTILE_95
        - PERCENTILE_98
        - PERCENTILE_99
        - SUM
        - MIN
        - MAX
        - AVG
        - MEDIAN
    SpansComputeType:
      default: total
      description: The type of compute.
      enum:
        - timeseries
        - total
      type: string
      x-enum-varnames:
        - TIMESERIES
        - TOTAL
    SpansCompute:
      description: A compute rule to compute metrics or timeseries.
      properties:
        aggregation:
          $ref: '#/components/schemas/SpansAggregationFunction'
        interval:
          description: |-
            The time buckets' size (only used for type=timeseries)
            Defaults to a resolution of 150 points.
          example: 5m
          type: string
        metric:
          description: The metric to use.
          example: '@duration'
          type: string
        type:
          $ref: '#/components/schemas/SpansComputeType'
      required:
        - aggregation
      type: object
    SpansQueryFilter:
      description: The search and filter query settings.
      properties:
        from:
          default: now-15m
          description: >-
            The minimum time for the requested spans, supports date-time
            ISO8601, date math, and regular timestamps (milliseconds).
          example: now-15m
          type: string
        query:
          default: '*'
          description: The search query - following the span search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
        to:
          default: now
          description: >-
            The maximum time for the requested spans, supports date-time
            ISO8601, date math, and regular timestamps (milliseconds).
          example: now
          type: string
      type: object
    SpansGroupByHistogram:
      description: >-
        Used to perform a histogram computation (only for measure facets).

        Note: At most 100 buckets are allowed, the number of buckets is (max -
        min)/interval.
      properties:
        interval:
          description: The bin size of the histogram buckets.
          example: 10
          format: double
          type: number
        max:
          description: |-
            The maximum value for the measure used in the histogram
            (values greater than this one are filtered out).
          example: 100
          format: double
          type: number
        min:
          description: |-
            The minimum value for the measure used in the histogram
            (values smaller than this one are filtered out).
          example: 50
          format: double
          type: number
      required:
        - interval
        - min
        - max
      type: object
    SpansGroupByMissingString:
      description: The missing value to use if there is string valued facet.
      type: string
    SpansGroupByMissingNumber:
      description: The missing value to use if there is a number valued facet.
      format: double
      type: number
    SpansGroupByMissing:
      description: The value to use for spans that don't have the facet used to group by.
      oneOf:
        - $ref: '#/components/schemas/SpansGroupByMissingString'
        - $ref: '#/components/schemas/SpansGroupByMissingNumber'
    SpansSortOrder:
      description: The order to use, ascending or descending.
      enum:
        - asc
        - desc
      example: asc
      type: string
      x-enum-varnames:
        - ASCENDING
        - DESCENDING
    SpansAggregateSortType:
      default: alphabetical
      description: The type of sorting algorithm.
      enum:
        - alphabetical
        - measure
      type: string
      x-enum-varnames:
        - ALPHABETICAL
        - MEASURE
    SpansAggregateSort:
      description: A sort rule.
      example:
        aggregation: count
        order: asc
      properties:
        aggregation:
          $ref: '#/components/schemas/SpansAggregationFunction'
        metric:
          description: The metric to sort by (only used for `type=measure`).
          example: '@duration'
          type: string
        order:
          $ref: '#/components/schemas/SpansSortOrder'
        type:
          $ref: '#/components/schemas/SpansAggregateSortType'
      type: object
    SpansGroupByTotalBoolean:
      description: If set to true, creates an additional bucket labeled "$facet_total".
      type: boolean
    SpansGroupByTotalString:
      description: A string to use as the key value for the total bucket.
      type: string
    SpansGroupByTotalNumber:
      description: A number to use as the key value for the total bucket.
      format: double
      type: number
    SpansGroupByTotal:
      default: false
      description: >-
        A resulting object to put the given computes in over all the matching
        records.
      oneOf:
        - $ref: '#/components/schemas/SpansGroupByTotalBoolean'
        - $ref: '#/components/schemas/SpansGroupByTotalString'
        - $ref: '#/components/schemas/SpansGroupByTotalNumber'
    SpansGroupBy:
      description: A group by rule.
      properties:
        facet:
          description: The name of the facet to use (required).
          example: host
          type: string
        histogram:
          $ref: '#/components/schemas/SpansGroupByHistogram'
        limit:
          default: 10
          description: The maximum buckets to return for this group by.
          format: int64
          type: integer
        missing:
          $ref: '#/components/schemas/SpansGroupByMissing'
        sort:
          $ref: '#/components/schemas/SpansAggregateSort'
        total:
          $ref: '#/components/schemas/SpansGroupByTotal'
      required:
        - facet
      type: object
    SpansQueryOptions:
      description: >-
        Global query options that are used during the query.

        Note: You should only supply timezone or time offset but not both
        otherwise the query will fail.
      properties:
        timeOffset:
          description: The time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: >-
            The timezone can be specified as GMT, UTC, an offset from UTC (like
            UTC+1), or as a Timezone Database identifier (like
            America/New_York).
          example: GMT
          type: string
      type: object
    SpansAggregateRequestAttributes:
      description: The object containing all the query parameters.
      properties:
        compute:
          description: >-
            The list of metrics or timeseries to compute for the retrieved
            buckets.
          items:
            $ref: '#/components/schemas/SpansCompute'
          type: array
        filter:
          $ref: '#/components/schemas/SpansQueryFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansGroupBy'
          type: array
        options:
          $ref: '#/components/schemas/SpansQueryOptions'
      type: object
    SpansAggregateRequestType:
      default: aggregate_request
      description: The type of resource. The value should always be aggregate_request.
      enum:
        - aggregate_request
      example: aggregate_request
      type: string
      x-enum-varnames:
        - AGGREGATE_REQUEST
    SpansAggregateData:
      description: The object containing the query content.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansAggregateRequestAttributes'
        type:
          $ref: '#/components/schemas/SpansAggregateRequestType'
      type: object
    SpansAggregateRequest:
      description: >-
        The object sent with the request to retrieve a list of aggregated spans
        from your organization.
      properties:
        data:
          $ref: '#/components/schemas/SpansAggregateData'
      type: object
    SpansAggregateBucketValueSingleString:
      description: A single string value.
      type: string
    SpansAggregateBucketValueSingleNumber:
      description: A single number value.
      format: double
      type: number
    SpansAggregateBucketValueTimeseriesPoint:
      description: A timeseries point.
      properties:
        time:
          description: The time value for this point.
          example: '2023-06-08T11:55:00Z'
          type: string
        value:
          description: The value for this point.
          example: 19
          format: double
          type: number
      type: object
    SpansAggregateBucketValueTimeseries:
      description: A timeseries array.
      items:
        $ref: '#/components/schemas/SpansAggregateBucketValueTimeseriesPoint'
      type: array
      x-generate-alias-as-model: true
    SpansAggregateBucketValue:
      description: A bucket value, can be either a timeseries or a single value.
      oneOf:
        - $ref: '#/components/schemas/SpansAggregateBucketValueSingleString'
        - $ref: '#/components/schemas/SpansAggregateBucketValueSingleNumber'
        - $ref: '#/components/schemas/SpansAggregateBucketValueTimeseries'
    SpansAggregateBucketAttributes:
      description: A bucket values.
      properties:
        by:
          additionalProperties:
            description: The values for each group by.
          description: The key, value pairs for each group by.
          example:
            '@state': success
            '@version': abc
          type: object
        compute:
          description: The compute data.
          type: object
        computes:
          additionalProperties:
            $ref: '#/components/schemas/SpansAggregateBucketValue'
          description: >-
            A map of the metric name -> value for regular compute or list of
            values for a timeseries.
          type: object
      type: object
    SpansAggregateBucketType:
      description: The spans aggregate bucket type.
      enum:
        - bucket
      example: bucket
      type: string
      x-enum-varnames:
        - BUCKET
    SpansAggregateBucket:
      description: Spans aggregate.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansAggregateBucketAttributes'
        id:
          description: ID of the spans aggregate.
          type: string
        type:
          $ref: '#/components/schemas/SpansAggregateBucketType'
      type: object
    SpansAggregateResponseStatus:
      description: The status of the response.
      enum:
        - done
        - timeout
      example: done
      type: string
      x-enum-varnames:
        - DONE
        - TIMEOUT
    SpansWarning:
      description: A warning message indicating something that went wrong with the query.
      properties:
        code:
          description: A unique code for this type of warning.
          example: unknown_index
          type: string
        detail:
          description: A detailed explanation of this specific warning.
          example: 'indexes: foo, bar'
          type: string
        title:
          description: A short human-readable summary of the warning.
          example: >-
            One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    SpansAggregateResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: The time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/SpansAggregateResponseStatus'
        warnings:
          description: >-
            A list of warnings (non fatal errors) encountered, partial results
            might be returned if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/SpansWarning'
          type: array
      type: object
    SpansAggregateResponse:
      description: The response object for the spans aggregate API endpoint.
      properties:
        data:
          description: The list of matching buckets, one item per bucket.
          items:
            $ref: '#/components/schemas/SpansAggregateBucket'
          type: array
        meta:
          $ref: '#/components/schemas/SpansAggregateResponseMetadata'
      type: object
    SpansSort:
      description: Sort parameters when querying spans.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    SpansAttributes:
      description: JSON object containing all span attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from your span.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        custom:
          additionalProperties: {}
          description: JSON object of custom spans data.
          type: object
        end_timestamp:
          description: End timestamp of your span.
          example: '2023-01-02T09:42:36.420Z'
          format: date-time
          type: string
        env:
          description: Name of the environment from where the spans are being sent.
          example: prod
          type: string
        host:
          description: Name of the machine from where the spans are being sent.
          example: i-0123
          type: string
        ingestion_reason:
          description: The reason why the span was ingested.
          example: rule
          type: string
        parent_id:
          description: Id of the span that's parent of this span.
          example: '0'
          type: string
        resource_hash:
          description: Unique identifier of the resource.
          example: a12345678b91c23d
          type: string
        resource_name:
          description: The name of the resource.
          example: agent
          type: string
        retained_by:
          description: The reason why the span was indexed.
          example: retention_filter
          type: string
        service:
          description: >-
            The name of the application or service generating the span events.

            It is used to switch from APM to Logs, so make sure you define the
            same

            value when you use both products.
          example: agent
          type: string
        single_span:
          description: >-
            Whether or not the span was collected as a stand-alone span. Always
            associated to "single_span" ingestion_reason if true.
          example: true
          type: boolean
        span_id:
          description: Id of the span.
          example: '1234567890987654321'
          type: string
        start_timestamp:
          description: Start timestamp of your span.
          example: '2023-01-02T09:42:36.320Z'
          format: date-time
          type: string
        tags:
          description: Array of tags associated with your span.
          example:
            - team:A
          items:
            description: Tag associated with your span.
            type: string
          type: array
        trace_id:
          description: Id of the trace to which the span belongs.
          example: '1234567890987654321'
          type: string
        type:
          description: The type of the span.
          example: web
          type: string
      type: object
    SpansType:
      default: spans
      description: Type of the span.
      enum:
        - spans
      example: spans
      type: string
      x-enum-varnames:
        - SPANS
    Span:
      description: >-
        Object description of a spans after being processed and stored by
        Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansAttributes'
        id:
          description: Unique ID of the Span.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/SpansType'
      type: object
    SpansListResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            Link for the next set of results. Note that the request can also be
            made using the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/spans/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    SpansResponseMetadataPage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same

            parameters with the addition of the `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    SpansListResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: The time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/SpansResponseMetadataPage'
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/SpansAggregateResponseStatus'
        warnings:
          description: >-
            A list of warnings (non fatal errors) encountered, partial results
            might be returned if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/SpansWarning'
          type: array
      type: object
    SpansListResponse:
      description: >-
        Response object with all spans matching the request and pagination
        information.
      properties:
        data:
          description: Array of spans matching the request.
          items:
            $ref: '#/components/schemas/Span'
          type: array
        links:
          $ref: '#/components/schemas/SpansListResponseLinks'
        meta:
          $ref: '#/components/schemas/SpansListResponseMetadata'
      type: object
    SpansListRequestPage:
      description: Paging attributes for listing spans.
      properties:
        cursor:
          description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of spans in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    SpansListRequestAttributes:
      description: The object containing all the query parameters.
      properties:
        filter:
          $ref: '#/components/schemas/SpansQueryFilter'
        options:
          $ref: '#/components/schemas/SpansQueryOptions'
        page:
          $ref: '#/components/schemas/SpansListRequestPage'
        sort:
          $ref: '#/components/schemas/SpansSort'
      type: object
    SpansListRequestType:
      default: search_request
      description: The type of resource. The value should always be search_request.
      enum:
        - search_request
      example: search_request
      type: string
      x-enum-varnames:
        - SEARCH_REQUEST
    SpansListRequestData:
      description: The object containing the query content.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansListRequestAttributes'
        type:
          $ref: '#/components/schemas/SpansListRequestType'
      type: object
    SpansListRequest:
      description: The request for a spans list.
      properties:
        data:
          $ref: '#/components/schemas/SpansListRequestData'
      type: object
    OnDemandConcurrencyCapAttributes:
      description: On-demand concurrency cap attributes.
      properties:
        on_demand_concurrency_cap:
          description: Value of the on-demand concurrency cap.
          format: double
          type: number
      type: object
    OnDemandConcurrencyCapType:
      description: On-demand concurrency cap type.
      enum:
        - on_demand_concurrency_cap
      type: string
      x-enum-varnames:
        - ON_DEMAND_CONCURRENCY_CAP
    OnDemandConcurrencyCap:
      description: On-demand concurrency cap.
      properties:
        attributes:
          $ref: '#/components/schemas/OnDemandConcurrencyCapAttributes'
        type:
          $ref: '#/components/schemas/OnDemandConcurrencyCapType'
      type: object
    OnDemandConcurrencyCapResponse:
      description: On-demand concurrency cap response.
      properties:
        data:
          $ref: '#/components/schemas/OnDemandConcurrencyCap'
      type: object
    ListTeamsSort:
      description: Specifies the order of the returned teams
      enum:
        - name
        - '-name'
        - user_count
        - '-user_count'
      type: string
      x-enum-varnames:
        - NAME
        - _NAME
        - USER_COUNT
        - _USER_COUNT
    ListTeamsInclude:
      description: Included related resources optionally requested.
      enum:
        - team_links
        - user_team_permissions
      type: string
      x-enum-varnames:
        - TEAM_LINKS
        - USER_TEAM_PERMISSIONS
    TeamsField:
      description: Supported teams field.
      enum:
        - id
        - name
        - handle
        - summary
        - description
        - avatar
        - banner
        - visible_modules
        - hidden_modules
        - created_at
        - modified_at
        - user_count
        - link_count
        - team_links
        - user_team_permissions
      type: string
      x-enum-varnames:
        - ID
        - NAME
        - HANDLE
        - SUMMARY
        - DESCRIPTION
        - AVATAR
        - BANNER
        - VISIBLE_MODULES
        - HIDDEN_MODULES
        - CREATED_AT
        - MODIFIED_AT
        - USER_COUNT
        - LINK_COUNT
        - TEAM_LINKS
        - USER_TEAM_PERMISSIONS
    TeamAttributes:
      description: Team attributes
      properties:
        avatar:
          description: >-
            Unicode representation of the avatar for the team, limited to a
            single grapheme
          example: 🥑
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        created_at:
          description: Creation date of the team
          format: date-time
          type: string
        description:
          description: Free-form markdown description/content for the team's homepage
          nullable: true
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        link_count:
          description: The number of links belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        modified_at:
          description: Modification date of the team
          format: date-time
          type: string
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        summary:
          description: A brief summary of the team, derived from the `description`
          maxLength: 120
          nullable: true
          type: string
        user_count:
          description: The number of users belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    UserTeamPermissionType:
      default: user_team_permissions
      description: User team permission type
      enum:
        - user_team_permissions
      example: user_team_permissions
      type: string
      x-enum-varnames:
        - USER_TEAM_PERMISSIONS
    RelationshipToUserTeamPermissionData:
      description: Related user team permission data
      properties:
        id:
          description: The ID of the user team permission
          example: UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
          type: string
        type:
          $ref: '#/components/schemas/UserTeamPermissionType'
      required:
        - id
        - type
      type: object
    RelationshipToUserTeamPermission:
      description: Relationship between a user team permission and a team
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserTeamPermissionData'
        links:
          $ref: '#/components/schemas/TeamRelationshipsLinks'
      type: object
    TeamRelationships:
      description: Resources related to a team
      properties:
        team_links:
          $ref: '#/components/schemas/RelationshipToTeamLinks'
        user_team_permissions:
          $ref: '#/components/schemas/RelationshipToUserTeamPermission'
      type: object
    Team:
      description: A team
      properties:
        attributes:
          $ref: '#/components/schemas/TeamAttributes'
        id:
          description: The team's identifier
          example: aeadc05e-98a8-11ec-ac2c-da7ad0900001
          type: string
        relationships:
          $ref: '#/components/schemas/TeamRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - id
        - type
      type: object
    TeamLinkAttributes:
      description: Team link attributes
      properties:
        label:
          description: The link's label
          example: Link label
          maxLength: 256
          type: string
        position:
          description: The link's position, used to sort links for the team
          format: int32
          maximum: 2147483647
          type: integer
        team_id:
          description: ID of the team the link is associated with
          readOnly: true
          type: string
        url:
          description: The URL for the link
          example: https://example.com
          type: string
      required:
        - label
        - url
      type: object
    TeamLink:
      description: Team link
      properties:
        attributes:
          $ref: '#/components/schemas/TeamLinkAttributes'
        id:
          description: The team link's identifier
          example: b8626d7e-cedd-11eb-abf5-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - attributes
        - id
        - type
      type: object
    UserTeamPermissionAttributes:
      description: User team permission attributes
      properties:
        permissions:
          description: >-
            Object of team permission actions and boolean values that a logged
            in user can perform on this team.
          readOnly: true
          type: object
      type: object
    UserTeamPermission:
      description: A user's permissions for a given team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamPermissionAttributes'
        id:
          description: The user team permission's identifier
          example: UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
          type: string
        type:
          $ref: '#/components/schemas/UserTeamPermissionType'
      required:
        - id
        - type
      type: object
    TeamIncluded:
      description: Included resources related to the team
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/TeamLink'
        - $ref: '#/components/schemas/UserTeamPermission'
    TeamsResponseLinks:
      description: Teams response links.
      properties:
        first:
          description: First link.
          type: string
        last:
          description: Last link.
          nullable: true
          type: string
        next:
          description: Next link.
          type: string
        prev:
          description: Previous link.
          nullable: true
          type: string
        self:
          description: Current link.
          type: string
      type: object
    TeamsResponseMetaPagination:
      description: Teams response metadata.
      properties:
        first_offset:
          description: The first offset.
          format: int64
          type: integer
        last_offset:
          description: The last offset.
          format: int64
          type: integer
        limit:
          description: Pagination limit.
          format: int64
          type: integer
        next_offset:
          description: The next offset.
          format: int64
          type: integer
        offset:
          description: The offset.
          format: int64
          type: integer
        prev_offset:
          description: The previous offset.
          format: int64
          type: integer
        total:
          description: Total results.
          format: int64
          type: integer
        type:
          description: Offset type.
          type: string
      type: object
    TeamsResponseMeta:
      description: Teams response metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/TeamsResponseMetaPagination'
      type: object
    TeamsResponse:
      description: Response with multiple teams
      properties:
        data:
          description: Teams response data
          items:
            $ref: '#/components/schemas/Team'
          type: array
        included:
          description: Resources related to the team
          items:
            $ref: '#/components/schemas/TeamIncluded'
          type: array
        links:
          $ref: '#/components/schemas/TeamsResponseLinks'
        meta:
          $ref: '#/components/schemas/TeamsResponseMeta'
      type: object
    TeamCreateAttributes:
      description: Team creation attributes
      properties:
        avatar:
          description: >-
            Unicode representation of the avatar for the team, limited to a
            single grapheme
          example: 🥑
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        description:
          description: Free-form markdown description/content for the team's homepage
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    TeamCreateRelationships:
      description: Relationships formed with the team on creation
      properties:
        users:
          $ref: '#/components/schemas/RelationshipToUsers'
      type: object
    TeamCreate:
      description: Team create
      properties:
        attributes:
          $ref: '#/components/schemas/TeamCreateAttributes'
        relationships:
          $ref: '#/components/schemas/TeamCreateRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - type
      type: object
    TeamCreateRequest:
      description: Request to create a team
      properties:
        data:
          $ref: '#/components/schemas/TeamCreate'
      required:
        - data
      type: object
    TeamResponse:
      description: Response with a team
      properties:
        data:
          $ref: '#/components/schemas/Team'
      type: object
    TeamUpdateAttributes:
      description: Team update attributes
      properties:
        avatar:
          description: >-
            Unicode representation of the avatar for the team, limited to a
            single grapheme
          example: 🥑
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        description:
          description: Free-form markdown description/content for the team's homepage
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    TeamUpdateRelationships:
      description: Team update relationships
      properties:
        team_links:
          $ref: '#/components/schemas/RelationshipToTeamLinks'
      type: object
    TeamUpdate:
      description: Team update request
      properties:
        attributes:
          $ref: '#/components/schemas/TeamUpdateAttributes'
        relationships:
          $ref: '#/components/schemas/TeamUpdateRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - type
      type: object
    TeamUpdateRequest:
      description: Team update request
      properties:
        data:
          $ref: '#/components/schemas/TeamUpdate'
      required:
        - data
      type: object
    TeamLinksResponse:
      description: Team links response
      properties:
        data:
          description: Team links response data
          items:
            $ref: '#/components/schemas/TeamLink'
          type: array
      type: object
    TeamLinkCreate:
      description: Team link create
      properties:
        attributes:
          $ref: '#/components/schemas/TeamLinkAttributes'
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - attributes
        - type
      type: object
    TeamLinkCreateRequest:
      description: Team link create request
      properties:
        data:
          $ref: '#/components/schemas/TeamLinkCreate'
      required:
        - data
      type: object
    TeamLinkResponse:
      description: Team link response
      properties:
        data:
          $ref: '#/components/schemas/TeamLink'
      type: object
    GetTeamMembershipsSort:
      description: Specifies the order of returned team memberships
      enum:
        - manager_name
        - '-manager_name'
        - name
        - '-name'
        - handle
        - '-handle'
        - email
        - '-email'
      type: string
      x-enum-varnames:
        - MANAGER_NAME
        - _MANAGER_NAME
        - NAME
        - _NAME
        - HANDLE
        - _HANDLE
        - EMAIL
        - _EMAIL
    UserTeamRole:
      description: The user's role within the team
      enum:
        - admin
      nullable: true
      type: string
      x-enum-varnames:
        - ADMIN
    UserTeamAttributes:
      description: Team membership attributes
      properties:
        provisioned_by:
          description: >-
            The mechanism responsible for provisioning the team relationship.

            Possible values: null for added by a user, "service_account" if
            added by a service account, and "saml_mapping" if provisioned via
            SAML mapping.
          nullable: true
          readOnly: true
          type: string
        provisioned_by_id:
          description: >-
            UUID of the User or Service Account who provisioned this team
            membership, or null if provisioned via SAML mapping.
          nullable: true
          readOnly: true
          type: string
        role:
          $ref: '#/components/schemas/UserTeamRole'
      type: object
    UserTeamTeamType:
      default: team
      description: User team team type
      enum:
        - team
      example: team
      type: string
      x-enum-varnames:
        - TEAM
    RelationshipToUserTeamTeamData:
      description: The team associated with the membership
      properties:
        id:
          description: The ID of the team associated with the membership
          example: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
          type: string
        type:
          $ref: '#/components/schemas/UserTeamTeamType'
      required:
        - id
        - type
      type: object
    RelationshipToUserTeamTeam:
      description: Relationship between team membership and team
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserTeamTeamData'
      required:
        - data
      type: object
    UserTeamUserType:
      default: users
      description: User team user type
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    RelationshipToUserTeamUserData:
      description: A user's relationship with a team
      properties:
        id:
          description: The ID of the user associated with the team
          example: b8626d7e-cedd-11eb-abf5-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/UserTeamUserType'
      required:
        - id
        - type
      type: object
    RelationshipToUserTeamUser:
      description: Relationship between team membership and user
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserTeamUserData'
      required:
        - data
      type: object
    UserTeamRelationships:
      description: Relationship between membership and a user
      properties:
        team:
          $ref: '#/components/schemas/RelationshipToUserTeamTeam'
        user:
          $ref: '#/components/schemas/RelationshipToUserTeamUser'
      type: object
    UserTeamType:
      default: team_memberships
      description: Team membership type
      enum:
        - team_memberships
      example: team_memberships
      type: string
      x-enum-varnames:
        - TEAM_MEMBERSHIPS
    UserTeam:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        id:
          description: The ID of a user's relationship with a team
          example: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
          type: string
        relationships:
          $ref: '#/components/schemas/UserTeamRelationships'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - id
        - type
      type: object
    UserTeamIncluded:
      description: Included resources related to the team membership
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Team'
    UserTeamsResponse:
      description: Team memberships response
      properties:
        data:
          description: Team memberships response data
          items:
            $ref: '#/components/schemas/UserTeam'
          type: array
        included:
          description: Resources related to the team memberships
          items:
            $ref: '#/components/schemas/UserTeamIncluded'
          type: array
        links:
          $ref: '#/components/schemas/TeamsResponseLinks'
        meta:
          $ref: '#/components/schemas/TeamsResponseMeta'
      type: object
    UserTeamCreate:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        relationships:
          $ref: '#/components/schemas/UserTeamRelationships'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - type
      type: object
    UserTeamRequest:
      description: Team membership request
      properties:
        data:
          $ref: '#/components/schemas/UserTeamCreate'
      required:
        - data
      type: object
    UserTeamResponse:
      description: Team membership response
      properties:
        data:
          $ref: '#/components/schemas/UserTeam'
        included:
          description: Resources related to the team memberships
          items:
            $ref: '#/components/schemas/UserTeamIncluded'
          type: array
      type: object
    UserTeamUpdate:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - type
      type: object
    UserTeamUpdateRequest:
      description: Team membership request
      properties:
        data:
          $ref: '#/components/schemas/UserTeamUpdate'
      required:
        - data
      type: object
    TeamPermissionSettingSerializerAction:
      description: The identifier for the action
      enum:
        - manage_membership
        - edit
      readOnly: true
      type: string
      x-enum-varnames:
        - MANAGE_MEMBERSHIP
        - EDIT
    TeamPermissionSettingValue:
      description: What type of user is allowed to perform the specified action
      enum:
        - admins
        - members
        - organization
        - user_access_manage
        - teams_manage
      type: string
      x-enum-varnames:
        - ADMINS
        - MEMBERS
        - ORGANIZATION
        - USER_ACCESS_MANAGE
        - TEAMS_MANAGE
    TeamPermissionSettingValues:
      description: Possible values for action
      items:
        $ref: '#/components/schemas/TeamPermissionSettingValue'
      readOnly: true
      type: array
    TeamPermissionSettingAttributes:
      description: Team permission setting attributes
      properties:
        action:
          $ref: '#/components/schemas/TeamPermissionSettingSerializerAction'
        editable:
          description: >-
            Whether or not the permission setting is editable by the current
            user
          readOnly: true
          type: boolean
        options:
          $ref: '#/components/schemas/TeamPermissionSettingValues'
        title:
          description: The team permission name
          readOnly: true
          type: string
        value:
          $ref: '#/components/schemas/TeamPermissionSettingValue'
      type: object
    TeamPermissionSettingType:
      default: team_permission_settings
      description: Team permission setting type
      enum:
        - team_permission_settings
      example: team_permission_settings
      type: string
      x-enum-varnames:
        - TEAM_PERMISSION_SETTINGS
    TeamPermissionSetting:
      description: Team permission setting
      properties:
        attributes:
          $ref: '#/components/schemas/TeamPermissionSettingAttributes'
        id:
          description: The team permission setting's identifier
          example: TeamPermission-aeadc05e-98a8-11ec-ac2c-da7ad0900001-edit
          type: string
        type:
          $ref: '#/components/schemas/TeamPermissionSettingType'
      required:
        - id
        - type
      type: object
    TeamPermissionSettingsResponse:
      description: Team permission settings response
      properties:
        data:
          description: Team permission settings response data
          items:
            $ref: '#/components/schemas/TeamPermissionSetting'
          type: array
      type: object
    TeamPermissionSettingUpdateAttributes:
      description: Team permission setting update attributes
      properties:
        value:
          $ref: '#/components/schemas/TeamPermissionSettingValue'
      type: object
    TeamPermissionSettingUpdate:
      description: Team permission setting update
      properties:
        attributes:
          $ref: '#/components/schemas/TeamPermissionSettingUpdateAttributes'
        type:
          $ref: '#/components/schemas/TeamPermissionSettingType'
      required:
        - type
      type: object
    TeamPermissionSettingUpdateRequest:
      description: Team permission setting update request
      properties:
        data:
          $ref: '#/components/schemas/TeamPermissionSettingUpdate'
      required:
        - data
      type: object
    TeamPermissionSettingResponse:
      description: Team permission setting response
      properties:
        data:
          $ref: '#/components/schemas/TeamPermissionSetting'
      type: object
    IncidentTeamResponseAttributes:
      description: The incident team's attributes from a response.
      properties:
        created:
          description: Timestamp of when the incident team was created.
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Timestamp of when the incident team was modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the incident team.
          example: team name
          type: string
      type: object
    IncidentTeamRelationships:
      description: The incident team's relationships.
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by:
          $ref: '#/components/schemas/RelationshipToUser'
      readOnly: true
      type: object
    IncidentTeamType:
      default: teams
      description: Incident Team resource type.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    IncidentTeamResponseData:
      description: Incident Team data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamResponseAttributes'
        id:
          description: The incident team's ID.
          example: 00000000-7ea3-0000-000a-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      type: object
    IncidentTeamIncludedItems:
      description: >-
        An object related to an incident team which is present in the included
        payload.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentTeamsResponse:
      description: Response with a list of incident team payloads.
      properties:
        data:
          description: An array of incident teams.
          example:
            - attributes:
                name: team name
              id: 00000000-7ea3-0000-0000-000000000000
              type: teams
          items:
            $ref: '#/components/schemas/IncidentTeamResponseData'
          type: array
        included:
          description: Included related resources which the user requested.
          items:
            $ref: '#/components/schemas/IncidentTeamIncludedItems'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentTeamCreateAttributes:
      description: The incident team's attributes for a create request.
      properties:
        name:
          description: Name of the incident team.
          example: team name
          type: string
      required:
        - name
      type: object
    IncidentTeamCreateData:
      description: Incident Team data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      required:
        - type
      type: object
    IncidentTeamCreateRequest:
      description: Create request with an incident team payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamCreateData'
      required:
        - data
      type: object
    IncidentTeamResponse:
      description: Response with an incident team payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamResponseData'
        included:
          description: Included objects from relationships.
          items:
            $ref: '#/components/schemas/IncidentTeamIncludedItems'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentTeamUpdateAttributes:
      description: The incident team's attributes for an update request.
      properties:
        name:
          description: Name of the incident team.
          example: team name
          type: string
      required:
        - name
      type: object
    IncidentTeamUpdateData:
      description: Incident Team data for an update request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamUpdateAttributes'
        id:
          description: The incident team's ID.
          example: 00000000-7ea3-0000-0001-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      required:
        - type
      type: object
    IncidentTeamUpdateRequest:
      description: Update request with an incident team payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamUpdateData'
      required:
        - data
      type: object
    UsageTimeSeriesObject:
      description: Usage timeseries data.
      properties:
        timestamp:
          description: Datetime in ISO-8601 format, UTC. The hour for the usage.
          format: date-time
          type: string
        value:
          description: >-
            Contains the number measured for the given usage_type during the
            hour.
          format: int64
          nullable: true
          type: integer
      type: object
    HourlyUsageType:
      description: Usage type that is being measured.
      enum:
        - app_sec_host_count
        - observability_pipelines_bytes_processed
        - lambda_traced_invocations_count
      example: observability_pipelines_bytes_processed
      type: string
      x-enum-varnames:
        - APP_SEC_HOST_COUNT
        - OBSERVABILITY_PIPELINES_BYTES_PROCESSSED
        - LAMBDA_TRACED_INVOCATIONS_COUNT
    UsageAttributesObject:
      description: Usage attributes data.
      properties:
        org_name:
          description: The organization name.
          type: string
        product_family:
          description: The product for which usage is being reported.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        timeseries:
          description: List of usage data reported for each requested hour.
          items:
            $ref: '#/components/schemas/UsageTimeSeriesObject'
          type: array
        usage_type:
          $ref: '#/components/schemas/HourlyUsageType'
      type: object
    UsageTimeSeriesType:
      default: usage_timeseries
      description: Type of usage data.
      enum:
        - usage_timeseries
      example: usage_timeseries
      type: string
      x-enum-varnames:
        - USAGE_TIMESERIES
    UsageDataObject:
      description: Usage data.
      properties:
        attributes:
          $ref: '#/components/schemas/UsageAttributesObject'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/UsageTimeSeriesType'
      type: object
    UsageApplicationSecurityMonitoringResponse:
      description: Application Security Monitoring usage response.
      properties:
        data:
          description: Response containing Application Security Monitoring usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    BillingDimensionsMappingBodyItemAttributesEndpointsItemsStatus:
      description: Denotes whether mapping keys were available for this endpoint.
      enum:
        - OK
        - NOT_FOUND
      type: string
      x-enum-varnames:
        - OK
        - NOT_FOUND
    BillingDimensionsMappingBodyItemAttributesEndpointsItems:
      description: An endpoint's keys mapped to the billing_dimension.
      properties:
        id:
          description: The URL for the endpoint.
          example: api/v1/usage/billable-summary
          type: string
        keys:
          description: The billing dimension.
          example:
            - apm_host_top99p
            - apm_host_sum
          items:
            example: apm_host_top99p
            type: string
          type: array
        status:
          $ref: >-
            #/components/schemas/BillingDimensionsMappingBodyItemAttributesEndpointsItemsStatus
      type: object
    BillingDimensionsMappingBodyItemAttributes:
      description: Mapping of billing dimensions to endpoint keys.
      properties:
        endpoints:
          description: >-
            List of supported endpoints with their keys mapped to the
            billing_dimension.
          items:
            $ref: >-
              #/components/schemas/BillingDimensionsMappingBodyItemAttributesEndpointsItems
          type: array
        in_app_label:
          description: Label used for the billing dimension in the Plan & Usage charts.
          example: APM Hosts
          type: string
        timestamp:
          description: >-
            Month in ISO-8601 format, UTC, and precise to the second:
            `[YYYY-MM-DDThh:mm:ss]`.
          format: date-time
          type: string
      type: object
    BillingDimensionsMappingBodyItem:
      description: The mapping data for each billing dimension.
      properties:
        attributes:
          $ref: '#/components/schemas/BillingDimensionsMappingBodyItemAttributes'
        id:
          description: ID of the billing dimension.
          type: string
        type:
          $ref: '#/components/schemas/ActiveBillingDimensionsType'
      type: object
    BillingDimensionsMappingBody:
      description: Billing dimensions mapping data.
      items:
        $ref: '#/components/schemas/BillingDimensionsMappingBodyItem'
      type: array
    BillingDimensionsMappingResponse:
      description: Billing dimensions mapping response.
      properties:
        data:
          $ref: '#/components/schemas/BillingDimensionsMappingBody'
      type: object
    ChargebackBreakdown:
      description: Charges breakdown.
      properties:
        charge_type:
          description: The type of charge for a particular product.
          example: on_demand
          type: string
        cost:
          description: >-
            The cost for a particular product and charge type during a given
            month.
          format: double
          type: number
        product_name:
          description: The product for which cost is being reported.
          example: infra_host
          type: string
      type: object
    CostByOrgAttributes:
      description: Cost attributes data.
      properties:
        account_name:
          description: The account name.
          type: string
        account_public_id:
          description: The account public ID.
          type: string
        charges:
          description: List of charges data reported for the requested month.
          items:
            $ref: '#/components/schemas/ChargebackBreakdown'
          type: array
        date:
          description: The month requested.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        total_cost:
          description: The total cost of products for the month.
          format: double
          type: number
      type: object
    CostByOrgType:
      default: cost_by_org
      description: Type of cost data.
      enum:
        - cost_by_org
      example: cost_by_org
      type: string
      x-enum-varnames:
        - COST_BY_ORG
    CostByOrg:
      description: Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/CostByOrgAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/CostByOrgType'
      type: object
    CostByOrgResponse:
      description: Chargeback Summary response.
      properties:
        data:
          description: Response containing Chargeback Summary.
          items:
            $ref: '#/components/schemas/CostByOrg'
          type: array
      type: object
    HourlyUsageMeasurement:
      description: Usage amount for a given usage type.
      properties:
        usage_type:
          description: Type of usage.
          type: string
        value:
          description: >-
            Contains the number measured for the given usage_type during the
            hour.
          format: int64
          nullable: true
          type: integer
      type: object
    HourlyUsageAttributes:
      description: >-
        Attributes of hourly usage for a product family for an org for a time
        period.
      properties:
        account_name:
          description: The account name.
          type: string
        account_public_id:
          description: The account public ID.
          type: string
        measurements:
          description: >-
            List of the measured usage values for the product family for the org
            for the time period.
          items:
            $ref: '#/components/schemas/HourlyUsageMeasurement'
          type: array
        org_name:
          description: The organization name.
          type: string
        product_family:
          description: The product for which usage is being reported.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        timestamp:
          description: Datetime in ISO-8601 format, UTC. The hour for the usage.
          format: date-time
          type: string
      type: object
    HourlyUsage:
      description: Hourly usage for a product family for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/HourlyUsageAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/UsageTimeSeriesType'
      type: object
    HourlyUsagePagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: >-
            The cursor to get the next results (if any). To make the next
            request, use the same parameters and add `next_record_id`.
          nullable: true
          type: string
      type: object
    HourlyUsageMetadata:
      description: The object containing document metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/HourlyUsagePagination'
      type: object
    HourlyUsageResponse:
      description: Hourly usage response.
      properties:
        data:
          description: Response containing hourly usage.
          items:
            $ref: '#/components/schemas/HourlyUsage'
          type: array
        meta:
          $ref: '#/components/schemas/HourlyUsageMetadata'
      type: object
    UsageLambdaTracedInvocationsResponse:
      description: Lambda Traced Invocations usage response.
      properties:
        data:
          description: Response containing Lambda Traced Invocations usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    UsageObservabilityPipelinesResponse:
      description: Observability Pipelines usage response.
      properties:
        data:
          description: Response containing Observability Pipelines usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    ProjectedCostAttributes:
      description: Projected Cost attributes data.
      properties:
        account_name:
          description: The account name.
          type: string
        account_public_id:
          description: The account public ID.
          type: string
        charges:
          description: List of charges data reported for the requested month.
          items:
            $ref: '#/components/schemas/ChargebackBreakdown'
          type: array
        date:
          description: The month requested.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        projected_total_cost:
          description: The total projected cost of products for the month.
          format: double
          type: number
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
      type: object
    ProjectedCostType:
      default: projected_cost
      description: Type of cost data.
      enum:
        - projected_cost
      example: projected_cost
      type: string
      x-enum-varnames:
        - PROJECt_COST
    ProjectedCost:
      description: Projected Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectedCostAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/ProjectedCostType'
      type: object
    ProjectedCostResponse:
      description: Projected Cost response.
      properties:
        data:
          description: Response containing Projected Cost.
          items:
            $ref: '#/components/schemas/ProjectedCost'
          type: array
      type: object
    UserInvitationRelationships:
      description: Relationships data for user invitation.
      properties:
        user:
          $ref: '#/components/schemas/RelationshipToUser'
      required:
        - user
      type: object
    UserInvitationsType:
      default: user_invitations
      description: User invitations type.
      enum:
        - user_invitations
      example: user_invitations
      type: string
      x-enum-varnames:
        - USER_INVITATIONS
    UserInvitationData:
      description: Object to create a user invitation.
      properties:
        relationships:
          $ref: '#/components/schemas/UserInvitationRelationships'
        type:
          $ref: '#/components/schemas/UserInvitationsType'
      required:
        - type
        - relationships
      type: object
    UserInvitationsRequest:
      description: Object to invite users to join the organization.
      properties:
        data:
          description: List of user invitations.
          example: []
          items:
            $ref: '#/components/schemas/UserInvitationData'
          type: array
      required:
        - data
      type: object
    UserInvitationDataAttributes:
      description: Attributes of a user invitation.
      properties:
        created_at:
          description: Creation time of the user invitation.
          format: date-time
          type: string
        expires_at:
          description: Time of invitation expiration.
          format: date-time
          type: string
        invite_type:
          description: Type of invitation.
          type: string
        uuid:
          description: UUID of the user invitation.
          type: string
      type: object
    UserInvitationResponseData:
      description: Object of a user invitation returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/UserInvitationDataAttributes'
        id:
          description: ID of the user invitation.
          type: string
        relationships:
          $ref: '#/components/schemas/UserInvitationRelationships'
        type:
          $ref: '#/components/schemas/UserInvitationsType'
      type: object
    UserInvitationsResponse:
      description: User invitations as returned by the API.
      properties:
        data:
          description: Array of user invitations.
          items:
            $ref: '#/components/schemas/UserInvitationResponseData'
          type: array
      type: object
    UserInvitationResponse:
      description: User invitation as returned by the API.
      properties:
        data:
          $ref: '#/components/schemas/UserInvitationResponseData'
      type: object
    UserCreateAttributes:
      description: Attributes of the created user.
      properties:
        email:
          description: The email of the user.
          example: jane.doe@example.com
          type: string
        name:
          description: The name of the user.
          type: string
        title:
          description: The title of the user.
          type: string
      required:
        - email
      type: object
    UserCreateData:
      description: Object to create a user.
      properties:
        attributes:
          $ref: '#/components/schemas/UserCreateAttributes'
        relationships:
          $ref: '#/components/schemas/UserRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - attributes
        - type
      type: object
    UserCreateRequest:
      description: Create a user.
      properties:
        data:
          $ref: '#/components/schemas/UserCreateData'
      required:
        - data
      type: object
    UserUpdateAttributes:
      description: Attributes of the edited user.
      properties:
        disabled:
          description: If the user is enabled or disabled.
          type: boolean
        email:
          description: The email of the user.
          type: string
        name:
          description: The name of the user.
          type: string
      type: object
    UserUpdateData:
      description: Object to update a user.
      properties:
        attributes:
          $ref: '#/components/schemas/UserUpdateAttributes'
        id:
          description: ID of the user.
          example: 00000000-0000-feed-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - attributes
        - type
        - id
      type: object
    UserUpdateRequest:
      description: Update a user.
      properties:
        data:
          $ref: '#/components/schemas/UserUpdateData'
      required:
        - data
      type: object
    AnnotationDisplayBounds:
      description: The definition of `AnnotationDisplayBounds` object.
      properties:
        height:
          description: The `bounds` `height`.
          format: double
          type: number
        width:
          description: The `bounds` `width`.
          format: double
          type: number
        x:
          description: The `bounds` `x`.
          format: double
          type: number
        'y':
          description: The `bounds` `y`.
          format: double
          type: number
      type: object
    AnnotationDisplay:
      description: The definition of `AnnotationDisplay` object.
      properties:
        bounds:
          $ref: '#/components/schemas/AnnotationDisplayBounds'
      type: object
    AnnotationMarkdownTextAnnotation:
      description: The definition of `AnnotationMarkdownTextAnnotation` object.
      properties:
        text:
          description: The `markdownTextAnnotation` `text`.
          type: string
      type: object
    Annotation:
      description: >-
        A list of annotations used in the workflow. These are like sticky notes
        for your workflow!
      properties:
        display:
          $ref: '#/components/schemas/AnnotationDisplay'
        id:
          description: The `Annotation` `id`.
          example: ''
          type: string
        markdownTextAnnotation:
          $ref: '#/components/schemas/AnnotationMarkdownTextAnnotation'
      required:
        - id
        - display
        - markdownTextAnnotation
      type: object
    ConnectionGroup:
      description: The definition of `ConnectionGroup` object.
      properties:
        connectionGroupId:
          description: The `ConnectionGroup` `connectionGroupId`.
          example: ''
          type: string
        label:
          description: The `ConnectionGroup` `label`.
          example: ''
          type: string
        tags:
          description: The `ConnectionGroup` `tags`.
          example:
            - ''
          items:
            type: string
          type: array
      required:
        - connectionGroupId
        - label
        - tags
      type: object
    Connection:
      description: The definition of `Connection` object.
      properties:
        connectionId:
          description: The `Connection` `connectionId`.
          example: ''
          type: string
        label:
          description: The `Connection` `label`.
          example: ''
          type: string
      required:
        - connectionId
        - label
      type: object
    ConnectionEnvEnv:
      description: The definition of `ConnectionEnvEnv` object.
      enum:
        - default
      example: default
      type: string
      x-enum-varnames:
        - DEFAULT
    ConnectionEnv:
      description: A list of connections or connection groups used in the workflow.
      properties:
        connectionGroups:
          description: The `ConnectionEnv` `connectionGroups`.
          items:
            $ref: '#/components/schemas/ConnectionGroup'
          type: array
        connections:
          description: The `ConnectionEnv` `connections`.
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        env:
          $ref: '#/components/schemas/ConnectionEnvEnv'
      required:
        - env
      type: object
    InputSchemaParametersType:
      description: The definition of `InputSchemaParametersType` object.
      enum:
        - STRING
        - NUMBER
        - BOOLEAN
        - OBJECT
        - ARRAY_STRING
        - ARRAY_NUMBER
        - ARRAY_BOOLEAN
        - ARRAY_OBJECT
      example: STRING
      type: string
      x-enum-varnames:
        - STRING
        - NUMBER
        - BOOLEAN
        - OBJECT
        - ARRAY_STRING
        - ARRAY_NUMBER
        - ARRAY_BOOLEAN
        - ARRAY_OBJECT
    InputSchemaParameters:
      description: The definition of `InputSchemaParameters` object.
      properties:
        defaultValue:
          description: The `InputSchemaParameters` `defaultValue`.
        description:
          description: The `InputSchemaParameters` `description`.
          type: string
        label:
          description: The `InputSchemaParameters` `label`.
          type: string
        name:
          description: The `InputSchemaParameters` `name`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/InputSchemaParametersType'
      required:
        - name
        - type
      type: object
    InputSchema:
      description: >-
        A list of input parameters for the workflow. These can be used as
        dynamic runtime values in your workflow.
      properties:
        parameters:
          description: The `InputSchema` `parameters`.
          items:
            $ref: '#/components/schemas/InputSchemaParameters'
          type: array
      type: object
    OutputSchemaParametersType:
      description: The definition of `OutputSchemaParametersType` object.
      enum:
        - STRING
        - NUMBER
        - BOOLEAN
        - OBJECT
        - ARRAY_STRING
        - ARRAY_NUMBER
        - ARRAY_BOOLEAN
        - ARRAY_OBJECT
      example: STRING
      type: string
      x-enum-varnames:
        - STRING
        - NUMBER
        - BOOLEAN
        - OBJECT
        - ARRAY_STRING
        - ARRAY_NUMBER
        - ARRAY_BOOLEAN
        - ARRAY_OBJECT
    OutputSchemaParameters:
      description: The definition of `OutputSchemaParameters` object.
      properties:
        defaultValue:
          description: The `OutputSchemaParameters` `defaultValue`.
        description:
          description: The `OutputSchemaParameters` `description`.
          type: string
        label:
          description: The `OutputSchemaParameters` `label`.
          type: string
        name:
          description: The `OutputSchemaParameters` `name`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/OutputSchemaParametersType'
        value:
          description: The `OutputSchemaParameters` `value`.
      required:
        - name
        - type
      type: object
    OutputSchema:
      description: A list of output parameters for the workflow.
      properties:
        parameters:
          description: The `OutputSchema` `parameters`.
          items:
            $ref: '#/components/schemas/OutputSchemaParameters'
          type: array
      type: object
    CompletionConditionOperator:
      description: The definition of `CompletionConditionOperator` object.
      enum:
        - OPERATOR_EQUAL
        - OPERATOR_NOT_EQUAL
        - OPERATOR_GREATER_THAN
        - OPERATOR_LESS_THAN
        - OPERATOR_GREATER_THAN_OR_EQUAL_TO
        - OPERATOR_LESS_THAN_OR_EQUAL_TO
        - OPERATOR_CONTAINS
        - OPERATOR_DOES_NOT_CONTAIN
        - OPERATOR_IS_NULL
        - OPERATOR_IS_NOT_NULL
        - OPERATOR_IS_EMPTY
        - OPERATOR_IS_NOT_EMPTY
      example: OPERATOR_EQUAL
      type: string
      x-enum-varnames:
        - OPERATOR_EQUAL
        - OPERATOR_NOT_EQUAL
        - OPERATOR_GREATER_THAN
        - OPERATOR_LESS_THAN
        - OPERATOR_GREATER_THAN_OR_EQUAL_TO
        - OPERATOR_LESS_THAN_OR_EQUAL_TO
        - OPERATOR_CONTAINS
        - OPERATOR_DOES_NOT_CONTAIN
        - OPERATOR_IS_NULL
        - OPERATOR_IS_NOT_NULL
        - OPERATOR_IS_EMPTY
        - OPERATOR_IS_NOT_EMPTY
    CompletionCondition:
      description: The definition of `CompletionCondition` object.
      properties:
        operand1:
          description: The `CompletionCondition` `operand1`.
        operand2:
          description: The `CompletionCondition` `operand2`.
        operator:
          $ref: '#/components/schemas/CompletionConditionOperator'
      required:
        - operand1
        - operator
      type: object
    RetryStrategyKind:
      description: The definition of `RetryStrategyKind` object.
      enum:
        - RETRY_STRATEGY_LINEAR
      example: RETRY_STRATEGY_LINEAR
      type: string
      x-enum-varnames:
        - RETRY_STRATEGY_LINEAR
    RetryStrategyLinear:
      description: The definition of `RetryStrategyLinear` object.
      properties:
        interval:
          description: >-
            The `RetryStrategyLinear` `interval`. The expected format is the
            number of seconds ending with an s. For example, 1 day is 86400s
          example: ''
          type: string
        maxRetries:
          description: The `RetryStrategyLinear` `maxRetries`.
          example: 0
          format: double
          type: number
      required:
        - interval
        - maxRetries
      type: object
    RetryStrategy:
      description: The definition of `RetryStrategy` object.
      properties:
        kind:
          $ref: '#/components/schemas/RetryStrategyKind'
        linear:
          $ref: '#/components/schemas/RetryStrategyLinear'
      required:
        - kind
      type: object
    CompletionGate:
      description: Used to create conditions before running subsequent actions.
      properties:
        completionCondition:
          $ref: '#/components/schemas/CompletionCondition'
        retryStrategy:
          $ref: '#/components/schemas/RetryStrategy'
      required:
        - completionCondition
        - retryStrategy
      type: object
    StepDisplayBounds:
      description: The definition of `StepDisplayBounds` object.
      properties:
        x:
          description: The `bounds` `x`.
          format: double
          type: number
        'y':
          description: The `bounds` `y`.
          format: double
          type: number
      type: object
    StepDisplay:
      description: The definition of `StepDisplay` object.
      properties:
        bounds:
          $ref: '#/components/schemas/StepDisplayBounds'
      type: object
    ErrorHandler:
      description: Used to handle errors in an action.
      properties:
        fallbackStepName:
          description: The `ErrorHandler` `fallbackStepName`.
          example: ''
          type: string
        retryStrategy:
          $ref: '#/components/schemas/RetryStrategy'
      required:
        - retryStrategy
        - fallbackStepName
      type: object
    OutboundEdge:
      description: The definition of `OutboundEdge` object.
      properties:
        branchName:
          description: The `OutboundEdge` `branchName`.
          example: ''
          type: string
        nextStepName:
          description: The `OutboundEdge` `nextStepName`.
          example: ''
          type: string
      required:
        - nextStepName
        - branchName
      type: object
    Parameter:
      description: The definition of `Parameter` object.
      properties:
        name:
          description: The `Parameter` `name`.
          example: ''
          type: string
        value:
          description: The `Parameter` `value`.
      required:
        - name
        - value
      type: object
    ReadinessGateThresholdType:
      description: The definition of `ReadinessGateThresholdType` object.
      enum:
        - ANY
        - ALL
      example: ANY
      type: string
      x-enum-varnames:
        - ANY
        - ALL
    ReadinessGate:
      description: Used to merge multiple branches into a single branch.
      properties:
        thresholdType:
          $ref: '#/components/schemas/ReadinessGateThresholdType'
      required:
        - thresholdType
      type: object
    Step:
      description: A Step is a sub-component of a workflow. Each Step performs an action.
      properties:
        actionId:
          description: The unique identifier of an action.
          example: ''
          type: string
        completionGate:
          $ref: '#/components/schemas/CompletionGate'
        connectionLabel:
          description: The unique identifier of a connection defined in the spec.
          type: string
        display:
          $ref: '#/components/schemas/StepDisplay'
        errorHandlers:
          description: The `Step` `errorHandlers`.
          items:
            $ref: '#/components/schemas/ErrorHandler'
          type: array
        name:
          description: Name of the step.
          example: ''
          type: string
        outboundEdges:
          description: A list of subsequent actions to run.
          items:
            $ref: '#/components/schemas/OutboundEdge'
          type: array
        parameters:
          description: A list of inputs for an action.
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        readinessGate:
          $ref: '#/components/schemas/ReadinessGate'
      required:
        - name
        - actionId
      type: object
    TriggerRateLimit:
      description: Defines a rate limit for a trigger.
      properties:
        count:
          description: The `TriggerRateLimit` `count`.
          format: int64
          type: integer
        interval:
          description: >-
            The `TriggerRateLimit` `interval`. The expected format is the number
            of seconds ending with an s. For example, 1 day is 86400s
          type: string
      type: object
    APITrigger:
      description: Trigger a workflow from an API request. The workflow must be published.
      properties:
        rateLimit:
          $ref: '#/components/schemas/TriggerRateLimit'
      type: object
    StartStepNames:
      description: A list of steps that run first after a trigger fires.
      example:
        - ''
      items:
        description: The `StartStepNames` `items`.
        type: string
      type: array
    APITriggerWrapper:
      description: Schema for an API-based trigger.
      properties:
        apiTrigger:
          $ref: '#/components/schemas/APITrigger'
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - apiTrigger
      type: object
    AppTriggerWrapper:
      description: Schema for an App-based trigger.
      properties:
        appTrigger:
          description: Trigger a workflow from an App.
          type: object
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - appTrigger
      type: object
    CaseTrigger:
      description: >-
        Trigger a workflow from a Case. For automatic triggering a handle must
        be configured and the workflow must be published.
      properties:
        rateLimit:
          $ref: '#/components/schemas/TriggerRateLimit'
      type: object
    CaseTriggerWrapper:
      description: Schema for a Case-based trigger.
      properties:
        caseTrigger:
          $ref: '#/components/schemas/CaseTrigger'
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - caseTrigger
      type: object
    ChangeEventTriggerWrapper:
      description: Schema for a Change Event-based trigger.
      properties:
        changeEventTrigger:
          description: Trigger a workflow from a Change Event.
          type: object
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - changeEventTrigger
      type: object
    DatabaseMonitoringTriggerWrapper:
      description: Schema for a Database Monitoring-based trigger.
      properties:
        databaseMonitoringTrigger:
          description: Trigger a workflow from Database Monitoring.
          type: object
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - databaseMonitoringTrigger
      type: object
    DashboardTriggerWrapper:
      description: Schema for a Dashboard-based trigger.
      properties:
        dashboardTrigger:
          description: Trigger a workflow from a Dashboard.
          type: object
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - dashboardTrigger
      type: object
    GithubWebhookTrigger:
      description: >-
        Trigger a workflow from a GitHub webhook. To trigger a workflow from
        GitHub, you must set a `webhookSecret`. In your GitHub Webhook Settings,
        set the Payload URL to
        "base_url"/api/v2/workflows/"workflow_id"/webhook?orgId="org_id", select
        application/json for the content type, and be highly recommend enabling
        SSL verification for security. The workflow must be published.
      properties:
        rateLimit:
          $ref: '#/components/schemas/TriggerRateLimit'
      type: object
    GithubWebhookTriggerWrapper:
      description: Schema for a GitHub webhook-based trigger.
      properties:
        githubWebhookTrigger:
          $ref: '#/components/schemas/GithubWebhookTrigger'
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - githubWebhookTrigger
      type: object
    IncidentTrigger:
      description: >-
        Trigger a workflow from an Incident. For automatic triggering a handle
        must be configured and the workflow must be published.
      properties:
        rateLimit:
          $ref: '#/components/schemas/TriggerRateLimit'
      type: object
    IncidentTriggerWrapper:
      description: Schema for an Incident-based trigger.
      properties:
        incidentTrigger:
          $ref: '#/components/schemas/IncidentTrigger'
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - incidentTrigger
      type: object
    MonitorTrigger:
      description: >-
        Trigger a workflow from a Monitor. For automatic triggering a handle
        must be configured and the workflow must be published.
      properties:
        rateLimit:
          $ref: '#/components/schemas/TriggerRateLimit'
      type: object
    MonitorTriggerWrapper:
      description: Schema for a Monitor-based trigger.
      properties:
        monitorTrigger:
          $ref: '#/components/schemas/MonitorTrigger'
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - monitorTrigger
      type: object
    NotebookTriggerWrapper:
      description: Schema for a Notebook-based trigger.
      properties:
        notebookTrigger:
          description: Trigger a workflow from a Notebook.
          type: object
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - notebookTrigger
      type: object
    ScheduleTrigger:
      description: Trigger a workflow from a Schedule. The workflow must be published.
      properties:
        rruleExpression:
          description: Recurrence rule expression for scheduling.
          example: ''
          type: string
      required:
        - rruleExpression
      type: object
    ScheduleTriggerWrapper:
      description: Schema for a Schedule-based trigger.
      properties:
        scheduleTrigger:
          $ref: '#/components/schemas/ScheduleTrigger'
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - scheduleTrigger
      type: object
    SecurityTrigger:
      description: >-
        Trigger a workflow from a Security Signal or Finding. For automatic
        triggering a handle must be configured and the workflow must be
        published.
      properties:
        rateLimit:
          $ref: '#/components/schemas/TriggerRateLimit'
      type: object
    SecurityTriggerWrapper:
      description: Schema for a Security-based trigger.
      properties:
        securityTrigger:
          $ref: '#/components/schemas/SecurityTrigger'
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - securityTrigger
      type: object
    SelfServiceTriggerWrapper:
      description: Schema for a Self Service-based trigger.
      properties:
        selfServiceTrigger:
          description: Trigger a workflow from Self Service.
          type: object
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - selfServiceTrigger
      type: object
    SlackTriggerWrapper:
      description: Schema for a Slack-based trigger.
      properties:
        slackTrigger:
          description: Trigger a workflow from Slack. The workflow must be published.
          type: object
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - slackTrigger
      type: object
    SoftwareCatalogTriggerWrapper:
      description: Schema for a Software Catalog-based trigger.
      properties:
        softwareCatalogTrigger:
          description: Trigger a workflow from Software Catalog.
          type: object
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
      required:
        - softwareCatalogTrigger
      type: object
    WorkflowTriggerWrapper:
      description: Schema for a Workflow-based trigger.
      properties:
        startStepNames:
          $ref: '#/components/schemas/StartStepNames'
        workflowTrigger:
          description: >-
            Trigger a workflow from the Datadog UI. Only required if no other
            trigger exists.
          type: object
      required:
        - workflowTrigger
      type: object
    Trigger:
      description: One of the triggers that can start the execution of a workflow.
      oneOf:
        - $ref: '#/components/schemas/APITriggerWrapper'
        - $ref: '#/components/schemas/AppTriggerWrapper'
        - $ref: '#/components/schemas/CaseTriggerWrapper'
        - $ref: '#/components/schemas/ChangeEventTriggerWrapper'
        - $ref: '#/components/schemas/DatabaseMonitoringTriggerWrapper'
        - $ref: '#/components/schemas/DashboardTriggerWrapper'
        - $ref: '#/components/schemas/GithubWebhookTriggerWrapper'
        - $ref: '#/components/schemas/IncidentTriggerWrapper'
        - $ref: '#/components/schemas/MonitorTriggerWrapper'
        - $ref: '#/components/schemas/NotebookTriggerWrapper'
        - $ref: '#/components/schemas/ScheduleTriggerWrapper'
        - $ref: '#/components/schemas/SecurityTriggerWrapper'
        - $ref: '#/components/schemas/SelfServiceTriggerWrapper'
        - $ref: '#/components/schemas/SlackTriggerWrapper'
        - $ref: '#/components/schemas/SoftwareCatalogTriggerWrapper'
        - $ref: '#/components/schemas/WorkflowTriggerWrapper'
    Spec:
      description: The spec defines what the workflow does.
      properties:
        annotations:
          description: >-
            A list of annotations used in the workflow. These are like sticky
            notes for your workflow!
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        connectionEnvs:
          description: A list of connections or connection groups used in the workflow.
          items:
            $ref: '#/components/schemas/ConnectionEnv'
          type: array
        handle:
          description: >-
            Unique identifier used to trigger workflows automatically in
            Datadog.
          type: string
        inputSchema:
          $ref: '#/components/schemas/InputSchema'
        outputSchema:
          $ref: '#/components/schemas/OutputSchema'
        steps:
          description: >-
            A `Step` is a sub-component of a workflow. Each `Step` performs an
            action.
          items:
            $ref: '#/components/schemas/Step'
          type: array
        triggers:
          description: >-
            The list of triggers that activate this workflow. At least one
            trigger is required, and each trigger type may appear at most once.
          items:
            $ref: '#/components/schemas/Trigger'
          type: array
      type: object
    WorkflowDataAttributes:
      description: The definition of `WorkflowDataAttributes` object.
      properties:
        createdAt:
          description: When the workflow was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the workflow.
          type: string
        name:
          description: Name of the workflow.
          example: ''
          type: string
        published:
          description: >-
            Set the workflow to published or unpublished. Workflows in an
            unpublished state will only be executable via manual runs. Automatic
            triggers such as Schedule will not execute the workflow until it is
            published.
          type: boolean
        spec:
          $ref: '#/components/schemas/Spec'
        tags:
          description: Tags of the workflow.
          items:
            type: string
          type: array
        updatedAt:
          description: When the workflow was last updated.
          format: date-time
          readOnly: true
          type: string
        webhookSecret:
          description: >-
            If a Webhook trigger is defined on this workflow, a webhookSecret is
            required and should be provided here.
          type: string
          writeOnly: true
      required:
        - name
        - spec
      type: object
    WorkflowUserRelationshipType:
      description: The definition of `WorkflowUserRelationshipType` object.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    WorkflowUserRelationshipData:
      description: The definition of `WorkflowUserRelationshipData` object.
      properties:
        id:
          description: The user identifier
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/WorkflowUserRelationshipType'
      required:
        - type
        - id
      type: object
    WorkflowUserRelationship:
      description: The definition of `WorkflowUserRelationship` object.
      properties:
        data:
          $ref: '#/components/schemas/WorkflowUserRelationshipData'
      type: object
    WorkflowDataRelationships:
      description: The definition of `WorkflowDataRelationships` object.
      properties:
        creator:
          $ref: '#/components/schemas/WorkflowUserRelationship'
        owner:
          $ref: '#/components/schemas/WorkflowUserRelationship'
      readOnly: true
      type: object
    WorkflowDataType:
      description: The definition of `WorkflowDataType` object.
      enum:
        - workflows
      example: workflows
      type: string
      x-enum-varnames:
        - WORKFLOWS
    WorkflowData:
      description: Data related to the workflow.
      properties:
        attributes:
          $ref: '#/components/schemas/WorkflowDataAttributes'
        id:
          description: The workflow identifier
          readOnly: true
          type: string
        relationships:
          $ref: '#/components/schemas/WorkflowDataRelationships'
        type:
          $ref: '#/components/schemas/WorkflowDataType'
      required:
        - type
        - attributes
      type: object
    CreateWorkflowRequest:
      description: A request object for creating a new workflow.
      example:
        data:
          attributes:
            description: A sample workflow.
            name: Example Workflow
            published: true
            spec:
              annotations:
                - display:
                    bounds:
                      height: 150
                      width: 300
                      x: -375
                      'y': -0.5
                  id: 99999999-9999-9999-9999-999999999999
                  markdownTextAnnotation:
                    text: Example annotation.
              connectionEnvs:
                - connections:
                    - connectionId: 11111111-1111-1111-1111-111111111111
                      label: INTEGRATION_DATADOG
                  env: default
              handle: my-handle
              inputSchema:
                parameters:
                  - defaultValue: default
                    name: input
                    type: STRING
              outputSchema:
                parameters:
                  - name: output
                    type: ARRAY_OBJECT
                    value: '{{ Steps.Step1 }}'
              steps:
                - actionId: com.datadoghq.dd.monitor.listMonitors
                  connectionLabel: INTEGRATION_DATADOG
                  name: Step1
                  outboundEdges:
                    - branchName: main
                      nextStepName: Step2
                  parameters:
                    - name: tags
                      value: service:monitoring
                - actionId: com.datadoghq.core.noop
                  name: Step2
              triggers:
                - monitorTrigger:
                    rateLimit:
                      count: 1
                      interval: 3600s
                  startStepNames:
                    - Step1
                - githubWebhookTrigger: {}
                  startStepNames:
                    - Step1
            tags:
              - team:infra
              - service:monitoring
              - foo:bar
          type: workflows
      properties:
        data:
          $ref: '#/components/schemas/WorkflowData'
      required:
        - data
      type: object
    CreateWorkflowResponse:
      description: The response object after creating a new workflow.
      properties:
        data:
          $ref: '#/components/schemas/WorkflowData'
      required:
        - data
      type: object
    GetWorkflowResponse:
      description: The response object after getting a workflow.
      properties:
        data:
          $ref: '#/components/schemas/WorkflowData'
      type: object
    WorkflowDataUpdateAttributes:
      description: The definition of `WorkflowDataUpdateAttributes` object.
      properties:
        createdAt:
          description: When the workflow was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the workflow.
          type: string
        name:
          description: Name of the workflow.
          type: string
        published:
          description: >-
            Set the workflow to published or unpublished. Workflows in an
            unpublished state will only be executable via manual runs. Automatic
            triggers such as Schedule will not execute the workflow until it is
            published.
          type: boolean
        spec:
          $ref: '#/components/schemas/Spec'
        tags:
          description: Tags of the workflow.
          items:
            type: string
          type: array
        updatedAt:
          description: When the workflow was last updated.
          format: date-time
          readOnly: true
          type: string
        webhookSecret:
          description: >-
            If a Webhook trigger is defined on this workflow, a webhookSecret is
            required and should be provided here.
          type: string
          writeOnly: true
      type: object
    WorkflowDataUpdate:
      description: Data related to the workflow being updated.
      properties:
        attributes:
          $ref: '#/components/schemas/WorkflowDataUpdateAttributes'
        id:
          description: The workflow identifier
          type: string
        relationships:
          $ref: '#/components/schemas/WorkflowDataRelationships'
        type:
          $ref: '#/components/schemas/WorkflowDataType'
      required:
        - type
        - attributes
      type: object
    UpdateWorkflowRequest:
      description: A request object for updating an existing workflow.
      example:
        data:
          attributes:
            description: A sample workflow.
            name: Example Workflow
            published: true
            spec:
              annotations:
                - display:
                    bounds:
                      height: 150
                      width: 300
                      x: -375
                      'y': -0.5
                  id: 99999999-9999-9999-9999-999999999999
                  markdownTextAnnotation:
                    text: Example annotation.
              connectionEnvs:
                - connections:
                    - connectionId: 11111111-1111-1111-1111-111111111111
                      label: INTEGRATION_DATADOG
                  env: default
              handle: my-handle
              inputSchema:
                parameters:
                  - defaultValue: default
                    name: input
                    type: STRING
              outputSchema:
                parameters:
                  - name: output
                    type: ARRAY_OBJECT
                    value: '{{ Steps.Step1 }}'
              steps:
                - actionId: com.datadoghq.dd.monitor.listMonitors
                  connectionLabel: INTEGRATION_DATADOG
                  name: Step1
                  outboundEdges:
                    - branchName: main
                      nextStepName: Step2
                  parameters:
                    - name: tags
                      value: service:monitoring
                - actionId: com.datadoghq.core.noop
                  name: Step2
              triggers:
                - monitorTrigger:
                    rateLimit:
                      count: 1
                      interval: 3600s
                  startStepNames:
                    - Step1
                - githubWebhookTrigger: {}
                  startStepNames:
                    - Step1
            tags:
              - team:infra
              - service:monitoring
              - foo:bar
          id: 22222222-2222-2222-2222-222222222222
          type: workflows
      properties:
        data:
          $ref: '#/components/schemas/WorkflowDataUpdate'
      required:
        - data
      type: object
    UpdateWorkflowResponse:
      description: The response object after updating a workflow.
      properties:
        data:
          $ref: '#/components/schemas/WorkflowDataUpdate'
      type: object
    WorkflowInstanceListItem:
      additionalProperties: {}
      description: An item in the workflow instances list.
      properties:
        id:
          description: The ID of the workflow instance
          type: string
      type: object
    WorkflowListInstancesResponseMetaPage:
      additionalProperties: {}
      description: Page information for the list instances response.
      properties:
        totalCount:
          description: The total count of items.
          format: int64
          type: integer
      type: object
    WorkflowListInstancesResponseMeta:
      additionalProperties: {}
      description: Metadata about the instances list
      properties:
        page:
          $ref: '#/components/schemas/WorkflowListInstancesResponseMetaPage'
      type: object
    WorkflowListInstancesResponse:
      additionalProperties: {}
      description: Response returned when listing workflow instances.
      properties:
        data:
          description: A list of workflow instances.
          items:
            $ref: '#/components/schemas/WorkflowInstanceListItem'
          type: array
        meta:
          $ref: '#/components/schemas/WorkflowListInstancesResponseMeta'
      type: object
    WorkflowInstanceCreateMeta:
      description: Additional information for creating a workflow instance.
      properties:
        payload:
          additionalProperties: {}
          description: The input parameters to the workflow.
          type: object
      type: object
    WorkflowInstanceCreateRequest:
      description: Request used to create a workflow instance.
      properties:
        meta:
          $ref: '#/components/schemas/WorkflowInstanceCreateMeta'
      type: object
    WorkflowInstanceCreateResponseData:
      additionalProperties: {}
      description: Data about the created workflow instance.
      properties:
        id:
          description: >-
            The ID of the workflow execution. It can be used to fetch the
            execution status.
          type: string
      type: object
    WorkflowInstanceCreateResponse:
      additionalProperties: {}
      description: Response returned upon successful workflow instance creation.
      properties:
        data:
          $ref: '#/components/schemas/WorkflowInstanceCreateResponseData'
      type: object
    WorklflowGetInstanceResponseDataAttributes:
      additionalProperties: {}
      description: The attributes of the instance response data.
      properties:
        id:
          description: The id of the instance.
          type: string
      type: object
    WorklflowGetInstanceResponseData:
      additionalProperties: {}
      description: The data of the instance response.
      properties:
        attributes:
          $ref: '#/components/schemas/WorklflowGetInstanceResponseDataAttributes'
      type: object
    WorklflowGetInstanceResponse:
      additionalProperties: {}
      description: The state of the given workflow instance.
      properties:
        data:
          $ref: '#/components/schemas/WorklflowGetInstanceResponseData'
      type: object
    WorklflowCancelInstanceResponseData:
      description: Data about the canceled instance.
      properties:
        id:
          description: The id of the canceled instance
          type: string
      type: object
    WorklflowCancelInstanceResponse:
      description: Information about the canceled instance.
      properties:
        data:
          $ref: '#/components/schemas/WorklflowCancelInstanceResponseData'
      type: object
  responses:
    TooManyRequestsResponsev1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponsev1'
      description: Too many requests
    NotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Authorized
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Conflict
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Unauthorized
    ForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Forbidden
    PreconditionFailedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Failed Precondition
    FindingsBadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: >-
        Bad Request: The server cannot process the request due to invalid syntax
        in the request.
    FindingsForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Forbidden: Access denied'
    FindingsNotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Not Found: The requested finding cannot be found.'
    FindingsTooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Too many requests: The rate limit set by the API has been exceeded.'
    ConcurrentModificationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Concurrent Modification
    NotificationRulesList:
      content:
        application/json:
          schema:
            properties:
              data:
                items:
                  $ref: '#/components/schemas/NotificationRule'
                type: array
            type: object
      description: The list of notification rules.
    UnprocessableEntityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: The server cannot process the request because it contains invalid data.
    SpansBadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: Bad Request.
    SpansForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Forbidden: Access denied.'
    SpansUnprocessableEntityResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: Unprocessable Entity.
    SpansTooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Too many requests: The rate limit set by the API has been exceeded.'
  parameters:
    SlackAccountNamePathParameter:
      description: Your Slack account name.
      in: path
      name: account_name
      required: true
      schema:
        type: string
    SlackChannelNamePathParameter:
      description: The name of the Slack channel being operated on.
      in: path
      name: channel_name
      required: true
      schema:
        type: string
    SignalID:
      description: The ID of the signal.
      in: path
      name: signal_id
      required: true
      schema:
        type: string
    ConnectionId:
      description: The ID of the action connection
      in: path
      name: connection_id
      required: true
      schema:
        type: string
    AwsAccountId:
      description: The ID of an AWS account.
      example: '123456789012'
      in: path
      name: account_id
      required: true
      schema:
        type: string
    OnDemandTaskId:
      description: The UUID of the task.
      example: 6d09294c-9ad9-42fd-a759-a0c1599b4828
      in: path
      name: task_id
      required: true
      schema:
        type: string
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: page[size]
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    PageNumber:
      description: Specific page number to return.
      in: query
      name: page[number]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    APIKeysSortParameter:
      description: |-
        API key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/APIKeysSort'
    APIKeyFilterParameter:
      description: Filter API keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    APIKeyFilterCreatedAtStartParameter:
      description: Only include API keys created on or after the specified date.
      in: query
      name: filter[created_at][start]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterCreatedAtEndParameter:
      description: Only include API keys created on or before the specified date.
      in: query
      name: filter[created_at][end]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtStartParameter:
      description: Only include API keys modified on or after the specified date.
      in: query
      name: filter[modified_at][start]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtEndParameter:
      description: Only include API keys modified on or before the specified date.
      in: query
      name: filter[modified_at][end]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyIncludeParameter:
      description: >-
        Comma separated list of resource paths for related resources to include
        in the response. Supported resource paths are `created_by` and
        `modified_by`.
      in: query
      name: include
      required: false
      schema:
        example: created_by,modified_by
        type: string
    APIKeyReadConfigReadEnabledParameter:
      description: Filter API keys by remote config read enabled status.
      in: query
      name: filter[remote_config_read_enabled]
      required: false
      schema:
        type: boolean
    APIKeyCategoryParameter:
      description: Filter API keys by category.
      in: query
      name: filter[category]
      required: false
      schema:
        type: string
    APIKeyId:
      description: The ID of the API key.
      in: path
      name: api_key_id
      required: true
      schema:
        type: string
    SpansMetricIDParameter:
      description: The name of the span-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    RetentionFilterIdParam:
      description: The ID of the retention filter.
      in: path
      name: filter_id
      required: true
      schema:
        type: string
    ApplicationKeysSortParameter:
      description: |-
        Application key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationKeysSort'
    ApplicationKeyFilterParameter:
      description: Filter application keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    ApplicationKeyFilterCreatedAtStartParameter:
      description: Only include application keys created on or after the specified date.
      in: query
      name: filter[created_at][start]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterCreatedAtEndParameter:
      description: Only include application keys created on or before the specified date.
      in: query
      name: filter[created_at][end]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyIncludeParameter:
      description: >-
        Resource path for related resources to include in the response. Only
        `owned_by` is supported.
      in: query
      name: include
      required: false
      schema:
        example: owned_by
        type: string
    ApplicationKeyID:
      description: The ID of the application key.
      in: path
      name: app_key_id
      required: true
      schema:
        type: string
    AuthNMappingID:
      description: The UUID of the AuthN Mapping.
      in: path
      name: authn_mapping_id
      required: true
      schema:
        type: string
    CaseSortableFieldParameter:
      description: Specify which field to sort
      in: query
      name: sort[field]
      required: false
      schema:
        $ref: '#/components/schemas/CaseSortableField'
    ProjectIDPathParameter:
      description: Project UUID
      example: e555e290-ed65-49bd-ae18-8acbfcf18db7
      in: path
      name: project_id
      required: true
      schema:
        type: string
    CaseIDPathParameter:
      description: Case's UUID or key
      example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
      in: path
      name: case_id
      required: true
      schema:
        type: string
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: page[offset]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    FilterByID:
      description: Filter entities by UUID.
      explode: true
      in: query
      name: filter[id]
      required: false
      schema:
        type: string
    FilterByRef:
      description: Filter entities by reference
      explode: true
      in: query
      name: filter[ref]
      required: false
      schema:
        type: string
    FilterByName:
      description: Filter entities by name.
      explode: true
      in: query
      name: filter[name]
      required: false
      schema:
        type: string
    FilterByKind:
      description: Filter entities by kind.
      explode: true
      in: query
      name: filter[kind]
      required: false
      schema:
        type: string
    FilterByOwner:
      description: Filter entities by owner.
      explode: true
      in: query
      name: filter[owner]
      required: false
      schema:
        type: string
    FilterByRelationType:
      description: Filter entities by relation type.
      explode: true
      in: query
      name: filter[relation][type]
      required: false
      schema:
        $ref: '#/components/schemas/RelationType'
    FilterByExcludeSnapshot:
      description: Filter entities by excluding snapshotted entities.
      in: query
      name: filter[exclude_snapshot]
      required: false
      schema:
        type: string
    Include:
      description: Include relationship data.
      explode: true
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncludeType'
    EntityID:
      description: UUID or Entity Ref.
      in: path
      name: entity_id
      required: true
      schema:
        example: service:myservice
        type: string
    CloudAccountID:
      description: Cloud Account id.
      in: path
      name: cloud_account_id
      required: true
      schema:
        type: string
    FileID:
      description: File ID.
      in: path
      name: file_id
      required: true
      schema:
        type: string
    ProductName:
      description: Name of the product to be deleted, either `logs` or `rum`.
      in: path
      name: product
      required: true
      schema:
        type: string
    RequestId:
      description: ID of the deletion request.
      in: path
      name: id
      required: true
      schema:
        type: string
    IncidentIncludeQueryParameter:
      description: >-
        Specifies which types of related objects should be included in the
        response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentRelatedObject'
        type: array
    IncidentTypeIncludeDeletedParameter:
      description: Include deleted incident types in the response.
      in: query
      name: include_deleted
      schema:
        default: false
        type: boolean
    IncidentTypeIDPathParameter:
      description: The UUID of the incident type.
      in: path
      name: incident_type_id
      required: true
      schema:
        type: string
    IncidentSearchIncludeQueryParameter:
      description: >-
        Specifies which types of related objects should be included in the
        response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentSearchQueryQueryParameter:
      description: >-
        Specifies which incidents should be returned. The query can contain any
        number of incident facets

        joined by `ANDs`, along with multiple values for each of those facets
        joined by `OR`s. For

        example: `state:active AND severity:(SEV-2 OR SEV-1)`.
      explode: false
      in: query
      name: query
      required: true
      schema:
        type: string
    IncidentSearchSortQueryParameter:
      description: Specifies the order of returned incidents.
      explode: false
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/IncidentSearchSortOrder'
    IncidentIDPathParameter:
      description: The UUID of the incident.
      in: path
      name: incident_id
      required: true
      schema:
        type: string
    IncidentAttachmentIncludeQueryParameter:
      description: Specifies which types of related objects are included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentRelatedObject'
        type: array
    IncidentAttachmentFilterQueryParameter:
      description: Specifies which types of attachments are included in the response.
      explode: false
      in: query
      name: filter[attachment_type]
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentAttachmentType'
        type: array
    IncidentIntegrationMetadataIDPathParameter:
      description: The UUID of the incident integration metadata.
      in: path
      name: integration_metadata_id
      required: true
      schema:
        type: string
    IncidentTodoIDPathParameter:
      description: The UUID of the incident todo.
      in: path
      name: todo_id
      required: true
      schema:
        type: string
    AWSAccountConfigIDPathParameter:
      description: >-
        Unique Datadog ID of the AWS Account Integration Config. To get the
        config ID for an account, use the

        [List all AWS
        integrations](https://docs.datadoghq.com/api/latest/aws-integration/#list-all-aws-integrations)
        endpoint and query by AWS Account ID.
      in: path
      name: aws_account_config_id
      required: true
      schema:
        type: string
    GCPSTSServiceAccountID:
      description: Your GCP STS enabled service account's unique ID.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    MicrosoftTeamsTenantNamePathParameter:
      description: Your tenant name.
      in: path
      name: tenant_name
      required: true
      schema:
        type: string
    MicrosoftTeamsTeamNamePathParameter:
      description: Your team name.
      in: path
      name: team_name
      required: true
      schema:
        type: string
    MicrosoftTeamsChannelNamePathParameter:
      description: Your channel name.
      in: path
      name: channel_name
      required: true
      schema:
        type: string
    MicrosoftTeamsTenantIDQueryParameter:
      description: Your tenant id.
      in: query
      name: tenant_id
      required: false
      schema:
        type: string
    MicrosoftTeamsHandleNameQueryParameter:
      description: Your tenant-based handle name.
      in: query
      name: name
      required: false
      schema:
        type: string
    MicrosoftTeamsTenantBasedHandleIDPathParameter:
      description: Your tenant-based handle id.
      in: path
      name: handle_id
      required: true
      schema:
        type: string
    MicrosoftTeamsWorkflowsWebhookHandleNameQueryParameter:
      description: Your Workflows webhook handle name.
      in: query
      name: name
      required: false
      schema:
        type: string
    MicrosoftTeamsWorkflowsWebhookHandleIDPathParameter:
      description: Your Workflows webhook handle id.
      in: path
      name: handle_id
      required: true
      schema:
        type: string
    OpsgenieServiceIDPathParameter:
      description: The UUID of the service.
      in: path
      name: integration_service_id
      required: true
      schema:
        type: string
    ConfluentAccountID:
      description: Confluent Account ID.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    ConfluentResourceID:
      description: Confluent Account Resource ID.
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    FastlyAccountID:
      description: Fastly Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    FastlyServiceID:
      description: Fastly Service ID.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    ArchiveID:
      description: The ID of the archive.
      in: path
      name: archive_id
      required: true
      schema:
        type: string
    CustomDestinationId:
      description: The ID of the custom destination.
      in: path
      name: custom_destination_id
      required: true
      schema:
        type: string
    MetricID:
      description: The name of the log-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    MetricName:
      description: The name of the metric.
      example: dist.http.endpoint.request
      in: path
      name: metric_name
      required: true
      schema:
        type: string
    OrgConfigName:
      description: The name of an Org Config.
      in: path
      name: org_config_name
      required: true
      schema:
        example: monitor_timezone
        type: string
    ApplicationSecurityWafCustomRuleIDParam:
      description: The ID of the custom rule.
      example: 3b5-v82-ns6
      in: path
      name: custom_rule_id
      required: true
      schema:
        type: string
    ApplicationSecurityWafExclusionFilterID:
      description: The identifier of the WAF exclusion filter.
      example: 3b5-v82-ns6
      in: path
      name: exclusion_filter_id
      required: true
      schema:
        type: string
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the Agent rule.
      example: 3b5-v82-ns6
      in: path
      name: agent_rule_id
      required: true
      schema:
        type: string
    ResourceID:
      description: >-
        Identifier, formatted as `type:id`. Supported types: `connection`,
        `dashboard`, `integration-account`, `integration-service`,
        `integration-webhook`, `notebook`, `reference-table`, `security-rule`,
        `slo`, `workflow`, `app-builder-app`, `connection`, `connection-group`.
      example: dashboard:abc-def-ghi
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    RoleID:
      description: The unique identifier of the role.
      in: path
      name: role_id
      required: true
      schema:
        type: string
    RumApplicationIDParameter:
      description: RUM application ID.
      in: path
      name: app_id
      required: true
      schema:
        type: string
    RumRetentionFilterIDParameter:
      description: Retention filter ID.
      in: path
      name: rf_id
      required: true
      schema:
        type: string
    RumMetricIDParameter:
      description: The name of the rum-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    RuleId:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SecurityFilterID:
      description: The ID of the security filter.
      in: path
      name: security_filter_id
      required: true
      schema:
        type: string
    SecurityMonitoringSuppressionID:
      description: The ID of the suppression rule
      in: path
      name: suppression_id
      required: true
      schema:
        type: string
    SecurityMonitoringRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SensitiveDataScannerGroupID:
      description: The ID of a group of rules.
      in: path
      name: group_id
      required: true
      schema:
        type: string
    SensitiveDataScannerRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    ServiceAccountID:
      description: The ID of the service account.
      in: path
      name: service_account_id
      required: true
      schema:
        example: 00000000-0000-1234-0000-000000000000
        type: string
    IncidentServiceIncludeQueryParameter:
      description: >-
        Specifies which types of related objects should be included in the
        response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentServiceSearchQueryParameter:
      description: A search query that filters services by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleServiceName
        type: string
    SchemaVersion:
      description: The schema version desired in the response.
      in: query
      name: schema_version
      required: false
      schema:
        $ref: '#/components/schemas/ServiceDefinitionSchemaVersions'
    ServiceName:
      description: The name of the service.
      in: path
      name: service_name
      required: true
      schema:
        example: my-service
        type: string
    IncidentServiceIDPathParameter:
      description: The ID of the incident service.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    HistoricalJobID:
      description: The ID of the job.
      in: path
      name: job_id
      required: true
      schema:
        type: string
    ReportID:
      description: The ID of the report job.
      in: path
      name: report_id
      required: true
      schema:
        type: string
    IncidentTeamIncludeQueryParameter:
      description: >-
        Specifies which types of related objects should be included in the
        response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentTeamSearchQueryParameter:
      description: A search query that filters teams by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleTeamName
        type: string
    IncidentTeamIDPathParameter:
      description: The ID of the incident team.
      in: path
      name: team_id
      required: true
      schema:
        type: string
    UserID:
      description: The ID of the user.
      in: path
      name: user_id
      required: true
      schema:
        example: 00000000-0000-9999-0000-000000000000
        type: string
    WorkflowId:
      description: The ID of the workflow.
      in: path
      name: workflow_id
      required: true
      schema:
        type: string
    InstanceId:
      description: The ID of the workflow instance.
      in: path
      name: instance_id
      required: true
      schema:
        type: string
x-tagGroups:
  - name: Datadog API V1 Collection
    tags:
      - AWS Integration v1
      - AWS Logs Integration v1
      - Authentication
      - Azure Integration
      - Dashboard Lists v1
      - Dashboards
      - Downtimes v1
      - Events v1
      - GCP Integration v1
      - Hosts
      - IP Ranges
      - Key Management v1
      - Logs v1
      - Logs Indexes
      - Logs Pipelines
      - Metrics v1
      - Monitors v1
      - Notebooks
      - Organizations v1
      - PagerDuty Integration
      - Security Monitoring v1
      - Service Checks
      - Service Level Objective Corrections
      - Service Level Objectives v1
      - Slack Integration
      - Snapshots
      - Synthetics v1
      - Tags
      - Usage Metering v1
      - Users v1
      - Webhooks Integration
  - name: Datadog API V2 Collection
    tags:
      - API Management
      - APM Retention Filters
      - AWS Integration
      - AWS Logs Integration
      - Action Connection
      - Agentless Scanning
      - App Builder
      - Application Security
      - Audit
      - AuthN Mappings
      - CI Visibility Pipelines
      - CI Visibility Tests
      - CSM Agents
      - CSM Coverage Analysis
      - CSM Threats
      - Case Management
      - Cloud Cost Management
      - Cloud Network Monitoring
      - Cloudflare Integration
      - Confluent Cloud
      - Container Images
      - Containers
      - DORA Metrics
      - Dashboard Lists
      - Data Deletion
      - Domain Allowlist
      - Downtimes
      - Events
      - Fastly Integration
      - GCP Integration
      - IP Allowlist
      - Incident Services
      - Incident Teams
      - Incidents
      - Key Management
      - Logs
      - Logs Archives
      - Logs Custom Destinations
      - Logs Metrics
      - Metrics
      - Microsoft Teams Integration
      - Monitors
      - Network Device Monitoring
      - Observability Pipelines
      - Okta Integration
      - On-Call
      - Opsgenie Integration
      - Organizations
      - Powerpack
      - Processes
      - RUM
      - Restriction Policies
      - Roles
      - Rum Metrics
      - Rum Retention Filters
      - Security Monitoring
      - Sensitive Data Scanner
      - Service Accounts
      - Service Definition
      - Service Level Objectives
      - Service Scorecards
      - Software Catalog
      - Spans
      - Spans Metrics
      - Synthetics
      - Teams
      - Usage Metering
      - Users
      - Workflow Automation
