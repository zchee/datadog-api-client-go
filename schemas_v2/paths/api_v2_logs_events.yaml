get:
  description: >-
    List endpoint returns logs that match a log search query.

    [Results are paginated][1].


    Use this endpoint to search and filter your logs.


    **If you are considering archiving logs for your organization,

    consider use of the Datadog archive capabilities instead of the log list
    API.

    See [Datadog Logs Archive documentation][2].**


    [1]: /logs/guide/collect-multiple-logs-with-pagination

    [2]: https://docs.datadoghq.com/logs/archives
  operationId: ListLogsGet
  parameters:
    - description: Search query following logs syntax.
      example: '@datacenter:us @role:db'
      in: query
      name: filter[query]
      required: false
      schema:
        type: string
    - description: |-
        For customers with multiple indexes, the indexes to search.
        Defaults to '*' which means all indexes
      example:
        - main
        - web
      explode: false
      in: query
      name: filter[indexes]
      required: false
      schema:
        items:
          description: The name of a log index.
          type: string
        type: array
    - description: Minimum timestamp for requested logs.
      example: '2019-01-02T09:42:36.320Z'
      in: query
      name: filter[from]
      required: false
      schema:
        format: date-time
        type: string
    - description: Maximum timestamp for requested logs.
      example: '2019-01-03T09:42:36.320Z'
      in: query
      name: filter[to]
      required: false
      schema:
        format: date-time
        type: string
    - description: Specifies the storage type to be used
      example: indexes
      in: query
      name: filter[storage_tier]
      required: false
      schema:
        $ref: ../components/schemas/LogsStorageTier.yaml
    - description: Order of logs in results.
      in: query
      name: sort
      required: false
      schema:
        $ref: ../components/schemas/LogsSort.yaml
    - description: List following results with a cursor provided in the previous query.
      example: >-
        eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      in: query
      name: page[cursor]
      required: false
      schema:
        type: string
    - description: Maximum number of logs in the response.
      example: 25
      in: query
      name: page[limit]
      required: false
      schema:
        default: 10
        format: int32
        maximum: 1000
        type: integer
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/LogsListResponse.yaml
      description: OK
    '400':
      $ref: ../components/responses/BadRequestResponse.yaml
    '403':
      $ref: ../components/responses/NotAuthorizedResponse.yaml
    '429':
      $ref: ../components/responses/TooManyRequestsResponse.yaml
  summary: Search logs (GET)
  tags:
    - Logs
  x-pagination:
    cursorParam: page[cursor]
    cursorPath: meta.page.after
    limitParam: page[limit]
    resultsPath: data
  x-permission:
    operator: OR
    permissions:
      - logs_read_data
