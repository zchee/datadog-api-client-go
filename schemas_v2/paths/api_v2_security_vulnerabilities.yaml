get:
  description: >
    Get a list of vulnerabilities.


    ### Pagination


    Pagination is enabled by default in both `vulnerabilities` and `assets`. The
    size of the page varies depending on the endpoint and cannot be modified. To
    automate the request of the next page, you can use the links section in the
    response.


    This endpoint will return paginated responses. The pages are stored in the
    links section of the response:


    ```JSON

    {
      "data": [...],
      "meta": {...},
      "links": {
        "self": "https://.../api/v2/security/vulnerabilities",
        "first": "https://.../api/v2/security/vulnerabilities?page[number]=1&page[token]=abc",
        "last": "https://.../api/v2/security/vulnerabilities?page[number]=43&page[token]=abc",
        "next": "https://.../api/v2/security/vulnerabilities?page[number]=2&page[token]=abc"
      }
    }

    ```



    - `links.previous` is empty if the first page is requested.

    - `links.next` is empty if the last page is requested.


    #### Token


    Vulnerabilities can be created, updated or deleted at any point in time.


    Upon the first request, a token is created to ensure consistency across
    subsequent paginated requests.


    A token is valid only for 24 hours.


    #### First request


    We consider a request to be the first request when there is no `page[token]`
    parameter.


    The response of this first request contains the newly created token in the
    `links` section.


    This token can then be used in the subsequent paginated requests.


    #### Subsequent requests


    Any request containing valid `page[token]` and `page[number]` parameters
    will be considered a subsequent request.


    If the `token` is invalid, a `404` response will be returned.


    If the page `number` is invalid, a `400` response will be returned.


    ### Filtering


    The request can include some filter parameters to filter the data to be
    retrieved. The format of the filter parameters follows the [JSON:API
    format](https://jsonapi.org/format/#fetching-filtering):
    `filter[$prop_name]`, where `prop_name` is the property name in the entity
    being filtered by.


    All filters can include multiple values, where data will be filtered with an
    OR clause: `filter[title]=Title1,Title2` will filter all vulnerabilities
    where title is equal to `Title1` OR `Title2`.


    String filters are case sensitive.


    Boolean filters accept `true` or `false` as values.


    Number filters must include an operator as a second filter input:
    `filter[$prop_name][$operator]`. For example, for the vulnerabilities
    endpoint: `filter[cvss.base.score][lte]=8`.


    Available operators are: `eq` (==), `lt` (<), `lte` (<=), `gt` (>) and `gte`
    (>=).


    ### Metadata


    Following [JSON:API format](https://jsonapi.org/format/#document-meta),
    object including non-standard meta-information.


    This endpoint includes the meta member in the response. For more details on
    each of the properties included in this section, check the endpoints
    response tables.


    ```JSON

    {
      "data": [...],
      "meta": {
        "total": 1500,
        "count": 18732,
        "token": "some_token"
      },
      "links": {...}
    }

    ```
  operationId: ListVulnerabilities
  parameters:
    - description: >-
        Its value must come from the `links` section of the response of the
        first request. Do not manually edit it.
      example: >-
        b82cef018aab81ed1d4bb4xb35xxfc065da7efa685fbcecdbd338f3015e3afabbbfa3a911b4984_721ee28a-zecb-4e45-9960-c42065b574f4
      in: query
      name: page[token]
      required: false
      schema:
        type: string
    - description: The page number to be retrieved. It should be equal or greater than `1`
      example: 1
      in: query
      name: page[number]
      required: false
      schema:
        format: int64
        minimum: 1
        type: integer
    - description: Filter by vulnerability type.
      example: WeakCipher
      in: query
      name: filter[type]
      required: false
      schema:
        $ref: ../components/schemas/VulnerabilityType.yaml
    - description: >-
        Filter by vulnerability base (i.e. from the original advisory) severity
        score.
      example: 5.5
      in: query
      name: filter[cvss.base.score][`$op`]
      required: false
      schema:
        format: double
        maximum: 10
        minimum: 0
        type: number
    - description: Filter by vulnerability base severity.
      example: Medium
      in: query
      name: filter[cvss.base.severity]
      required: false
      schema:
        $ref: ../components/schemas/VulnerabilitySeverity.yaml
    - description: Filter by vulnerability base CVSS vector.
      example: CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H
      in: query
      name: filter[cvss.base.vector]
      required: false
      schema:
        type: string
    - description: Filter by vulnerability Datadog severity score.
      example: 4.3
      in: query
      name: filter[cvss.datadog.score][`$op`]
      required: false
      schema:
        format: double
        maximum: 10
        minimum: 0
        type: number
    - description: Filter by vulnerability Datadog severity.
      example: Medium
      in: query
      name: filter[cvss.datadog.severity]
      required: false
      schema:
        $ref: ../components/schemas/VulnerabilitySeverity.yaml
    - description: Filter by vulnerability Datadog CVSS vector.
      example: >-
        CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:U/RL:X/RC:X/CR:X/IR:X/AR:X/MAV:L/MAC:H/MPR:L/MUI:N/MS:U/MC:N/MI:N/MA:H
      in: query
      name: filter[cvss.datadog.vector]
      required: false
      schema:
        type: string
    - description: Filter by the status of the vulnerability.
      example: Open
      in: query
      name: filter[status]
      required: false
      schema:
        $ref: ../components/schemas/VulnerabilityStatus.yaml
    - description: Filter by the tool of the vulnerability.
      example: SCA
      in: query
      name: filter[tool]
      required: false
      schema:
        $ref: ../components/schemas/VulnerabilityTool.yaml
    - description: Filter by library name.
      example: linux-aws-5.15
      in: query
      name: filter[library.name]
      required: false
      schema:
        type: string
    - description: Filter by library version.
      example: 5.15.0
      in: query
      name: filter[library.version]
      required: false
      schema:
        type: string
    - description: Filter by advisory ID.
      example: TRIVY-CVE-2023-0615
      in: query
      name: filter[advisory_id]
      required: false
      schema:
        type: string
    - description: Filter by exploitation probability.
      example: false
      in: query
      name: filter[risks.exploitation_probability]
      required: false
      schema:
        type: boolean
    - description: Filter by POC exploit availability.
      example: false
      in: query
      name: filter[risks.poc_exploit_available]
      required: false
      schema:
        type: boolean
    - description: Filter by public exploit availability.
      example: false
      in: query
      name: filter[risks.exploit_available]
      required: false
      schema:
        type: boolean
    - description: >-
        Filter by vulnerability [EPSS](https://www.first.org/epss/) severity
        score.
      example: 0.00042
      in: query
      name: filter[risks.epss.score][`$op`]
      required: false
      schema:
        format: double
        maximum: 1
        minimum: 0
        type: number
    - description: Filter by vulnerability [EPSS](https://www.first.org/epss/) severity.
      example: Low
      in: query
      name: filter[risks.epss.severity]
      required: false
      schema:
        $ref: ../components/schemas/VulnerabilitySeverity.yaml
    - description: Filter by language.
      example: ubuntu
      in: query
      name: filter[language]
      required: false
      schema:
        type: string
    - description: Filter by ecosystem.
      example: Deb
      in: query
      name: filter[ecosystem]
      required: false
      schema:
        $ref: ../components/schemas/VulnerabilityEcosystem.yaml
    - description: Filter by vulnerability location.
      example: com.example.Class:100
      in: query
      name: filter[code_location.location]
      required: false
      schema:
        type: string
    - description: Filter by vulnerability file path.
      example: src/Class.java:100
      in: query
      name: filter[code_location.file_path]
      required: false
      schema:
        type: string
    - description: Filter by method.
      example: FooBar
      in: query
      name: filter[code_location.method]
      required: false
      schema:
        type: string
    - description: Filter by fix availability.
      example: false
      in: query
      name: filter[fix_available]
      required: false
      schema:
        type: boolean
    - description: >-
        Filter by vulnerability `repo_digest` (when the vulnerability is related
        to `Image` asset).
      example: sha256:0ae7da091191787229d321e3638e39c319a97d6e20f927d465b519d699215bf7
      in: query
      name: filter[repo_digests]
      required: false
      schema:
        type: string
    - description: Filter by asset name.
      example: datadog-agent
      in: query
      name: filter[asset.name]
      required: false
      schema:
        type: string
    - description: Filter by asset type.
      example: Host
      in: query
      name: filter[asset.type]
      required: false
      schema:
        $ref: ../components/schemas/AssetType.yaml
    - description: >-
        Filter by the first version of the asset this vulnerability has been
        detected on.
      example: v1.15.1
      in: query
      name: filter[asset.version.first]
      required: false
      schema:
        type: string
    - description: >-
        Filter by the last version of the asset this vulnerability has been
        detected on.
      example: v1.15.1
      in: query
      name: filter[asset.version.last]
      required: false
      schema:
        type: string
    - description: Filter by the repository url associated to the asset.
      example: github.com/DataDog/datadog-agent.git
      in: query
      name: filter[asset.repository_url]
      required: false
      schema:
        type: string
    - description: Filter whether the asset is in production or not.
      example: false
      in: query
      name: filter[asset.risks.in_production]
      required: false
      schema:
        type: boolean
    - description: Filter whether the asset is under attack or not.
      example: false
      in: query
      name: filter[asset.risks.under_attack]
      required: false
      schema:
        type: boolean
    - description: Filter whether the asset is publicly accessible or not.
      example: false
      in: query
      name: filter[asset.risks.is_publicly_accessible]
      required: false
      schema:
        type: boolean
    - description: Filter whether the asset is publicly accessible or not.
      example: false
      in: query
      name: filter[asset.risks.has_privileged_access]
      required: false
      schema:
        type: boolean
    - description: Filter whether the asset  has access to sensitive data or not.
      example: false
      in: query
      name: filter[asset.risks.has_access_to_sensitive_data]
      required: false
      schema:
        type: boolean
    - description: Filter by asset environments.
      example: staging
      in: query
      name: filter[asset.environments]
      required: false
      schema:
        type: string
    - description: Filter by asset architecture.
      example: arm64
      in: query
      name: filter[asset.arch]
      required: false
      schema:
        type: string
    - description: Filter by asset operating system name.
      example: ubuntu
      in: query
      name: filter[asset.operating_system.name]
      required: false
      schema:
        type: string
    - description: Filter by asset operating system version.
      example: '24.04'
      in: query
      name: filter[asset.operating_system.version]
      required: false
      schema:
        type: string
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ListVulnerabilitiesResponse.yaml
      description: OK
    '400':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/JSONAPIErrorResponse.yaml
      description: >-
        Bad request: The server cannot process the request due to invalid syntax
        in the request.
    '403':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/JSONAPIErrorResponse.yaml
      description: 'Forbidden: Access denied'
    '404':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/JSONAPIErrorResponse.yaml
      description: 'Not found: There is no request associated with the provided token.'
    '429':
      $ref: ../components/responses/TooManyRequestsResponse.yaml
  security:
    - apiKeyAuth: []
      appKeyAuth: []
    - AuthZ:
        - appsec_vm_read
  summary: List vulnerabilities
  tags:
    - Security Monitoring
  x-unstable: >-
    **Note**: This endpoint is a private preview.

    If you are interested in accessing this API, [fill out this
    form](https://forms.gle/kMYC1sDr6WDUBDsx9).
