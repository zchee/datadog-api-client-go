post:
  description: >-
    Send your logs to your Datadog platform over HTTP. Limits per HTTP request
    are:


    - Maximum content size per payload (uncompressed): 5MB

    - Maximum size for a single log: 1MB

    - Maximum array size if sending multiple logs in an array: 1000 entries


    Any log exceeding 1MB is accepted and truncated by Datadog:

    - For a single log request, the API truncates the log at 1MB and returns a
    2xx.

    - For a multi-logs request, the API processes all logs, truncates only logs
    larger than 1MB, and returns a 2xx.


    Datadog recommends sending your logs compressed.

    Add the `Content-Encoding: gzip` header to the request when sending
    compressed logs.

    Log events can be submitted with a timestamp that is up to 18 hours in the
    past.


    The status codes answered by the HTTP API are:

    - 202: Accepted: the request has been accepted for processing

    - 400: Bad request (likely an issue in the payload formatting)

    - 401: Unauthorized (likely a missing API Key)

    - 403: Permission issue (likely using an invalid API Key)

    - 408: Request Timeout, request should be retried after some time

    - 413: Payload too large (batch is above 5MB uncompressed)

    - 429: Too Many Requests, request should be retried after some time

    - 500: Internal Server Error, the server encountered an unexpected condition
    that prevented it from fulfilling the request, request should be retried
    after some time

    - 503: Service Unavailable, the server is not ready to handle the request
    probably because it is overloaded, request should be retried after some time
  operationId: SubmitLog
  parameters:
    - description: HTTP header used to compress the media-type.
      in: header
      name: Content-Encoding
      required: false
      schema:
        $ref: ../components/schemas/ContentEncoding.yaml
    - description: >-
        Log tags can be passed as query parameters with `text/plain` content
        type.
      example: env:prod,user:my-user
      in: query
      name: ddtags
      required: false
      schema:
        type: string
  requestBody:
    content:
      application/json:
        examples:
          multi-json-messages:
            description: Pass multiple log objects at once.
            summary: Multi JSON Messages
            value:
              - ddsource: nginx
                ddtags: env:staging,version:5.1
                hostname: i-012345678
                message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                service: payment
              - ddsource: nginx
                ddtags: env:staging,version:5.1
                hostname: i-012345679
                message: 2019-11-19T14:37:58,995 INFO [process.name][20081] World
                service: payment
          simple-json-message:
            description: >-
              Log attributes can be passed as `key:value` pairs in valid JSON
              messages.
            summary: Simple JSON Message
            value:
              ddsource: nginx
              ddtags: env:staging,version:5.1
              hostname: i-012345678
              message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
              service: payment
        schema:
          $ref: ../components/schemas/HTTPLog.yaml
      application/logplex-1:
        examples:
          multi-raw-message:
            description: Submit log messages.
            summary: Multi Logplex Messages
            value: |-
              2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
              2019-11-19T14:37:58,995 INFO [process.name][20081] World
          simple-logplex-message:
            description: Submit log string.
            summary: Simple Logplex Message
            value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
        schema:
          type: string
      text/plain:
        examples:
          multi-raw-message:
            description: Submit log string.
            summary: Multi Raw Messages
            value: |
              2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
              2019-11-19T14:37:58,995 INFO [process.name][20081] World
          simple-raw-message:
            description: >-
              Submit log string. Log attributes can be passed as query
              parameters in the URL. This enables the addition of tags or the
              source by using the `ddtags` and `ddsource` parameters:
              `?host=my-hostname&service=my-service&ddsource=my-source&ddtags=env:prod,user:my-user`.
            summary: Simple Raw Message
            value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
        schema:
          type: string
    description: Log to send (JSON format).
    required: true
  responses:
    '202':
      content:
        application/json:
          schema:
            type: object
      description: Request accepted for processing (always 202 empty JSON).
    '400':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HTTPLogErrors.yaml
      description: Bad Request
    '401':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HTTPLogErrors.yaml
      description: Unauthorized
    '403':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HTTPLogErrors.yaml
      description: Forbidden
    '408':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HTTPLogErrors.yaml
      description: Request Timeout
    '413':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HTTPLogErrors.yaml
      description: Payload Too Large
    '429':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HTTPLogErrors.yaml
      description: Too Many Requests
    '500':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HTTPLogErrors.yaml
      description: Internal Server Error
    '503':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/HTTPLogErrors.yaml
      description: Service Unavailable
  security:
    - apiKeyAuth: []
  servers:
    - url: https://{subdomain}.{site}
      variables:
        site:
          default: datadoghq.com
          description: The regional site for customers.
          enum:
            - datadoghq.com
            - us3.datadoghq.com
            - us5.datadoghq.com
            - ap1.datadoghq.com
            - datadoghq.eu
            - ddog-gov.com
        subdomain:
          default: http-intake.logs
          description: The subdomain where the API is deployed.
    - url: '{protocol}://{name}'
      variables:
        name:
          default: http-intake.logs.datadoghq.com
          description: Full site DNS name.
        protocol:
          default: https
          description: The protocol for accessing the API.
    - url: https://{subdomain}.{site}
      variables:
        site:
          default: datadoghq.com
          description: Any Datadog deployment.
        subdomain:
          default: http-intake.logs
          description: The subdomain where the API is deployed.
  summary: Send logs
  tags:
    - Logs
  x-codegen-request-body-name: body
