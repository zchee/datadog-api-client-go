post:
  description: Create a Synthetic API test.
  operationId: CreateSyntheticsAPITest
  requestBody:
    content:
      application/json:
        examples:
          1-simple-api-test:
            description: Example of an API test.
            summary: Create an API test.
            value:
              config:
                assertions:
                  - operator: lessThan
                    target: 1000
                    type: responseTime
                  - operator: is
                    target: 200
                    type: statusCode
                  - operator: is
                    property: content-type
                    target: text/html; charset=UTF-8
                    type: header
                request:
                  method: GET
                  url: https://example.com
              locations:
                - azure:eastus
                - aws:eu-west-3
              message: MY_NOTIFICATION_MESSAGE
              name: MY_TEST_NAME
              options:
                min_failure_duration: 0
                min_location_failed: 1
                monitor_options:
                  include_tags: true
                  locked: false
                  new_host_delay: 300
                  notify_audit: false
                  notify_no_data: false
                  renotify_interval: 0
                tick_every: 60
              status: live
              subtype: http
              tags:
                - env:production
              type: api
          2-multistep-api-test:
            description: >-
              Example of a multistep API test running on a fake furniture store.

              It creates a card, select a product and then add the product to
              the card.
            summary: Create a Multistep API test
            value:
              config:
                steps:
                  - assertions:
                      - operator: lessThan
                        target: 30000
                        type: responseTime
                    extractedValues:
                      - field: location
                        name: CART_ID
                        parser:
                          type: regex
                          value: (?:[^\\/](?!(\\|/)))+$
                        type: http_header
                    name: Get a cart
                    request:
                      method: POST
                      timeout: 30
                      url: https://api.shopist.io/carts
                    subtype: http
                  - assertions:
                      - operator: is
                        target: 200
                        type: statusCode
                    extractedValues:
                      - name: PRODUCT_ID
                        parser:
                          type: json_path
                          value: $[0].id['$oid']
                        type: http_body
                    name: Get a product
                    request:
                      method: GET
                      timeout: 30
                      url: https://api.shopist.io/products.json
                    subtype: http
                  - assertions:
                      - operator: is
                        target: 201
                        type: statusCode
                    name: Add product to cart
                    request:
                      body: |-
                        {
                          "cart_item": {
                            "product_id": "{{ PRODUCT_ID }}",
                            "amount_paid": 500,
                            "quantity": 1
                          },
                          "cart_id": "{{ CART_ID }}"
                        }
                      headers:
                        content-type: application/json
                      method: POST
                      timeout: 30
                      url: https://api.shopist.io/add_item.json
                    subtype: http
              locations:
                - aws:us-west-2
              message: MY_NOTIFICATION_MESSAGE
              name: MY_TEST_NAME
              options:
                ci:
                  executionRule: blocking
                min_failure_duration: 5400
                min_location_failed: 1
                monitor_options:
                  renotify_interval: 0
                retry:
                  count: 3
                  interval: 300
                tick_every: 900
              status: live
              subtype: multi
              tags:
                - env:prod
              type: api
        schema:
          $ref: ../components/schemas/SyntheticsAPITest.yaml
    description: Details of the test to create.
    required: true
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/SyntheticsAPITest.yaml
      description: OK - Returns the created test details.
    '400':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/APIErrorResponse.yaml
      description: |-
        - JSON format is wrong
        - Creation failed
    '402':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/APIErrorResponse.yaml
      description: Test quota is reached
    '403':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/APIErrorResponse.yaml
      description: Forbidden
    '429':
      $ref: ../components/responses/TooManyRequestsResponse.yaml
  security:
    - apiKeyAuth: []
      appKeyAuth: []
    - AuthZ:
        - synthetics_write
  summary: Create an API test
  tags:
    - Synthetics
  x-codegen-request-body-name: body
  x-permission:
    operator: OR
    permissions:
      - synthetics_write
